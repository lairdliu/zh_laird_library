// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/switch.proto

#include "outer/switch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace switch {
class InviteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteRequest>
      _instance;
} _InviteRequest_default_instance_;
class InviteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteResponse>
      _instance;
} _InviteResponse_default_instance_;
class InviteMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteMessage>
      _instance;
} _InviteMessage_default_instance_;
class ConnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectRequest>
      _instance;
} _ConnectRequest_default_instance_;
class ConnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectResponse>
      _instance;
} _ConnectResponse_default_instance_;
class ConnectMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectMessage>
      _instance;
} _ConnectMessage_default_instance_;
class BusyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BusyRequest>
      _instance;
} _BusyRequest_default_instance_;
class BusyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BusyResponse>
      _instance;
} _BusyResponse_default_instance_;
class BusyMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BusyMessage>
      _instance;
} _BusyMessage_default_instance_;
class CancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelRequest>
      _instance;
} _CancelRequest_default_instance_;
class CancelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelResponse>
      _instance;
} _CancelResponse_default_instance_;
class CancelMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelMessage>
      _instance;
} _CancelMessage_default_instance_;
class RefuseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefuseRequest>
      _instance;
} _RefuseRequest_default_instance_;
class RefuseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefuseResponse>
      _instance;
} _RefuseResponse_default_instance_;
class RefuseMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefuseMessage>
      _instance;
} _RefuseMessage_default_instance_;
class ByeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ByeRequest>
      _instance;
} _ByeRequest_default_instance_;
class ByeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ByeResponse>
      _instance;
} _ByeResponse_default_instance_;
class ByeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ByeMessage>
      _instance;
} _ByeMessage_default_instance_;
class ReinviteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReinviteRequest>
      _instance;
} _ReinviteRequest_default_instance_;
class ReinviteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReinviteResponse>
      _instance;
} _ReinviteResponse_default_instance_;
class ReinviteMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReinviteMessage>
      _instance;
} _ReinviteMessage_default_instance_;
class CallMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallMessage>
      _instance;
} _CallMessage_default_instance_;
class SyncCallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncCallRequest>
      _instance;
} _SyncCallRequest_default_instance_;
class SyncCallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncCallResponse>
      _instance;
} _SyncCallResponse_default_instance_;
}  // namespace switch
}  // namespace outer
namespace protobuf_outer_2fswitch_2eproto {
void InitDefaultsInviteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_InviteRequest_default_instance_;
    new (ptr) ::outer::switch::InviteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::InviteRequest::InitAsDefaultInstance();
}

void InitDefaultsInviteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInviteRequestImpl);
}

void InitDefaultsInviteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_InviteResponse_default_instance_;
    new (ptr) ::outer::switch::InviteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::InviteResponse::InitAsDefaultInstance();
}

void InitDefaultsInviteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInviteResponseImpl);
}

void InitDefaultsInviteMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_InviteMessage_default_instance_;
    new (ptr) ::outer::switch::InviteMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::InviteMessage::InitAsDefaultInstance();
}

void InitDefaultsInviteMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInviteMessageImpl);
}

void InitDefaultsConnectRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ConnectRequest_default_instance_;
    new (ptr) ::outer::switch::ConnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ConnectRequest::InitAsDefaultInstance();
}

void InitDefaultsConnectRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnectRequestImpl);
}

void InitDefaultsConnectResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ConnectResponse_default_instance_;
    new (ptr) ::outer::switch::ConnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ConnectResponse::InitAsDefaultInstance();
}

void InitDefaultsConnectResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnectResponseImpl);
}

void InitDefaultsConnectMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ConnectMessage_default_instance_;
    new (ptr) ::outer::switch::ConnectMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ConnectMessage::InitAsDefaultInstance();
}

void InitDefaultsConnectMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnectMessageImpl);
}

void InitDefaultsBusyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_BusyRequest_default_instance_;
    new (ptr) ::outer::switch::BusyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::BusyRequest::InitAsDefaultInstance();
}

void InitDefaultsBusyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBusyRequestImpl);
}

void InitDefaultsBusyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_BusyResponse_default_instance_;
    new (ptr) ::outer::switch::BusyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::BusyResponse::InitAsDefaultInstance();
}

void InitDefaultsBusyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBusyResponseImpl);
}

void InitDefaultsBusyMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_BusyMessage_default_instance_;
    new (ptr) ::outer::switch::BusyMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::BusyMessage::InitAsDefaultInstance();
}

void InitDefaultsBusyMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBusyMessageImpl);
}

void InitDefaultsCancelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_CancelRequest_default_instance_;
    new (ptr) ::outer::switch::CancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::CancelRequest::InitAsDefaultInstance();
}

void InitDefaultsCancelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCancelRequestImpl);
}

void InitDefaultsCancelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_CancelResponse_default_instance_;
    new (ptr) ::outer::switch::CancelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::CancelResponse::InitAsDefaultInstance();
}

void InitDefaultsCancelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCancelResponseImpl);
}

void InitDefaultsCancelMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_CancelMessage_default_instance_;
    new (ptr) ::outer::switch::CancelMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::CancelMessage::InitAsDefaultInstance();
}

void InitDefaultsCancelMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCancelMessageImpl);
}

void InitDefaultsRefuseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_RefuseRequest_default_instance_;
    new (ptr) ::outer::switch::RefuseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::RefuseRequest::InitAsDefaultInstance();
}

void InitDefaultsRefuseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRefuseRequestImpl);
}

void InitDefaultsRefuseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_RefuseResponse_default_instance_;
    new (ptr) ::outer::switch::RefuseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::RefuseResponse::InitAsDefaultInstance();
}

void InitDefaultsRefuseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRefuseResponseImpl);
}

void InitDefaultsRefuseMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_RefuseMessage_default_instance_;
    new (ptr) ::outer::switch::RefuseMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::RefuseMessage::InitAsDefaultInstance();
}

void InitDefaultsRefuseMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRefuseMessageImpl);
}

void InitDefaultsByeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ByeRequest_default_instance_;
    new (ptr) ::outer::switch::ByeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ByeRequest::InitAsDefaultInstance();
}

void InitDefaultsByeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsByeRequestImpl);
}

void InitDefaultsByeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ByeResponse_default_instance_;
    new (ptr) ::outer::switch::ByeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ByeResponse::InitAsDefaultInstance();
}

void InitDefaultsByeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsByeResponseImpl);
}

void InitDefaultsByeMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ByeMessage_default_instance_;
    new (ptr) ::outer::switch::ByeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ByeMessage::InitAsDefaultInstance();
}

void InitDefaultsByeMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsByeMessageImpl);
}

void InitDefaultsReinviteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ReinviteRequest_default_instance_;
    new (ptr) ::outer::switch::ReinviteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ReinviteRequest::InitAsDefaultInstance();
}

void InitDefaultsReinviteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReinviteRequestImpl);
}

void InitDefaultsReinviteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ReinviteResponse_default_instance_;
    new (ptr) ::outer::switch::ReinviteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ReinviteResponse::InitAsDefaultInstance();
}

void InitDefaultsReinviteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReinviteResponseImpl);
}

void InitDefaultsReinviteMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_ReinviteMessage_default_instance_;
    new (ptr) ::outer::switch::ReinviteMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::ReinviteMessage::InitAsDefaultInstance();
}

void InitDefaultsReinviteMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReinviteMessageImpl);
}

void InitDefaultsCallMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_CallMessage_default_instance_;
    new (ptr) ::outer::switch::CallMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::CallMessage::InitAsDefaultInstance();
}

void InitDefaultsCallMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallMessageImpl);
}

void InitDefaultsSyncCallRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::switch::_SyncCallRequest_default_instance_;
    new (ptr) ::outer::switch::SyncCallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::SyncCallRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncCallRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncCallRequestImpl);
}

void InitDefaultsSyncCallResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fswitch_2eproto::InitDefaultsCallMessage();
  {
    void* ptr = &::outer::switch::_SyncCallResponse_default_instance_;
    new (ptr) ::outer::switch::SyncCallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::switch::SyncCallResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncCallResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncCallResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, call_media_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, local_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, local_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, local_video_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteRequest, local_video_codec_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, mrf_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, mrf_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteResponse, mrf_video_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, call_media_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, remote_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, remote_video_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, mrf_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, mrf_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::InviteMessage, mrf_video_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, local_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, local_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, local_video_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectRequest, local_video_codec_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectMessage, callee_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ConnectMessage, callee_video_codec_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyRequest, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::BusyMessage, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelRequest, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CancelMessage, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseRequest, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::RefuseMessage, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeRequest, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ByeMessage, from_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, call_media_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, local_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, local_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, local_video_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteRequest, local_video_codec_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, mrf_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, mrf_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteResponse, mrf_video_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, call_media_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, remote_audio_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, remote_video_codec_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, mrf_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, mrf_audio_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::ReinviteMessage, mrf_video_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CallMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CallMessage, call_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::CallMessage, call_msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallRequest, call_msg_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::switch::SyncCallResponse, call_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::switch::InviteRequest)},
  { 14, -1, sizeof(::outer::switch::InviteResponse)},
  { 24, -1, sizeof(::outer::switch::InviteMessage)},
  { 39, -1, sizeof(::outer::switch::ConnectRequest)},
  { 50, -1, sizeof(::outer::switch::ConnectResponse)},
  { 56, -1, sizeof(::outer::switch::ConnectMessage)},
  { 64, -1, sizeof(::outer::switch::BusyRequest)},
  { 72, -1, sizeof(::outer::switch::BusyResponse)},
  { 78, -1, sizeof(::outer::switch::BusyMessage)},
  { 86, -1, sizeof(::outer::switch::CancelRequest)},
  { 94, -1, sizeof(::outer::switch::CancelResponse)},
  { 100, -1, sizeof(::outer::switch::CancelMessage)},
  { 108, -1, sizeof(::outer::switch::RefuseRequest)},
  { 116, -1, sizeof(::outer::switch::RefuseResponse)},
  { 122, -1, sizeof(::outer::switch::RefuseMessage)},
  { 130, -1, sizeof(::outer::switch::ByeRequest)},
  { 138, -1, sizeof(::outer::switch::ByeResponse)},
  { 144, -1, sizeof(::outer::switch::ByeMessage)},
  { 152, -1, sizeof(::outer::switch::ReinviteRequest)},
  { 165, -1, sizeof(::outer::switch::ReinviteResponse)},
  { 175, -1, sizeof(::outer::switch::ReinviteMessage)},
  { 190, -1, sizeof(::outer::switch::CallMessage)},
  { 197, -1, sizeof(::outer::switch::SyncCallRequest)},
  { 205, -1, sizeof(::outer::switch::SyncCallResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_InviteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_InviteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_InviteMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ConnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ConnectResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ConnectMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_BusyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_BusyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_BusyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_CancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_CancelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_CancelMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_RefuseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_RefuseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_RefuseMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ByeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ByeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ByeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ReinviteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ReinviteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_ReinviteMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_CallMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_SyncCallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::switch::_SyncCallResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/switch.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022outer/switch.proto\022\014outer.switch\032\024comm"
      "on/errcode.proto\032\030common/enumeration.pro"
      "to\"\210\002\n\rInviteRequest\0225\n\017call_media_type\030"
      "\001 \001(\0162\034.outer.switch.ECallMediaType\022\016\n\006a"
      "ppkey\030\002 \001(\t\022\025\n\rfrom_username\030\003 \001(\t\022\023\n\013to"
      "_username\030\004 \001(\t\022\020\n\010local_ip\030\005 \001(\t\022\030\n\020loc"
      "al_audio_port\030\006 \001(\r\022\036\n\026local_audio_codec"
      "_list\030\007 \001(\t\022\030\n\020local_video_port\030\010 \001(\r\022\036\n"
      "\026local_video_codec_list\030\t \001(\t\"\211\001\n\016Invite"
      "Response\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.E"
      "ErrorCode\022\016\n\006callid\030\002 \001(\004\022\016\n\006mrf_ip\030\003 \001("
      "\t\022\026\n\016mrf_audio_port\030\004 \001(\r\022\026\n\016mrf_video_p"
      "ort\030\005 \001(\r\"\224\002\n\rInviteMessage\022\016\n\006callid\030\001 "
      "\001(\t\0225\n\017call_media_type\030\002 \001(\0162\034.outer.swi"
      "tch.ECallMediaType\022\016\n\006appkey\030\003 \001(\t\022\025\n\rfr"
      "om_username\030\004 \001(\t\022\023\n\013to_username\030\005 \001(\t\022\037"
      "\n\027remote_audio_codec_list\030\006 \001(\t\022\037\n\027remot"
      "e_video_codec_list\030\007 \001(\t\022\016\n\006mrf_ip\030\010 \001(\t"
      "\022\026\n\016mrf_audio_port\030\t \001(\r\022\026\n\016mrf_video_po"
      "rt\030\n \001(\r\"\246\001\n\016ConnectRequest\022\016\n\006callid\030\001 "
      "\001(\t\022\020\n\010local_ip\030\002 \001(\t\022\030\n\020local_audio_por"
      "t\030\003 \001(\r\022\036\n\026local_audio_codec_list\030\004 \001(\t\022"
      "\030\n\020local_video_port\030\005 \001(\r\022\036\n\026local_video"
      "_codec_list\030\006 \001(\t\":\n\017ConnectResponse\022\'\n\003"
      "ret\030\001 \001(\0162\032.common.errcode.EErrorCode\"b\n"
      "\016ConnectMessage\022\016\n\006callid\030\001 \001(\t\022\037\n\027calle"
      "e_audio_codec_list\030\002 \001(\t\022\037\n\027callee_video"
      "_codec_list\030\003 \001(\t\"D\n\013BusyRequest\022\016\n\006call"
      "id\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_usernam"
      "e\030\003 \001(\t\"7\n\014BusyResponse\022\'\n\003ret\030\001 \001(\0162\032.c"
      "ommon.errcode.EErrorCode\"D\n\013BusyMessage\022"
      "\016\n\006callid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_"
      "username\030\003 \001(\t\"F\n\rCancelRequest\022\016\n\006calli"
      "d\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_username"
      "\030\003 \001(\t\"9\n\016CancelResponse\022\'\n\003ret\030\001 \001(\0162\032."
      "common.errcode.EErrorCode\"F\n\rCancelMessa"
      "ge\022\016\n\006callid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfr"
      "om_username\030\003 \001(\t\"F\n\rRefuseRequest\022\016\n\006ca"
      "llid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_usern"
      "ame\030\003 \001(\t\"9\n\016RefuseResponse\022\'\n\003ret\030\001 \001(\016"
      "2\032.common.errcode.EErrorCode\"F\n\rRefuseMe"
      "ssage\022\016\n\006callid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n"
      "\rfrom_username\030\003 \001(\t\"C\n\nByeRequest\022\016\n\006ca"
      "llid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_usern"
      "ame\030\003 \001(\t\"6\n\013ByeResponse\022\'\n\003ret\030\001 \001(\0162\032."
      "common.errcode.EErrorCode\"C\n\nByeMessage\022"
      "\016\n\006callid\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_"
      "username\030\003 \001(\t\"\365\001\n\017ReinviteRequest\0225\n\017ca"
      "ll_media_type\030\001 \001(\0162\034.outer.switch.ECall"
      "MediaType\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_userna"
      "me\030\003 \001(\t\022\020\n\010local_ip\030\005 \001(\t\022\030\n\020local_audi"
      "o_port\030\006 \001(\r\022\036\n\026local_audio_codec_list\030\007"
      " \001(\t\022\030\n\020local_video_port\030\010 \001(\r\022\036\n\026local_"
      "video_codec_list\030\t \001(\t\"\213\001\n\020ReinviteRespo"
      "nse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EError"
      "Code\022\016\n\006callid\030\002 \001(\004\022\016\n\006mrf_ip\030\003 \001(\t\022\026\n\016"
      "mrf_audio_port\030\004 \001(\r\022\026\n\016mrf_video_port\030\005"
      " \001(\r\"\226\002\n\017ReinviteMessage\022\016\n\006callid\030\001 \001(\t"
      "\0225\n\017call_media_type\030\002 \001(\0162\034.outer.switch"
      ".ECallMediaType\022\016\n\006appkey\030\003 \001(\t\022\025\n\rfrom_"
      "username\030\004 \001(\t\022\023\n\013to_username\030\005 \001(\t\022\037\n\027r"
      "emote_audio_codec_list\030\006 \001(\t\022\037\n\027remote_v"
      "ideo_codec_list\030\007 \001(\t\022\016\n\006mrf_ip\030\010 \001(\t\022\026\n"
      "\016mrf_audio_port\030\t \001(\r\022\026\n\016mrf_video_port\030"
      "\n \001(\r\"X\n\013CallMessage\0227\n\rcall_msg_type\030\001 "
      "\001(\0162 .common.enumeration.ECallMsgType\022\020\n"
      "\010call_msg\030\002 \001(\014\"O\n\017SyncCallRequest\022\016\n\006ap"
      "pkey\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\025\n\rcal"
      "l_msg_guid\030\003 \001(\t\"l\n\020SyncCallResponse\022\'\n\003"
      "ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022/\n"
      "\014call_message\030\002 \003(\0132\031.outer.switch.CallM"
      "essage*;\n\016ECallMediaType\022\013\n\007UNKNOWN\020\000\022\t\n"
      "\005AUDIO\020\003\022\t\n\005VIDEO\020\001\022\006\n\002AV\020\002*\200\001\n\nECallSta"
      "te\022\020\n\014UNKNOWNSTATE\020\000\022\013\n\007RINGING\020\006\022\r\n\tCON"
      "NECTED\020\001\022\017\n\013CALLEE_BUSY\020\002\022\022\n\016CALLEE_REFU"
      "SED\020\003\022\023\n\017CALLER_CANCELED\020\004\022\n\n\006FINISH\020\0052\267"
      "\004\n\rSwitchService\022I\n\010SyncCall\022\035.outer.swi"
      "tch.SyncCallRequest\032\036.outer.switch.SyncC"
      "allResponse\022C\n\006Invite\022\033.outer.switch.Inv"
      "iteRequest\032\034.outer.switch.InviteResponse"
      "\022F\n\007Connect\022\034.outer.switch.ConnectReques"
      "t\032\035.outer.switch.ConnectResponse\022=\n\004Busy"
      "\022\031.outer.switch.BusyRequest\032\032.outer.swit"
      "ch.BusyResponse\022C\n\006Cancel\022\033.outer.switch"
      ".CancelRequest\032\034.outer.switch.CancelResp"
      "onse\022C\n\006Refuse\022\033.outer.switch.RefuseRequ"
      "est\032\034.outer.switch.RefuseResponse\022:\n\003Bye"
      "\022\030.outer.switch.ByeRequest\032\031.outer.switc"
      "h.ByeResponse\022I\n\010Reinvite\022\035.outer.switch"
      ".ReinviteRequest\032\036.outer.switch.Reinvite"
      "ResponseB(\n\034com.cmcc.littlec.proto.outer"
      "B\006SwitchP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3658);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/switch.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fswitch_2eproto
namespace outer {
namespace switch {
const ::google::protobuf::EnumDescriptor* ECallMediaType_descriptor() {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2fswitch_2eproto::file_level_enum_descriptors[0];
}
bool ECallMediaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ECallState_descriptor() {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2fswitch_2eproto::file_level_enum_descriptors[1];
}
bool ECallState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void InviteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteRequest::kCallMediaTypeFieldNumber;
const int InviteRequest::kAppkeyFieldNumber;
const int InviteRequest::kFromUsernameFieldNumber;
const int InviteRequest::kToUsernameFieldNumber;
const int InviteRequest::kLocalIpFieldNumber;
const int InviteRequest::kLocalAudioPortFieldNumber;
const int InviteRequest::kLocalAudioCodecListFieldNumber;
const int InviteRequest::kLocalVideoPortFieldNumber;
const int InviteRequest::kLocalVideoCodecListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteRequest::InviteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.InviteRequest)
}
InviteRequest::InviteRequest(const InviteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_audio_codec_list().size() > 0) {
    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_video_codec_list().size() > 0) {
    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  ::memcpy(&call_media_type_, &from.call_media_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_video_port_) -
    reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.InviteRequest)
}

void InviteRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  _cached_size_ = 0;
}

InviteRequest::~InviteRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.InviteRequest)
  SharedDtor();
}

void InviteRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviteRequest& InviteRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteRequest();
  return *internal_default_instance();
}

InviteRequest* InviteRequest::New(::google::protobuf::Arena* arena) const {
  InviteRequest* n = new InviteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  _internal_metadata_.Clear();
}

bool InviteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.InviteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.switch.ECallMediaType call_media_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_media_type(static_cast< ::outer::switch::ECallMediaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), static_cast<int>(this->local_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_audio_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_audio_codec_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.local_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_video_port = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_video_codec_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteRequest.local_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.InviteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.InviteRequest)
  return false;
#undef DO_
}

void InviteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->call_media_type(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  // string to_username = 4;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to_username(), output);
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->local_ip(), output);
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->local_audio_port(), output);
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->local_audio_codec_list(), output);
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->local_video_port(), output);
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->local_video_codec_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.InviteRequest)
}

::google::protobuf::uint8* InviteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->call_media_type(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  // string to_username = 4;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to_username(), target);
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->local_ip(), target);
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->local_audio_port(), target);
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->local_audio_codec_list(), target);
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->local_video_port(), target);
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteRequest.local_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->local_video_codec_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.InviteRequest)
  return target;
}

size_t InviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.InviteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 4;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_audio_codec_list());
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_video_codec_list());
  }

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_media_type());
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_audio_port());
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.InviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.InviteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.InviteRequest)
    MergeFrom(*source);
  }
}

void InviteRequest::MergeFrom(const InviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.InviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  if (from.local_audio_codec_list().size() > 0) {

    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  if (from.local_video_codec_list().size() > 0) {

    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  if (from.call_media_type() != 0) {
    set_call_media_type(from.call_media_type());
  }
  if (from.local_audio_port() != 0) {
    set_local_audio_port(from.local_audio_port());
  }
  if (from.local_video_port() != 0) {
    set_local_video_port(from.local_video_port());
  }
}

void InviteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.InviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteRequest::CopyFrom(const InviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.InviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteRequest::IsInitialized() const {
  return true;
}

void InviteRequest::Swap(InviteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteRequest::InternalSwap(InviteRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  local_ip_.Swap(&other->local_ip_);
  local_audio_codec_list_.Swap(&other->local_audio_codec_list_);
  local_video_codec_list_.Swap(&other->local_video_codec_list_);
  swap(call_media_type_, other->call_media_type_);
  swap(local_audio_port_, other->local_audio_port_);
  swap(local_video_port_, other->local_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InviteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteResponse::kRetFieldNumber;
const int InviteResponse::kCallidFieldNumber;
const int InviteResponse::kMrfIpFieldNumber;
const int InviteResponse::kMrfAudioPortFieldNumber;
const int InviteResponse::kMrfVideoPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteResponse::InviteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.InviteResponse)
}
InviteResponse::InviteResponse(const InviteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrf_ip().size() > 0) {
    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  ::memcpy(&callid_, &from.callid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mrf_video_port_) -
    reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.InviteResponse)
}

void InviteResponse::SharedCtor() {
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&callid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  _cached_size_ = 0;
}

InviteResponse::~InviteResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.InviteResponse)
  SharedDtor();
}

void InviteResponse::SharedDtor() {
  mrf_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviteResponse& InviteResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteResponse();
  return *internal_default_instance();
}

InviteResponse* InviteResponse::New(::google::protobuf::Arena* arena) const {
  InviteResponse* n = new InviteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mrf_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&callid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  _internal_metadata_.Clear();
}

bool InviteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.InviteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 callid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &callid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mrf_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrf_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteResponse.mrf_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_audio_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_video_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.InviteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.InviteResponse)
  return false;
#undef DO_
}

void InviteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->callid(), output);
  }

  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteResponse.mrf_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mrf_ip(), output);
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mrf_audio_port(), output);
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mrf_video_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.InviteResponse)
}

::google::protobuf::uint8* InviteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->callid(), target);
  }

  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteResponse.mrf_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mrf_ip(), target);
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mrf_audio_port(), target);
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mrf_video_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.InviteResponse)
  return target;
}

size_t InviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.InviteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrf_ip());
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->callid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_audio_port());
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.InviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.InviteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.InviteResponse)
    MergeFrom(*source);
  }
}

void InviteResponse::MergeFrom(const InviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.InviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mrf_ip().size() > 0) {

    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  if (from.callid() != 0) {
    set_callid(from.callid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.mrf_audio_port() != 0) {
    set_mrf_audio_port(from.mrf_audio_port());
  }
  if (from.mrf_video_port() != 0) {
    set_mrf_video_port(from.mrf_video_port());
  }
}

void InviteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.InviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteResponse::CopyFrom(const InviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.InviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteResponse::IsInitialized() const {
  return true;
}

void InviteResponse::Swap(InviteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteResponse::InternalSwap(InviteResponse* other) {
  using std::swap;
  mrf_ip_.Swap(&other->mrf_ip_);
  swap(callid_, other->callid_);
  swap(ret_, other->ret_);
  swap(mrf_audio_port_, other->mrf_audio_port_);
  swap(mrf_video_port_, other->mrf_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InviteMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteMessage::kCallidFieldNumber;
const int InviteMessage::kCallMediaTypeFieldNumber;
const int InviteMessage::kAppkeyFieldNumber;
const int InviteMessage::kFromUsernameFieldNumber;
const int InviteMessage::kToUsernameFieldNumber;
const int InviteMessage::kRemoteAudioCodecListFieldNumber;
const int InviteMessage::kRemoteVideoCodecListFieldNumber;
const int InviteMessage::kMrfIpFieldNumber;
const int InviteMessage::kMrfAudioPortFieldNumber;
const int InviteMessage::kMrfVideoPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteMessage::InviteMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.InviteMessage)
}
InviteMessage::InviteMessage(const InviteMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  remote_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_audio_codec_list().size() > 0) {
    remote_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_audio_codec_list_);
  }
  remote_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_video_codec_list().size() > 0) {
    remote_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_video_codec_list_);
  }
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrf_ip().size() > 0) {
    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  ::memcpy(&call_media_type_, &from.call_media_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mrf_video_port_) -
    reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.InviteMessage)
}

void InviteMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  _cached_size_ = 0;
}

InviteMessage::~InviteMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.InviteMessage)
  SharedDtor();
}

void InviteMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviteMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviteMessage& InviteMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsInviteMessage();
  return *internal_default_instance();
}

InviteMessage* InviteMessage::New(::google::protobuf::Arena* arena) const {
  InviteMessage* n = new InviteMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.InviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  _internal_metadata_.Clear();
}

bool InviteMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.InviteMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.switch.ECallMediaType call_media_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_media_type(static_cast< ::outer::switch::ECallMediaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_audio_codec_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.remote_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_video_codec_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.remote_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mrf_ip = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrf_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.InviteMessage.mrf_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_audio_port = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_video_port = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.InviteMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.InviteMessage)
  return false;
#undef DO_
}

void InviteMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.InviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->call_media_type(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->from_username(), output);
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->to_username(), output);
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.remote_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remote_audio_codec_list(), output);
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.remote_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remote_video_codec_list(), output);
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.mrf_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mrf_ip(), output);
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mrf_audio_port(), output);
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mrf_video_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.InviteMessage)
}

::google::protobuf::uint8* InviteMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.InviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->call_media_type(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->from_username(), target);
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->to_username(), target);
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.remote_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remote_audio_codec_list(), target);
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.remote_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remote_video_codec_list(), target);
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.InviteMessage.mrf_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mrf_ip(), target);
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mrf_audio_port(), target);
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mrf_video_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.InviteMessage)
  return target;
}

size_t InviteMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.InviteMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_audio_codec_list());
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_video_codec_list());
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrf_ip());
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_media_type());
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_audio_port());
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.InviteMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.InviteMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.InviteMessage)
    MergeFrom(*source);
  }
}

void InviteMessage::MergeFrom(const InviteMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.InviteMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.remote_audio_codec_list().size() > 0) {

    remote_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_audio_codec_list_);
  }
  if (from.remote_video_codec_list().size() > 0) {

    remote_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_video_codec_list_);
  }
  if (from.mrf_ip().size() > 0) {

    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  if (from.call_media_type() != 0) {
    set_call_media_type(from.call_media_type());
  }
  if (from.mrf_audio_port() != 0) {
    set_mrf_audio_port(from.mrf_audio_port());
  }
  if (from.mrf_video_port() != 0) {
    set_mrf_video_port(from.mrf_video_port());
  }
}

void InviteMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.InviteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteMessage::CopyFrom(const InviteMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.InviteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteMessage::IsInitialized() const {
  return true;
}

void InviteMessage::Swap(InviteMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteMessage::InternalSwap(InviteMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  remote_audio_codec_list_.Swap(&other->remote_audio_codec_list_);
  remote_video_codec_list_.Swap(&other->remote_video_codec_list_);
  mrf_ip_.Swap(&other->mrf_ip_);
  swap(call_media_type_, other->call_media_type_);
  swap(mrf_audio_port_, other->mrf_audio_port_);
  swap(mrf_video_port_, other->mrf_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectRequest::kCallidFieldNumber;
const int ConnectRequest::kLocalIpFieldNumber;
const int ConnectRequest::kLocalAudioPortFieldNumber;
const int ConnectRequest::kLocalAudioCodecListFieldNumber;
const int ConnectRequest::kLocalVideoPortFieldNumber;
const int ConnectRequest::kLocalVideoCodecListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectRequest::ConnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ConnectRequest)
}
ConnectRequest::ConnectRequest(const ConnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_audio_codec_list().size() > 0) {
    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_video_codec_list().size() > 0) {
    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  ::memcpy(&local_audio_port_, &from.local_audio_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_video_port_) -
    reinterpret_cast<char*>(&local_audio_port_)) + sizeof(local_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.ConnectRequest)
}

void ConnectRequest::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_audio_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&local_audio_port_)) + sizeof(local_video_port_));
  _cached_size_ = 0;
}

ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.ConnectRequest)
  SharedDtor();
}

void ConnectRequest::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectRequest& ConnectRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectRequest();
  return *internal_default_instance();
}

ConnectRequest* ConnectRequest::New(::google::protobuf::Arena* arena) const {
  ConnectRequest* n = new ConnectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_audio_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&local_audio_port_)) + sizeof(local_video_port_));
  _internal_metadata_.Clear();
}

bool ConnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ConnectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectRequest.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), static_cast<int>(this->local_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectRequest.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_audio_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_audio_codec_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectRequest.local_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_video_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_video_codec_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectRequest.local_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ConnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ConnectRequest)
  return false;
#undef DO_
}

void ConnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string local_ip = 2;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->local_ip(), output);
  }

  // uint32 local_audio_port = 3;
  if (this->local_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->local_audio_port(), output);
  }

  // string local_audio_codec_list = 4;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->local_audio_codec_list(), output);
  }

  // uint32 local_video_port = 5;
  if (this->local_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->local_video_port(), output);
  }

  // string local_video_codec_list = 6;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->local_video_codec_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ConnectRequest)
}

::google::protobuf::uint8* ConnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ConnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string local_ip = 2;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->local_ip(), target);
  }

  // uint32 local_audio_port = 3;
  if (this->local_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->local_audio_port(), target);
  }

  // string local_audio_codec_list = 4;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->local_audio_codec_list(), target);
  }

  // uint32 local_video_port = 5;
  if (this->local_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->local_video_port(), target);
  }

  // string local_video_codec_list = 6;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectRequest.local_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->local_video_codec_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ConnectRequest)
  return target;
}

size_t ConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ConnectRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string local_ip = 2;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  // string local_audio_codec_list = 4;
  if (this->local_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_audio_codec_list());
  }

  // string local_video_codec_list = 6;
  if (this->local_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_video_codec_list());
  }

  // uint32 local_audio_port = 3;
  if (this->local_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_audio_port());
  }

  // uint32 local_video_port = 5;
  if (this->local_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ConnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ConnectRequest)
    MergeFrom(*source);
  }
}

void ConnectRequest::MergeFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  if (from.local_audio_codec_list().size() > 0) {

    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  if (from.local_video_codec_list().size() > 0) {

    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  if (from.local_audio_port() != 0) {
    set_local_audio_port(from.local_audio_port());
  }
  if (from.local_video_port() != 0) {
    set_local_video_port(from.local_video_port());
  }
}

void ConnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRequest::IsInitialized() const {
  return true;
}

void ConnectRequest::Swap(ConnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectRequest::InternalSwap(ConnectRequest* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  local_ip_.Swap(&other->local_ip_);
  local_audio_codec_list_.Swap(&other->local_audio_codec_list_);
  local_video_codec_list_.Swap(&other->local_video_codec_list_);
  swap(local_audio_port_, other->local_audio_port_);
  swap(local_video_port_, other->local_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectResponse::ConnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ConnectResponse)
}
ConnectResponse::ConnectResponse(const ConnectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.ConnectResponse)
}

void ConnectResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

ConnectResponse::~ConnectResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.ConnectResponse)
  SharedDtor();
}

void ConnectResponse::SharedDtor() {
}

void ConnectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectResponse& ConnectResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectResponse();
  return *internal_default_instance();
}

ConnectResponse* ConnectResponse::New(::google::protobuf::Arena* arena) const {
  ConnectResponse* n = new ConnectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool ConnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ConnectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ConnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ConnectResponse)
  return false;
#undef DO_
}

void ConnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ConnectResponse)
}

::google::protobuf::uint8* ConnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ConnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ConnectResponse)
  return target;
}

size_t ConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ConnectResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ConnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ConnectResponse)
    MergeFrom(*source);
  }
}

void ConnectResponse::MergeFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void ConnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectResponse::CopyFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectResponse::IsInitialized() const {
  return true;
}

void ConnectResponse::Swap(ConnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectResponse::InternalSwap(ConnectResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectMessage::kCallidFieldNumber;
const int ConnectMessage::kCalleeAudioCodecListFieldNumber;
const int ConnectMessage::kCalleeVideoCodecListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectMessage::ConnectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ConnectMessage)
}
ConnectMessage::ConnectMessage(const ConnectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  callee_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callee_audio_codec_list().size() > 0) {
    callee_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callee_audio_codec_list_);
  }
  callee_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callee_video_codec_list().size() > 0) {
    callee_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callee_video_codec_list_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.ConnectMessage)
}

void ConnectMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConnectMessage::~ConnectMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.ConnectMessage)
  SharedDtor();
}

void ConnectMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectMessage& ConnectMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsConnectMessage();
  return *internal_default_instance();
}

ConnectMessage* ConnectMessage::New(::google::protobuf::Arena* arena) const {
  ConnectMessage* n = new ConnectMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ConnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callee_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConnectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ConnectMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callee_audio_codec_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callee_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callee_audio_codec_list().data(), static_cast<int>(this->callee_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectMessage.callee_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callee_video_codec_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callee_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callee_video_codec_list().data(), static_cast<int>(this->callee_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ConnectMessage.callee_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ConnectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ConnectMessage)
  return false;
#undef DO_
}

void ConnectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ConnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string callee_audio_codec_list = 2;
  if (this->callee_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callee_audio_codec_list().data(), static_cast<int>(this->callee_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callee_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->callee_audio_codec_list(), output);
  }

  // string callee_video_codec_list = 3;
  if (this->callee_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callee_video_codec_list().data(), static_cast<int>(this->callee_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callee_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->callee_video_codec_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ConnectMessage)
}

::google::protobuf::uint8* ConnectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ConnectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string callee_audio_codec_list = 2;
  if (this->callee_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callee_audio_codec_list().data(), static_cast<int>(this->callee_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callee_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->callee_audio_codec_list(), target);
  }

  // string callee_video_codec_list = 3;
  if (this->callee_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callee_video_codec_list().data(), static_cast<int>(this->callee_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ConnectMessage.callee_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->callee_video_codec_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ConnectMessage)
  return target;
}

size_t ConnectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ConnectMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string callee_audio_codec_list = 2;
  if (this->callee_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callee_audio_codec_list());
  }

  // string callee_video_codec_list = 3;
  if (this->callee_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callee_video_codec_list());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ConnectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ConnectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ConnectMessage)
    MergeFrom(*source);
  }
}

void ConnectMessage::MergeFrom(const ConnectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ConnectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.callee_audio_codec_list().size() > 0) {

    callee_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callee_audio_codec_list_);
  }
  if (from.callee_video_codec_list().size() > 0) {

    callee_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callee_video_codec_list_);
  }
}

void ConnectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ConnectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectMessage::CopyFrom(const ConnectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ConnectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectMessage::IsInitialized() const {
  return true;
}

void ConnectMessage::Swap(ConnectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectMessage::InternalSwap(ConnectMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  callee_audio_codec_list_.Swap(&other->callee_audio_codec_list_);
  callee_video_codec_list_.Swap(&other->callee_video_codec_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BusyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BusyRequest::kCallidFieldNumber;
const int BusyRequest::kAppkeyFieldNumber;
const int BusyRequest::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BusyRequest::BusyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.BusyRequest)
}
BusyRequest::BusyRequest(const BusyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.BusyRequest)
}

void BusyRequest::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BusyRequest::~BusyRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.BusyRequest)
  SharedDtor();
}

void BusyRequest::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BusyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusyRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BusyRequest& BusyRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyRequest();
  return *internal_default_instance();
}

BusyRequest* BusyRequest::New(::google::protobuf::Arena* arena) const {
  BusyRequest* n = new BusyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BusyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.BusyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BusyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.BusyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyRequest.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.BusyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.BusyRequest)
  return false;
#undef DO_
}

void BusyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.BusyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.BusyRequest)
}

::google::protobuf::uint8* BusyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.BusyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.BusyRequest)
  return target;
}

size_t BusyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.BusyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.BusyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BusyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BusyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.BusyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.BusyRequest)
    MergeFrom(*source);
  }
}

void BusyRequest::MergeFrom(const BusyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.BusyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void BusyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.BusyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusyRequest::CopyFrom(const BusyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.BusyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusyRequest::IsInitialized() const {
  return true;
}

void BusyRequest::Swap(BusyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BusyRequest::InternalSwap(BusyRequest* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BusyRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BusyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BusyResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BusyResponse::BusyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.BusyResponse)
}
BusyResponse::BusyResponse(const BusyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.BusyResponse)
}

void BusyResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

BusyResponse::~BusyResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.BusyResponse)
  SharedDtor();
}

void BusyResponse::SharedDtor() {
}

void BusyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusyResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BusyResponse& BusyResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyResponse();
  return *internal_default_instance();
}

BusyResponse* BusyResponse::New(::google::protobuf::Arena* arena) const {
  BusyResponse* n = new BusyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BusyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.BusyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool BusyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.BusyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.BusyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.BusyResponse)
  return false;
#undef DO_
}

void BusyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.BusyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.BusyResponse)
}

::google::protobuf::uint8* BusyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.BusyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.BusyResponse)
  return target;
}

size_t BusyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.BusyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.BusyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BusyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BusyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.BusyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.BusyResponse)
    MergeFrom(*source);
  }
}

void BusyResponse::MergeFrom(const BusyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.BusyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void BusyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.BusyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusyResponse::CopyFrom(const BusyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.BusyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusyResponse::IsInitialized() const {
  return true;
}

void BusyResponse::Swap(BusyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BusyResponse::InternalSwap(BusyResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BusyResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BusyMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BusyMessage::kCallidFieldNumber;
const int BusyMessage::kAppkeyFieldNumber;
const int BusyMessage::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BusyMessage::BusyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.BusyMessage)
}
BusyMessage::BusyMessage(const BusyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.BusyMessage)
}

void BusyMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BusyMessage::~BusyMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.BusyMessage)
  SharedDtor();
}

void BusyMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BusyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusyMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BusyMessage& BusyMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsBusyMessage();
  return *internal_default_instance();
}

BusyMessage* BusyMessage::New(::google::protobuf::Arena* arena) const {
  BusyMessage* n = new BusyMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BusyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.BusyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BusyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.BusyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.BusyMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.BusyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.BusyMessage)
  return false;
#undef DO_
}

void BusyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.BusyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.BusyMessage)
}

::google::protobuf::uint8* BusyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.BusyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.BusyMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.BusyMessage)
  return target;
}

size_t BusyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.BusyMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BusyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.BusyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BusyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BusyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.BusyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.BusyMessage)
    MergeFrom(*source);
  }
}

void BusyMessage::MergeFrom(const BusyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.BusyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void BusyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.BusyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusyMessage::CopyFrom(const BusyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.BusyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusyMessage::IsInitialized() const {
  return true;
}

void BusyMessage::Swap(BusyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BusyMessage::InternalSwap(BusyMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BusyMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelRequest::kCallidFieldNumber;
const int CancelRequest::kAppkeyFieldNumber;
const int CancelRequest::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelRequest::CancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.CancelRequest)
}
CancelRequest::CancelRequest(const CancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.CancelRequest)
}

void CancelRequest::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.CancelRequest)
  SharedDtor();
}

void CancelRequest::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelRequest& CancelRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelRequest();
  return *internal_default_instance();
}

CancelRequest* CancelRequest::New(::google::protobuf::Arena* arena) const {
  CancelRequest* n = new CancelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.CancelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelRequest.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.CancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.CancelRequest)
  return false;
#undef DO_
}

void CancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.CancelRequest)
}

::google::protobuf::uint8* CancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.CancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.CancelRequest)
  return target;
}

size_t CancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.CancelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.CancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.CancelRequest)
    MergeFrom(*source);
  }
}

void CancelRequest::MergeFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void CancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelRequest::IsInitialized() const {
  return true;
}

void CancelRequest::Swap(CancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelRequest::InternalSwap(CancelRequest* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelResponse::CancelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.CancelResponse)
}
CancelResponse::CancelResponse(const CancelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.CancelResponse)
}

void CancelResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

CancelResponse::~CancelResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.CancelResponse)
  SharedDtor();
}

void CancelResponse::SharedDtor() {
}

void CancelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelResponse& CancelResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelResponse();
  return *internal_default_instance();
}

CancelResponse* CancelResponse::New(::google::protobuf::Arena* arena) const {
  CancelResponse* n = new CancelResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.CancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool CancelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.CancelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.CancelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.CancelResponse)
  return false;
#undef DO_
}

void CancelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.CancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.CancelResponse)
}

::google::protobuf::uint8* CancelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.CancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.CancelResponse)
  return target;
}

size_t CancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.CancelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.CancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.CancelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.CancelResponse)
    MergeFrom(*source);
  }
}

void CancelResponse::MergeFrom(const CancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.CancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CancelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.CancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelResponse::CopyFrom(const CancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.CancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelResponse::IsInitialized() const {
  return true;
}

void CancelResponse::Swap(CancelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelResponse::InternalSwap(CancelResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelMessage::kCallidFieldNumber;
const int CancelMessage::kAppkeyFieldNumber;
const int CancelMessage::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelMessage::CancelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.CancelMessage)
}
CancelMessage::CancelMessage(const CancelMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.CancelMessage)
}

void CancelMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CancelMessage::~CancelMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.CancelMessage)
  SharedDtor();
}

void CancelMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelMessage& CancelMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsCancelMessage();
  return *internal_default_instance();
}

CancelMessage* CancelMessage::New(::google::protobuf::Arena* arena) const {
  CancelMessage* n = new CancelMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.CancelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CancelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.CancelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.CancelMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.CancelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.CancelMessage)
  return false;
#undef DO_
}

void CancelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.CancelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.CancelMessage)
}

::google::protobuf::uint8* CancelMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.CancelMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.CancelMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.CancelMessage)
  return target;
}

size_t CancelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.CancelMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.CancelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.CancelMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.CancelMessage)
    MergeFrom(*source);
  }
}

void CancelMessage::MergeFrom(const CancelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.CancelMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void CancelMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.CancelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMessage::CopyFrom(const CancelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.CancelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMessage::IsInitialized() const {
  return true;
}

void CancelMessage::Swap(CancelMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelMessage::InternalSwap(CancelMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefuseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefuseRequest::kCallidFieldNumber;
const int RefuseRequest::kAppkeyFieldNumber;
const int RefuseRequest::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefuseRequest::RefuseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.RefuseRequest)
}
RefuseRequest::RefuseRequest(const RefuseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.RefuseRequest)
}

void RefuseRequest::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RefuseRequest::~RefuseRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.RefuseRequest)
  SharedDtor();
}

void RefuseRequest::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefuseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefuseRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefuseRequest& RefuseRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseRequest();
  return *internal_default_instance();
}

RefuseRequest* RefuseRequest::New(::google::protobuf::Arena* arena) const {
  RefuseRequest* n = new RefuseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefuseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.RefuseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RefuseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.RefuseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseRequest.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.RefuseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.RefuseRequest)
  return false;
#undef DO_
}

void RefuseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.RefuseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.RefuseRequest)
}

::google::protobuf::uint8* RefuseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.RefuseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.RefuseRequest)
  return target;
}

size_t RefuseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.RefuseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefuseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.RefuseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefuseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefuseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.RefuseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.RefuseRequest)
    MergeFrom(*source);
  }
}

void RefuseRequest::MergeFrom(const RefuseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.RefuseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void RefuseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.RefuseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefuseRequest::CopyFrom(const RefuseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.RefuseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefuseRequest::IsInitialized() const {
  return true;
}

void RefuseRequest::Swap(RefuseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefuseRequest::InternalSwap(RefuseRequest* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefuseRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefuseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefuseResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefuseResponse::RefuseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.RefuseResponse)
}
RefuseResponse::RefuseResponse(const RefuseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.RefuseResponse)
}

void RefuseResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

RefuseResponse::~RefuseResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.RefuseResponse)
  SharedDtor();
}

void RefuseResponse::SharedDtor() {
}

void RefuseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefuseResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefuseResponse& RefuseResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseResponse();
  return *internal_default_instance();
}

RefuseResponse* RefuseResponse::New(::google::protobuf::Arena* arena) const {
  RefuseResponse* n = new RefuseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefuseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.RefuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool RefuseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.RefuseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.RefuseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.RefuseResponse)
  return false;
#undef DO_
}

void RefuseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.RefuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.RefuseResponse)
}

::google::protobuf::uint8* RefuseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.RefuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.RefuseResponse)
  return target;
}

size_t RefuseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.RefuseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefuseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.RefuseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RefuseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefuseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.RefuseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.RefuseResponse)
    MergeFrom(*source);
  }
}

void RefuseResponse::MergeFrom(const RefuseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.RefuseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void RefuseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.RefuseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefuseResponse::CopyFrom(const RefuseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.RefuseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefuseResponse::IsInitialized() const {
  return true;
}

void RefuseResponse::Swap(RefuseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefuseResponse::InternalSwap(RefuseResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefuseResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefuseMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefuseMessage::kCallidFieldNumber;
const int RefuseMessage::kAppkeyFieldNumber;
const int RefuseMessage::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefuseMessage::RefuseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.RefuseMessage)
}
RefuseMessage::RefuseMessage(const RefuseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.RefuseMessage)
}

void RefuseMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RefuseMessage::~RefuseMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.RefuseMessage)
  SharedDtor();
}

void RefuseMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefuseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefuseMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefuseMessage& RefuseMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsRefuseMessage();
  return *internal_default_instance();
}

RefuseMessage* RefuseMessage::New(::google::protobuf::Arena* arena) const {
  RefuseMessage* n = new RefuseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefuseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.RefuseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RefuseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.RefuseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.RefuseMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.RefuseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.RefuseMessage)
  return false;
#undef DO_
}

void RefuseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.RefuseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.RefuseMessage)
}

::google::protobuf::uint8* RefuseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.RefuseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.RefuseMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.RefuseMessage)
  return target;
}

size_t RefuseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.RefuseMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefuseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.RefuseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RefuseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefuseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.RefuseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.RefuseMessage)
    MergeFrom(*source);
  }
}

void RefuseMessage::MergeFrom(const RefuseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.RefuseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void RefuseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.RefuseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefuseMessage::CopyFrom(const RefuseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.RefuseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefuseMessage::IsInitialized() const {
  return true;
}

void RefuseMessage::Swap(RefuseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefuseMessage::InternalSwap(RefuseMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefuseMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ByeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ByeRequest::kCallidFieldNumber;
const int ByeRequest::kAppkeyFieldNumber;
const int ByeRequest::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ByeRequest::ByeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ByeRequest)
}
ByeRequest::ByeRequest(const ByeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.ByeRequest)
}

void ByeRequest::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ByeRequest::~ByeRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.ByeRequest)
  SharedDtor();
}

void ByeRequest::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ByeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ByeRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ByeRequest& ByeRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeRequest();
  return *internal_default_instance();
}

ByeRequest* ByeRequest::New(::google::protobuf::Arena* arena) const {
  ByeRequest* n = new ByeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ByeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ByeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ByeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ByeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeRequest.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ByeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ByeRequest)
  return false;
#undef DO_
}

void ByeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ByeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ByeRequest)
}

::google::protobuf::uint8* ByeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ByeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ByeRequest)
  return target;
}

size_t ByeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ByeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ByeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ByeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ByeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ByeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ByeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ByeRequest)
    MergeFrom(*source);
  }
}

void ByeRequest::MergeFrom(const ByeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ByeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void ByeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ByeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ByeRequest::CopyFrom(const ByeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ByeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ByeRequest::IsInitialized() const {
  return true;
}

void ByeRequest::Swap(ByeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ByeRequest::InternalSwap(ByeRequest* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ByeRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ByeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ByeResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ByeResponse::ByeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ByeResponse)
}
ByeResponse::ByeResponse(const ByeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.ByeResponse)
}

void ByeResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

ByeResponse::~ByeResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.ByeResponse)
  SharedDtor();
}

void ByeResponse::SharedDtor() {
}

void ByeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ByeResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ByeResponse& ByeResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeResponse();
  return *internal_default_instance();
}

ByeResponse* ByeResponse::New(::google::protobuf::Arena* arena) const {
  ByeResponse* n = new ByeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ByeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ByeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool ByeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ByeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ByeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ByeResponse)
  return false;
#undef DO_
}

void ByeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ByeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ByeResponse)
}

::google::protobuf::uint8* ByeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ByeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ByeResponse)
  return target;
}

size_t ByeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ByeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ByeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ByeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ByeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ByeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ByeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ByeResponse)
    MergeFrom(*source);
  }
}

void ByeResponse::MergeFrom(const ByeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ByeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void ByeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ByeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ByeResponse::CopyFrom(const ByeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ByeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ByeResponse::IsInitialized() const {
  return true;
}

void ByeResponse::Swap(ByeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ByeResponse::InternalSwap(ByeResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ByeResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ByeMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ByeMessage::kCallidFieldNumber;
const int ByeMessage::kAppkeyFieldNumber;
const int ByeMessage::kFromUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ByeMessage::ByeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ByeMessage)
}
ByeMessage::ByeMessage(const ByeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.ByeMessage)
}

void ByeMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ByeMessage::~ByeMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.ByeMessage)
  SharedDtor();
}

void ByeMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ByeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ByeMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ByeMessage& ByeMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsByeMessage();
  return *internal_default_instance();
}

ByeMessage* ByeMessage::New(::google::protobuf::Arena* arena) const {
  ByeMessage* n = new ByeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ByeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ByeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ByeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ByeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ByeMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ByeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ByeMessage)
  return false;
#undef DO_
}

void ByeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ByeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ByeMessage)
}

::google::protobuf::uint8* ByeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ByeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ByeMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ByeMessage)
  return target;
}

size_t ByeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ByeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ByeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ByeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ByeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ByeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ByeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ByeMessage)
    MergeFrom(*source);
  }
}

void ByeMessage::MergeFrom(const ByeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ByeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
}

void ByeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ByeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ByeMessage::CopyFrom(const ByeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ByeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ByeMessage::IsInitialized() const {
  return true;
}

void ByeMessage::Swap(ByeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ByeMessage::InternalSwap(ByeMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ByeMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReinviteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReinviteRequest::kCallMediaTypeFieldNumber;
const int ReinviteRequest::kAppkeyFieldNumber;
const int ReinviteRequest::kFromUsernameFieldNumber;
const int ReinviteRequest::kLocalIpFieldNumber;
const int ReinviteRequest::kLocalAudioPortFieldNumber;
const int ReinviteRequest::kLocalAudioCodecListFieldNumber;
const int ReinviteRequest::kLocalVideoPortFieldNumber;
const int ReinviteRequest::kLocalVideoCodecListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReinviteRequest::ReinviteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ReinviteRequest)
}
ReinviteRequest::ReinviteRequest(const ReinviteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_audio_codec_list().size() > 0) {
    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_video_codec_list().size() > 0) {
    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  ::memcpy(&call_media_type_, &from.call_media_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&local_video_port_) -
    reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.ReinviteRequest)
}

void ReinviteRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  _cached_size_ = 0;
}

ReinviteRequest::~ReinviteRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.ReinviteRequest)
  SharedDtor();
}

void ReinviteRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReinviteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReinviteRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReinviteRequest& ReinviteRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteRequest();
  return *internal_default_instance();
}

ReinviteRequest* ReinviteRequest::New(::google::protobuf::Arena* arena) const {
  ReinviteRequest* n = new ReinviteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReinviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ReinviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(local_video_port_));
  _internal_metadata_.Clear();
}

bool ReinviteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ReinviteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.switch.ECallMediaType call_media_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_media_type(static_cast< ::outer::switch::ECallMediaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), static_cast<int>(this->local_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteRequest.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_audio_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_audio_codec_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteRequest.local_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_video_port = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_video_codec_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteRequest.local_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ReinviteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ReinviteRequest)
  return false;
#undef DO_
}

void ReinviteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ReinviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->call_media_type(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->local_ip(), output);
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->local_audio_port(), output);
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->local_audio_codec_list(), output);
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->local_video_port(), output);
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->local_video_codec_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ReinviteRequest)
}

::google::protobuf::uint8* ReinviteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ReinviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->call_media_type(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->local_ip(), target);
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->local_audio_port(), target);
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_audio_codec_list().data(), static_cast<int>(this->local_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->local_audio_codec_list(), target);
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->local_video_port(), target);
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_video_codec_list().data(), static_cast<int>(this->local_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteRequest.local_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->local_video_codec_list(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ReinviteRequest)
  return target;
}

size_t ReinviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ReinviteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string local_ip = 5;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  // string local_audio_codec_list = 7;
  if (this->local_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_audio_codec_list());
  }

  // string local_video_codec_list = 9;
  if (this->local_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_video_codec_list());
  }

  // .outer.switch.ECallMediaType call_media_type = 1;
  if (this->call_media_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_media_type());
  }

  // uint32 local_audio_port = 6;
  if (this->local_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_audio_port());
  }

  // uint32 local_video_port = 8;
  if (this->local_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReinviteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ReinviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinviteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReinviteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ReinviteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ReinviteRequest)
    MergeFrom(*source);
  }
}

void ReinviteRequest::MergeFrom(const ReinviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ReinviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  if (from.local_audio_codec_list().size() > 0) {

    local_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_audio_codec_list_);
  }
  if (from.local_video_codec_list().size() > 0) {

    local_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_video_codec_list_);
  }
  if (from.call_media_type() != 0) {
    set_call_media_type(from.call_media_type());
  }
  if (from.local_audio_port() != 0) {
    set_local_audio_port(from.local_audio_port());
  }
  if (from.local_video_port() != 0) {
    set_local_video_port(from.local_video_port());
  }
}

void ReinviteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ReinviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinviteRequest::CopyFrom(const ReinviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ReinviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinviteRequest::IsInitialized() const {
  return true;
}

void ReinviteRequest::Swap(ReinviteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReinviteRequest::InternalSwap(ReinviteRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  local_ip_.Swap(&other->local_ip_);
  local_audio_codec_list_.Swap(&other->local_audio_codec_list_);
  local_video_codec_list_.Swap(&other->local_video_codec_list_);
  swap(call_media_type_, other->call_media_type_);
  swap(local_audio_port_, other->local_audio_port_);
  swap(local_video_port_, other->local_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReinviteRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReinviteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReinviteResponse::kRetFieldNumber;
const int ReinviteResponse::kCallidFieldNumber;
const int ReinviteResponse::kMrfIpFieldNumber;
const int ReinviteResponse::kMrfAudioPortFieldNumber;
const int ReinviteResponse::kMrfVideoPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReinviteResponse::ReinviteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ReinviteResponse)
}
ReinviteResponse::ReinviteResponse(const ReinviteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrf_ip().size() > 0) {
    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  ::memcpy(&callid_, &from.callid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mrf_video_port_) -
    reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.ReinviteResponse)
}

void ReinviteResponse::SharedCtor() {
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&callid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  _cached_size_ = 0;
}

ReinviteResponse::~ReinviteResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.ReinviteResponse)
  SharedDtor();
}

void ReinviteResponse::SharedDtor() {
  mrf_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReinviteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReinviteResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReinviteResponse& ReinviteResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteResponse();
  return *internal_default_instance();
}

ReinviteResponse* ReinviteResponse::New(::google::protobuf::Arena* arena) const {
  ReinviteResponse* n = new ReinviteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReinviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ReinviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mrf_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&callid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&callid_)) + sizeof(mrf_video_port_));
  _internal_metadata_.Clear();
}

bool ReinviteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ReinviteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 callid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &callid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mrf_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrf_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteResponse.mrf_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_audio_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_video_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ReinviteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ReinviteResponse)
  return false;
#undef DO_
}

void ReinviteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ReinviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->callid(), output);
  }

  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteResponse.mrf_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mrf_ip(), output);
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mrf_audio_port(), output);
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mrf_video_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ReinviteResponse)
}

::google::protobuf::uint8* ReinviteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ReinviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->callid(), target);
  }

  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteResponse.mrf_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mrf_ip(), target);
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mrf_audio_port(), target);
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mrf_video_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ReinviteResponse)
  return target;
}

size_t ReinviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ReinviteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mrf_ip = 3;
  if (this->mrf_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrf_ip());
  }

  // uint64 callid = 2;
  if (this->callid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->callid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // uint32 mrf_audio_port = 4;
  if (this->mrf_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_audio_port());
  }

  // uint32 mrf_video_port = 5;
  if (this->mrf_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReinviteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ReinviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinviteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReinviteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ReinviteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ReinviteResponse)
    MergeFrom(*source);
  }
}

void ReinviteResponse::MergeFrom(const ReinviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ReinviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mrf_ip().size() > 0) {

    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  if (from.callid() != 0) {
    set_callid(from.callid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.mrf_audio_port() != 0) {
    set_mrf_audio_port(from.mrf_audio_port());
  }
  if (from.mrf_video_port() != 0) {
    set_mrf_video_port(from.mrf_video_port());
  }
}

void ReinviteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ReinviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinviteResponse::CopyFrom(const ReinviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ReinviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinviteResponse::IsInitialized() const {
  return true;
}

void ReinviteResponse::Swap(ReinviteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReinviteResponse::InternalSwap(ReinviteResponse* other) {
  using std::swap;
  mrf_ip_.Swap(&other->mrf_ip_);
  swap(callid_, other->callid_);
  swap(ret_, other->ret_);
  swap(mrf_audio_port_, other->mrf_audio_port_);
  swap(mrf_video_port_, other->mrf_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReinviteResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReinviteMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReinviteMessage::kCallidFieldNumber;
const int ReinviteMessage::kCallMediaTypeFieldNumber;
const int ReinviteMessage::kAppkeyFieldNumber;
const int ReinviteMessage::kFromUsernameFieldNumber;
const int ReinviteMessage::kToUsernameFieldNumber;
const int ReinviteMessage::kRemoteAudioCodecListFieldNumber;
const int ReinviteMessage::kRemoteVideoCodecListFieldNumber;
const int ReinviteMessage::kMrfIpFieldNumber;
const int ReinviteMessage::kMrfAudioPortFieldNumber;
const int ReinviteMessage::kMrfVideoPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReinviteMessage::ReinviteMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.ReinviteMessage)
}
ReinviteMessage::ReinviteMessage(const ReinviteMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callid().size() > 0) {
    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  remote_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_audio_codec_list().size() > 0) {
    remote_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_audio_codec_list_);
  }
  remote_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_video_codec_list().size() > 0) {
    remote_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_video_codec_list_);
  }
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mrf_ip().size() > 0) {
    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  ::memcpy(&call_media_type_, &from.call_media_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mrf_video_port_) -
    reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  // @@protoc_insertion_point(copy_constructor:outer.switch.ReinviteMessage)
}

void ReinviteMessage::SharedCtor() {
  callid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  _cached_size_ = 0;
}

ReinviteMessage::~ReinviteMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.ReinviteMessage)
  SharedDtor();
}

void ReinviteMessage::SharedDtor() {
  callid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReinviteMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReinviteMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReinviteMessage& ReinviteMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsReinviteMessage();
  return *internal_default_instance();
}

ReinviteMessage* ReinviteMessage::New(::google::protobuf::Arena* arena) const {
  ReinviteMessage* n = new ReinviteMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReinviteMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.ReinviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  callid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_audio_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_video_codec_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mrf_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_media_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mrf_video_port_) -
      reinterpret_cast<char*>(&call_media_type_)) + sizeof(mrf_video_port_));
  _internal_metadata_.Clear();
}

bool ReinviteMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.ReinviteMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string callid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callid().data(), static_cast<int>(this->callid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.callid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.switch.ECallMediaType call_media_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_media_type(static_cast< ::outer::switch::ECallMediaType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_audio_codec_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_audio_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.remote_audio_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_video_codec_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_video_codec_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.remote_video_codec_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mrf_ip = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mrf_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.ReinviteMessage.mrf_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_audio_port = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_audio_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mrf_video_port = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mrf_video_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.ReinviteMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.ReinviteMessage)
  return false;
#undef DO_
}

void ReinviteMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.ReinviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.callid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->callid(), output);
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->call_media_type(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->from_username(), output);
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->to_username(), output);
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.remote_audio_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remote_audio_codec_list(), output);
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.remote_video_codec_list");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remote_video_codec_list(), output);
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.mrf_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mrf_ip(), output);
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->mrf_audio_port(), output);
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mrf_video_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.ReinviteMessage)
}

::google::protobuf::uint8* ReinviteMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.ReinviteMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string callid = 1;
  if (this->callid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callid().data(), static_cast<int>(this->callid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.callid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->callid(), target);
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->call_media_type(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->from_username(), target);
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->to_username(), target);
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_audio_codec_list().data(), static_cast<int>(this->remote_audio_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.remote_audio_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remote_audio_codec_list(), target);
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_video_codec_list().data(), static_cast<int>(this->remote_video_codec_list().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.remote_video_codec_list");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remote_video_codec_list(), target);
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mrf_ip().data(), static_cast<int>(this->mrf_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.ReinviteMessage.mrf_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mrf_ip(), target);
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->mrf_audio_port(), target);
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mrf_video_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.ReinviteMessage)
  return target;
}

size_t ReinviteMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.ReinviteMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string callid = 1;
  if (this->callid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callid());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 4;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 5;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string remote_audio_codec_list = 6;
  if (this->remote_audio_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_audio_codec_list());
  }

  // string remote_video_codec_list = 7;
  if (this->remote_video_codec_list().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_video_codec_list());
  }

  // string mrf_ip = 8;
  if (this->mrf_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mrf_ip());
  }

  // .outer.switch.ECallMediaType call_media_type = 2;
  if (this->call_media_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_media_type());
  }

  // uint32 mrf_audio_port = 9;
  if (this->mrf_audio_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_audio_port());
  }

  // uint32 mrf_video_port = 10;
  if (this->mrf_video_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mrf_video_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReinviteMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.ReinviteMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinviteMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReinviteMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.ReinviteMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.ReinviteMessage)
    MergeFrom(*source);
  }
}

void ReinviteMessage::MergeFrom(const ReinviteMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.ReinviteMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.callid().size() > 0) {

    callid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callid_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.remote_audio_codec_list().size() > 0) {

    remote_audio_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_audio_codec_list_);
  }
  if (from.remote_video_codec_list().size() > 0) {

    remote_video_codec_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_video_codec_list_);
  }
  if (from.mrf_ip().size() > 0) {

    mrf_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mrf_ip_);
  }
  if (from.call_media_type() != 0) {
    set_call_media_type(from.call_media_type());
  }
  if (from.mrf_audio_port() != 0) {
    set_mrf_audio_port(from.mrf_audio_port());
  }
  if (from.mrf_video_port() != 0) {
    set_mrf_video_port(from.mrf_video_port());
  }
}

void ReinviteMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.ReinviteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinviteMessage::CopyFrom(const ReinviteMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.ReinviteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinviteMessage::IsInitialized() const {
  return true;
}

void ReinviteMessage::Swap(ReinviteMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReinviteMessage::InternalSwap(ReinviteMessage* other) {
  using std::swap;
  callid_.Swap(&other->callid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  remote_audio_codec_list_.Swap(&other->remote_audio_codec_list_);
  remote_video_codec_list_.Swap(&other->remote_video_codec_list_);
  mrf_ip_.Swap(&other->mrf_ip_);
  swap(call_media_type_, other->call_media_type_);
  swap(mrf_audio_port_, other->mrf_audio_port_);
  swap(mrf_video_port_, other->mrf_video_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReinviteMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallMessage::kCallMsgTypeFieldNumber;
const int CallMessage::kCallMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallMessage::CallMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsCallMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.CallMessage)
}
CallMessage::CallMessage(const CallMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  call_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.call_msg().size() > 0) {
    call_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_msg_);
  }
  call_msg_type_ = from.call_msg_type_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.CallMessage)
}

void CallMessage::SharedCtor() {
  call_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_type_ = 0;
  _cached_size_ = 0;
}

CallMessage::~CallMessage() {
  // @@protoc_insertion_point(destructor:outer.switch.CallMessage)
  SharedDtor();
}

void CallMessage::SharedDtor() {
  call_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallMessage::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallMessage& CallMessage::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsCallMessage();
  return *internal_default_instance();
}

CallMessage* CallMessage::New(::google::protobuf::Arena* arena) const {
  CallMessage* n = new CallMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.CallMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_type_ = 0;
  _internal_metadata_.Clear();
}

bool CallMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.CallMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.enumeration.ECallMsgType call_msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_msg_type(static_cast< ::common::enumeration::ECallMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes call_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_call_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.CallMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.CallMessage)
  return false;
#undef DO_
}

void CallMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.CallMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->call_msg_type(), output);
  }

  // bytes call_msg = 2;
  if (this->call_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->call_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.CallMessage)
}

::google::protobuf::uint8* CallMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.CallMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->call_msg_type(), target);
  }

  // bytes call_msg = 2;
  if (this->call_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->call_msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.CallMessage)
  return target;
}

size_t CallMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.CallMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes call_msg = 2;
  if (this->call_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->call_msg());
  }

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.CallMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CallMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.CallMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.CallMessage)
    MergeFrom(*source);
  }
}

void CallMessage::MergeFrom(const CallMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.CallMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.call_msg().size() > 0) {

    call_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_msg_);
  }
  if (from.call_msg_type() != 0) {
    set_call_msg_type(from.call_msg_type());
  }
}

void CallMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.CallMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallMessage::CopyFrom(const CallMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.CallMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallMessage::IsInitialized() const {
  return true;
}

void CallMessage::Swap(CallMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallMessage::InternalSwap(CallMessage* other) {
  using std::swap;
  call_msg_.Swap(&other->call_msg_);
  swap(call_msg_type_, other->call_msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallMessage::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncCallRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncCallRequest::kAppkeyFieldNumber;
const int SyncCallRequest::kFromUsernameFieldNumber;
const int SyncCallRequest::kCallMsgGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncCallRequest::SyncCallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsSyncCallRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.SyncCallRequest)
}
SyncCallRequest::SyncCallRequest(const SyncCallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  call_msg_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.call_msg_guid().size() > 0) {
    call_msg_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_msg_guid_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.switch.SyncCallRequest)
}

void SyncCallRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncCallRequest::~SyncCallRequest() {
  // @@protoc_insertion_point(destructor:outer.switch.SyncCallRequest)
  SharedDtor();
}

void SyncCallRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncCallRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncCallRequest::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncCallRequest& SyncCallRequest::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsSyncCallRequest();
  return *internal_default_instance();
}

SyncCallRequest* SyncCallRequest::New(::google::protobuf::Arena* arena) const {
  SyncCallRequest* n = new SyncCallRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncCallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.SyncCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncCallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.SyncCallRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.SyncCallRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.SyncCallRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string call_msg_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_call_msg_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->call_msg_guid().data(), static_cast<int>(this->call_msg_guid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.switch.SyncCallRequest.call_msg_guid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.SyncCallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.SyncCallRequest)
  return false;
#undef DO_
}

void SyncCallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.SyncCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string call_msg_guid = 3;
  if (this->call_msg_guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->call_msg_guid().data(), static_cast<int>(this->call_msg_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.call_msg_guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->call_msg_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.SyncCallRequest)
}

::google::protobuf::uint8* SyncCallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.SyncCallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string call_msg_guid = 3;
  if (this->call_msg_guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->call_msg_guid().data(), static_cast<int>(this->call_msg_guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.switch.SyncCallRequest.call_msg_guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->call_msg_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.SyncCallRequest)
  return target;
}

size_t SyncCallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.SyncCallRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string call_msg_guid = 3;
  if (this->call_msg_guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->call_msg_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncCallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.SyncCallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncCallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncCallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.SyncCallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.SyncCallRequest)
    MergeFrom(*source);
  }
}

void SyncCallRequest::MergeFrom(const SyncCallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.SyncCallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.call_msg_guid().size() > 0) {

    call_msg_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_msg_guid_);
  }
}

void SyncCallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.SyncCallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncCallRequest::CopyFrom(const SyncCallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.SyncCallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncCallRequest::IsInitialized() const {
  return true;
}

void SyncCallRequest::Swap(SyncCallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncCallRequest::InternalSwap(SyncCallRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  call_msg_guid_.Swap(&other->call_msg_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncCallRequest::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncCallResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncCallResponse::kRetFieldNumber;
const int SyncCallResponse::kCallMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncCallResponse::SyncCallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fswitch_2eproto::InitDefaultsSyncCallResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.switch.SyncCallResponse)
}
SyncCallResponse::SyncCallResponse(const SyncCallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      call_message_(from.call_message_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.switch.SyncCallResponse)
}

void SyncCallResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

SyncCallResponse::~SyncCallResponse() {
  // @@protoc_insertion_point(destructor:outer.switch.SyncCallResponse)
  SharedDtor();
}

void SyncCallResponse::SharedDtor() {
}

void SyncCallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncCallResponse::descriptor() {
  ::protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncCallResponse& SyncCallResponse::default_instance() {
  ::protobuf_outer_2fswitch_2eproto::InitDefaultsSyncCallResponse();
  return *internal_default_instance();
}

SyncCallResponse* SyncCallResponse::New(::google::protobuf::Arena* arena) const {
  SyncCallResponse* n = new SyncCallResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncCallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.switch.SyncCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  call_message_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SyncCallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.switch.SyncCallResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.switch.CallMessage call_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_call_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.switch.SyncCallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.switch.SyncCallResponse)
  return false;
#undef DO_
}

void SyncCallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.switch.SyncCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.switch.CallMessage call_message = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->call_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->call_message(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.switch.SyncCallResponse)
}

::google::protobuf::uint8* SyncCallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.switch.SyncCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.switch.CallMessage call_message = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->call_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->call_message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.switch.SyncCallResponse)
  return target;
}

size_t SyncCallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.switch.SyncCallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.switch.CallMessage call_message = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->call_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->call_message(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncCallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.switch.SyncCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncCallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncCallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.switch.SyncCallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.switch.SyncCallResponse)
    MergeFrom(*source);
  }
}

void SyncCallResponse::MergeFrom(const SyncCallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.switch.SyncCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  call_message_.MergeFrom(from.call_message_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncCallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.switch.SyncCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncCallResponse::CopyFrom(const SyncCallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.switch.SyncCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncCallResponse::IsInitialized() const {
  return true;
}

void SyncCallResponse::Swap(SyncCallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncCallResponse::InternalSwap(SyncCallResponse* other) {
  using std::swap;
  call_message_.InternalSwap(&other->call_message_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncCallResponse::GetMetadata() const {
  protobuf_outer_2fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fswitch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace switch
}  // namespace outer

// @@protoc_insertion_point(global_scope)
