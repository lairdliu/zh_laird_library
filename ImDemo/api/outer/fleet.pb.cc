// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/fleet.proto

#include "outer/fleet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace fleet {
class FleetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetInfo>
      _instance;
} _FleetInfo_default_instance_;
class FleetCrewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetCrew>
      _instance;
} _FleetCrew_default_instance_;
class InvitationNoticeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvitationNoticeInfo>
      _instance;
} _InvitationNoticeInfo_default_instance_;
class FleetSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetSignal>
      _instance;
} _FleetSignal_default_instance_;
class FleetMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMessage>
      _instance;
} _FleetMessage_default_instance_;
class SendFleetMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFleetMessageRequest>
      _instance;
} _SendFleetMessageRequest_default_instance_;
class SendFleetMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFleetMessageResponse>
      _instance;
} _SendFleetMessageResponse_default_instance_;
class CreateFleetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFleetRequest>
      _instance;
} _CreateFleetRequest_default_instance_;
class CreateFleetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateFleetResponse>
      _instance;
} _CreateFleetResponse_default_instance_;
class FleetCreatedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetCreatedSignal>
      _instance;
} _FleetCreatedSignal_default_instance_;
class InvitingToFleetSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvitingToFleetSignal>
      _instance;
} _InvitingToFleetSignal_default_instance_;
class AcceptFleetInvitationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceptFleetInvitationRequest>
      _instance;
} _AcceptFleetInvitationRequest_default_instance_;
class AcceptFleetInvitationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceptFleetInvitationResponse>
      _instance;
} _AcceptFleetInvitationResponse_default_instance_;
class AcceptFleetInvitationSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AcceptFleetInvitationSignal>
      _instance;
} _AcceptFleetInvitationSignal_default_instance_;
class InviteeJoinFleetSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteeJoinFleetSignal>
      _instance;
} _InviteeJoinFleetSignal_default_instance_;
class DeclineFleetInvitationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeclineFleetInvitationRequest>
      _instance;
} _DeclineFleetInvitationRequest_default_instance_;
class DeclineFleetInvitationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeclineFleetInvitationResponse>
      _instance;
} _DeclineFleetInvitationResponse_default_instance_;
class FleetInvitationDeclinedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetInvitationDeclinedSignal>
      _instance;
} _FleetInvitationDeclinedSignal_default_instance_;
class AddFleetMemberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddFleetMemberRequest>
      _instance;
} _AddFleetMemberRequest_default_instance_;
class AddFleetMemberResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddFleetMemberResponse>
      _instance;
} _AddFleetMemberResponse_default_instance_;
class JoinFleetSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinFleetSignal>
      _instance;
} _JoinFleetSignal_default_instance_;
class KickFleetMemberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickFleetMemberRequest>
      _instance;
} _KickFleetMemberRequest_default_instance_;
class KickFleetMemberResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickFleetMemberResponse>
      _instance;
} _KickFleetMemberResponse_default_instance_;
class FleetMemberKickedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberKickedSignal>
      _instance;
} _FleetMemberKickedSignal_default_instance_;
class FleetMemberExitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberExitRequest>
      _instance;
} _FleetMemberExitRequest_default_instance_;
class FleetMemberExitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberExitResponse>
      _instance;
} _FleetMemberExitResponse_default_instance_;
class FleetMemberExitedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberExitedSignal>
      _instance;
} _FleetMemberExitedSignal_default_instance_;
class DestroyFleetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DestroyFleetRequest>
      _instance;
} _DestroyFleetRequest_default_instance_;
class DestroyFleetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DestroyFleetResponse>
      _instance;
} _DestroyFleetResponse_default_instance_;
class FleetDestroyedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetDestroyedSignal>
      _instance;
} _FleetDestroyedSignal_default_instance_;
class HandoverCaptainRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandoverCaptainRequest>
      _instance;
} _HandoverCaptainRequest_default_instance_;
class HandoverCaptainResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandoverCaptainResponse>
      _instance;
} _HandoverCaptainResponse_default_instance_;
class CaptainChangedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CaptainChangedSignal>
      _instance;
} _CaptainChangedSignal_default_instance_;
class FleetMemberChangeNickRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberChangeNickRequest>
      _instance;
} _FleetMemberChangeNickRequest_default_instance_;
class FleetMemberChangeNickResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberChangeNickResponse>
      _instance;
} _FleetMemberChangeNickResponse_default_instance_;
class FleetMemberNickChangedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetMemberNickChangedSignal>
      _instance;
} _FleetMemberNickChangedSignal_default_instance_;
class ChangeLocationAuthorizationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLocationAuthorizationRequest>
      _instance;
} _ChangeLocationAuthorizationRequest_default_instance_;
class ChangeLocationAuthorizationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLocationAuthorizationResponse>
      _instance;
} _ChangeLocationAuthorizationResponse_default_instance_;
class ChangeLocationAuthorizationSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeLocationAuthorizationSignal>
      _instance;
} _ChangeLocationAuthorizationSignal_default_instance_;
class GetMyFleetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMyFleetRequest>
      _instance;
} _GetMyFleetRequest_default_instance_;
class GetMyFleetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMyFleetResponse>
      _instance;
} _GetMyFleetResponse_default_instance_;
class GetFleetCrewListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetCrewListRequest>
      _instance;
} _GetFleetCrewListRequest_default_instance_;
class GetFleetCrewListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetCrewListResponse>
      _instance;
} _GetFleetCrewListResponse_default_instance_;
class SetFleetAssemblyPointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetAssemblyPointRequest>
      _instance;
} _SetFleetAssemblyPointRequest_default_instance_;
class SetFleetAssemblyPointResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetAssemblyPointResponse>
      _instance;
} _SetFleetAssemblyPointResponse_default_instance_;
class AssemblyPointChangedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssemblyPointChangedSignal>
      _instance;
} _AssemblyPointChangedSignal_default_instance_;
class GetFleetAssemblyPointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetAssemblyPointRequest>
      _instance;
} _GetFleetAssemblyPointRequest_default_instance_;
class GetFleetAssemblyPointResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetAssemblyPointResponse>
      _instance;
} _GetFleetAssemblyPointResponse_default_instance_;
class GetFleetInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetInfoRequest>
      _instance;
} _GetFleetInfoRequest_default_instance_;
class GetFleetInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetInfoResponse>
      _instance;
} _GetFleetInfoResponse_default_instance_;
class GetFleetInvitationListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetInvitationListRequest>
      _instance;
} _GetFleetInvitationListRequest_default_instance_;
class GetFleetInvitationListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFleetInvitationListResponse>
      _instance;
} _GetFleetInvitationListResponse_default_instance_;
class SetFleetNameRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetNameRequest>
      _instance;
} _SetFleetNameRequest_default_instance_;
class SetFleetNameResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetNameResponse>
      _instance;
} _SetFleetNameResponse_default_instance_;
class FleetNameChangedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetNameChangedSignal>
      _instance;
} _FleetNameChangedSignal_default_instance_;
class SetFleetDescRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetDescRequest>
      _instance;
} _SetFleetDescRequest_default_instance_;
class SetFleetDescResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetFleetDescResponse>
      _instance;
} _SetFleetDescResponse_default_instance_;
class FleetDescChangedSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetDescChangedSignal>
      _instance;
} _FleetDescChangedSignal_default_instance_;
}  // namespace fleet
}  // namespace outer
namespace protobuf_outer_2ffleet_2eproto {
void InitDefaultsFleetInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  {
    void* ptr = &::outer::fleet::_FleetInfo_default_instance_;
    new (ptr) ::outer::fleet::FleetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetInfo::InitAsDefaultInstance();
}

void InitDefaultsFleetInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetInfoImpl);
}

void InitDefaultsFleetCrewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetCrew_default_instance_;
    new (ptr) ::outer::fleet::FleetCrew();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetCrew::InitAsDefaultInstance();
}

void InitDefaultsFleetCrew() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetCrewImpl);
}

void InitDefaultsInvitationNoticeInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_InvitationNoticeInfo_default_instance_;
    new (ptr) ::outer::fleet::InvitationNoticeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::InvitationNoticeInfo::InitAsDefaultInstance();
}

void InitDefaultsInvitationNoticeInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInvitationNoticeInfoImpl);
}

void InitDefaultsFleetSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  {
    void* ptr = &::outer::fleet::_FleetSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetSignalImpl);
}

void InitDefaultsFleetMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetMessage_default_instance_;
    new (ptr) ::outer::fleet::FleetMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMessage::InitAsDefaultInstance();
}

void InitDefaultsFleetMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMessageImpl);
}

void InitDefaultsSendFleetMessageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SendFleetMessageRequest_default_instance_;
    new (ptr) ::outer::fleet::SendFleetMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SendFleetMessageRequest::InitAsDefaultInstance();
}

void InitDefaultsSendFleetMessageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendFleetMessageRequestImpl);
}

void InitDefaultsSendFleetMessageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SendFleetMessageResponse_default_instance_;
    new (ptr) ::outer::fleet::SendFleetMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SendFleetMessageResponse::InitAsDefaultInstance();
}

void InitDefaultsSendFleetMessageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendFleetMessageResponseImpl);
}

void InitDefaultsCreateFleetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_CreateFleetRequest_default_instance_;
    new (ptr) ::outer::fleet::CreateFleetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::CreateFleetRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateFleetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateFleetRequestImpl);
}

void InitDefaultsCreateFleetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  {
    void* ptr = &::outer::fleet::_CreateFleetResponse_default_instance_;
    new (ptr) ::outer::fleet::CreateFleetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::CreateFleetResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateFleetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateFleetResponseImpl);
}

void InitDefaultsFleetCreatedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetCreatedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetCreatedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetCreatedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetCreatedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetCreatedSignalImpl);
}

void InitDefaultsInvitingToFleetSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_InvitingToFleetSignal_default_instance_;
    new (ptr) ::outer::fleet::InvitingToFleetSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::InvitingToFleetSignal::InitAsDefaultInstance();
}

void InitDefaultsInvitingToFleetSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInvitingToFleetSignalImpl);
}

void InitDefaultsAcceptFleetInvitationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_AcceptFleetInvitationRequest_default_instance_;
    new (ptr) ::outer::fleet::AcceptFleetInvitationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AcceptFleetInvitationRequest::InitAsDefaultInstance();
}

void InitDefaultsAcceptFleetInvitationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcceptFleetInvitationRequestImpl);
}

void InitDefaultsAcceptFleetInvitationResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_AcceptFleetInvitationResponse_default_instance_;
    new (ptr) ::outer::fleet::AcceptFleetInvitationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AcceptFleetInvitationResponse::InitAsDefaultInstance();
}

void InitDefaultsAcceptFleetInvitationResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcceptFleetInvitationResponseImpl);
}

void InitDefaultsAcceptFleetInvitationSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_AcceptFleetInvitationSignal_default_instance_;
    new (ptr) ::outer::fleet::AcceptFleetInvitationSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AcceptFleetInvitationSignal::InitAsDefaultInstance();
}

void InitDefaultsAcceptFleetInvitationSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcceptFleetInvitationSignalImpl);
}

void InitDefaultsInviteeJoinFleetSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_InviteeJoinFleetSignal_default_instance_;
    new (ptr) ::outer::fleet::InviteeJoinFleetSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::InviteeJoinFleetSignal::InitAsDefaultInstance();
}

void InitDefaultsInviteeJoinFleetSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInviteeJoinFleetSignalImpl);
}

void InitDefaultsDeclineFleetInvitationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_DeclineFleetInvitationRequest_default_instance_;
    new (ptr) ::outer::fleet::DeclineFleetInvitationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::DeclineFleetInvitationRequest::InitAsDefaultInstance();
}

void InitDefaultsDeclineFleetInvitationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeclineFleetInvitationRequestImpl);
}

void InitDefaultsDeclineFleetInvitationResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_DeclineFleetInvitationResponse_default_instance_;
    new (ptr) ::outer::fleet::DeclineFleetInvitationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::DeclineFleetInvitationResponse::InitAsDefaultInstance();
}

void InitDefaultsDeclineFleetInvitationResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeclineFleetInvitationResponseImpl);
}

void InitDefaultsFleetInvitationDeclinedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetInvitationDeclinedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetInvitationDeclinedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetInvitationDeclinedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetInvitationDeclinedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetInvitationDeclinedSignalImpl);
}

void InitDefaultsAddFleetMemberRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_AddFleetMemberRequest_default_instance_;
    new (ptr) ::outer::fleet::AddFleetMemberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AddFleetMemberRequest::InitAsDefaultInstance();
}

void InitDefaultsAddFleetMemberRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddFleetMemberRequestImpl);
}

void InitDefaultsAddFleetMemberResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_AddFleetMemberResponse_default_instance_;
    new (ptr) ::outer::fleet::AddFleetMemberResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AddFleetMemberResponse::InitAsDefaultInstance();
}

void InitDefaultsAddFleetMemberResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddFleetMemberResponseImpl);
}

void InitDefaultsJoinFleetSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_JoinFleetSignal_default_instance_;
    new (ptr) ::outer::fleet::JoinFleetSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::JoinFleetSignal::InitAsDefaultInstance();
}

void InitDefaultsJoinFleetSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJoinFleetSignalImpl);
}

void InitDefaultsKickFleetMemberRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_KickFleetMemberRequest_default_instance_;
    new (ptr) ::outer::fleet::KickFleetMemberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::KickFleetMemberRequest::InitAsDefaultInstance();
}

void InitDefaultsKickFleetMemberRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickFleetMemberRequestImpl);
}

void InitDefaultsKickFleetMemberResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_KickFleetMemberResponse_default_instance_;
    new (ptr) ::outer::fleet::KickFleetMemberResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::KickFleetMemberResponse::InitAsDefaultInstance();
}

void InitDefaultsKickFleetMemberResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickFleetMemberResponseImpl);
}

void InitDefaultsFleetMemberKickedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetMemberKickedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberKickedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberKickedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberKickedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberKickedSignalImpl);
}

void InitDefaultsFleetMemberExitRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetMemberExitRequest_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberExitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberExitRequest::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberExitRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberExitRequestImpl);
}

void InitDefaultsFleetMemberExitResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetMemberExitResponse_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberExitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberExitResponse::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberExitResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberExitResponseImpl);
}

void InitDefaultsFleetMemberExitedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetMemberExitedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberExitedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberExitedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberExitedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberExitedSignalImpl);
}

void InitDefaultsDestroyFleetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_DestroyFleetRequest_default_instance_;
    new (ptr) ::outer::fleet::DestroyFleetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::DestroyFleetRequest::InitAsDefaultInstance();
}

void InitDefaultsDestroyFleetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDestroyFleetRequestImpl);
}

void InitDefaultsDestroyFleetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_DestroyFleetResponse_default_instance_;
    new (ptr) ::outer::fleet::DestroyFleetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::DestroyFleetResponse::InitAsDefaultInstance();
}

void InitDefaultsDestroyFleetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDestroyFleetResponseImpl);
}

void InitDefaultsFleetDestroyedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetDestroyedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetDestroyedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetDestroyedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetDestroyedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetDestroyedSignalImpl);
}

void InitDefaultsHandoverCaptainRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_HandoverCaptainRequest_default_instance_;
    new (ptr) ::outer::fleet::HandoverCaptainRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::HandoverCaptainRequest::InitAsDefaultInstance();
}

void InitDefaultsHandoverCaptainRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHandoverCaptainRequestImpl);
}

void InitDefaultsHandoverCaptainResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_HandoverCaptainResponse_default_instance_;
    new (ptr) ::outer::fleet::HandoverCaptainResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::HandoverCaptainResponse::InitAsDefaultInstance();
}

void InitDefaultsHandoverCaptainResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHandoverCaptainResponseImpl);
}

void InitDefaultsCaptainChangedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_CaptainChangedSignal_default_instance_;
    new (ptr) ::outer::fleet::CaptainChangedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::CaptainChangedSignal::InitAsDefaultInstance();
}

void InitDefaultsCaptainChangedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCaptainChangedSignalImpl);
}

void InitDefaultsFleetMemberChangeNickRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetMemberChangeNickRequest_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberChangeNickRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberChangeNickRequest::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberChangeNickRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberChangeNickRequestImpl);
}

void InitDefaultsFleetMemberChangeNickResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_FleetMemberChangeNickResponse_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberChangeNickResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberChangeNickResponse::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberChangeNickResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberChangeNickResponseImpl);
}

void InitDefaultsFleetMemberNickChangedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetMemberNickChangedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetMemberNickChangedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetMemberNickChangedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetMemberNickChangedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetMemberNickChangedSignalImpl);
}

void InitDefaultsChangeLocationAuthorizationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_ChangeLocationAuthorizationRequest_default_instance_;
    new (ptr) ::outer::fleet::ChangeLocationAuthorizationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::ChangeLocationAuthorizationRequest::InitAsDefaultInstance();
}

void InitDefaultsChangeLocationAuthorizationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeLocationAuthorizationRequestImpl);
}

void InitDefaultsChangeLocationAuthorizationResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_ChangeLocationAuthorizationResponse_default_instance_;
    new (ptr) ::outer::fleet::ChangeLocationAuthorizationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::ChangeLocationAuthorizationResponse::InitAsDefaultInstance();
}

void InitDefaultsChangeLocationAuthorizationResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeLocationAuthorizationResponseImpl);
}

void InitDefaultsChangeLocationAuthorizationSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_ChangeLocationAuthorizationSignal_default_instance_;
    new (ptr) ::outer::fleet::ChangeLocationAuthorizationSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::ChangeLocationAuthorizationSignal::InitAsDefaultInstance();
}

void InitDefaultsChangeLocationAuthorizationSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeLocationAuthorizationSignalImpl);
}

void InitDefaultsGetMyFleetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_GetMyFleetRequest_default_instance_;
    new (ptr) ::outer::fleet::GetMyFleetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetMyFleetRequest::InitAsDefaultInstance();
}

void InitDefaultsGetMyFleetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMyFleetRequestImpl);
}

void InitDefaultsGetMyFleetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  {
    void* ptr = &::outer::fleet::_GetMyFleetResponse_default_instance_;
    new (ptr) ::outer::fleet::GetMyFleetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetMyFleetResponse::InitAsDefaultInstance();
}

void InitDefaultsGetMyFleetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMyFleetResponseImpl);
}

void InitDefaultsGetFleetCrewListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_GetFleetCrewListRequest_default_instance_;
    new (ptr) ::outer::fleet::GetFleetCrewListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetCrewListRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFleetCrewListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetCrewListRequestImpl);
}

void InitDefaultsGetFleetCrewListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_GetFleetCrewListResponse_default_instance_;
    new (ptr) ::outer::fleet::GetFleetCrewListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetCrewListResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFleetCrewListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetCrewListResponseImpl);
}

void InitDefaultsSetFleetAssemblyPointRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  {
    void* ptr = &::outer::fleet::_SetFleetAssemblyPointRequest_default_instance_;
    new (ptr) ::outer::fleet::SetFleetAssemblyPointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetAssemblyPointRequest::InitAsDefaultInstance();
}

void InitDefaultsSetFleetAssemblyPointRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetAssemblyPointRequestImpl);
}

void InitDefaultsSetFleetAssemblyPointResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SetFleetAssemblyPointResponse_default_instance_;
    new (ptr) ::outer::fleet::SetFleetAssemblyPointResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetAssemblyPointResponse::InitAsDefaultInstance();
}

void InitDefaultsSetFleetAssemblyPointResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetAssemblyPointResponseImpl);
}

void InitDefaultsAssemblyPointChangedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_AssemblyPointChangedSignal_default_instance_;
    new (ptr) ::outer::fleet::AssemblyPointChangedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::AssemblyPointChangedSignal::InitAsDefaultInstance();
}

void InitDefaultsAssemblyPointChangedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAssemblyPointChangedSignalImpl);
}

void InitDefaultsGetFleetAssemblyPointRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_GetFleetAssemblyPointRequest_default_instance_;
    new (ptr) ::outer::fleet::GetFleetAssemblyPointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetAssemblyPointRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFleetAssemblyPointRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetAssemblyPointRequestImpl);
}

void InitDefaultsGetFleetAssemblyPointResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  {
    void* ptr = &::outer::fleet::_GetFleetAssemblyPointResponse_default_instance_;
    new (ptr) ::outer::fleet::GetFleetAssemblyPointResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetAssemblyPointResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFleetAssemblyPointResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetAssemblyPointResponseImpl);
}

void InitDefaultsGetFleetInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_GetFleetInfoRequest_default_instance_;
    new (ptr) ::outer::fleet::GetFleetInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFleetInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetInfoRequestImpl);
}

void InitDefaultsGetFleetInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  {
    void* ptr = &::outer::fleet::_GetFleetInfoResponse_default_instance_;
    new (ptr) ::outer::fleet::GetFleetInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFleetInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetInfoResponseImpl);
}

void InitDefaultsGetFleetInvitationListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_GetFleetInvitationListRequest_default_instance_;
    new (ptr) ::outer::fleet::GetFleetInvitationListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetInvitationListRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFleetInvitationListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetInvitationListRequestImpl);
}

void InitDefaultsGetFleetInvitationListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsInvitationNoticeInfo();
  {
    void* ptr = &::outer::fleet::_GetFleetInvitationListResponse_default_instance_;
    new (ptr) ::outer::fleet::GetFleetInvitationListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::GetFleetInvitationListResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFleetInvitationListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFleetInvitationListResponseImpl);
}

void InitDefaultsSetFleetNameRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SetFleetNameRequest_default_instance_;
    new (ptr) ::outer::fleet::SetFleetNameRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetNameRequest::InitAsDefaultInstance();
}

void InitDefaultsSetFleetNameRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetNameRequestImpl);
}

void InitDefaultsSetFleetNameResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SetFleetNameResponse_default_instance_;
    new (ptr) ::outer::fleet::SetFleetNameResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetNameResponse::InitAsDefaultInstance();
}

void InitDefaultsSetFleetNameResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetNameResponseImpl);
}

void InitDefaultsFleetNameChangedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetNameChangedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetNameChangedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetNameChangedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetNameChangedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetNameChangedSignalImpl);
}

void InitDefaultsSetFleetDescRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SetFleetDescRequest_default_instance_;
    new (ptr) ::outer::fleet::SetFleetDescRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetDescRequest::InitAsDefaultInstance();
}

void InitDefaultsSetFleetDescRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetDescRequestImpl);
}

void InitDefaultsSetFleetDescResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::fleet::_SetFleetDescResponse_default_instance_;
    new (ptr) ::outer::fleet::SetFleetDescResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::SetFleetDescResponse::InitAsDefaultInstance();
}

void InitDefaultsSetFleetDescResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetFleetDescResponseImpl);
}

void InitDefaultsFleetDescChangedSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  {
    void* ptr = &::outer::fleet::_FleetDescChangedSignal_default_instance_;
    new (ptr) ::outer::fleet::FleetDescChangedSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::fleet::FleetDescChangedSignal::InitAsDefaultInstance();
}

void InitDefaultsFleetDescChangedSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetDescChangedSignalImpl);
}

::google::protobuf::Metadata file_level_metadata[58];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, crew_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInfo, assembly_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, is_captain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, is_authorization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCrew, fleet_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, invitee_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, invitee_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, inviter_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, inviter_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitationNoticeInfo, invite_reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, signal_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, fleet_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetSignal, receiver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, from_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, msg_content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMessage, is_read_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, msg_content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageResponse, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SendFleetMessageResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, captain_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, invitee_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, member_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, invite_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetResponse, fleet_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CreateFleetResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCreatedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCreatedSignal, captain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetCreatedSignal, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitingToFleetSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitingToFleetSignal, from_crew_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitingToFleetSignal, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InvitingToFleetSignal, invite_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, accept_to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AcceptFleetInvitationSignal, accept_from_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InviteeJoinFleetSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InviteeJoinFleetSignal, invitee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::InviteeJoinFleetSignal, inviter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, decline_to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, decline_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DeclineFleetInvitationResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInvitationDeclinedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInvitationDeclinedSignal, decline_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetInvitationDeclinedSignal, decline_reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, member_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, is_direct_pull_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberRequest, invite_reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AddFleetMemberResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::JoinFleetSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::JoinFleetSignal, new_member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::JoinFleetSignal, actor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, kicker_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, bekicked_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::KickFleetMemberResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberKickedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberKickedSignal, be_kicked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberKickedSignal, kicker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitRequest, exiter_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberExitedSignal, exiter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetRequest, destroy_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::DestroyFleetResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDestroyedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDestroyedSignal, destroyer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, actor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, new_captain_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::HandoverCaptainResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CaptainChangedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::CaptainChangedSignal, new_captain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, actor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberChangeNickResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberNickChangedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetMemberNickChangedSignal, nick_changed_crew_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, actor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, is_authorization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationSignal, location_authorization_changed_crew_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::ChangeLocationAuthorizationSignal, is_authorization_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetResponse, fleet_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetMyFleetResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListResponse, crews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetCrewListResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, setter_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, assembly_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetAssemblyPointResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AssemblyPointChangedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AssemblyPointChangedSignal, assembly_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::AssemblyPointChangedSignal, setter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointResponse, assembly_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetAssemblyPointResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoResponse, fleet_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInfoResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, page_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListResponse, invitation_notice_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListResponse, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::GetFleetInvitationListResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, actor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetNameResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetNameChangedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetNameChangedSignal, fleet_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetNameChangedSignal, actor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetNameChangedSignal, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, actor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::SetFleetDescResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDescChangedSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDescChangedSignal, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDescChangedSignal, actor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::fleet::FleetDescChangedSignal, appkey_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::fleet::FleetInfo)},
  { 12, -1, sizeof(::outer::fleet::FleetCrew)},
  { 26, -1, sizeof(::outer::fleet::InvitationNoticeInfo)},
  { 43, -1, sizeof(::outer::fleet::FleetSignal)},
  { 53, -1, sizeof(::outer::fleet::FleetMessage)},
  { 68, -1, sizeof(::outer::fleet::SendFleetMessageRequest)},
  { 79, -1, sizeof(::outer::fleet::SendFleetMessageResponse)},
  { 87, -1, sizeof(::outer::fleet::CreateFleetRequest)},
  { 99, -1, sizeof(::outer::fleet::CreateFleetResponse)},
  { 107, -1, sizeof(::outer::fleet::FleetCreatedSignal)},
  { 114, -1, sizeof(::outer::fleet::InvitingToFleetSignal)},
  { 122, -1, sizeof(::outer::fleet::AcceptFleetInvitationRequest)},
  { 132, -1, sizeof(::outer::fleet::AcceptFleetInvitationResponse)},
  { 139, -1, sizeof(::outer::fleet::AcceptFleetInvitationSignal)},
  { 145, -1, sizeof(::outer::fleet::InviteeJoinFleetSignal)},
  { 152, -1, sizeof(::outer::fleet::DeclineFleetInvitationRequest)},
  { 163, -1, sizeof(::outer::fleet::DeclineFleetInvitationResponse)},
  { 170, -1, sizeof(::outer::fleet::FleetInvitationDeclinedSignal)},
  { 177, -1, sizeof(::outer::fleet::AddFleetMemberRequest)},
  { 189, -1, sizeof(::outer::fleet::AddFleetMemberResponse)},
  { 196, -1, sizeof(::outer::fleet::JoinFleetSignal)},
  { 203, -1, sizeof(::outer::fleet::KickFleetMemberRequest)},
  { 213, -1, sizeof(::outer::fleet::KickFleetMemberResponse)},
  { 220, -1, sizeof(::outer::fleet::FleetMemberKickedSignal)},
  { 227, -1, sizeof(::outer::fleet::FleetMemberExitRequest)},
  { 236, -1, sizeof(::outer::fleet::FleetMemberExitResponse)},
  { 243, -1, sizeof(::outer::fleet::FleetMemberExitedSignal)},
  { 249, -1, sizeof(::outer::fleet::DestroyFleetRequest)},
  { 258, -1, sizeof(::outer::fleet::DestroyFleetResponse)},
  { 265, -1, sizeof(::outer::fleet::FleetDestroyedSignal)},
  { 271, -1, sizeof(::outer::fleet::HandoverCaptainRequest)},
  { 281, -1, sizeof(::outer::fleet::HandoverCaptainResponse)},
  { 288, -1, sizeof(::outer::fleet::CaptainChangedSignal)},
  { 294, -1, sizeof(::outer::fleet::FleetMemberChangeNickRequest)},
  { 304, -1, sizeof(::outer::fleet::FleetMemberChangeNickResponse)},
  { 311, -1, sizeof(::outer::fleet::FleetMemberNickChangedSignal)},
  { 317, -1, sizeof(::outer::fleet::ChangeLocationAuthorizationRequest)},
  { 327, -1, sizeof(::outer::fleet::ChangeLocationAuthorizationResponse)},
  { 334, -1, sizeof(::outer::fleet::ChangeLocationAuthorizationSignal)},
  { 341, -1, sizeof(::outer::fleet::GetMyFleetRequest)},
  { 349, -1, sizeof(::outer::fleet::GetMyFleetResponse)},
  { 357, -1, sizeof(::outer::fleet::GetFleetCrewListRequest)},
  { 367, -1, sizeof(::outer::fleet::GetFleetCrewListResponse)},
  { 375, -1, sizeof(::outer::fleet::SetFleetAssemblyPointRequest)},
  { 385, -1, sizeof(::outer::fleet::SetFleetAssemblyPointResponse)},
  { 392, -1, sizeof(::outer::fleet::AssemblyPointChangedSignal)},
  { 399, -1, sizeof(::outer::fleet::GetFleetAssemblyPointRequest)},
  { 408, -1, sizeof(::outer::fleet::GetFleetAssemblyPointResponse)},
  { 416, -1, sizeof(::outer::fleet::GetFleetInfoRequest)},
  { 425, -1, sizeof(::outer::fleet::GetFleetInfoResponse)},
  { 433, -1, sizeof(::outer::fleet::GetFleetInvitationListRequest)},
  { 443, -1, sizeof(::outer::fleet::GetFleetInvitationListResponse)},
  { 452, -1, sizeof(::outer::fleet::SetFleetNameRequest)},
  { 462, -1, sizeof(::outer::fleet::SetFleetNameResponse)},
  { 469, -1, sizeof(::outer::fleet::FleetNameChangedSignal)},
  { 477, -1, sizeof(::outer::fleet::SetFleetDescRequest)},
  { 487, -1, sizeof(::outer::fleet::SetFleetDescResponse)},
  { 494, -1, sizeof(::outer::fleet::FleetDescChangedSignal)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetCrew_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_InvitationNoticeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SendFleetMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SendFleetMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_CreateFleetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_CreateFleetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetCreatedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_InvitingToFleetSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AcceptFleetInvitationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AcceptFleetInvitationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AcceptFleetInvitationSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_InviteeJoinFleetSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_DeclineFleetInvitationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_DeclineFleetInvitationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetInvitationDeclinedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AddFleetMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AddFleetMemberResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_JoinFleetSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_KickFleetMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_KickFleetMemberResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberKickedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberExitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberExitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberExitedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_DestroyFleetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_DestroyFleetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetDestroyedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_HandoverCaptainRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_HandoverCaptainResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_CaptainChangedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberChangeNickRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberChangeNickResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetMemberNickChangedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_ChangeLocationAuthorizationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_ChangeLocationAuthorizationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_ChangeLocationAuthorizationSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetMyFleetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetMyFleetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetCrewListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetCrewListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetAssemblyPointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetAssemblyPointResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_AssemblyPointChangedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetAssemblyPointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetAssemblyPointResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetInvitationListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_GetFleetInvitationListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetNameRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetNameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetNameChangedSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetDescRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_SetFleetDescResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::fleet::_FleetDescChangedSignal_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/fleet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 58);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021outer/fleet.proto\022\013outer.fleet\032\020common"
      "/msg.proto\032\024common/errcode.proto\032\030common"
      "/enumeration.proto\"\252\001\n\tFleetInfo\022\021\n\tflee"
      "t_uri\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\022\n\nfleet_nam"
      "e\030\003 \001(\t\022\022\n\ncrew_count\030\004 \001(\r\022\017\n\007created\030\005"
      " \001(\004\022\014\n\004desc\030\006 \001(\t\0223\n\016assembly_point\030\007 \001"
      "(\0132\033.common.msg.LocationMessage\"\314\001\n\tFlee"
      "tCrew\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022"
      "\014\n\004nick\030\003 \001(\t\022\022\n\nis_captain\030\004 \001(\010\022\017\n\007cre"
      "ated\030\005 \001(\004\022+\n\006enable\030\006 \001(\0162\033.common.enum"
      "eration.EEnable\022\020\n\010modified\030\007 \001(\004\022\030\n\020is_"
      "authorization\030\010 \001(\010\022\021\n\tfleet_uri\030\t \001(\t\"\321"
      "\002\n\024InvitationNoticeInfo\022\021\n\tfleet_uri\030\001 \001"
      "(\t\022\016\n\006appkey\030\002 \001(\t\022\030\n\020invitee_username\030\003"
      " \001(\t\022\024\n\014invitee_nick\030\004 \001(\t\022\030\n\020inviter_us"
      "ername\030\005 \001(\t\022\024\n\014inviter_nick\030\006 \001(\t\022;\n\006st"
      "atus\030\007 \001(\0162+.common.enumeration.EInvitat"
      "ionNoticeStatus\022\017\n\007created\030\010 \001(\004\022\020\n\010modi"
      "fied\030\t \001(\004\022\022\n\nfleet_name\030\n \001(\t\022+\n\006enable"
      "\030\013 \001(\0162\033.common.enumeration.EEnable\022\025\n\ri"
      "nvite_reason\030\014 \001(\t\"\232\001\n\013FleetSignal\0221\n\013si"
      "gnal_type\030\001 \001(\0162\034.outer.fleet.FleetSigna"
      "lType\022\014\n\004data\030\002 \001(\014\022*\n\nFleet_info\030\003 \001(\0132"
      "\026.outer.fleet.FleetInfo\022\014\n\004guid\030\004 \001(\004\022\020\n"
      "\010receiver\030\005 \003(\t\"\343\001\n\014FleetMessage\022\025\n\rfrom"
      "_username\030\001 \001(\t\022\021\n\tfrom_nick\030\002 \001(\t\022\016\n\006ap"
      "pkey\030\003 \001(\t\022\021\n\tfleet_uri\030\004 \001(\t\0225\n\020msg_con"
      "tent_type\030\005 \001(\0162\033.common.msg.EMsgContent"
      "Type\022\014\n\004data\030\006 \001(\014\022\014\n\004guid\030\007 \001(\004\022\016\n\006msg_"
      "id\030\010 \001(\t\022\022\n\nfleet_name\030\t \001(\t\022\017\n\007is_read\030"
      "\n \001(\010\"\250\001\n\027SendFleetMessageRequest\022\025\n\rfro"
      "m_username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\021\n\tflee"
      "t_uri\030\003 \001(\t\0225\n\020msg_content_type\030\004 \001(\0162\033."
      "common.msg.EMsgContentType\022\014\n\004data\030\005 \001(\014"
      "\022\016\n\006msg_id\030\006 \001(\t\"a\n\030SendFleetMessageResp"
      "onse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EErro"
      "rCode\022\014\n\004guid\030\002 \001(\004\022\016\n\006msg_id\030\003 \001(\t\"\254\001\n\022"
      "CreateFleetRequest\022\022\n\nfleet_name\030\001 \001(\t\022\016"
      "\n\006appkey\030\002 \001(\t\022\030\n\020captain_username\030\003 \001(\t"
      "\022\030\n\020invitee_username\030\004 \003(\t\022\027\n\017member_use"
      "rname\030\005 \003(\t\022\025\n\rinvite_reason\030\006 \001(\t\022\016\n\006ms"
      "g_id\030\007 \001(\t\"z\n\023CreateFleetResponse\022\'\n\003ret"
      "\030\001 \001(\0162\032.common.errcode.EErrorCode\022*\n\nFl"
      "eet_info\030\002 \001(\0132\026.outer.fleet.FleetInfo\022\016"
      "\n\006msg_id\030\003 \001(\t\"e\n\022FleetCreatedSignal\022\'\n\007"
      "captain\030\001 \001(\0132\026.outer.fleet.FleetCrew\022&\n"
      "\006member\030\002 \003(\0132\026.outer.fleet.FleetCrew\"g\n"
      "\025InvitingToFleetSignal\022)\n\tfrom_crew\030\001 \001("
      "\0132\026.outer.fleet.FleetCrew\022\016\n\006reason\030\002 \001("
      "\t\022\023\n\013invite_time\030\003 \001(\004\"\177\n\034AcceptFleetInv"
      "itationRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\020\n\010use"
      "rname\030\002 \001(\t\022\032\n\022accept_to_username\030\003 \001(\t\022"
      "\016\n\006appkey\030\004 \001(\t\022\016\n\006msg_id\030\005 \001(\t\"X\n\035Accep"
      "tFleetInvitationResponse\022\'\n\003ret\030\001 \001(\0162\032."
      "common.errcode.EErrorCode\022\016\n\006msg_id\030\002 \001("
      "\t\"J\n\033AcceptFleetInvitationSignal\022+\n\013acce"
      "pt_from\030\001 \001(\0132\026.outer.fleet.FleetCrew\"j\n"
      "\026InviteeJoinFleetSignal\022\'\n\007invitee\030\002 \001(\013"
      "2\026.outer.fleet.FleetCrew\022\'\n\007inviter\030\003 \001("
      "\0132\026.outer.fleet.FleetCrew\"\231\001\n\035DeclineFle"
      "etInvitationRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\020"
      "\n\010username\030\002 \001(\t\022\033\n\023decline_to_username\030"
      "\003 \001(\t\022\016\n\006appkey\030\004 \001(\t\022\026\n\016decline_reason\030"
      "\005 \001(\t\022\016\n\006msg_id\030\006 \001(\t\"Y\n\036DeclineFleetInv"
      "itationResponse\022\'\n\003ret\030\001 \001(\0162\032.common.er"
      "rcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"e\n\035Flee"
      "tInvitationDeclinedSignal\022,\n\014decline_fro"
      "m\030\002 \001(\0132\026.outer.fleet.FleetCrew\022\026\n\016decli"
      "ne_reason\030\003 \001(\t\"\251\001\n\025AddFleetMemberReques"
      "t\022\021\n\tfleet_uri\030\001 \001(\t\022\025\n\rfrom_username\030\002 "
      "\001(\t\022\016\n\006appkey\030\003 \001(\t\022\027\n\017member_username\030\004"
      " \003(\t\022\016\n\006msg_id\030\005 \001(\t\022\026\n\016is_direct_pull\030\006"
      " \001(\010\022\025\n\rinvite_reason\030\007 \001(\t\"Q\n\026AddFleetM"
      "emberResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errc"
      "ode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"d\n\017JoinFl"
      "eetSignal\022*\n\nnew_member\030\001 \003(\0132\026.outer.fl"
      "eet.FleetCrew\022%\n\005actor\030\002 \001(\0132\026.outer.fle"
      "et.FleetCrew\"\177\n\026KickFleetMemberRequest\022\021"
      "\n\tfleet_uri\030\001 \001(\t\022\027\n\017kicker_username\030\002 \001"
      "(\t\022\016\n\006appkey\030\003 \001(\t\022\031\n\021bekicked_username\030"
      "\004 \003(\t\022\016\n\006msg_id\030\005 \001(\t\"R\n\027KickFleetMember"
      "Response\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.E"
      "ErrorCode\022\016\n\006msg_id\030\002 \001(\t\"l\n\027FleetMember"
      "KickedSignal\022)\n\tbe_kicked\030\001 \003(\0132\026.outer."
      "fleet.FleetCrew\022&\n\006kicker\030\002 \001(\0132\026.outer."
      "fleet.FleetCrew\"d\n\026FleetMemberExitReques"
      "t\022\021\n\tfleet_uri\030\001 \001(\t\022\027\n\017exiter_username\030"
      "\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\016\n\006msg_id\030\004 \001(\t\"R\n"
      "\027FleetMemberExitResponse\022\'\n\003ret\030\001 \001(\0162\032."
      "common.errcode.EErrorCode\022\016\n\006msg_id\030\002 \001("
      "\t\"A\n\027FleetMemberExitedSignal\022&\n\006exiter\030\001"
      " \001(\0132\026.outer.fleet.FleetCrew\"b\n\023DestroyF"
      "leetRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\030\n\020destro"
      "y_username\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\016\n\006msg_"
      "id\030\004 \001(\t\"O\n\024DestroyFleetResponse\022\'\n\003ret\030"
      "\001 \001(\0162\032.common.errcode.EErrorCode\022\016\n\006msg"
      "_id\030\002 \001(\t\"A\n\024FleetDestroyedSignal\022)\n\tdes"
      "troyer\030\001 \001(\0132\026.outer.fleet.FleetCrew\"\201\001\n"
      "\026HandoverCaptainRequest\022\021\n\tfleet_uri\030\001 \001"
      "(\t\022\026\n\016actor_username\030\002 \001(\t\022\034\n\024new_captai"
      "n_username\030\003 \001(\t\022\016\n\006appkey\030\004 \001(\t\022\016\n\006msg_"
      "id\030\005 \001(\t\"R\n\027HandoverCaptainResponse\022\'\n\003r"
      "et\030\001 \001(\0162\032.common.errcode.EErrorCode\022\016\n\006"
      "msg_id\030\002 \001(\t\"C\n\024CaptainChangedSignal\022+\n\013"
      "new_captain\030\001 \001(\0132\026.outer.fleet.FleetCre"
      "w\"w\n\034FleetMemberChangeNickRequest\022\021\n\tfle"
      "et_uri\030\001 \001(\t\022\026\n\016actor_username\030\002 \001(\t\022\016\n\006"
      "appkey\030\003 \001(\t\022\014\n\004nick\030\004 \001(\t\022\016\n\006msg_id\030\005 \001"
      "(\t\"X\n\035FleetMemberChangeNickResponse\022\'\n\003r"
      "et\030\001 \001(\0162\032.common.errcode.EErrorCode\022\016\n\006"
      "msg_id\030\002 \001(\t\"Q\n\034FleetMemberNickChangedSi"
      "gnal\0221\n\021nick_changed_crew\030\001 \001(\0132\026.outer."
      "fleet.FleetCrew\"\211\001\n\"ChangeLocationAuthor"
      "izationRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\026\n\016act"
      "or_username\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\030\n\020is_"
      "authorization\030\004 \001(\010\022\016\n\006msg_id\030\005 \001(\t\"^\n#C"
      "hangeLocationAuthorizationResponse\022\'\n\003re"
      "t\030\001 \001(\0162\032.common.errcode.EErrorCode\022\016\n\006m"
      "sg_id\030\002 \001(\t\"\202\001\n!ChangeLocationAuthorizat"
      "ionSignal\022C\n#location_authorization_chan"
      "ged_crew\030\001 \001(\0132\026.outer.fleet.FleetCrew\022\030"
      "\n\020is_authorization\030\002 \001(\010\"E\n\021GetMyFleetRe"
      "quest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022"
      "\016\n\006msg_id\030\003 \001(\t\"y\n\022GetMyFleetResponse\022\'\n"
      "\003ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022*"
      "\n\nfleet_info\030\002 \003(\0132\026.outer.fleet.FleetIn"
      "fo\022\016\n\006msg_id\030\003 \001(\t\"p\n\027GetFleetCrewListRe"
      "quest\022\021\n\tfleet_uri\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t"
      "\022\020\n\010username\030\003 \001(\t\022\020\n\010modified\030\004 \001(\004\022\016\n\006"
      "msg_id\030\005 \001(\t\"z\n\030GetFleetCrewListResponse"
      "\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EErrorCod"
      "e\022%\n\005crews\030\002 \003(\0132\026.outer.fleet.FleetCrew"
      "\022\016\n\006msg_id\030\003 \001(\t\"\237\001\n\034SetFleetAssemblyPoi"
      "ntRequest\022\027\n\017setter_username\030\001 \001(\t\022\016\n\006ap"
      "pkey\030\002 \001(\t\022\021\n\tfleet_uri\030\003 \001(\t\0223\n\016assembl"
      "y_point\030\004 \001(\0132\033.common.msg.LocationMessa"
      "ge\022\016\n\006msg_id\030\005 \001(\t\"X\n\035SetFleetAssemblyPo"
      "intResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcod"
      "e.EErrorCode\022\016\n\006msg_id\030\003 \001(\t\"y\n\032Assembly"
      "PointChangedSignal\0223\n\016assembly_point\030\001 \001"
      "(\0132\033.common.msg.LocationMessage\022&\n\006sette"
      "r\030\002 \001(\0132\026.outer.fleet.FleetCrew\"c\n\034GetFl"
      "eetAssemblyPointRequest\022\020\n\010username\030\001 \001("
      "\t\022\016\n\006appkey\030\002 \001(\t\022\021\n\tfleet_uri\030\003 \001(\t\022\016\n\006"
      "msg_id\030\004 \001(\t\"\215\001\n\035GetFleetAssemblyPointRe"
      "sponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EEr"
      "rorCode\0223\n\016assembly_point\030\002 \001(\0132\033.common"
      ".msg.LocationMessage\022\016\n\006msg_id\030\003 \001(\t\"Z\n\023"
      "GetFleetInfoRequest\022\020\n\010username\030\001 \001(\t\022\016\n"
      "\006appkey\030\002 \001(\t\022\021\n\tfleet_uri\030\003 \001(\t\022\016\n\006msg_"
      "id\030\004 \001(\t\"{\n\024GetFleetInfoResponse\022\'\n\003ret\030"
      "\001 \001(\0162\032.common.errcode.EErrorCode\022*\n\nfle"
      "et_info\030\002 \001(\0132\026.outer.fleet.FleetInfo\022\016\n"
      "\006msg_id\030\003 \001(\t\"x\n\035GetFleetInvitationListR"
      "equest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t"
      "\022\016\n\006msg_id\030\003 \001(\t\022\022\n\npage_index\030\004 \001(\r\022\021\n\t"
      "page_size\030\005 \001(\r\"\253\001\n\036GetFleetInvitationLi"
      "stResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode"
      ".EErrorCode\022A\n\026invitation_notice_info\030\002 "
      "\003(\0132!.outer.fleet.InvitationNoticeInfo\022\r"
      "\n\005total\030\003 \001(\004\022\016\n\006msg_id\030\004 \001(\t\"t\n\023SetFlee"
      "tNameRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\026\n\016actor"
      "_username\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\022\n\nfleet"
      "_name\030\004 \001(\t\022\016\n\006msg_id\030\005 \001(\t\"O\n\024SetFleetN"
      "ameResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcod"
      "e.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"c\n\026FleetNam"
      "eChangedSignal\022\022\n\nfleet_name\030\001 \001(\t\022%\n\005ac"
      "tor\030\002 \001(\0132\026.outer.fleet.FleetCrew\022\016\n\006app"
      "key\030\003 \001(\t\"n\n\023SetFleetDescRequest\022\021\n\tflee"
      "t_uri\030\001 \001(\t\022\026\n\016actor_username\030\002 \001(\t\022\016\n\006a"
      "ppkey\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\016\n\006msg_id\030\005 \001("
      "\t\"O\n\024SetFleetDescResponse\022\'\n\003ret\030\001 \001(\0162\032"
      ".common.errcode.EErrorCode\022\016\n\006msg_id\030\002 \001"
      "(\t\"]\n\026FleetDescChangedSignal\022\014\n\004desc\030\001 \001"
      "(\t\022%\n\005actor\030\002 \001(\0132\026.outer.fleet.FleetCre"
      "w\022\016\n\006appkey\030\003 \001(\t*\201\004\n\017FleetSignalType\022\032\n"
      "\026UNKNOWNFLEETSIGNALTYPE\020\000\022\023\n\017INVITING_SI"
      "GNAL\020\001\022\036\n\032INVITATION_ACCEPTED_SIGNAL\020\002\022\035"
      "\n\031INVITEE_JOIN_FLEET_SIGNAL\020\003\022\036\n\032INVITAT"
      "ION_DECLINED_SIGNAL\020\004\022\024\n\020BE_KICKED_SIGNA"
      "L\020\005\022\021\n\rEXITED_SIGNAL\020\006\022\032\n\026FLEET_DESTROYE"
      "D_SIGNAL\020\007\022\030\n\024OWNER_CHANGED_SIGNAL\020\010\022\027\n\023"
      "NICK_CHANGED_SIGNAL\020\t\022\034\n\030AGGREGATION_POI"
      "NT_CHANGE\020\n\022\033\n\027INVITING_SIGNAL_INVALID\020\013"
      "\022\030\n\024FLEET_CREATED_SIGNAL\020\014\022\031\n\025SHARE_LOCA"
      "TION_CHANGE\020\r\022!\n\035LOCATION_AUTHORIZATION_"
      "CHANGE\020\016\022\025\n\021JOIN_FLEET_SIGNAL\020\017\022\035\n\031FLEET"
      "_NAME_CHANGED_SIGNAL\020\020\022\035\n\031FLEET_DESC_CHA"
      "NGED_SIGNAL\020\0212\343\016\n\014FleetService\022_\n\020SendFl"
      "eetMessage\022$.outer.fleet.SendFleetMessag"
      "eRequest\032%.outer.fleet.SendFleetMessageR"
      "esponse\022P\n\013CreateFleet\022\037.outer.fleet.Cre"
      "ateFleetRequest\032 .outer.fleet.CreateFlee"
      "tResponse\022n\n\025AcceptFleetInvitation\022).out"
      "er.fleet.AcceptFleetInvitationRequest\032*."
      "outer.fleet.AcceptFleetInvitationRespons"
      "e\022q\n\026DeclineFleetInvitation\022*.outer.flee"
      "t.DeclineFleetInvitationRequest\032+.outer."
      "fleet.DeclineFleetInvitationResponse\022Y\n\016"
      "AddFleetMember\022\".outer.fleet.AddFleetMem"
      "berRequest\032#.outer.fleet.AddFleetMemberR"
      "esponse\022\\\n\017KickFleetMember\022#.outer.fleet"
      ".KickFleetMemberRequest\032$.outer.fleet.Ki"
      "ckFleetMemberResponse\022\\\n\017FleetMemberExit"
      "\022#.outer.fleet.FleetMemberExitRequest\032$."
      "outer.fleet.FleetMemberExitResponse\022S\n\014D"
      "estroyFleet\022 .outer.fleet.DestroyFleetRe"
      "quest\032!.outer.fleet.DestroyFleetResponse"
      "\022\\\n\017HandoverCaptain\022#.outer.fleet.Handov"
      "erCaptainRequest\032$.outer.fleet.HandoverC"
      "aptainResponse\022n\n\025FleetMemberChangeNick\022"
      ").outer.fleet.FleetMemberChangeNickReque"
      "st\032*.outer.fleet.FleetMemberChangeNickRe"
      "sponse\022\200\001\n\033ChangeLocationAuthorization\022/"
      ".outer.fleet.ChangeLocationAuthorization"
      "Request\0320.outer.fleet.ChangeLocationAuth"
      "orizationResponse\022M\n\nGetMyFleet\022\036.outer."
      "fleet.GetMyFleetRequest\032\037.outer.fleet.Ge"
      "tMyFleetResponse\022_\n\020GetFleetCrewList\022$.o"
      "uter.fleet.GetFleetCrewListRequest\032%.out"
      "er.fleet.GetFleetCrewListResponse\022n\n\025Set"
      "FleetAssemblyPoint\022).outer.fleet.SetFlee"
      "tAssemblyPointRequest\032*.outer.fleet.SetF"
      "leetAssemblyPointResponse\022n\n\025GetFleetAss"
      "emblyPoint\022).outer.fleet.GetFleetAssembl"
      "yPointRequest\032*.outer.fleet.GetFleetAsse"
      "mblyPointResponse\022S\n\014GetFleetInfo\022 .oute"
      "r.fleet.GetFleetInfoRequest\032!.outer.flee"
      "t.GetFleetInfoResponse\022q\n\026GetFleetInvita"
      "tionList\022*.outer.fleet.GetFleetInvitatio"
      "nListRequest\032+.outer.fleet.GetFleetInvit"
      "ationListResponse\022S\n\014SetFleetName\022 .oute"
      "r.fleet.SetFleetNameRequest\032!.outer.flee"
      "t.SetFleetNameResponse\022S\n\014SetFleetDesc\022 "
      ".outer.fleet.SetFleetDescRequest\032!.outer"
      ".fleet.SetFleetDescResponseB\'\n\034com.cmcc."
      "littlec.proto.outerB\005FleetP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 9476);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/fleet.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2fmsg_2eproto::AddDescriptors();
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2ffleet_2eproto
namespace outer {
namespace fleet {
const ::google::protobuf::EnumDescriptor* FleetSignalType_descriptor() {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2ffleet_2eproto::file_level_enum_descriptors[0];
}
bool FleetSignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FleetInfo::InitAsDefaultInstance() {
  ::outer::fleet::_FleetInfo_default_instance_._instance.get_mutable()->assembly_point_ = const_cast< ::common::msg::LocationMessage*>(
      ::common::msg::LocationMessage::internal_default_instance());
}
void FleetInfo::clear_assembly_point() {
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetInfo::kFleetUriFieldNumber;
const int FleetInfo::kAppkeyFieldNumber;
const int FleetInfo::kFleetNameFieldNumber;
const int FleetInfo::kCrewCountFieldNumber;
const int FleetInfo::kCreatedFieldNumber;
const int FleetInfo::kDescFieldNumber;
const int FleetInfo::kAssemblyPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetInfo::FleetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetInfo)
}
FleetInfo::FleetInfo(const FleetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_assembly_point()) {
    assembly_point_ = new ::common::msg::LocationMessage(*from.assembly_point_);
  } else {
    assembly_point_ = NULL;
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&crew_count_) -
    reinterpret_cast<char*>(&created_)) + sizeof(crew_count_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetInfo)
}

void FleetInfo::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&assembly_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crew_count_) -
      reinterpret_cast<char*>(&assembly_point_)) + sizeof(crew_count_));
  _cached_size_ = 0;
}

FleetInfo::~FleetInfo() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetInfo)
  SharedDtor();
}

void FleetInfo::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete assembly_point_;
}

void FleetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetInfo::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetInfo& FleetInfo::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInfo();
  return *internal_default_instance();
}

FleetInfo* FleetInfo::New(::google::protobuf::Arena* arena) const {
  FleetInfo* n = new FleetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crew_count_) -
      reinterpret_cast<char*>(&created_)) + sizeof(crew_count_));
  _internal_metadata_.Clear();
}

bool FleetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetInfo.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetInfo.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetInfo.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crew_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crew_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetInfo.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.LocationMessage assembly_point = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assembly_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetInfo)
  return false;
#undef DO_
}

void FleetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string fleet_name = 3;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fleet_name(), output);
  }

  // uint32 crew_count = 4;
  if (this->crew_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->crew_count(), output);
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->created(), output);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->desc(), output);
  }

  // .common.msg.LocationMessage assembly_point = 7;
  if (this->has_assembly_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->assembly_point_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetInfo)
}

::google::protobuf::uint8* FleetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string fleet_name = 3;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fleet_name(), target);
  }

  // uint32 crew_count = 4;
  if (this->crew_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->crew_count(), target);
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->created(), target);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInfo.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desc(), target);
  }

  // .common.msg.LocationMessage assembly_point = 7;
  if (this->has_assembly_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->assembly_point_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetInfo)
  return target;
}

size_t FleetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_name = 3;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // .common.msg.LocationMessage assembly_point = 7;
  if (this->has_assembly_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assembly_point_);
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // uint32 crew_count = 4;
  if (this->crew_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crew_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetInfo)
    MergeFrom(*source);
  }
}

void FleetInfo::MergeFrom(const FleetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_assembly_point()) {
    mutable_assembly_point()->::common::msg::LocationMessage::MergeFrom(from.assembly_point());
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.crew_count() != 0) {
    set_crew_count(from.crew_count());
  }
}

void FleetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetInfo::CopyFrom(const FleetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetInfo::IsInitialized() const {
  return true;
}

void FleetInfo::Swap(FleetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetInfo::InternalSwap(FleetInfo* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  appkey_.Swap(&other->appkey_);
  fleet_name_.Swap(&other->fleet_name_);
  desc_.Swap(&other->desc_);
  swap(assembly_point_, other->assembly_point_);
  swap(created_, other->created_);
  swap(crew_count_, other->crew_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetInfo::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetCrew::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetCrew::kUsernameFieldNumber;
const int FleetCrew::kAppkeyFieldNumber;
const int FleetCrew::kNickFieldNumber;
const int FleetCrew::kIsCaptainFieldNumber;
const int FleetCrew::kCreatedFieldNumber;
const int FleetCrew::kEnableFieldNumber;
const int FleetCrew::kModifiedFieldNumber;
const int FleetCrew::kIsAuthorizationFieldNumber;
const int FleetCrew::kFleetUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetCrew::FleetCrew()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetCrew)
}
FleetCrew::FleetCrew(const FleetCrew& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&modified_) -
    reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetCrew)
}

void FleetCrew::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_) -
      reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  _cached_size_ = 0;
}

FleetCrew::~FleetCrew() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetCrew)
  SharedDtor();
}

void FleetCrew::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetCrew::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetCrew::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetCrew& FleetCrew::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCrew();
  return *internal_default_instance();
}

FleetCrew* FleetCrew::New(::google::protobuf::Arena* arena) const {
  FleetCrew* n = new FleetCrew;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetCrew::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetCrew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_) -
      reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  _internal_metadata_.Clear();
}

bool FleetCrew::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetCrew)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetCrew.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetCrew.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetCrew.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_captain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_captain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EEnable enable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enable(static_cast< ::common::enumeration::EEnable >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_authorization = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_authorization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetCrew.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetCrew)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetCrew)
  return false;
#undef DO_
}

void FleetCrew::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetCrew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nick(), output);
  }

  // bool is_captain = 4;
  if (this->is_captain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_captain(), output);
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->created(), output);
  }

  // .common.enumeration.EEnable enable = 6;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->enable(), output);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->modified(), output);
  }

  // bool is_authorization = 8;
  if (this->is_authorization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_authorization(), output);
  }

  // string fleet_uri = 9;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->fleet_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetCrew)
}

::google::protobuf::uint8* FleetCrew::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetCrew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nick(), target);
  }

  // bool is_captain = 4;
  if (this->is_captain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_captain(), target);
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->created(), target);
  }

  // .common.enumeration.EEnable enable = 6;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->enable(), target);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->modified(), target);
  }

  // bool is_authorization = 8;
  if (this->is_authorization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_authorization(), target);
  }

  // string fleet_uri = 9;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetCrew.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->fleet_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetCrew)
  return target;
}

size_t FleetCrew::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetCrew)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // string fleet_uri = 9;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // uint64 created = 5;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // .common.enumeration.EEnable enable = 6;
  if (this->enable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enable());
  }

  // bool is_captain = 4;
  if (this->is_captain() != 0) {
    total_size += 1 + 1;
  }

  // bool is_authorization = 8;
  if (this->is_authorization() != 0) {
    total_size += 1 + 1;
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetCrew::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetCrew)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetCrew* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetCrew>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetCrew)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetCrew)
    MergeFrom(*source);
  }
}

void FleetCrew::MergeFrom(const FleetCrew& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetCrew)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
  if (from.is_captain() != 0) {
    set_is_captain(from.is_captain());
  }
  if (from.is_authorization() != 0) {
    set_is_authorization(from.is_authorization());
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
}

void FleetCrew::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetCrew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetCrew::CopyFrom(const FleetCrew& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetCrew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetCrew::IsInitialized() const {
  return true;
}

void FleetCrew::Swap(FleetCrew* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetCrew::InternalSwap(FleetCrew* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  nick_.Swap(&other->nick_);
  fleet_uri_.Swap(&other->fleet_uri_);
  swap(created_, other->created_);
  swap(enable_, other->enable_);
  swap(is_captain_, other->is_captain_);
  swap(is_authorization_, other->is_authorization_);
  swap(modified_, other->modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetCrew::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InvitationNoticeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvitationNoticeInfo::kFleetUriFieldNumber;
const int InvitationNoticeInfo::kAppkeyFieldNumber;
const int InvitationNoticeInfo::kInviteeUsernameFieldNumber;
const int InvitationNoticeInfo::kInviteeNickFieldNumber;
const int InvitationNoticeInfo::kInviterUsernameFieldNumber;
const int InvitationNoticeInfo::kInviterNickFieldNumber;
const int InvitationNoticeInfo::kStatusFieldNumber;
const int InvitationNoticeInfo::kCreatedFieldNumber;
const int InvitationNoticeInfo::kModifiedFieldNumber;
const int InvitationNoticeInfo::kFleetNameFieldNumber;
const int InvitationNoticeInfo::kEnableFieldNumber;
const int InvitationNoticeInfo::kInviteReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvitationNoticeInfo::InvitationNoticeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsInvitationNoticeInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.InvitationNoticeInfo)
}
InvitationNoticeInfo::InvitationNoticeInfo(const InvitationNoticeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  invitee_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invitee_username().size() > 0) {
    invitee_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitee_username_);
  }
  invitee_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invitee_nick().size() > 0) {
    invitee_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitee_nick_);
  }
  inviter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inviter_username().size() > 0) {
    inviter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_username_);
  }
  inviter_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inviter_nick().size() > 0) {
    inviter_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_nick_);
  }
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invite_reason().size() > 0) {
    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.InvitationNoticeInfo)
}

void InvitationNoticeInfo::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  _cached_size_ = 0;
}

InvitationNoticeInfo::~InvitationNoticeInfo() {
  // @@protoc_insertion_point(destructor:outer.fleet.InvitationNoticeInfo)
  SharedDtor();
}

void InvitationNoticeInfo::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InvitationNoticeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitationNoticeInfo::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvitationNoticeInfo& InvitationNoticeInfo::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsInvitationNoticeInfo();
  return *internal_default_instance();
}

InvitationNoticeInfo* InvitationNoticeInfo::New(::google::protobuf::Arena* arena) const {
  InvitationNoticeInfo* n = new InvitationNoticeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvitationNoticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.InvitationNoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitee_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool InvitationNoticeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.InvitationNoticeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invitee_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitee_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invitee_username().data(), static_cast<int>(this->invitee_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.invitee_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invitee_nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitee_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invitee_nick().data(), static_cast<int>(this->invitee_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.invitee_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inviter_username = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inviter_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inviter_username().data(), static_cast<int>(this->inviter_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.inviter_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inviter_nick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inviter_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inviter_nick().data(), static_cast<int>(this->inviter_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.inviter_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EInvitationNoticeStatus status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::common::enumeration::EInvitationNoticeStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EEnable enable = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enable(static_cast< ::common::enumeration::EEnable >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invite_reason = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitationNoticeInfo.invite_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.InvitationNoticeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.InvitationNoticeInfo)
  return false;
#undef DO_
}

void InvitationNoticeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.InvitationNoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string invitee_username = 3;
  if (this->invitee_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_username().data(), static_cast<int>(this->invitee_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invitee_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->invitee_username(), output);
  }

  // string invitee_nick = 4;
  if (this->invitee_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_nick().data(), static_cast<int>(this->invitee_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invitee_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->invitee_nick(), output);
  }

  // string inviter_username = 5;
  if (this->inviter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inviter_username().data(), static_cast<int>(this->inviter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.inviter_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->inviter_username(), output);
  }

  // string inviter_nick = 6;
  if (this->inviter_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inviter_nick().data(), static_cast<int>(this->inviter_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.inviter_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->inviter_nick(), output);
  }

  // .common.enumeration.EInvitationNoticeStatus status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // uint64 created = 8;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->created(), output);
  }

  // uint64 modified = 9;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->modified(), output);
  }

  // string fleet_name = 10;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fleet_name(), output);
  }

  // .common.enumeration.EEnable enable = 11;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->enable(), output);
  }

  // string invite_reason = 12;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invite_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->invite_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.InvitationNoticeInfo)
}

::google::protobuf::uint8* InvitationNoticeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.InvitationNoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string invitee_username = 3;
  if (this->invitee_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_username().data(), static_cast<int>(this->invitee_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invitee_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->invitee_username(), target);
  }

  // string invitee_nick = 4;
  if (this->invitee_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_nick().data(), static_cast<int>(this->invitee_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invitee_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->invitee_nick(), target);
  }

  // string inviter_username = 5;
  if (this->inviter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inviter_username().data(), static_cast<int>(this->inviter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.inviter_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->inviter_username(), target);
  }

  // string inviter_nick = 6;
  if (this->inviter_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inviter_nick().data(), static_cast<int>(this->inviter_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.inviter_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->inviter_nick(), target);
  }

  // .common.enumeration.EInvitationNoticeStatus status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // uint64 created = 8;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->created(), target);
  }

  // uint64 modified = 9;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->modified(), target);
  }

  // string fleet_name = 10;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fleet_name(), target);
  }

  // .common.enumeration.EEnable enable = 11;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->enable(), target);
  }

  // string invite_reason = 12;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitationNoticeInfo.invite_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->invite_reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.InvitationNoticeInfo)
  return target;
}

size_t InvitationNoticeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.InvitationNoticeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string invitee_username = 3;
  if (this->invitee_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitee_username());
  }

  // string invitee_nick = 4;
  if (this->invitee_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitee_nick());
  }

  // string inviter_username = 5;
  if (this->inviter_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inviter_username());
  }

  // string inviter_nick = 6;
  if (this->inviter_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inviter_nick());
  }

  // string fleet_name = 10;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // string invite_reason = 12;
  if (this->invite_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invite_reason());
  }

  // uint64 created = 8;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // uint64 modified = 9;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  // .common.enumeration.EInvitationNoticeStatus status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .common.enumeration.EEnable enable = 11;
  if (this->enable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvitationNoticeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.InvitationNoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InvitationNoticeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvitationNoticeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.InvitationNoticeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.InvitationNoticeInfo)
    MergeFrom(*source);
  }
}

void InvitationNoticeInfo::MergeFrom(const InvitationNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.InvitationNoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.invitee_username().size() > 0) {

    invitee_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitee_username_);
  }
  if (from.invitee_nick().size() > 0) {

    invitee_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitee_nick_);
  }
  if (from.inviter_username().size() > 0) {

    inviter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_username_);
  }
  if (from.inviter_nick().size() > 0) {

    inviter_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_nick_);
  }
  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.invite_reason().size() > 0) {

    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void InvitationNoticeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.InvitationNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvitationNoticeInfo::CopyFrom(const InvitationNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.InvitationNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitationNoticeInfo::IsInitialized() const {
  return true;
}

void InvitationNoticeInfo::Swap(InvitationNoticeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvitationNoticeInfo::InternalSwap(InvitationNoticeInfo* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  appkey_.Swap(&other->appkey_);
  invitee_username_.Swap(&other->invitee_username_);
  invitee_nick_.Swap(&other->invitee_nick_);
  inviter_username_.Swap(&other->inviter_username_);
  inviter_nick_.Swap(&other->inviter_nick_);
  fleet_name_.Swap(&other->fleet_name_);
  invite_reason_.Swap(&other->invite_reason_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  swap(status_, other->status_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvitationNoticeInfo::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetSignal_default_instance_._instance.get_mutable()->fleet_info_ = const_cast< ::outer::fleet::FleetInfo*>(
      ::outer::fleet::FleetInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetSignal::kSignalTypeFieldNumber;
const int FleetSignal::kDataFieldNumber;
const int FleetSignal::kFleetInfoFieldNumber;
const int FleetSignal::kGuidFieldNumber;
const int FleetSignal::kReceiverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetSignal::FleetSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetSignal)
}
FleetSignal::FleetSignal(const FleetSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      receiver_(from.receiver_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_fleet_info()) {
    fleet_info_ = new ::outer::fleet::FleetInfo(*from.fleet_info_);
  } else {
    fleet_info_ = NULL;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&signal_type_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(signal_type_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetSignal)
}

void FleetSignal::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fleet_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_type_) -
      reinterpret_cast<char*>(&fleet_info_)) + sizeof(signal_type_));
  _cached_size_ = 0;
}

FleetSignal::~FleetSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetSignal)
  SharedDtor();
}

void FleetSignal::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fleet_info_;
}

void FleetSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetSignal& FleetSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetSignal();
  return *internal_default_instance();
}

FleetSignal* FleetSignal::New(::google::protobuf::Arena* arena) const {
  FleetSignal* n = new FleetSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receiver_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fleet_info_ != NULL) {
    delete fleet_info_;
  }
  fleet_info_ = NULL;
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_type_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(signal_type_));
  _internal_metadata_.Clear();
}

bool FleetSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetSignalType signal_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_signal_type(static_cast< ::outer::fleet::FleetSignalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetInfo Fleet_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fleet_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string receiver = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_receiver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receiver(this->receiver_size() - 1).data(),
            static_cast<int>(this->receiver(this->receiver_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetSignal.receiver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetSignal)
  return false;
#undef DO_
}

void FleetSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetSignalType signal_type = 1;
  if (this->signal_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->signal_type(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // .outer.fleet.FleetInfo Fleet_info = 3;
  if (this->has_fleet_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fleet_info_, output);
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guid(), output);
  }

  // repeated string receiver = 5;
  for (int i = 0, n = this->receiver_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver(i).data(), static_cast<int>(this->receiver(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetSignal.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->receiver(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetSignal)
}

::google::protobuf::uint8* FleetSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetSignalType signal_type = 1;
  if (this->signal_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->signal_type(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // .outer.fleet.FleetInfo Fleet_info = 3;
  if (this->has_fleet_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->fleet_info_, deterministic, target);
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guid(), target);
  }

  // repeated string receiver = 5;
  for (int i = 0, n = this->receiver_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receiver(i).data(), static_cast<int>(this->receiver(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetSignal.receiver");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->receiver(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetSignal)
  return target;
}

size_t FleetSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string receiver = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->receiver_size());
  for (int i = 0, n = this->receiver_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->receiver(i));
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .outer.fleet.FleetInfo Fleet_info = 3;
  if (this->has_fleet_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fleet_info_);
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .outer.fleet.FleetSignalType signal_type = 1;
  if (this->signal_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->signal_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetSignal)
    MergeFrom(*source);
  }
}

void FleetSignal::MergeFrom(const FleetSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  receiver_.MergeFrom(from.receiver_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_fleet_info()) {
    mutable_fleet_info()->::outer::fleet::FleetInfo::MergeFrom(from.fleet_info());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.signal_type() != 0) {
    set_signal_type(from.signal_type());
  }
}

void FleetSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetSignal::CopyFrom(const FleetSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetSignal::IsInitialized() const {
  return true;
}

void FleetSignal::Swap(FleetSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetSignal::InternalSwap(FleetSignal* other) {
  using std::swap;
  receiver_.InternalSwap(&other->receiver_);
  data_.Swap(&other->data_);
  swap(fleet_info_, other->fleet_info_);
  swap(guid_, other->guid_);
  swap(signal_type_, other->signal_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMessage::kFromUsernameFieldNumber;
const int FleetMessage::kFromNickFieldNumber;
const int FleetMessage::kAppkeyFieldNumber;
const int FleetMessage::kFleetUriFieldNumber;
const int FleetMessage::kMsgContentTypeFieldNumber;
const int FleetMessage::kDataFieldNumber;
const int FleetMessage::kGuidFieldNumber;
const int FleetMessage::kMsgIdFieldNumber;
const int FleetMessage::kFleetNameFieldNumber;
const int FleetMessage::kIsReadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMessage::FleetMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMessage)
}
FleetMessage::FleetMessage(const FleetMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_read_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMessage)
}

void FleetMessage::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_read_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  _cached_size_ = 0;
}

FleetMessage::~FleetMessage() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMessage)
  SharedDtor();
}

void FleetMessage::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMessage::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMessage& FleetMessage::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMessage();
  return *internal_default_instance();
}

FleetMessage* FleetMessage::New(::google::protobuf::Arena* arena) const {
  FleetMessage* n = new FleetMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_read_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  _internal_metadata_.Clear();
}

bool FleetMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.EMsgContentType msg_content_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_content_type(static_cast< ::common::msg::EMsgContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMessage.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_read = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMessage)
  return false;
#undef DO_
}

void FleetMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_nick(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string fleet_uri = 4;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fleet_uri(), output);
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->msg_content_type(), output);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->guid(), output);
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->msg_id(), output);
  }

  // string fleet_name = 9;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->fleet_name(), output);
  }

  // bool is_read = 10;
  if (this->is_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_read(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMessage)
}

::google::protobuf::uint8* FleetMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_nick(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string fleet_uri = 4;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fleet_uri(), target);
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->msg_content_type(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->guid(), target);
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->msg_id(), target);
  }

  // string fleet_name = 9;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMessage.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->fleet_name(), target);
  }

  // bool is_read = 10;
  if (this->is_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_read(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMessage)
  return target;
}

size_t FleetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_uri = 4;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string fleet_name = 9;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_content_type());
  }

  // bool is_read = 10;
  if (this->is_read() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMessage)
    MergeFrom(*source);
  }
}

void FleetMessage::MergeFrom(const FleetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.msg_content_type() != 0) {
    set_msg_content_type(from.msg_content_type());
  }
  if (from.is_read() != 0) {
    set_is_read(from.is_read());
  }
}

void FleetMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMessage::CopyFrom(const FleetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMessage::IsInitialized() const {
  return true;
}

void FleetMessage::Swap(FleetMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMessage::InternalSwap(FleetMessage* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  from_nick_.Swap(&other->from_nick_);
  appkey_.Swap(&other->appkey_);
  fleet_uri_.Swap(&other->fleet_uri_);
  data_.Swap(&other->data_);
  msg_id_.Swap(&other->msg_id_);
  fleet_name_.Swap(&other->fleet_name_);
  swap(guid_, other->guid_);
  swap(msg_content_type_, other->msg_content_type_);
  swap(is_read_, other->is_read_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMessage::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFleetMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFleetMessageRequest::kFromUsernameFieldNumber;
const int SendFleetMessageRequest::kAppkeyFieldNumber;
const int SendFleetMessageRequest::kFleetUriFieldNumber;
const int SendFleetMessageRequest::kMsgContentTypeFieldNumber;
const int SendFleetMessageRequest::kDataFieldNumber;
const int SendFleetMessageRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFleetMessageRequest::SendFleetMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSendFleetMessageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SendFleetMessageRequest)
}
SendFleetMessageRequest::SendFleetMessageRequest(const SendFleetMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  msg_content_type_ = from.msg_content_type_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SendFleetMessageRequest)
}

void SendFleetMessageRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_content_type_ = 0;
  _cached_size_ = 0;
}

SendFleetMessageRequest::~SendFleetMessageRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.SendFleetMessageRequest)
  SharedDtor();
}

void SendFleetMessageRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFleetMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFleetMessageRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFleetMessageRequest& SendFleetMessageRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSendFleetMessageRequest();
  return *internal_default_instance();
}

SendFleetMessageRequest* SendFleetMessageRequest::New(::google::protobuf::Arena* arena) const {
  SendFleetMessageRequest* n = new SendFleetMessageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendFleetMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SendFleetMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_content_type_ = 0;
  _internal_metadata_.Clear();
}

bool SendFleetMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SendFleetMessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SendFleetMessageRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SendFleetMessageRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SendFleetMessageRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.EMsgContentType msg_content_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_content_type(static_cast< ::common::msg::EMsgContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SendFleetMessageRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SendFleetMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SendFleetMessageRequest)
  return false;
#undef DO_
}

void SendFleetMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SendFleetMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fleet_uri(), output);
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->msg_content_type(), output);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SendFleetMessageRequest)
}

::google::protobuf::uint8* SendFleetMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SendFleetMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fleet_uri(), target);
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->msg_content_type(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SendFleetMessageRequest)
  return target;
}

size_t SendFleetMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SendFleetMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_content_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFleetMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SendFleetMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFleetMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFleetMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SendFleetMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SendFleetMessageRequest)
    MergeFrom(*source);
  }
}

void SendFleetMessageRequest::MergeFrom(const SendFleetMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SendFleetMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.msg_content_type() != 0) {
    set_msg_content_type(from.msg_content_type());
  }
}

void SendFleetMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SendFleetMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFleetMessageRequest::CopyFrom(const SendFleetMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SendFleetMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFleetMessageRequest::IsInitialized() const {
  return true;
}

void SendFleetMessageRequest::Swap(SendFleetMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFleetMessageRequest::InternalSwap(SendFleetMessageRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  fleet_uri_.Swap(&other->fleet_uri_);
  data_.Swap(&other->data_);
  msg_id_.Swap(&other->msg_id_);
  swap(msg_content_type_, other->msg_content_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFleetMessageRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFleetMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFleetMessageResponse::kRetFieldNumber;
const int SendFleetMessageResponse::kGuidFieldNumber;
const int SendFleetMessageResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFleetMessageResponse::SendFleetMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSendFleetMessageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SendFleetMessageResponse)
}
SendFleetMessageResponse::SendFleetMessageResponse(const SendFleetMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SendFleetMessageResponse)
}

void SendFleetMessageResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SendFleetMessageResponse::~SendFleetMessageResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.SendFleetMessageResponse)
  SharedDtor();
}

void SendFleetMessageResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFleetMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFleetMessageResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFleetMessageResponse& SendFleetMessageResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSendFleetMessageResponse();
  return *internal_default_instance();
}

SendFleetMessageResponse* SendFleetMessageResponse::New(::google::protobuf::Arena* arena) const {
  SendFleetMessageResponse* n = new SendFleetMessageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendFleetMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SendFleetMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool SendFleetMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SendFleetMessageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SendFleetMessageResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SendFleetMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SendFleetMessageResponse)
  return false;
#undef DO_
}

void SendFleetMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SendFleetMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SendFleetMessageResponse)
}

::google::protobuf::uint8* SendFleetMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SendFleetMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SendFleetMessageResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SendFleetMessageResponse)
  return target;
}

size_t SendFleetMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SendFleetMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFleetMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SendFleetMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFleetMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFleetMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SendFleetMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SendFleetMessageResponse)
    MergeFrom(*source);
  }
}

void SendFleetMessageResponse::MergeFrom(const SendFleetMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SendFleetMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SendFleetMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SendFleetMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFleetMessageResponse::CopyFrom(const SendFleetMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SendFleetMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFleetMessageResponse::IsInitialized() const {
  return true;
}

void SendFleetMessageResponse::Swap(SendFleetMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFleetMessageResponse::InternalSwap(SendFleetMessageResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(guid_, other->guid_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFleetMessageResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFleetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFleetRequest::kFleetNameFieldNumber;
const int CreateFleetRequest::kAppkeyFieldNumber;
const int CreateFleetRequest::kCaptainUsernameFieldNumber;
const int CreateFleetRequest::kInviteeUsernameFieldNumber;
const int CreateFleetRequest::kMemberUsernameFieldNumber;
const int CreateFleetRequest::kInviteReasonFieldNumber;
const int CreateFleetRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFleetRequest::CreateFleetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsCreateFleetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.CreateFleetRequest)
}
CreateFleetRequest::CreateFleetRequest(const CreateFleetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      invitee_username_(from.invitee_username_),
      member_username_(from.member_username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  captain_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.captain_username().size() > 0) {
    captain_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captain_username_);
  }
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invite_reason().size() > 0) {
    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.CreateFleetRequest)
}

void CreateFleetRequest::SharedCtor() {
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captain_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateFleetRequest::~CreateFleetRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.CreateFleetRequest)
  SharedDtor();
}

void CreateFleetRequest::SharedDtor() {
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captain_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateFleetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateFleetRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFleetRequest& CreateFleetRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsCreateFleetRequest();
  return *internal_default_instance();
}

CreateFleetRequest* CreateFleetRequest::New(::google::protobuf::Arena* arena) const {
  CreateFleetRequest* n = new CreateFleetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateFleetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.CreateFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitee_username_.Clear();
  member_username_.Clear();
  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captain_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateFleetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.CreateFleetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string captain_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captain_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->captain_username().data(), static_cast<int>(this->captain_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.captain_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string invitee_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_invitee_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invitee_username(this->invitee_username_size() - 1).data(),
            static_cast<int>(this->invitee_username(this->invitee_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.invitee_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string member_username = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_member_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->member_username(this->member_username_size() - 1).data(),
            static_cast<int>(this->member_username(this->member_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.member_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invite_reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.invite_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.CreateFleetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.CreateFleetRequest)
  return false;
#undef DO_
}

void CreateFleetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.CreateFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_name(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string captain_username = 3;
  if (this->captain_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->captain_username().data(), static_cast<int>(this->captain_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.captain_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->captain_username(), output);
  }

  // repeated string invitee_username = 4;
  for (int i = 0, n = this->invitee_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_username(i).data(), static_cast<int>(this->invitee_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.invitee_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->invitee_username(i), output);
  }

  // repeated string member_username = 5;
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_username(i).data(), static_cast<int>(this->member_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.member_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->member_username(i), output);
  }

  // string invite_reason = 6;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.invite_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->invite_reason(), output);
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.CreateFleetRequest)
}

::google::protobuf::uint8* CreateFleetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.CreateFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_name(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string captain_username = 3;
  if (this->captain_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->captain_username().data(), static_cast<int>(this->captain_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.captain_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->captain_username(), target);
  }

  // repeated string invitee_username = 4;
  for (int i = 0, n = this->invitee_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitee_username(i).data(), static_cast<int>(this->invitee_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.invitee_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->invitee_username(i), target);
  }

  // repeated string member_username = 5;
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_username(i).data(), static_cast<int>(this->member_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.member_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->member_username(i), target);
  }

  // string invite_reason = 6;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.invite_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->invite_reason(), target);
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.CreateFleetRequest)
  return target;
}

size_t CreateFleetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.CreateFleetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string invitee_username = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->invitee_username_size());
  for (int i = 0, n = this->invitee_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->invitee_username(i));
  }

  // repeated string member_username = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->member_username_size());
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->member_username(i));
  }

  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string captain_username = 3;
  if (this->captain_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->captain_username());
  }

  // string invite_reason = 6;
  if (this->invite_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invite_reason());
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateFleetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.CreateFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFleetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFleetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.CreateFleetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.CreateFleetRequest)
    MergeFrom(*source);
  }
}

void CreateFleetRequest::MergeFrom(const CreateFleetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.CreateFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitee_username_.MergeFrom(from.invitee_username_);
  member_username_.MergeFrom(from.member_username_);
  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.captain_username().size() > 0) {

    captain_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captain_username_);
  }
  if (from.invite_reason().size() > 0) {

    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void CreateFleetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.CreateFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFleetRequest::CopyFrom(const CreateFleetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.CreateFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFleetRequest::IsInitialized() const {
  return true;
}

void CreateFleetRequest::Swap(CreateFleetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFleetRequest::InternalSwap(CreateFleetRequest* other) {
  using std::swap;
  invitee_username_.InternalSwap(&other->invitee_username_);
  member_username_.InternalSwap(&other->member_username_);
  fleet_name_.Swap(&other->fleet_name_);
  appkey_.Swap(&other->appkey_);
  captain_username_.Swap(&other->captain_username_);
  invite_reason_.Swap(&other->invite_reason_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateFleetRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateFleetResponse::InitAsDefaultInstance() {
  ::outer::fleet::_CreateFleetResponse_default_instance_._instance.get_mutable()->fleet_info_ = const_cast< ::outer::fleet::FleetInfo*>(
      ::outer::fleet::FleetInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateFleetResponse::kRetFieldNumber;
const int CreateFleetResponse::kFleetInfoFieldNumber;
const int CreateFleetResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateFleetResponse::CreateFleetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsCreateFleetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.CreateFleetResponse)
}
CreateFleetResponse::CreateFleetResponse(const CreateFleetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_fleet_info()) {
    fleet_info_ = new ::outer::fleet::FleetInfo(*from.fleet_info_);
  } else {
    fleet_info_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.CreateFleetResponse)
}

void CreateFleetResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fleet_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&fleet_info_)) + sizeof(ret_));
  _cached_size_ = 0;
}

CreateFleetResponse::~CreateFleetResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.CreateFleetResponse)
  SharedDtor();
}

void CreateFleetResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fleet_info_;
}

void CreateFleetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateFleetResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateFleetResponse& CreateFleetResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsCreateFleetResponse();
  return *internal_default_instance();
}

CreateFleetResponse* CreateFleetResponse::New(::google::protobuf::Arena* arena) const {
  CreateFleetResponse* n = new CreateFleetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateFleetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.CreateFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fleet_info_ != NULL) {
    delete fleet_info_;
  }
  fleet_info_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool CreateFleetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.CreateFleetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetInfo Fleet_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fleet_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.CreateFleetResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.CreateFleetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.CreateFleetResponse)
  return false;
#undef DO_
}

void CreateFleetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.CreateFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .outer.fleet.FleetInfo Fleet_info = 2;
  if (this->has_fleet_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fleet_info_, output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.CreateFleetResponse)
}

::google::protobuf::uint8* CreateFleetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.CreateFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .outer.fleet.FleetInfo Fleet_info = 2;
  if (this->has_fleet_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->fleet_info_, deterministic, target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.CreateFleetResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.CreateFleetResponse)
  return target;
}

size_t CreateFleetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.CreateFleetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .outer.fleet.FleetInfo Fleet_info = 2;
  if (this->has_fleet_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fleet_info_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateFleetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.CreateFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateFleetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateFleetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.CreateFleetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.CreateFleetResponse)
    MergeFrom(*source);
  }
}

void CreateFleetResponse::MergeFrom(const CreateFleetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.CreateFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_fleet_info()) {
    mutable_fleet_info()->::outer::fleet::FleetInfo::MergeFrom(from.fleet_info());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CreateFleetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.CreateFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateFleetResponse::CopyFrom(const CreateFleetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.CreateFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFleetResponse::IsInitialized() const {
  return true;
}

void CreateFleetResponse::Swap(CreateFleetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateFleetResponse::InternalSwap(CreateFleetResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(fleet_info_, other->fleet_info_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateFleetResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetCreatedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetCreatedSignal_default_instance_._instance.get_mutable()->captain_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetCreatedSignal::kCaptainFieldNumber;
const int FleetCreatedSignal::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetCreatedSignal::FleetCreatedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCreatedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetCreatedSignal)
}
FleetCreatedSignal::FleetCreatedSignal(const FleetCreatedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_(from.member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_captain()) {
    captain_ = new ::outer::fleet::FleetCrew(*from.captain_);
  } else {
    captain_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetCreatedSignal)
}

void FleetCreatedSignal::SharedCtor() {
  captain_ = NULL;
  _cached_size_ = 0;
}

FleetCreatedSignal::~FleetCreatedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetCreatedSignal)
  SharedDtor();
}

void FleetCreatedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete captain_;
}

void FleetCreatedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetCreatedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetCreatedSignal& FleetCreatedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetCreatedSignal();
  return *internal_default_instance();
}

FleetCreatedSignal* FleetCreatedSignal::New(::google::protobuf::Arena* arena) const {
  FleetCreatedSignal* n = new FleetCreatedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetCreatedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetCreatedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_.Clear();
  if (GetArenaNoVirtual() == NULL && captain_ != NULL) {
    delete captain_;
  }
  captain_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetCreatedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetCreatedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew captain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_captain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.fleet.FleetCrew member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetCreatedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetCreatedSignal)
  return false;
#undef DO_
}

void FleetCreatedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetCreatedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew captain = 1;
  if (this->has_captain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->captain_, output);
  }

  // repeated .outer.fleet.FleetCrew member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->member(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetCreatedSignal)
}

::google::protobuf::uint8* FleetCreatedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetCreatedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew captain = 1;
  if (this->has_captain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->captain_, deterministic, target);
  }

  // repeated .outer.fleet.FleetCrew member = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->member(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetCreatedSignal)
  return target;
}

size_t FleetCreatedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetCreatedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.FleetCrew member = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  // .outer.fleet.FleetCrew captain = 1;
  if (this->has_captain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->captain_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetCreatedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetCreatedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetCreatedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetCreatedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetCreatedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetCreatedSignal)
    MergeFrom(*source);
  }
}

void FleetCreatedSignal::MergeFrom(const FleetCreatedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetCreatedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_.MergeFrom(from.member_);
  if (from.has_captain()) {
    mutable_captain()->::outer::fleet::FleetCrew::MergeFrom(from.captain());
  }
}

void FleetCreatedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetCreatedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetCreatedSignal::CopyFrom(const FleetCreatedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetCreatedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetCreatedSignal::IsInitialized() const {
  return true;
}

void FleetCreatedSignal::Swap(FleetCreatedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetCreatedSignal::InternalSwap(FleetCreatedSignal* other) {
  using std::swap;
  member_.InternalSwap(&other->member_);
  swap(captain_, other->captain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetCreatedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InvitingToFleetSignal::InitAsDefaultInstance() {
  ::outer::fleet::_InvitingToFleetSignal_default_instance_._instance.get_mutable()->from_crew_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvitingToFleetSignal::kFromCrewFieldNumber;
const int InvitingToFleetSignal::kReasonFieldNumber;
const int InvitingToFleetSignal::kInviteTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvitingToFleetSignal::InvitingToFleetSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsInvitingToFleetSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.InvitingToFleetSignal)
}
InvitingToFleetSignal::InvitingToFleetSignal(const InvitingToFleetSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_from_crew()) {
    from_crew_ = new ::outer::fleet::FleetCrew(*from.from_crew_);
  } else {
    from_crew_ = NULL;
  }
  invite_time_ = from.invite_time_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.InvitingToFleetSignal)
}

void InvitingToFleetSignal::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_crew_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invite_time_) -
      reinterpret_cast<char*>(&from_crew_)) + sizeof(invite_time_));
  _cached_size_ = 0;
}

InvitingToFleetSignal::~InvitingToFleetSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.InvitingToFleetSignal)
  SharedDtor();
}

void InvitingToFleetSignal::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete from_crew_;
}

void InvitingToFleetSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvitingToFleetSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvitingToFleetSignal& InvitingToFleetSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsInvitingToFleetSignal();
  return *internal_default_instance();
}

InvitingToFleetSignal* InvitingToFleetSignal::New(::google::protobuf::Arena* arena) const {
  InvitingToFleetSignal* n = new InvitingToFleetSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvitingToFleetSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.InvitingToFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && from_crew_ != NULL) {
    delete from_crew_;
  }
  from_crew_ = NULL;
  invite_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool InvitingToFleetSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.InvitingToFleetSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew from_crew = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from_crew()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.InvitingToFleetSignal.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 invite_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invite_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.InvitingToFleetSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.InvitingToFleetSignal)
  return false;
#undef DO_
}

void InvitingToFleetSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.InvitingToFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew from_crew = 1;
  if (this->has_from_crew()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->from_crew_, output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitingToFleetSignal.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // uint64 invite_time = 3;
  if (this->invite_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->invite_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.InvitingToFleetSignal)
}

::google::protobuf::uint8* InvitingToFleetSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.InvitingToFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew from_crew = 1;
  if (this->has_from_crew()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->from_crew_, deterministic, target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.InvitingToFleetSignal.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // uint64 invite_time = 3;
  if (this->invite_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->invite_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.InvitingToFleetSignal)
  return target;
}

size_t InvitingToFleetSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.InvitingToFleetSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .outer.fleet.FleetCrew from_crew = 1;
  if (this->has_from_crew()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->from_crew_);
  }

  // uint64 invite_time = 3;
  if (this->invite_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invite_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvitingToFleetSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.InvitingToFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const InvitingToFleetSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvitingToFleetSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.InvitingToFleetSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.InvitingToFleetSignal)
    MergeFrom(*source);
  }
}

void InvitingToFleetSignal::MergeFrom(const InvitingToFleetSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.InvitingToFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_from_crew()) {
    mutable_from_crew()->::outer::fleet::FleetCrew::MergeFrom(from.from_crew());
  }
  if (from.invite_time() != 0) {
    set_invite_time(from.invite_time());
  }
}

void InvitingToFleetSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.InvitingToFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvitingToFleetSignal::CopyFrom(const InvitingToFleetSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.InvitingToFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvitingToFleetSignal::IsInitialized() const {
  return true;
}

void InvitingToFleetSignal::Swap(InvitingToFleetSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvitingToFleetSignal::InternalSwap(InvitingToFleetSignal* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(from_crew_, other->from_crew_);
  swap(invite_time_, other->invite_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvitingToFleetSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AcceptFleetInvitationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptFleetInvitationRequest::kFleetUriFieldNumber;
const int AcceptFleetInvitationRequest::kUsernameFieldNumber;
const int AcceptFleetInvitationRequest::kAcceptToUsernameFieldNumber;
const int AcceptFleetInvitationRequest::kAppkeyFieldNumber;
const int AcceptFleetInvitationRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptFleetInvitationRequest::AcceptFleetInvitationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AcceptFleetInvitationRequest)
}
AcceptFleetInvitationRequest::AcceptFleetInvitationRequest(const AcceptFleetInvitationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  accept_to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accept_to_username().size() > 0) {
    accept_to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accept_to_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AcceptFleetInvitationRequest)
}

void AcceptFleetInvitationRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accept_to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AcceptFleetInvitationRequest::~AcceptFleetInvitationRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.AcceptFleetInvitationRequest)
  SharedDtor();
}

void AcceptFleetInvitationRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accept_to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceptFleetInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptFleetInvitationRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceptFleetInvitationRequest& AcceptFleetInvitationRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationRequest();
  return *internal_default_instance();
}

AcceptFleetInvitationRequest* AcceptFleetInvitationRequest::New(::google::protobuf::Arena* arena) const {
  AcceptFleetInvitationRequest* n = new AcceptFleetInvitationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptFleetInvitationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AcceptFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accept_to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AcceptFleetInvitationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AcceptFleetInvitationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string accept_to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accept_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accept_to_username().data(), static_cast<int>(this->accept_to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationRequest.accept_to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AcceptFleetInvitationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AcceptFleetInvitationRequest)
  return false;
#undef DO_
}

void AcceptFleetInvitationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AcceptFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string accept_to_username = 3;
  if (this->accept_to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accept_to_username().data(), static_cast<int>(this->accept_to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.accept_to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->accept_to_username(), output);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appkey(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AcceptFleetInvitationRequest)
}

::google::protobuf::uint8* AcceptFleetInvitationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AcceptFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string accept_to_username = 3;
  if (this->accept_to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accept_to_username().data(), static_cast<int>(this->accept_to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.accept_to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->accept_to_username(), target);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appkey(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AcceptFleetInvitationRequest)
  return target;
}

size_t AcceptFleetInvitationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AcceptFleetInvitationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string accept_to_username = 3;
  if (this->accept_to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accept_to_username());
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptFleetInvitationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AcceptFleetInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptFleetInvitationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptFleetInvitationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AcceptFleetInvitationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AcceptFleetInvitationRequest)
    MergeFrom(*source);
  }
}

void AcceptFleetInvitationRequest::MergeFrom(const AcceptFleetInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AcceptFleetInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.accept_to_username().size() > 0) {

    accept_to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accept_to_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void AcceptFleetInvitationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AcceptFleetInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptFleetInvitationRequest::CopyFrom(const AcceptFleetInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AcceptFleetInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptFleetInvitationRequest::IsInitialized() const {
  return true;
}

void AcceptFleetInvitationRequest::Swap(AcceptFleetInvitationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptFleetInvitationRequest::InternalSwap(AcceptFleetInvitationRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  username_.Swap(&other->username_);
  accept_to_username_.Swap(&other->accept_to_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptFleetInvitationRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AcceptFleetInvitationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptFleetInvitationResponse::kRetFieldNumber;
const int AcceptFleetInvitationResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptFleetInvitationResponse::AcceptFleetInvitationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AcceptFleetInvitationResponse)
}
AcceptFleetInvitationResponse::AcceptFleetInvitationResponse(const AcceptFleetInvitationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AcceptFleetInvitationResponse)
}

void AcceptFleetInvitationResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

AcceptFleetInvitationResponse::~AcceptFleetInvitationResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.AcceptFleetInvitationResponse)
  SharedDtor();
}

void AcceptFleetInvitationResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceptFleetInvitationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptFleetInvitationResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceptFleetInvitationResponse& AcceptFleetInvitationResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationResponse();
  return *internal_default_instance();
}

AcceptFleetInvitationResponse* AcceptFleetInvitationResponse::New(::google::protobuf::Arena* arena) const {
  AcceptFleetInvitationResponse* n = new AcceptFleetInvitationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptFleetInvitationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AcceptFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool AcceptFleetInvitationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AcceptFleetInvitationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AcceptFleetInvitationResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AcceptFleetInvitationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AcceptFleetInvitationResponse)
  return false;
#undef DO_
}

void AcceptFleetInvitationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AcceptFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AcceptFleetInvitationResponse)
}

::google::protobuf::uint8* AcceptFleetInvitationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AcceptFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AcceptFleetInvitationResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AcceptFleetInvitationResponse)
  return target;
}

size_t AcceptFleetInvitationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AcceptFleetInvitationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptFleetInvitationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AcceptFleetInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptFleetInvitationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptFleetInvitationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AcceptFleetInvitationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AcceptFleetInvitationResponse)
    MergeFrom(*source);
  }
}

void AcceptFleetInvitationResponse::MergeFrom(const AcceptFleetInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AcceptFleetInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void AcceptFleetInvitationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AcceptFleetInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptFleetInvitationResponse::CopyFrom(const AcceptFleetInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AcceptFleetInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptFleetInvitationResponse::IsInitialized() const {
  return true;
}

void AcceptFleetInvitationResponse::Swap(AcceptFleetInvitationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptFleetInvitationResponse::InternalSwap(AcceptFleetInvitationResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptFleetInvitationResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AcceptFleetInvitationSignal::InitAsDefaultInstance() {
  ::outer::fleet::_AcceptFleetInvitationSignal_default_instance_._instance.get_mutable()->accept_from_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptFleetInvitationSignal::kAcceptFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptFleetInvitationSignal::AcceptFleetInvitationSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AcceptFleetInvitationSignal)
}
AcceptFleetInvitationSignal::AcceptFleetInvitationSignal(const AcceptFleetInvitationSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_accept_from()) {
    accept_from_ = new ::outer::fleet::FleetCrew(*from.accept_from_);
  } else {
    accept_from_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AcceptFleetInvitationSignal)
}

void AcceptFleetInvitationSignal::SharedCtor() {
  accept_from_ = NULL;
  _cached_size_ = 0;
}

AcceptFleetInvitationSignal::~AcceptFleetInvitationSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.AcceptFleetInvitationSignal)
  SharedDtor();
}

void AcceptFleetInvitationSignal::SharedDtor() {
  if (this != internal_default_instance()) delete accept_from_;
}

void AcceptFleetInvitationSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptFleetInvitationSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AcceptFleetInvitationSignal& AcceptFleetInvitationSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAcceptFleetInvitationSignal();
  return *internal_default_instance();
}

AcceptFleetInvitationSignal* AcceptFleetInvitationSignal::New(::google::protobuf::Arena* arena) const {
  AcceptFleetInvitationSignal* n = new AcceptFleetInvitationSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptFleetInvitationSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AcceptFleetInvitationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && accept_from_ != NULL) {
    delete accept_from_;
  }
  accept_from_ = NULL;
  _internal_metadata_.Clear();
}

bool AcceptFleetInvitationSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AcceptFleetInvitationSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew accept_from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accept_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AcceptFleetInvitationSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AcceptFleetInvitationSignal)
  return false;
#undef DO_
}

void AcceptFleetInvitationSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AcceptFleetInvitationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew accept_from = 1;
  if (this->has_accept_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->accept_from_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AcceptFleetInvitationSignal)
}

::google::protobuf::uint8* AcceptFleetInvitationSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AcceptFleetInvitationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew accept_from = 1;
  if (this->has_accept_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->accept_from_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AcceptFleetInvitationSignal)
  return target;
}

size_t AcceptFleetInvitationSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AcceptFleetInvitationSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew accept_from = 1;
  if (this->has_accept_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->accept_from_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptFleetInvitationSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AcceptFleetInvitationSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptFleetInvitationSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptFleetInvitationSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AcceptFleetInvitationSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AcceptFleetInvitationSignal)
    MergeFrom(*source);
  }
}

void AcceptFleetInvitationSignal::MergeFrom(const AcceptFleetInvitationSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AcceptFleetInvitationSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_accept_from()) {
    mutable_accept_from()->::outer::fleet::FleetCrew::MergeFrom(from.accept_from());
  }
}

void AcceptFleetInvitationSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AcceptFleetInvitationSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptFleetInvitationSignal::CopyFrom(const AcceptFleetInvitationSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AcceptFleetInvitationSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptFleetInvitationSignal::IsInitialized() const {
  return true;
}

void AcceptFleetInvitationSignal::Swap(AcceptFleetInvitationSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptFleetInvitationSignal::InternalSwap(AcceptFleetInvitationSignal* other) {
  using std::swap;
  swap(accept_from_, other->accept_from_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptFleetInvitationSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InviteeJoinFleetSignal::InitAsDefaultInstance() {
  ::outer::fleet::_InviteeJoinFleetSignal_default_instance_._instance.get_mutable()->invitee_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
  ::outer::fleet::_InviteeJoinFleetSignal_default_instance_._instance.get_mutable()->inviter_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteeJoinFleetSignal::kInviteeFieldNumber;
const int InviteeJoinFleetSignal::kInviterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteeJoinFleetSignal::InviteeJoinFleetSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsInviteeJoinFleetSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.InviteeJoinFleetSignal)
}
InviteeJoinFleetSignal::InviteeJoinFleetSignal(const InviteeJoinFleetSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_invitee()) {
    invitee_ = new ::outer::fleet::FleetCrew(*from.invitee_);
  } else {
    invitee_ = NULL;
  }
  if (from.has_inviter()) {
    inviter_ = new ::outer::fleet::FleetCrew(*from.inviter_);
  } else {
    inviter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.InviteeJoinFleetSignal)
}

void InviteeJoinFleetSignal::SharedCtor() {
  ::memset(&invitee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inviter_) -
      reinterpret_cast<char*>(&invitee_)) + sizeof(inviter_));
  _cached_size_ = 0;
}

InviteeJoinFleetSignal::~InviteeJoinFleetSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.InviteeJoinFleetSignal)
  SharedDtor();
}

void InviteeJoinFleetSignal::SharedDtor() {
  if (this != internal_default_instance()) delete invitee_;
  if (this != internal_default_instance()) delete inviter_;
}

void InviteeJoinFleetSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteeJoinFleetSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviteeJoinFleetSignal& InviteeJoinFleetSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsInviteeJoinFleetSignal();
  return *internal_default_instance();
}

InviteeJoinFleetSignal* InviteeJoinFleetSignal::New(::google::protobuf::Arena* arena) const {
  InviteeJoinFleetSignal* n = new InviteeJoinFleetSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteeJoinFleetSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.InviteeJoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && invitee_ != NULL) {
    delete invitee_;
  }
  invitee_ = NULL;
  if (GetArenaNoVirtual() == NULL && inviter_ != NULL) {
    delete inviter_;
  }
  inviter_ = NULL;
  _internal_metadata_.Clear();
}

bool InviteeJoinFleetSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.InviteeJoinFleetSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew invitee = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invitee()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew inviter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inviter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.InviteeJoinFleetSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.InviteeJoinFleetSignal)
  return false;
#undef DO_
}

void InviteeJoinFleetSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.InviteeJoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew invitee = 2;
  if (this->has_invitee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->invitee_, output);
  }

  // .outer.fleet.FleetCrew inviter = 3;
  if (this->has_inviter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->inviter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.InviteeJoinFleetSignal)
}

::google::protobuf::uint8* InviteeJoinFleetSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.InviteeJoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew invitee = 2;
  if (this->has_invitee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->invitee_, deterministic, target);
  }

  // .outer.fleet.FleetCrew inviter = 3;
  if (this->has_inviter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->inviter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.InviteeJoinFleetSignal)
  return target;
}

size_t InviteeJoinFleetSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.InviteeJoinFleetSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew invitee = 2;
  if (this->has_invitee()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->invitee_);
  }

  // .outer.fleet.FleetCrew inviter = 3;
  if (this->has_inviter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inviter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteeJoinFleetSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.InviteeJoinFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteeJoinFleetSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteeJoinFleetSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.InviteeJoinFleetSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.InviteeJoinFleetSignal)
    MergeFrom(*source);
  }
}

void InviteeJoinFleetSignal::MergeFrom(const InviteeJoinFleetSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.InviteeJoinFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_invitee()) {
    mutable_invitee()->::outer::fleet::FleetCrew::MergeFrom(from.invitee());
  }
  if (from.has_inviter()) {
    mutable_inviter()->::outer::fleet::FleetCrew::MergeFrom(from.inviter());
  }
}

void InviteeJoinFleetSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.InviteeJoinFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteeJoinFleetSignal::CopyFrom(const InviteeJoinFleetSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.InviteeJoinFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteeJoinFleetSignal::IsInitialized() const {
  return true;
}

void InviteeJoinFleetSignal::Swap(InviteeJoinFleetSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteeJoinFleetSignal::InternalSwap(InviteeJoinFleetSignal* other) {
  using std::swap;
  swap(invitee_, other->invitee_);
  swap(inviter_, other->inviter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteeJoinFleetSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeclineFleetInvitationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeclineFleetInvitationRequest::kFleetUriFieldNumber;
const int DeclineFleetInvitationRequest::kUsernameFieldNumber;
const int DeclineFleetInvitationRequest::kDeclineToUsernameFieldNumber;
const int DeclineFleetInvitationRequest::kAppkeyFieldNumber;
const int DeclineFleetInvitationRequest::kDeclineReasonFieldNumber;
const int DeclineFleetInvitationRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeclineFleetInvitationRequest::DeclineFleetInvitationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsDeclineFleetInvitationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.DeclineFleetInvitationRequest)
}
DeclineFleetInvitationRequest::DeclineFleetInvitationRequest(const DeclineFleetInvitationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  decline_to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.decline_to_username().size() > 0) {
    decline_to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_to_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  decline_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.decline_reason().size() > 0) {
    decline_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_reason_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.DeclineFleetInvitationRequest)
}

void DeclineFleetInvitationRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeclineFleetInvitationRequest::~DeclineFleetInvitationRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.DeclineFleetInvitationRequest)
  SharedDtor();
}

void DeclineFleetInvitationRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeclineFleetInvitationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclineFleetInvitationRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeclineFleetInvitationRequest& DeclineFleetInvitationRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsDeclineFleetInvitationRequest();
  return *internal_default_instance();
}

DeclineFleetInvitationRequest* DeclineFleetInvitationRequest::New(::google::protobuf::Arena* arena) const {
  DeclineFleetInvitationRequest* n = new DeclineFleetInvitationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeclineFleetInvitationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.DeclineFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeclineFleetInvitationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.DeclineFleetInvitationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string decline_to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decline_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->decline_to_username().data(), static_cast<int>(this->decline_to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.decline_to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string decline_reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decline_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.decline_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.DeclineFleetInvitationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.DeclineFleetInvitationRequest)
  return false;
#undef DO_
}

void DeclineFleetInvitationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.DeclineFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string decline_to_username = 3;
  if (this->decline_to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_to_username().data(), static_cast<int>(this->decline_to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.decline_to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->decline_to_username(), output);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appkey(), output);
  }

  // string decline_reason = 5;
  if (this->decline_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.decline_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->decline_reason(), output);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.DeclineFleetInvitationRequest)
}

::google::protobuf::uint8* DeclineFleetInvitationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.DeclineFleetInvitationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string decline_to_username = 3;
  if (this->decline_to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_to_username().data(), static_cast<int>(this->decline_to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.decline_to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->decline_to_username(), target);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appkey(), target);
  }

  // string decline_reason = 5;
  if (this->decline_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.decline_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->decline_reason(), target);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.DeclineFleetInvitationRequest)
  return target;
}

size_t DeclineFleetInvitationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.DeclineFleetInvitationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string decline_to_username = 3;
  if (this->decline_to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->decline_to_username());
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string decline_reason = 5;
  if (this->decline_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->decline_reason());
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeclineFleetInvitationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.DeclineFleetInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeclineFleetInvitationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeclineFleetInvitationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.DeclineFleetInvitationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.DeclineFleetInvitationRequest)
    MergeFrom(*source);
  }
}

void DeclineFleetInvitationRequest::MergeFrom(const DeclineFleetInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.DeclineFleetInvitationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.decline_to_username().size() > 0) {

    decline_to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_to_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.decline_reason().size() > 0) {

    decline_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_reason_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void DeclineFleetInvitationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.DeclineFleetInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeclineFleetInvitationRequest::CopyFrom(const DeclineFleetInvitationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.DeclineFleetInvitationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeclineFleetInvitationRequest::IsInitialized() const {
  return true;
}

void DeclineFleetInvitationRequest::Swap(DeclineFleetInvitationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeclineFleetInvitationRequest::InternalSwap(DeclineFleetInvitationRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  username_.Swap(&other->username_);
  decline_to_username_.Swap(&other->decline_to_username_);
  appkey_.Swap(&other->appkey_);
  decline_reason_.Swap(&other->decline_reason_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeclineFleetInvitationRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeclineFleetInvitationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeclineFleetInvitationResponse::kRetFieldNumber;
const int DeclineFleetInvitationResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeclineFleetInvitationResponse::DeclineFleetInvitationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsDeclineFleetInvitationResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.DeclineFleetInvitationResponse)
}
DeclineFleetInvitationResponse::DeclineFleetInvitationResponse(const DeclineFleetInvitationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.DeclineFleetInvitationResponse)
}

void DeclineFleetInvitationResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

DeclineFleetInvitationResponse::~DeclineFleetInvitationResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.DeclineFleetInvitationResponse)
  SharedDtor();
}

void DeclineFleetInvitationResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeclineFleetInvitationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeclineFleetInvitationResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeclineFleetInvitationResponse& DeclineFleetInvitationResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsDeclineFleetInvitationResponse();
  return *internal_default_instance();
}

DeclineFleetInvitationResponse* DeclineFleetInvitationResponse::New(::google::protobuf::Arena* arena) const {
  DeclineFleetInvitationResponse* n = new DeclineFleetInvitationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeclineFleetInvitationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.DeclineFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool DeclineFleetInvitationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.DeclineFleetInvitationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DeclineFleetInvitationResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.DeclineFleetInvitationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.DeclineFleetInvitationResponse)
  return false;
#undef DO_
}

void DeclineFleetInvitationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.DeclineFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.DeclineFleetInvitationResponse)
}

::google::protobuf::uint8* DeclineFleetInvitationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.DeclineFleetInvitationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DeclineFleetInvitationResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.DeclineFleetInvitationResponse)
  return target;
}

size_t DeclineFleetInvitationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.DeclineFleetInvitationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeclineFleetInvitationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.DeclineFleetInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeclineFleetInvitationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeclineFleetInvitationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.DeclineFleetInvitationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.DeclineFleetInvitationResponse)
    MergeFrom(*source);
  }
}

void DeclineFleetInvitationResponse::MergeFrom(const DeclineFleetInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.DeclineFleetInvitationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void DeclineFleetInvitationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.DeclineFleetInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeclineFleetInvitationResponse::CopyFrom(const DeclineFleetInvitationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.DeclineFleetInvitationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeclineFleetInvitationResponse::IsInitialized() const {
  return true;
}

void DeclineFleetInvitationResponse::Swap(DeclineFleetInvitationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeclineFleetInvitationResponse::InternalSwap(DeclineFleetInvitationResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeclineFleetInvitationResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetInvitationDeclinedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetInvitationDeclinedSignal_default_instance_._instance.get_mutable()->decline_from_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetInvitationDeclinedSignal::kDeclineFromFieldNumber;
const int FleetInvitationDeclinedSignal::kDeclineReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetInvitationDeclinedSignal::FleetInvitationDeclinedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInvitationDeclinedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetInvitationDeclinedSignal)
}
FleetInvitationDeclinedSignal::FleetInvitationDeclinedSignal(const FleetInvitationDeclinedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  decline_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.decline_reason().size() > 0) {
    decline_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_reason_);
  }
  if (from.has_decline_from()) {
    decline_from_ = new ::outer::fleet::FleetCrew(*from.decline_from_);
  } else {
    decline_from_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetInvitationDeclinedSignal)
}

void FleetInvitationDeclinedSignal::SharedCtor() {
  decline_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decline_from_ = NULL;
  _cached_size_ = 0;
}

FleetInvitationDeclinedSignal::~FleetInvitationDeclinedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetInvitationDeclinedSignal)
  SharedDtor();
}

void FleetInvitationDeclinedSignal::SharedDtor() {
  decline_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete decline_from_;
}

void FleetInvitationDeclinedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetInvitationDeclinedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetInvitationDeclinedSignal& FleetInvitationDeclinedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetInvitationDeclinedSignal();
  return *internal_default_instance();
}

FleetInvitationDeclinedSignal* FleetInvitationDeclinedSignal::New(::google::protobuf::Arena* arena) const {
  FleetInvitationDeclinedSignal* n = new FleetInvitationDeclinedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetInvitationDeclinedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetInvitationDeclinedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decline_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && decline_from_ != NULL) {
    delete decline_from_;
  }
  decline_from_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetInvitationDeclinedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetInvitationDeclinedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew decline_from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decline_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string decline_reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decline_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetInvitationDeclinedSignal.decline_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetInvitationDeclinedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetInvitationDeclinedSignal)
  return false;
#undef DO_
}

void FleetInvitationDeclinedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetInvitationDeclinedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew decline_from = 2;
  if (this->has_decline_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->decline_from_, output);
  }

  // string decline_reason = 3;
  if (this->decline_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInvitationDeclinedSignal.decline_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->decline_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetInvitationDeclinedSignal)
}

::google::protobuf::uint8* FleetInvitationDeclinedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetInvitationDeclinedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew decline_from = 2;
  if (this->has_decline_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->decline_from_, deterministic, target);
  }

  // string decline_reason = 3;
  if (this->decline_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decline_reason().data(), static_cast<int>(this->decline_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetInvitationDeclinedSignal.decline_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->decline_reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetInvitationDeclinedSignal)
  return target;
}

size_t FleetInvitationDeclinedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetInvitationDeclinedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string decline_reason = 3;
  if (this->decline_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->decline_reason());
  }

  // .outer.fleet.FleetCrew decline_from = 2;
  if (this->has_decline_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->decline_from_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetInvitationDeclinedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetInvitationDeclinedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetInvitationDeclinedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetInvitationDeclinedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetInvitationDeclinedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetInvitationDeclinedSignal)
    MergeFrom(*source);
  }
}

void FleetInvitationDeclinedSignal::MergeFrom(const FleetInvitationDeclinedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetInvitationDeclinedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.decline_reason().size() > 0) {

    decline_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decline_reason_);
  }
  if (from.has_decline_from()) {
    mutable_decline_from()->::outer::fleet::FleetCrew::MergeFrom(from.decline_from());
  }
}

void FleetInvitationDeclinedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetInvitationDeclinedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetInvitationDeclinedSignal::CopyFrom(const FleetInvitationDeclinedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetInvitationDeclinedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetInvitationDeclinedSignal::IsInitialized() const {
  return true;
}

void FleetInvitationDeclinedSignal::Swap(FleetInvitationDeclinedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetInvitationDeclinedSignal::InternalSwap(FleetInvitationDeclinedSignal* other) {
  using std::swap;
  decline_reason_.Swap(&other->decline_reason_);
  swap(decline_from_, other->decline_from_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetInvitationDeclinedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddFleetMemberRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFleetMemberRequest::kFleetUriFieldNumber;
const int AddFleetMemberRequest::kFromUsernameFieldNumber;
const int AddFleetMemberRequest::kAppkeyFieldNumber;
const int AddFleetMemberRequest::kMemberUsernameFieldNumber;
const int AddFleetMemberRequest::kMsgIdFieldNumber;
const int AddFleetMemberRequest::kIsDirectPullFieldNumber;
const int AddFleetMemberRequest::kInviteReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFleetMemberRequest::AddFleetMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAddFleetMemberRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AddFleetMemberRequest)
}
AddFleetMemberRequest::AddFleetMemberRequest(const AddFleetMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_username_(from.member_username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invite_reason().size() > 0) {
    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  is_direct_pull_ = from.is_direct_pull_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AddFleetMemberRequest)
}

void AddFleetMemberRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_direct_pull_ = false;
  _cached_size_ = 0;
}

AddFleetMemberRequest::~AddFleetMemberRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.AddFleetMemberRequest)
  SharedDtor();
}

void AddFleetMemberRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFleetMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFleetMemberRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFleetMemberRequest& AddFleetMemberRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAddFleetMemberRequest();
  return *internal_default_instance();
}

AddFleetMemberRequest* AddFleetMemberRequest::New(::google::protobuf::Arena* arena) const {
  AddFleetMemberRequest* n = new AddFleetMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFleetMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AddFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_username_.Clear();
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_direct_pull_ = false;
  _internal_metadata_.Clear();
}

bool AddFleetMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AddFleetMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string member_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_member_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->member_username(this->member_username_size() - 1).data(),
            static_cast<int>(this->member_username(this->member_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.member_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_direct_pull = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_direct_pull_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invite_reason = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberRequest.invite_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AddFleetMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AddFleetMemberRequest)
  return false;
#undef DO_
}

void AddFleetMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AddFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // repeated string member_username = 4;
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_username(i).data(), static_cast<int>(this->member_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.member_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->member_username(i), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // bool is_direct_pull = 6;
  if (this->is_direct_pull() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_direct_pull(), output);
  }

  // string invite_reason = 7;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.invite_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->invite_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AddFleetMemberRequest)
}

::google::protobuf::uint8* AddFleetMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AddFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // repeated string member_username = 4;
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_username(i).data(), static_cast<int>(this->member_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.member_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->member_username(i), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // bool is_direct_pull = 6;
  if (this->is_direct_pull() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_direct_pull(), target);
  }

  // string invite_reason = 7;
  if (this->invite_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invite_reason().data(), static_cast<int>(this->invite_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberRequest.invite_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->invite_reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AddFleetMemberRequest)
  return target;
}

size_t AddFleetMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AddFleetMemberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string member_username = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->member_username_size());
  for (int i = 0, n = this->member_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->member_username(i));
  }

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string invite_reason = 7;
  if (this->invite_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invite_reason());
  }

  // bool is_direct_pull = 6;
  if (this->is_direct_pull() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFleetMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AddFleetMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFleetMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFleetMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AddFleetMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AddFleetMemberRequest)
    MergeFrom(*source);
  }
}

void AddFleetMemberRequest::MergeFrom(const AddFleetMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AddFleetMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_username_.MergeFrom(from.member_username_);
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.invite_reason().size() > 0) {

    invite_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_reason_);
  }
  if (from.is_direct_pull() != 0) {
    set_is_direct_pull(from.is_direct_pull());
  }
}

void AddFleetMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AddFleetMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFleetMemberRequest::CopyFrom(const AddFleetMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AddFleetMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFleetMemberRequest::IsInitialized() const {
  return true;
}

void AddFleetMemberRequest::Swap(AddFleetMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFleetMemberRequest::InternalSwap(AddFleetMemberRequest* other) {
  using std::swap;
  member_username_.InternalSwap(&other->member_username_);
  fleet_uri_.Swap(&other->fleet_uri_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  invite_reason_.Swap(&other->invite_reason_);
  swap(is_direct_pull_, other->is_direct_pull_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFleetMemberRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddFleetMemberResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFleetMemberResponse::kRetFieldNumber;
const int AddFleetMemberResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFleetMemberResponse::AddFleetMemberResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAddFleetMemberResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AddFleetMemberResponse)
}
AddFleetMemberResponse::AddFleetMemberResponse(const AddFleetMemberResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AddFleetMemberResponse)
}

void AddFleetMemberResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

AddFleetMemberResponse::~AddFleetMemberResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.AddFleetMemberResponse)
  SharedDtor();
}

void AddFleetMemberResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFleetMemberResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFleetMemberResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFleetMemberResponse& AddFleetMemberResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAddFleetMemberResponse();
  return *internal_default_instance();
}

AddFleetMemberResponse* AddFleetMemberResponse::New(::google::protobuf::Arena* arena) const {
  AddFleetMemberResponse* n = new AddFleetMemberResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddFleetMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AddFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool AddFleetMemberResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AddFleetMemberResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.AddFleetMemberResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AddFleetMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AddFleetMemberResponse)
  return false;
#undef DO_
}

void AddFleetMemberResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AddFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AddFleetMemberResponse)
}

::google::protobuf::uint8* AddFleetMemberResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AddFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.AddFleetMemberResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AddFleetMemberResponse)
  return target;
}

size_t AddFleetMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AddFleetMemberResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFleetMemberResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AddFleetMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFleetMemberResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFleetMemberResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AddFleetMemberResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AddFleetMemberResponse)
    MergeFrom(*source);
  }
}

void AddFleetMemberResponse::MergeFrom(const AddFleetMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AddFleetMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void AddFleetMemberResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AddFleetMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFleetMemberResponse::CopyFrom(const AddFleetMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AddFleetMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFleetMemberResponse::IsInitialized() const {
  return true;
}

void AddFleetMemberResponse::Swap(AddFleetMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFleetMemberResponse::InternalSwap(AddFleetMemberResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFleetMemberResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinFleetSignal::InitAsDefaultInstance() {
  ::outer::fleet::_JoinFleetSignal_default_instance_._instance.get_mutable()->actor_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinFleetSignal::kNewMemberFieldNumber;
const int JoinFleetSignal::kActorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinFleetSignal::JoinFleetSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsJoinFleetSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.JoinFleetSignal)
}
JoinFleetSignal::JoinFleetSignal(const JoinFleetSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      new_member_(from.new_member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_actor()) {
    actor_ = new ::outer::fleet::FleetCrew(*from.actor_);
  } else {
    actor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.JoinFleetSignal)
}

void JoinFleetSignal::SharedCtor() {
  actor_ = NULL;
  _cached_size_ = 0;
}

JoinFleetSignal::~JoinFleetSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.JoinFleetSignal)
  SharedDtor();
}

void JoinFleetSignal::SharedDtor() {
  if (this != internal_default_instance()) delete actor_;
}

void JoinFleetSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinFleetSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinFleetSignal& JoinFleetSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsJoinFleetSignal();
  return *internal_default_instance();
}

JoinFleetSignal* JoinFleetSignal::New(::google::protobuf::Arena* arena) const {
  JoinFleetSignal* n = new JoinFleetSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinFleetSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.JoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_member_.Clear();
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  _internal_metadata_.Clear();
}

bool JoinFleetSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.JoinFleetSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .outer.fleet.FleetCrew new_member = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_new_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew actor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.JoinFleetSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.JoinFleetSignal)
  return false;
#undef DO_
}

void JoinFleetSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.JoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .outer.fleet.FleetCrew new_member = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->new_member(static_cast<int>(i)), output);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->actor_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.JoinFleetSignal)
}

::google::protobuf::uint8* JoinFleetSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.JoinFleetSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .outer.fleet.FleetCrew new_member = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->new_member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->new_member(static_cast<int>(i)), deterministic, target);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->actor_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.JoinFleetSignal)
  return target;
}

size_t JoinFleetSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.JoinFleetSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.FleetCrew new_member = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->new_member_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->new_member(static_cast<int>(i)));
    }
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinFleetSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.JoinFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinFleetSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinFleetSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.JoinFleetSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.JoinFleetSignal)
    MergeFrom(*source);
  }
}

void JoinFleetSignal::MergeFrom(const JoinFleetSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.JoinFleetSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  new_member_.MergeFrom(from.new_member_);
  if (from.has_actor()) {
    mutable_actor()->::outer::fleet::FleetCrew::MergeFrom(from.actor());
  }
}

void JoinFleetSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.JoinFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinFleetSignal::CopyFrom(const JoinFleetSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.JoinFleetSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinFleetSignal::IsInitialized() const {
  return true;
}

void JoinFleetSignal::Swap(JoinFleetSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinFleetSignal::InternalSwap(JoinFleetSignal* other) {
  using std::swap;
  new_member_.InternalSwap(&other->new_member_);
  swap(actor_, other->actor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinFleetSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickFleetMemberRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickFleetMemberRequest::kFleetUriFieldNumber;
const int KickFleetMemberRequest::kKickerUsernameFieldNumber;
const int KickFleetMemberRequest::kAppkeyFieldNumber;
const int KickFleetMemberRequest::kBekickedUsernameFieldNumber;
const int KickFleetMemberRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickFleetMemberRequest::KickFleetMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsKickFleetMemberRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.KickFleetMemberRequest)
}
KickFleetMemberRequest::KickFleetMemberRequest(const KickFleetMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bekicked_username_(from.bekicked_username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  kicker_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kicker_username().size() > 0) {
    kicker_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kicker_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.KickFleetMemberRequest)
}

void KickFleetMemberRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kicker_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KickFleetMemberRequest::~KickFleetMemberRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.KickFleetMemberRequest)
  SharedDtor();
}

void KickFleetMemberRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kicker_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KickFleetMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickFleetMemberRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickFleetMemberRequest& KickFleetMemberRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsKickFleetMemberRequest();
  return *internal_default_instance();
}

KickFleetMemberRequest* KickFleetMemberRequest::New(::google::protobuf::Arena* arena) const {
  KickFleetMemberRequest* n = new KickFleetMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickFleetMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.KickFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bekicked_username_.Clear();
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kicker_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KickFleetMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.KickFleetMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kicker_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kicker_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kicker_username().data(), static_cast<int>(this->kicker_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberRequest.kicker_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string bekicked_username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_bekicked_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bekicked_username(this->bekicked_username_size() - 1).data(),
            static_cast<int>(this->bekicked_username(this->bekicked_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberRequest.bekicked_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.KickFleetMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.KickFleetMemberRequest)
  return false;
#undef DO_
}

void KickFleetMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.KickFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string kicker_username = 2;
  if (this->kicker_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kicker_username().data(), static_cast<int>(this->kicker_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.kicker_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->kicker_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // repeated string bekicked_username = 4;
  for (int i = 0, n = this->bekicked_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bekicked_username(i).data(), static_cast<int>(this->bekicked_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.bekicked_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->bekicked_username(i), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.KickFleetMemberRequest)
}

::google::protobuf::uint8* KickFleetMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.KickFleetMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string kicker_username = 2;
  if (this->kicker_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kicker_username().data(), static_cast<int>(this->kicker_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.kicker_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->kicker_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // repeated string bekicked_username = 4;
  for (int i = 0, n = this->bekicked_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bekicked_username(i).data(), static_cast<int>(this->bekicked_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.bekicked_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->bekicked_username(i), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.KickFleetMemberRequest)
  return target;
}

size_t KickFleetMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.KickFleetMemberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string bekicked_username = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bekicked_username_size());
  for (int i = 0, n = this->bekicked_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->bekicked_username(i));
  }

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string kicker_username = 2;
  if (this->kicker_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kicker_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickFleetMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.KickFleetMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KickFleetMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickFleetMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.KickFleetMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.KickFleetMemberRequest)
    MergeFrom(*source);
  }
}

void KickFleetMemberRequest::MergeFrom(const KickFleetMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.KickFleetMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bekicked_username_.MergeFrom(from.bekicked_username_);
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.kicker_username().size() > 0) {

    kicker_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kicker_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void KickFleetMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.KickFleetMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickFleetMemberRequest::CopyFrom(const KickFleetMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.KickFleetMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickFleetMemberRequest::IsInitialized() const {
  return true;
}

void KickFleetMemberRequest::Swap(KickFleetMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickFleetMemberRequest::InternalSwap(KickFleetMemberRequest* other) {
  using std::swap;
  bekicked_username_.InternalSwap(&other->bekicked_username_);
  fleet_uri_.Swap(&other->fleet_uri_);
  kicker_username_.Swap(&other->kicker_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickFleetMemberRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickFleetMemberResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickFleetMemberResponse::kRetFieldNumber;
const int KickFleetMemberResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickFleetMemberResponse::KickFleetMemberResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsKickFleetMemberResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.KickFleetMemberResponse)
}
KickFleetMemberResponse::KickFleetMemberResponse(const KickFleetMemberResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.KickFleetMemberResponse)
}

void KickFleetMemberResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

KickFleetMemberResponse::~KickFleetMemberResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.KickFleetMemberResponse)
  SharedDtor();
}

void KickFleetMemberResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KickFleetMemberResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickFleetMemberResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickFleetMemberResponse& KickFleetMemberResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsKickFleetMemberResponse();
  return *internal_default_instance();
}

KickFleetMemberResponse* KickFleetMemberResponse::New(::google::protobuf::Arena* arena) const {
  KickFleetMemberResponse* n = new KickFleetMemberResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickFleetMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.KickFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool KickFleetMemberResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.KickFleetMemberResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.KickFleetMemberResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.KickFleetMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.KickFleetMemberResponse)
  return false;
#undef DO_
}

void KickFleetMemberResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.KickFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.KickFleetMemberResponse)
}

::google::protobuf::uint8* KickFleetMemberResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.KickFleetMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.KickFleetMemberResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.KickFleetMemberResponse)
  return target;
}

size_t KickFleetMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.KickFleetMemberResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickFleetMemberResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.KickFleetMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KickFleetMemberResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickFleetMemberResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.KickFleetMemberResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.KickFleetMemberResponse)
    MergeFrom(*source);
  }
}

void KickFleetMemberResponse::MergeFrom(const KickFleetMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.KickFleetMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void KickFleetMemberResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.KickFleetMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickFleetMemberResponse::CopyFrom(const KickFleetMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.KickFleetMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickFleetMemberResponse::IsInitialized() const {
  return true;
}

void KickFleetMemberResponse::Swap(KickFleetMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickFleetMemberResponse::InternalSwap(KickFleetMemberResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickFleetMemberResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberKickedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetMemberKickedSignal_default_instance_._instance.get_mutable()->kicker_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberKickedSignal::kBeKickedFieldNumber;
const int FleetMemberKickedSignal::kKickerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberKickedSignal::FleetMemberKickedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberKickedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberKickedSignal)
}
FleetMemberKickedSignal::FleetMemberKickedSignal(const FleetMemberKickedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      be_kicked_(from.be_kicked_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kicker()) {
    kicker_ = new ::outer::fleet::FleetCrew(*from.kicker_);
  } else {
    kicker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberKickedSignal)
}

void FleetMemberKickedSignal::SharedCtor() {
  kicker_ = NULL;
  _cached_size_ = 0;
}

FleetMemberKickedSignal::~FleetMemberKickedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberKickedSignal)
  SharedDtor();
}

void FleetMemberKickedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete kicker_;
}

void FleetMemberKickedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberKickedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberKickedSignal& FleetMemberKickedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberKickedSignal();
  return *internal_default_instance();
}

FleetMemberKickedSignal* FleetMemberKickedSignal::New(::google::protobuf::Arena* arena) const {
  FleetMemberKickedSignal* n = new FleetMemberKickedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberKickedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberKickedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  be_kicked_.Clear();
  if (GetArenaNoVirtual() == NULL && kicker_ != NULL) {
    delete kicker_;
  }
  kicker_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetMemberKickedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberKickedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .outer.fleet.FleetCrew be_kicked = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_be_kicked()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew kicker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kicker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberKickedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberKickedSignal)
  return false;
#undef DO_
}

void FleetMemberKickedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberKickedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .outer.fleet.FleetCrew be_kicked = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->be_kicked_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->be_kicked(static_cast<int>(i)), output);
  }

  // .outer.fleet.FleetCrew kicker = 2;
  if (this->has_kicker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->kicker_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberKickedSignal)
}

::google::protobuf::uint8* FleetMemberKickedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberKickedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .outer.fleet.FleetCrew be_kicked = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->be_kicked_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->be_kicked(static_cast<int>(i)), deterministic, target);
  }

  // .outer.fleet.FleetCrew kicker = 2;
  if (this->has_kicker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->kicker_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberKickedSignal)
  return target;
}

size_t FleetMemberKickedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberKickedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.FleetCrew be_kicked = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->be_kicked_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->be_kicked(static_cast<int>(i)));
    }
  }

  // .outer.fleet.FleetCrew kicker = 2;
  if (this->has_kicker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->kicker_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberKickedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberKickedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberKickedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberKickedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberKickedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberKickedSignal)
    MergeFrom(*source);
  }
}

void FleetMemberKickedSignal::MergeFrom(const FleetMemberKickedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberKickedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  be_kicked_.MergeFrom(from.be_kicked_);
  if (from.has_kicker()) {
    mutable_kicker()->::outer::fleet::FleetCrew::MergeFrom(from.kicker());
  }
}

void FleetMemberKickedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberKickedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberKickedSignal::CopyFrom(const FleetMemberKickedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberKickedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberKickedSignal::IsInitialized() const {
  return true;
}

void FleetMemberKickedSignal::Swap(FleetMemberKickedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberKickedSignal::InternalSwap(FleetMemberKickedSignal* other) {
  using std::swap;
  be_kicked_.InternalSwap(&other->be_kicked_);
  swap(kicker_, other->kicker_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberKickedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberExitRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberExitRequest::kFleetUriFieldNumber;
const int FleetMemberExitRequest::kExiterUsernameFieldNumber;
const int FleetMemberExitRequest::kAppkeyFieldNumber;
const int FleetMemberExitRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberExitRequest::FleetMemberExitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberExitRequest)
}
FleetMemberExitRequest::FleetMemberExitRequest(const FleetMemberExitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  exiter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exiter_username().size() > 0) {
    exiter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exiter_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberExitRequest)
}

void FleetMemberExitRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exiter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FleetMemberExitRequest::~FleetMemberExitRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberExitRequest)
  SharedDtor();
}

void FleetMemberExitRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exiter_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetMemberExitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberExitRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberExitRequest& FleetMemberExitRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitRequest();
  return *internal_default_instance();
}

FleetMemberExitRequest* FleetMemberExitRequest::New(::google::protobuf::Arena* arena) const {
  FleetMemberExitRequest* n = new FleetMemberExitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberExitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberExitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exiter_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FleetMemberExitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberExitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberExitRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exiter_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exiter_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exiter_username().data(), static_cast<int>(this->exiter_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberExitRequest.exiter_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberExitRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberExitRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberExitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberExitRequest)
  return false;
#undef DO_
}

void FleetMemberExitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberExitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string exiter_username = 2;
  if (this->exiter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exiter_username().data(), static_cast<int>(this->exiter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.exiter_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exiter_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberExitRequest)
}

::google::protobuf::uint8* FleetMemberExitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberExitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string exiter_username = 2;
  if (this->exiter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exiter_username().data(), static_cast<int>(this->exiter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.exiter_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exiter_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberExitRequest)
  return target;
}

size_t FleetMemberExitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberExitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string exiter_username = 2;
  if (this->exiter_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exiter_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberExitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberExitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberExitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberExitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberExitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberExitRequest)
    MergeFrom(*source);
  }
}

void FleetMemberExitRequest::MergeFrom(const FleetMemberExitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberExitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.exiter_username().size() > 0) {

    exiter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exiter_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void FleetMemberExitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberExitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberExitRequest::CopyFrom(const FleetMemberExitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberExitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberExitRequest::IsInitialized() const {
  return true;
}

void FleetMemberExitRequest::Swap(FleetMemberExitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberExitRequest::InternalSwap(FleetMemberExitRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  exiter_username_.Swap(&other->exiter_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberExitRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberExitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberExitResponse::kRetFieldNumber;
const int FleetMemberExitResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberExitResponse::FleetMemberExitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberExitResponse)
}
FleetMemberExitResponse::FleetMemberExitResponse(const FleetMemberExitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberExitResponse)
}

void FleetMemberExitResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

FleetMemberExitResponse::~FleetMemberExitResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberExitResponse)
  SharedDtor();
}

void FleetMemberExitResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetMemberExitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberExitResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberExitResponse& FleetMemberExitResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitResponse();
  return *internal_default_instance();
}

FleetMemberExitResponse* FleetMemberExitResponse::New(::google::protobuf::Arena* arena) const {
  FleetMemberExitResponse* n = new FleetMemberExitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberExitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberExitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool FleetMemberExitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberExitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberExitResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberExitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberExitResponse)
  return false;
#undef DO_
}

void FleetMemberExitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberExitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberExitResponse)
}

::google::protobuf::uint8* FleetMemberExitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberExitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberExitResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberExitResponse)
  return target;
}

size_t FleetMemberExitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberExitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberExitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberExitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberExitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberExitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberExitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberExitResponse)
    MergeFrom(*source);
  }
}

void FleetMemberExitResponse::MergeFrom(const FleetMemberExitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberExitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void FleetMemberExitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberExitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberExitResponse::CopyFrom(const FleetMemberExitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberExitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberExitResponse::IsInitialized() const {
  return true;
}

void FleetMemberExitResponse::Swap(FleetMemberExitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberExitResponse::InternalSwap(FleetMemberExitResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberExitResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberExitedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetMemberExitedSignal_default_instance_._instance.get_mutable()->exiter_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberExitedSignal::kExiterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberExitedSignal::FleetMemberExitedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberExitedSignal)
}
FleetMemberExitedSignal::FleetMemberExitedSignal(const FleetMemberExitedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exiter()) {
    exiter_ = new ::outer::fleet::FleetCrew(*from.exiter_);
  } else {
    exiter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberExitedSignal)
}

void FleetMemberExitedSignal::SharedCtor() {
  exiter_ = NULL;
  _cached_size_ = 0;
}

FleetMemberExitedSignal::~FleetMemberExitedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberExitedSignal)
  SharedDtor();
}

void FleetMemberExitedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete exiter_;
}

void FleetMemberExitedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberExitedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberExitedSignal& FleetMemberExitedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberExitedSignal();
  return *internal_default_instance();
}

FleetMemberExitedSignal* FleetMemberExitedSignal::New(::google::protobuf::Arena* arena) const {
  FleetMemberExitedSignal* n = new FleetMemberExitedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberExitedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberExitedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && exiter_ != NULL) {
    delete exiter_;
  }
  exiter_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetMemberExitedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberExitedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew exiter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exiter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberExitedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberExitedSignal)
  return false;
#undef DO_
}

void FleetMemberExitedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberExitedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew exiter = 1;
  if (this->has_exiter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->exiter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberExitedSignal)
}

::google::protobuf::uint8* FleetMemberExitedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberExitedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew exiter = 1;
  if (this->has_exiter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->exiter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberExitedSignal)
  return target;
}

size_t FleetMemberExitedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberExitedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew exiter = 1;
  if (this->has_exiter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->exiter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberExitedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberExitedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberExitedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberExitedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberExitedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberExitedSignal)
    MergeFrom(*source);
  }
}

void FleetMemberExitedSignal::MergeFrom(const FleetMemberExitedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberExitedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exiter()) {
    mutable_exiter()->::outer::fleet::FleetCrew::MergeFrom(from.exiter());
  }
}

void FleetMemberExitedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberExitedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberExitedSignal::CopyFrom(const FleetMemberExitedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberExitedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberExitedSignal::IsInitialized() const {
  return true;
}

void FleetMemberExitedSignal::Swap(FleetMemberExitedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberExitedSignal::InternalSwap(FleetMemberExitedSignal* other) {
  using std::swap;
  swap(exiter_, other->exiter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberExitedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DestroyFleetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyFleetRequest::kFleetUriFieldNumber;
const int DestroyFleetRequest::kDestroyUsernameFieldNumber;
const int DestroyFleetRequest::kAppkeyFieldNumber;
const int DestroyFleetRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyFleetRequest::DestroyFleetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsDestroyFleetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.DestroyFleetRequest)
}
DestroyFleetRequest::DestroyFleetRequest(const DestroyFleetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  destroy_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destroy_username().size() > 0) {
    destroy_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destroy_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.DestroyFleetRequest)
}

void DestroyFleetRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destroy_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DestroyFleetRequest::~DestroyFleetRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.DestroyFleetRequest)
  SharedDtor();
}

void DestroyFleetRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destroy_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DestroyFleetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyFleetRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroyFleetRequest& DestroyFleetRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsDestroyFleetRequest();
  return *internal_default_instance();
}

DestroyFleetRequest* DestroyFleetRequest::New(::google::protobuf::Arena* arena) const {
  DestroyFleetRequest* n = new DestroyFleetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyFleetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.DestroyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destroy_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DestroyFleetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.DestroyFleetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DestroyFleetRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destroy_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destroy_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destroy_username().data(), static_cast<int>(this->destroy_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DestroyFleetRequest.destroy_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DestroyFleetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DestroyFleetRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.DestroyFleetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.DestroyFleetRequest)
  return false;
#undef DO_
}

void DestroyFleetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.DestroyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string destroy_username = 2;
  if (this->destroy_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destroy_username().data(), static_cast<int>(this->destroy_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.destroy_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destroy_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.DestroyFleetRequest)
}

::google::protobuf::uint8* DestroyFleetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.DestroyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string destroy_username = 2;
  if (this->destroy_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destroy_username().data(), static_cast<int>(this->destroy_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.destroy_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destroy_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.DestroyFleetRequest)
  return target;
}

size_t DestroyFleetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.DestroyFleetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string destroy_username = 2;
  if (this->destroy_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destroy_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyFleetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.DestroyFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DestroyFleetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyFleetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.DestroyFleetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.DestroyFleetRequest)
    MergeFrom(*source);
  }
}

void DestroyFleetRequest::MergeFrom(const DestroyFleetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.DestroyFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.destroy_username().size() > 0) {

    destroy_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destroy_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void DestroyFleetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.DestroyFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyFleetRequest::CopyFrom(const DestroyFleetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.DestroyFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyFleetRequest::IsInitialized() const {
  return true;
}

void DestroyFleetRequest::Swap(DestroyFleetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyFleetRequest::InternalSwap(DestroyFleetRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  destroy_username_.Swap(&other->destroy_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyFleetRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DestroyFleetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyFleetResponse::kRetFieldNumber;
const int DestroyFleetResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyFleetResponse::DestroyFleetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsDestroyFleetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.DestroyFleetResponse)
}
DestroyFleetResponse::DestroyFleetResponse(const DestroyFleetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.DestroyFleetResponse)
}

void DestroyFleetResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

DestroyFleetResponse::~DestroyFleetResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.DestroyFleetResponse)
  SharedDtor();
}

void DestroyFleetResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DestroyFleetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyFleetResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroyFleetResponse& DestroyFleetResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsDestroyFleetResponse();
  return *internal_default_instance();
}

DestroyFleetResponse* DestroyFleetResponse::New(::google::protobuf::Arena* arena) const {
  DestroyFleetResponse* n = new DestroyFleetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyFleetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.DestroyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool DestroyFleetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.DestroyFleetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.DestroyFleetResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.DestroyFleetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.DestroyFleetResponse)
  return false;
#undef DO_
}

void DestroyFleetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.DestroyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.DestroyFleetResponse)
}

::google::protobuf::uint8* DestroyFleetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.DestroyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.DestroyFleetResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.DestroyFleetResponse)
  return target;
}

size_t DestroyFleetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.DestroyFleetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyFleetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.DestroyFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DestroyFleetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyFleetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.DestroyFleetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.DestroyFleetResponse)
    MergeFrom(*source);
  }
}

void DestroyFleetResponse::MergeFrom(const DestroyFleetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.DestroyFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void DestroyFleetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.DestroyFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyFleetResponse::CopyFrom(const DestroyFleetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.DestroyFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyFleetResponse::IsInitialized() const {
  return true;
}

void DestroyFleetResponse::Swap(DestroyFleetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyFleetResponse::InternalSwap(DestroyFleetResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyFleetResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetDestroyedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetDestroyedSignal_default_instance_._instance.get_mutable()->destroyer_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetDestroyedSignal::kDestroyerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetDestroyedSignal::FleetDestroyedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetDestroyedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetDestroyedSignal)
}
FleetDestroyedSignal::FleetDestroyedSignal(const FleetDestroyedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destroyer()) {
    destroyer_ = new ::outer::fleet::FleetCrew(*from.destroyer_);
  } else {
    destroyer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetDestroyedSignal)
}

void FleetDestroyedSignal::SharedCtor() {
  destroyer_ = NULL;
  _cached_size_ = 0;
}

FleetDestroyedSignal::~FleetDestroyedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetDestroyedSignal)
  SharedDtor();
}

void FleetDestroyedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete destroyer_;
}

void FleetDestroyedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetDestroyedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetDestroyedSignal& FleetDestroyedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetDestroyedSignal();
  return *internal_default_instance();
}

FleetDestroyedSignal* FleetDestroyedSignal::New(::google::protobuf::Arena* arena) const {
  FleetDestroyedSignal* n = new FleetDestroyedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetDestroyedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetDestroyedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destroyer_ != NULL) {
    delete destroyer_;
  }
  destroyer_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetDestroyedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetDestroyedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew destroyer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destroyer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetDestroyedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetDestroyedSignal)
  return false;
#undef DO_
}

void FleetDestroyedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetDestroyedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew destroyer = 1;
  if (this->has_destroyer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->destroyer_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetDestroyedSignal)
}

::google::protobuf::uint8* FleetDestroyedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetDestroyedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew destroyer = 1;
  if (this->has_destroyer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->destroyer_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetDestroyedSignal)
  return target;
}

size_t FleetDestroyedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetDestroyedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew destroyer = 1;
  if (this->has_destroyer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destroyer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetDestroyedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetDestroyedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetDestroyedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetDestroyedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetDestroyedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetDestroyedSignal)
    MergeFrom(*source);
  }
}

void FleetDestroyedSignal::MergeFrom(const FleetDestroyedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetDestroyedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destroyer()) {
    mutable_destroyer()->::outer::fleet::FleetCrew::MergeFrom(from.destroyer());
  }
}

void FleetDestroyedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetDestroyedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetDestroyedSignal::CopyFrom(const FleetDestroyedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetDestroyedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetDestroyedSignal::IsInitialized() const {
  return true;
}

void FleetDestroyedSignal::Swap(FleetDestroyedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetDestroyedSignal::InternalSwap(FleetDestroyedSignal* other) {
  using std::swap;
  swap(destroyer_, other->destroyer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetDestroyedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HandoverCaptainRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandoverCaptainRequest::kFleetUriFieldNumber;
const int HandoverCaptainRequest::kActorUsernameFieldNumber;
const int HandoverCaptainRequest::kNewCaptainUsernameFieldNumber;
const int HandoverCaptainRequest::kAppkeyFieldNumber;
const int HandoverCaptainRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandoverCaptainRequest::HandoverCaptainRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsHandoverCaptainRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.HandoverCaptainRequest)
}
HandoverCaptainRequest::HandoverCaptainRequest(const HandoverCaptainRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actor_username().size() > 0) {
    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  new_captain_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_captain_username().size() > 0) {
    new_captain_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_captain_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.HandoverCaptainRequest)
}

void HandoverCaptainRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_captain_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HandoverCaptainRequest::~HandoverCaptainRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.HandoverCaptainRequest)
  SharedDtor();
}

void HandoverCaptainRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_captain_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandoverCaptainRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandoverCaptainRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HandoverCaptainRequest& HandoverCaptainRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsHandoverCaptainRequest();
  return *internal_default_instance();
}

HandoverCaptainRequest* HandoverCaptainRequest::New(::google::protobuf::Arena* arena) const {
  HandoverCaptainRequest* n = new HandoverCaptainRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandoverCaptainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.HandoverCaptainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_captain_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HandoverCaptainRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.HandoverCaptainRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actor_username().data(), static_cast<int>(this->actor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainRequest.actor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_captain_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_captain_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_captain_username().data(), static_cast<int>(this->new_captain_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainRequest.new_captain_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.HandoverCaptainRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.HandoverCaptainRequest)
  return false;
#undef DO_
}

void HandoverCaptainRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.HandoverCaptainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.actor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actor_username(), output);
  }

  // string new_captain_username = 3;
  if (this->new_captain_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_captain_username().data(), static_cast<int>(this->new_captain_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.new_captain_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_captain_username(), output);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appkey(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.HandoverCaptainRequest)
}

::google::protobuf::uint8* HandoverCaptainRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.HandoverCaptainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.actor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actor_username(), target);
  }

  // string new_captain_username = 3;
  if (this->new_captain_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_captain_username().data(), static_cast<int>(this->new_captain_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.new_captain_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_captain_username(), target);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appkey(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.HandoverCaptainRequest)
  return target;
}

size_t HandoverCaptainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.HandoverCaptainRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actor_username());
  }

  // string new_captain_username = 3;
  if (this->new_captain_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_captain_username());
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandoverCaptainRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.HandoverCaptainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverCaptainRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HandoverCaptainRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.HandoverCaptainRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.HandoverCaptainRequest)
    MergeFrom(*source);
  }
}

void HandoverCaptainRequest::MergeFrom(const HandoverCaptainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.HandoverCaptainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.actor_username().size() > 0) {

    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  if (from.new_captain_username().size() > 0) {

    new_captain_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_captain_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void HandoverCaptainRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.HandoverCaptainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverCaptainRequest::CopyFrom(const HandoverCaptainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.HandoverCaptainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverCaptainRequest::IsInitialized() const {
  return true;
}

void HandoverCaptainRequest::Swap(HandoverCaptainRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandoverCaptainRequest::InternalSwap(HandoverCaptainRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  actor_username_.Swap(&other->actor_username_);
  new_captain_username_.Swap(&other->new_captain_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandoverCaptainRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HandoverCaptainResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandoverCaptainResponse::kRetFieldNumber;
const int HandoverCaptainResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandoverCaptainResponse::HandoverCaptainResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsHandoverCaptainResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.HandoverCaptainResponse)
}
HandoverCaptainResponse::HandoverCaptainResponse(const HandoverCaptainResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.HandoverCaptainResponse)
}

void HandoverCaptainResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

HandoverCaptainResponse::~HandoverCaptainResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.HandoverCaptainResponse)
  SharedDtor();
}

void HandoverCaptainResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HandoverCaptainResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandoverCaptainResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HandoverCaptainResponse& HandoverCaptainResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsHandoverCaptainResponse();
  return *internal_default_instance();
}

HandoverCaptainResponse* HandoverCaptainResponse::New(::google::protobuf::Arena* arena) const {
  HandoverCaptainResponse* n = new HandoverCaptainResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandoverCaptainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.HandoverCaptainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool HandoverCaptainResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.HandoverCaptainResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.HandoverCaptainResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.HandoverCaptainResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.HandoverCaptainResponse)
  return false;
#undef DO_
}

void HandoverCaptainResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.HandoverCaptainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.HandoverCaptainResponse)
}

::google::protobuf::uint8* HandoverCaptainResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.HandoverCaptainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.HandoverCaptainResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.HandoverCaptainResponse)
  return target;
}

size_t HandoverCaptainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.HandoverCaptainResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandoverCaptainResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.HandoverCaptainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HandoverCaptainResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HandoverCaptainResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.HandoverCaptainResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.HandoverCaptainResponse)
    MergeFrom(*source);
  }
}

void HandoverCaptainResponse::MergeFrom(const HandoverCaptainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.HandoverCaptainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void HandoverCaptainResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.HandoverCaptainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandoverCaptainResponse::CopyFrom(const HandoverCaptainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.HandoverCaptainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandoverCaptainResponse::IsInitialized() const {
  return true;
}

void HandoverCaptainResponse::Swap(HandoverCaptainResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandoverCaptainResponse::InternalSwap(HandoverCaptainResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandoverCaptainResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CaptainChangedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_CaptainChangedSignal_default_instance_._instance.get_mutable()->new_captain_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptainChangedSignal::kNewCaptainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptainChangedSignal::CaptainChangedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsCaptainChangedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.CaptainChangedSignal)
}
CaptainChangedSignal::CaptainChangedSignal(const CaptainChangedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_new_captain()) {
    new_captain_ = new ::outer::fleet::FleetCrew(*from.new_captain_);
  } else {
    new_captain_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.CaptainChangedSignal)
}

void CaptainChangedSignal::SharedCtor() {
  new_captain_ = NULL;
  _cached_size_ = 0;
}

CaptainChangedSignal::~CaptainChangedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.CaptainChangedSignal)
  SharedDtor();
}

void CaptainChangedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete new_captain_;
}

void CaptainChangedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptainChangedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CaptainChangedSignal& CaptainChangedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsCaptainChangedSignal();
  return *internal_default_instance();
}

CaptainChangedSignal* CaptainChangedSignal::New(::google::protobuf::Arena* arena) const {
  CaptainChangedSignal* n = new CaptainChangedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CaptainChangedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.CaptainChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && new_captain_ != NULL) {
    delete new_captain_;
  }
  new_captain_ = NULL;
  _internal_metadata_.Clear();
}

bool CaptainChangedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.CaptainChangedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew new_captain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_captain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.CaptainChangedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.CaptainChangedSignal)
  return false;
#undef DO_
}

void CaptainChangedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.CaptainChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew new_captain = 1;
  if (this->has_new_captain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->new_captain_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.CaptainChangedSignal)
}

::google::protobuf::uint8* CaptainChangedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.CaptainChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew new_captain = 1;
  if (this->has_new_captain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->new_captain_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.CaptainChangedSignal)
  return target;
}

size_t CaptainChangedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.CaptainChangedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew new_captain = 1;
  if (this->has_new_captain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->new_captain_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CaptainChangedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.CaptainChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const CaptainChangedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CaptainChangedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.CaptainChangedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.CaptainChangedSignal)
    MergeFrom(*source);
  }
}

void CaptainChangedSignal::MergeFrom(const CaptainChangedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.CaptainChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_new_captain()) {
    mutable_new_captain()->::outer::fleet::FleetCrew::MergeFrom(from.new_captain());
  }
}

void CaptainChangedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.CaptainChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptainChangedSignal::CopyFrom(const CaptainChangedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.CaptainChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptainChangedSignal::IsInitialized() const {
  return true;
}

void CaptainChangedSignal::Swap(CaptainChangedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptainChangedSignal::InternalSwap(CaptainChangedSignal* other) {
  using std::swap;
  swap(new_captain_, other->new_captain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CaptainChangedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberChangeNickRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberChangeNickRequest::kFleetUriFieldNumber;
const int FleetMemberChangeNickRequest::kActorUsernameFieldNumber;
const int FleetMemberChangeNickRequest::kAppkeyFieldNumber;
const int FleetMemberChangeNickRequest::kNickFieldNumber;
const int FleetMemberChangeNickRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberChangeNickRequest::FleetMemberChangeNickRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberChangeNickRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberChangeNickRequest)
}
FleetMemberChangeNickRequest::FleetMemberChangeNickRequest(const FleetMemberChangeNickRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actor_username().size() > 0) {
    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberChangeNickRequest)
}

void FleetMemberChangeNickRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FleetMemberChangeNickRequest::~FleetMemberChangeNickRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberChangeNickRequest)
  SharedDtor();
}

void FleetMemberChangeNickRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetMemberChangeNickRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberChangeNickRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberChangeNickRequest& FleetMemberChangeNickRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberChangeNickRequest();
  return *internal_default_instance();
}

FleetMemberChangeNickRequest* FleetMemberChangeNickRequest::New(::google::protobuf::Arena* arena) const {
  FleetMemberChangeNickRequest* n = new FleetMemberChangeNickRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberChangeNickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberChangeNickRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FleetMemberChangeNickRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberChangeNickRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actor_username().data(), static_cast<int>(this->actor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickRequest.actor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickRequest.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberChangeNickRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberChangeNickRequest)
  return false;
#undef DO_
}

void FleetMemberChangeNickRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberChangeNickRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.actor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actor_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nick(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberChangeNickRequest)
}

::google::protobuf::uint8* FleetMemberChangeNickRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberChangeNickRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.actor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actor_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nick(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberChangeNickRequest)
  return target;
}

size_t FleetMemberChangeNickRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberChangeNickRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actor_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberChangeNickRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberChangeNickRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberChangeNickRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberChangeNickRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberChangeNickRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberChangeNickRequest)
    MergeFrom(*source);
  }
}

void FleetMemberChangeNickRequest::MergeFrom(const FleetMemberChangeNickRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberChangeNickRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.actor_username().size() > 0) {

    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void FleetMemberChangeNickRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberChangeNickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberChangeNickRequest::CopyFrom(const FleetMemberChangeNickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberChangeNickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberChangeNickRequest::IsInitialized() const {
  return true;
}

void FleetMemberChangeNickRequest::Swap(FleetMemberChangeNickRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberChangeNickRequest::InternalSwap(FleetMemberChangeNickRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  actor_username_.Swap(&other->actor_username_);
  appkey_.Swap(&other->appkey_);
  nick_.Swap(&other->nick_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberChangeNickRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberChangeNickResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberChangeNickResponse::kRetFieldNumber;
const int FleetMemberChangeNickResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberChangeNickResponse::FleetMemberChangeNickResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberChangeNickResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberChangeNickResponse)
}
FleetMemberChangeNickResponse::FleetMemberChangeNickResponse(const FleetMemberChangeNickResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberChangeNickResponse)
}

void FleetMemberChangeNickResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

FleetMemberChangeNickResponse::~FleetMemberChangeNickResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberChangeNickResponse)
  SharedDtor();
}

void FleetMemberChangeNickResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetMemberChangeNickResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberChangeNickResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberChangeNickResponse& FleetMemberChangeNickResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberChangeNickResponse();
  return *internal_default_instance();
}

FleetMemberChangeNickResponse* FleetMemberChangeNickResponse::New(::google::protobuf::Arena* arena) const {
  FleetMemberChangeNickResponse* n = new FleetMemberChangeNickResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberChangeNickResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberChangeNickResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool FleetMemberChangeNickResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberChangeNickResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetMemberChangeNickResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberChangeNickResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberChangeNickResponse)
  return false;
#undef DO_
}

void FleetMemberChangeNickResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberChangeNickResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberChangeNickResponse)
}

::google::protobuf::uint8* FleetMemberChangeNickResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberChangeNickResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetMemberChangeNickResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberChangeNickResponse)
  return target;
}

size_t FleetMemberChangeNickResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberChangeNickResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberChangeNickResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberChangeNickResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberChangeNickResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberChangeNickResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberChangeNickResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberChangeNickResponse)
    MergeFrom(*source);
  }
}

void FleetMemberChangeNickResponse::MergeFrom(const FleetMemberChangeNickResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberChangeNickResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void FleetMemberChangeNickResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberChangeNickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberChangeNickResponse::CopyFrom(const FleetMemberChangeNickResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberChangeNickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberChangeNickResponse::IsInitialized() const {
  return true;
}

void FleetMemberChangeNickResponse::Swap(FleetMemberChangeNickResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberChangeNickResponse::InternalSwap(FleetMemberChangeNickResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberChangeNickResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetMemberNickChangedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetMemberNickChangedSignal_default_instance_._instance.get_mutable()->nick_changed_crew_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetMemberNickChangedSignal::kNickChangedCrewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetMemberNickChangedSignal::FleetMemberNickChangedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberNickChangedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetMemberNickChangedSignal)
}
FleetMemberNickChangedSignal::FleetMemberNickChangedSignal(const FleetMemberNickChangedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nick_changed_crew()) {
    nick_changed_crew_ = new ::outer::fleet::FleetCrew(*from.nick_changed_crew_);
  } else {
    nick_changed_crew_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetMemberNickChangedSignal)
}

void FleetMemberNickChangedSignal::SharedCtor() {
  nick_changed_crew_ = NULL;
  _cached_size_ = 0;
}

FleetMemberNickChangedSignal::~FleetMemberNickChangedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetMemberNickChangedSignal)
  SharedDtor();
}

void FleetMemberNickChangedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete nick_changed_crew_;
}

void FleetMemberNickChangedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetMemberNickChangedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetMemberNickChangedSignal& FleetMemberNickChangedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetMemberNickChangedSignal();
  return *internal_default_instance();
}

FleetMemberNickChangedSignal* FleetMemberNickChangedSignal::New(::google::protobuf::Arena* arena) const {
  FleetMemberNickChangedSignal* n = new FleetMemberNickChangedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetMemberNickChangedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetMemberNickChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && nick_changed_crew_ != NULL) {
    delete nick_changed_crew_;
  }
  nick_changed_crew_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetMemberNickChangedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetMemberNickChangedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew nick_changed_crew = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nick_changed_crew()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetMemberNickChangedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetMemberNickChangedSignal)
  return false;
#undef DO_
}

void FleetMemberNickChangedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetMemberNickChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew nick_changed_crew = 1;
  if (this->has_nick_changed_crew()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nick_changed_crew_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetMemberNickChangedSignal)
}

::google::protobuf::uint8* FleetMemberNickChangedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetMemberNickChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew nick_changed_crew = 1;
  if (this->has_nick_changed_crew()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->nick_changed_crew_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetMemberNickChangedSignal)
  return target;
}

size_t FleetMemberNickChangedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetMemberNickChangedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew nick_changed_crew = 1;
  if (this->has_nick_changed_crew()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nick_changed_crew_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetMemberNickChangedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetMemberNickChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetMemberNickChangedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetMemberNickChangedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetMemberNickChangedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetMemberNickChangedSignal)
    MergeFrom(*source);
  }
}

void FleetMemberNickChangedSignal::MergeFrom(const FleetMemberNickChangedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetMemberNickChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nick_changed_crew()) {
    mutable_nick_changed_crew()->::outer::fleet::FleetCrew::MergeFrom(from.nick_changed_crew());
  }
}

void FleetMemberNickChangedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetMemberNickChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetMemberNickChangedSignal::CopyFrom(const FleetMemberNickChangedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetMemberNickChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetMemberNickChangedSignal::IsInitialized() const {
  return true;
}

void FleetMemberNickChangedSignal::Swap(FleetMemberNickChangedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetMemberNickChangedSignal::InternalSwap(FleetMemberNickChangedSignal* other) {
  using std::swap;
  swap(nick_changed_crew_, other->nick_changed_crew_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetMemberNickChangedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLocationAuthorizationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLocationAuthorizationRequest::kFleetUriFieldNumber;
const int ChangeLocationAuthorizationRequest::kActorUsernameFieldNumber;
const int ChangeLocationAuthorizationRequest::kAppkeyFieldNumber;
const int ChangeLocationAuthorizationRequest::kIsAuthorizationFieldNumber;
const int ChangeLocationAuthorizationRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLocationAuthorizationRequest::ChangeLocationAuthorizationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.ChangeLocationAuthorizationRequest)
}
ChangeLocationAuthorizationRequest::ChangeLocationAuthorizationRequest(const ChangeLocationAuthorizationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actor_username().size() > 0) {
    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  is_authorization_ = from.is_authorization_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.ChangeLocationAuthorizationRequest)
}

void ChangeLocationAuthorizationRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_authorization_ = false;
  _cached_size_ = 0;
}

ChangeLocationAuthorizationRequest::~ChangeLocationAuthorizationRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.ChangeLocationAuthorizationRequest)
  SharedDtor();
}

void ChangeLocationAuthorizationRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeLocationAuthorizationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLocationAuthorizationRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLocationAuthorizationRequest& ChangeLocationAuthorizationRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationRequest();
  return *internal_default_instance();
}

ChangeLocationAuthorizationRequest* ChangeLocationAuthorizationRequest::New(::google::protobuf::Arena* arena) const {
  ChangeLocationAuthorizationRequest* n = new ChangeLocationAuthorizationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeLocationAuthorizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.ChangeLocationAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_authorization_ = false;
  _internal_metadata_.Clear();
}

bool ChangeLocationAuthorizationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.ChangeLocationAuthorizationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.ChangeLocationAuthorizationRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actor_username().data(), static_cast<int>(this->actor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.ChangeLocationAuthorizationRequest.actor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.ChangeLocationAuthorizationRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_authorization = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_authorization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.ChangeLocationAuthorizationRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.ChangeLocationAuthorizationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.ChangeLocationAuthorizationRequest)
  return false;
#undef DO_
}

void ChangeLocationAuthorizationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.ChangeLocationAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.actor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actor_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // bool is_authorization = 4;
  if (this->is_authorization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_authorization(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.ChangeLocationAuthorizationRequest)
}

::google::protobuf::uint8* ChangeLocationAuthorizationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.ChangeLocationAuthorizationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.actor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actor_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // bool is_authorization = 4;
  if (this->is_authorization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_authorization(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.ChangeLocationAuthorizationRequest)
  return target;
}

size_t ChangeLocationAuthorizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.ChangeLocationAuthorizationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actor_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // bool is_authorization = 4;
  if (this->is_authorization() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLocationAuthorizationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.ChangeLocationAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLocationAuthorizationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLocationAuthorizationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.ChangeLocationAuthorizationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.ChangeLocationAuthorizationRequest)
    MergeFrom(*source);
  }
}

void ChangeLocationAuthorizationRequest::MergeFrom(const ChangeLocationAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.ChangeLocationAuthorizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.actor_username().size() > 0) {

    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.is_authorization() != 0) {
    set_is_authorization(from.is_authorization());
  }
}

void ChangeLocationAuthorizationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.ChangeLocationAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLocationAuthorizationRequest::CopyFrom(const ChangeLocationAuthorizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.ChangeLocationAuthorizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLocationAuthorizationRequest::IsInitialized() const {
  return true;
}

void ChangeLocationAuthorizationRequest::Swap(ChangeLocationAuthorizationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLocationAuthorizationRequest::InternalSwap(ChangeLocationAuthorizationRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  actor_username_.Swap(&other->actor_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  swap(is_authorization_, other->is_authorization_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeLocationAuthorizationRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLocationAuthorizationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLocationAuthorizationResponse::kRetFieldNumber;
const int ChangeLocationAuthorizationResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLocationAuthorizationResponse::ChangeLocationAuthorizationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.ChangeLocationAuthorizationResponse)
}
ChangeLocationAuthorizationResponse::ChangeLocationAuthorizationResponse(const ChangeLocationAuthorizationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.ChangeLocationAuthorizationResponse)
}

void ChangeLocationAuthorizationResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

ChangeLocationAuthorizationResponse::~ChangeLocationAuthorizationResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.ChangeLocationAuthorizationResponse)
  SharedDtor();
}

void ChangeLocationAuthorizationResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeLocationAuthorizationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLocationAuthorizationResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLocationAuthorizationResponse& ChangeLocationAuthorizationResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationResponse();
  return *internal_default_instance();
}

ChangeLocationAuthorizationResponse* ChangeLocationAuthorizationResponse::New(::google::protobuf::Arena* arena) const {
  ChangeLocationAuthorizationResponse* n = new ChangeLocationAuthorizationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeLocationAuthorizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.ChangeLocationAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool ChangeLocationAuthorizationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.ChangeLocationAuthorizationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.ChangeLocationAuthorizationResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.ChangeLocationAuthorizationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.ChangeLocationAuthorizationResponse)
  return false;
#undef DO_
}

void ChangeLocationAuthorizationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.ChangeLocationAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.ChangeLocationAuthorizationResponse)
}

::google::protobuf::uint8* ChangeLocationAuthorizationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.ChangeLocationAuthorizationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.ChangeLocationAuthorizationResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.ChangeLocationAuthorizationResponse)
  return target;
}

size_t ChangeLocationAuthorizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.ChangeLocationAuthorizationResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLocationAuthorizationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.ChangeLocationAuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLocationAuthorizationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLocationAuthorizationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.ChangeLocationAuthorizationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.ChangeLocationAuthorizationResponse)
    MergeFrom(*source);
  }
}

void ChangeLocationAuthorizationResponse::MergeFrom(const ChangeLocationAuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.ChangeLocationAuthorizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void ChangeLocationAuthorizationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.ChangeLocationAuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLocationAuthorizationResponse::CopyFrom(const ChangeLocationAuthorizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.ChangeLocationAuthorizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLocationAuthorizationResponse::IsInitialized() const {
  return true;
}

void ChangeLocationAuthorizationResponse::Swap(ChangeLocationAuthorizationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLocationAuthorizationResponse::InternalSwap(ChangeLocationAuthorizationResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeLocationAuthorizationResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeLocationAuthorizationSignal::InitAsDefaultInstance() {
  ::outer::fleet::_ChangeLocationAuthorizationSignal_default_instance_._instance.get_mutable()->location_authorization_changed_crew_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeLocationAuthorizationSignal::kLocationAuthorizationChangedCrewFieldNumber;
const int ChangeLocationAuthorizationSignal::kIsAuthorizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeLocationAuthorizationSignal::ChangeLocationAuthorizationSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.ChangeLocationAuthorizationSignal)
}
ChangeLocationAuthorizationSignal::ChangeLocationAuthorizationSignal(const ChangeLocationAuthorizationSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location_authorization_changed_crew()) {
    location_authorization_changed_crew_ = new ::outer::fleet::FleetCrew(*from.location_authorization_changed_crew_);
  } else {
    location_authorization_changed_crew_ = NULL;
  }
  is_authorization_ = from.is_authorization_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.ChangeLocationAuthorizationSignal)
}

void ChangeLocationAuthorizationSignal::SharedCtor() {
  ::memset(&location_authorization_changed_crew_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_authorization_) -
      reinterpret_cast<char*>(&location_authorization_changed_crew_)) + sizeof(is_authorization_));
  _cached_size_ = 0;
}

ChangeLocationAuthorizationSignal::~ChangeLocationAuthorizationSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.ChangeLocationAuthorizationSignal)
  SharedDtor();
}

void ChangeLocationAuthorizationSignal::SharedDtor() {
  if (this != internal_default_instance()) delete location_authorization_changed_crew_;
}

void ChangeLocationAuthorizationSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLocationAuthorizationSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeLocationAuthorizationSignal& ChangeLocationAuthorizationSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsChangeLocationAuthorizationSignal();
  return *internal_default_instance();
}

ChangeLocationAuthorizationSignal* ChangeLocationAuthorizationSignal::New(::google::protobuf::Arena* arena) const {
  ChangeLocationAuthorizationSignal* n = new ChangeLocationAuthorizationSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeLocationAuthorizationSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.ChangeLocationAuthorizationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && location_authorization_changed_crew_ != NULL) {
    delete location_authorization_changed_crew_;
  }
  location_authorization_changed_crew_ = NULL;
  is_authorization_ = false;
  _internal_metadata_.Clear();
}

bool ChangeLocationAuthorizationSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.ChangeLocationAuthorizationSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.fleet.FleetCrew location_authorization_changed_crew = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location_authorization_changed_crew()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_authorization = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_authorization_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.ChangeLocationAuthorizationSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.ChangeLocationAuthorizationSignal)
  return false;
#undef DO_
}

void ChangeLocationAuthorizationSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.ChangeLocationAuthorizationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew location_authorization_changed_crew = 1;
  if (this->has_location_authorization_changed_crew()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->location_authorization_changed_crew_, output);
  }

  // bool is_authorization = 2;
  if (this->is_authorization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_authorization(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.ChangeLocationAuthorizationSignal)
}

::google::protobuf::uint8* ChangeLocationAuthorizationSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.ChangeLocationAuthorizationSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.fleet.FleetCrew location_authorization_changed_crew = 1;
  if (this->has_location_authorization_changed_crew()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->location_authorization_changed_crew_, deterministic, target);
  }

  // bool is_authorization = 2;
  if (this->is_authorization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_authorization(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.ChangeLocationAuthorizationSignal)
  return target;
}

size_t ChangeLocationAuthorizationSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.ChangeLocationAuthorizationSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.fleet.FleetCrew location_authorization_changed_crew = 1;
  if (this->has_location_authorization_changed_crew()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->location_authorization_changed_crew_);
  }

  // bool is_authorization = 2;
  if (this->is_authorization() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLocationAuthorizationSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.ChangeLocationAuthorizationSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeLocationAuthorizationSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeLocationAuthorizationSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.ChangeLocationAuthorizationSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.ChangeLocationAuthorizationSignal)
    MergeFrom(*source);
  }
}

void ChangeLocationAuthorizationSignal::MergeFrom(const ChangeLocationAuthorizationSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.ChangeLocationAuthorizationSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location_authorization_changed_crew()) {
    mutable_location_authorization_changed_crew()->::outer::fleet::FleetCrew::MergeFrom(from.location_authorization_changed_crew());
  }
  if (from.is_authorization() != 0) {
    set_is_authorization(from.is_authorization());
  }
}

void ChangeLocationAuthorizationSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.ChangeLocationAuthorizationSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLocationAuthorizationSignal::CopyFrom(const ChangeLocationAuthorizationSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.ChangeLocationAuthorizationSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLocationAuthorizationSignal::IsInitialized() const {
  return true;
}

void ChangeLocationAuthorizationSignal::Swap(ChangeLocationAuthorizationSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeLocationAuthorizationSignal::InternalSwap(ChangeLocationAuthorizationSignal* other) {
  using std::swap;
  swap(location_authorization_changed_crew_, other->location_authorization_changed_crew_);
  swap(is_authorization_, other->is_authorization_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeLocationAuthorizationSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMyFleetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMyFleetRequest::kUsernameFieldNumber;
const int GetMyFleetRequest::kAppkeyFieldNumber;
const int GetMyFleetRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMyFleetRequest::GetMyFleetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetMyFleetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetMyFleetRequest)
}
GetMyFleetRequest::GetMyFleetRequest(const GetMyFleetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetMyFleetRequest)
}

void GetMyFleetRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMyFleetRequest::~GetMyFleetRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetMyFleetRequest)
  SharedDtor();
}

void GetMyFleetRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMyFleetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMyFleetRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMyFleetRequest& GetMyFleetRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetMyFleetRequest();
  return *internal_default_instance();
}

GetMyFleetRequest* GetMyFleetRequest::New(::google::protobuf::Arena* arena) const {
  GetMyFleetRequest* n = new GetMyFleetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMyFleetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetMyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMyFleetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetMyFleetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetMyFleetRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetMyFleetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetMyFleetRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetMyFleetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetMyFleetRequest)
  return false;
#undef DO_
}

void GetMyFleetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetMyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetMyFleetRequest)
}

::google::protobuf::uint8* GetMyFleetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetMyFleetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetMyFleetRequest)
  return target;
}

size_t GetMyFleetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetMyFleetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMyFleetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetMyFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMyFleetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMyFleetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetMyFleetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetMyFleetRequest)
    MergeFrom(*source);
  }
}

void GetMyFleetRequest::MergeFrom(const GetMyFleetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetMyFleetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void GetMyFleetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetMyFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMyFleetRequest::CopyFrom(const GetMyFleetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetMyFleetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMyFleetRequest::IsInitialized() const {
  return true;
}

void GetMyFleetRequest::Swap(GetMyFleetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMyFleetRequest::InternalSwap(GetMyFleetRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMyFleetRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMyFleetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMyFleetResponse::kRetFieldNumber;
const int GetMyFleetResponse::kFleetInfoFieldNumber;
const int GetMyFleetResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMyFleetResponse::GetMyFleetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetMyFleetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetMyFleetResponse)
}
GetMyFleetResponse::GetMyFleetResponse(const GetMyFleetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fleet_info_(from.fleet_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetMyFleetResponse)
}

void GetMyFleetResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

GetMyFleetResponse::~GetMyFleetResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetMyFleetResponse)
  SharedDtor();
}

void GetMyFleetResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMyFleetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMyFleetResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMyFleetResponse& GetMyFleetResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetMyFleetResponse();
  return *internal_default_instance();
}

GetMyFleetResponse* GetMyFleetResponse::New(::google::protobuf::Arena* arena) const {
  GetMyFleetResponse* n = new GetMyFleetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMyFleetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetMyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_info_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetMyFleetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetMyFleetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.fleet.FleetInfo fleet_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fleet_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetMyFleetResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetMyFleetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetMyFleetResponse)
  return false;
#undef DO_
}

void GetMyFleetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetMyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.fleet.FleetInfo fleet_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fleet_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fleet_info(static_cast<int>(i)), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetMyFleetResponse)
}

::google::protobuf::uint8* GetMyFleetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetMyFleetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.fleet.FleetInfo fleet_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fleet_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->fleet_info(static_cast<int>(i)), deterministic, target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetMyFleetResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetMyFleetResponse)
  return target;
}

size_t GetMyFleetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetMyFleetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.FleetInfo fleet_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fleet_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fleet_info(static_cast<int>(i)));
    }
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMyFleetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetMyFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMyFleetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMyFleetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetMyFleetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetMyFleetResponse)
    MergeFrom(*source);
  }
}

void GetMyFleetResponse::MergeFrom(const GetMyFleetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetMyFleetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fleet_info_.MergeFrom(from.fleet_info_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetMyFleetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetMyFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMyFleetResponse::CopyFrom(const GetMyFleetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetMyFleetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMyFleetResponse::IsInitialized() const {
  return true;
}

void GetMyFleetResponse::Swap(GetMyFleetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMyFleetResponse::InternalSwap(GetMyFleetResponse* other) {
  using std::swap;
  fleet_info_.InternalSwap(&other->fleet_info_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMyFleetResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetCrewListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetCrewListRequest::kFleetUriFieldNumber;
const int GetFleetCrewListRequest::kAppkeyFieldNumber;
const int GetFleetCrewListRequest::kUsernameFieldNumber;
const int GetFleetCrewListRequest::kModifiedFieldNumber;
const int GetFleetCrewListRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetCrewListRequest::GetFleetCrewListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetCrewListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetCrewListRequest)
}
GetFleetCrewListRequest::GetFleetCrewListRequest(const GetFleetCrewListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  modified_ = from.modified_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetCrewListRequest)
}

void GetFleetCrewListRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetFleetCrewListRequest::~GetFleetCrewListRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetCrewListRequest)
  SharedDtor();
}

void GetFleetCrewListRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetCrewListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetCrewListRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetCrewListRequest& GetFleetCrewListRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetCrewListRequest();
  return *internal_default_instance();
}

GetFleetCrewListRequest* GetFleetCrewListRequest::New(::google::protobuf::Arena* arena) const {
  GetFleetCrewListRequest* n = new GetFleetCrewListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetCrewListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetCrewListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetFleetCrewListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetCrewListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetCrewListRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetCrewListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetCrewListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetCrewListRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetCrewListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetCrewListRequest)
  return false;
#undef DO_
}

void GetFleetCrewListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetCrewListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // uint64 modified = 4;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->modified(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetCrewListRequest)
}

::google::protobuf::uint8* GetFleetCrewListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetCrewListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // uint64 modified = 4;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->modified(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetCrewListRequest)
  return target;
}

size_t GetFleetCrewListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetCrewListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // uint64 modified = 4;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetCrewListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetCrewListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetCrewListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetCrewListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetCrewListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetCrewListRequest)
    MergeFrom(*source);
  }
}

void GetFleetCrewListRequest::MergeFrom(const GetFleetCrewListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetCrewListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
}

void GetFleetCrewListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetCrewListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetCrewListRequest::CopyFrom(const GetFleetCrewListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetCrewListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetCrewListRequest::IsInitialized() const {
  return true;
}

void GetFleetCrewListRequest::Swap(GetFleetCrewListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetCrewListRequest::InternalSwap(GetFleetCrewListRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  msg_id_.Swap(&other->msg_id_);
  swap(modified_, other->modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetCrewListRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetCrewListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetCrewListResponse::kRetFieldNumber;
const int GetFleetCrewListResponse::kCrewsFieldNumber;
const int GetFleetCrewListResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetCrewListResponse::GetFleetCrewListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetCrewListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetCrewListResponse)
}
GetFleetCrewListResponse::GetFleetCrewListResponse(const GetFleetCrewListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      crews_(from.crews_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetCrewListResponse)
}

void GetFleetCrewListResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

GetFleetCrewListResponse::~GetFleetCrewListResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetCrewListResponse)
  SharedDtor();
}

void GetFleetCrewListResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetCrewListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetCrewListResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetCrewListResponse& GetFleetCrewListResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetCrewListResponse();
  return *internal_default_instance();
}

GetFleetCrewListResponse* GetFleetCrewListResponse::New(::google::protobuf::Arena* arena) const {
  GetFleetCrewListResponse* n = new GetFleetCrewListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetCrewListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetCrewListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crews_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetFleetCrewListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetCrewListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.fleet.FleetCrew crews = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_crews()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetCrewListResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetCrewListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetCrewListResponse)
  return false;
#undef DO_
}

void GetFleetCrewListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetCrewListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.fleet.FleetCrew crews = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crews_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->crews(static_cast<int>(i)), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetCrewListResponse)
}

::google::protobuf::uint8* GetFleetCrewListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetCrewListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.fleet.FleetCrew crews = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->crews_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->crews(static_cast<int>(i)), deterministic, target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetCrewListResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetCrewListResponse)
  return target;
}

size_t GetFleetCrewListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetCrewListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.FleetCrew crews = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->crews_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->crews(static_cast<int>(i)));
    }
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetCrewListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetCrewListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetCrewListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetCrewListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetCrewListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetCrewListResponse)
    MergeFrom(*source);
  }
}

void GetFleetCrewListResponse::MergeFrom(const GetFleetCrewListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetCrewListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  crews_.MergeFrom(from.crews_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFleetCrewListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetCrewListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetCrewListResponse::CopyFrom(const GetFleetCrewListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetCrewListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetCrewListResponse::IsInitialized() const {
  return true;
}

void GetFleetCrewListResponse::Swap(GetFleetCrewListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetCrewListResponse::InternalSwap(GetFleetCrewListResponse* other) {
  using std::swap;
  crews_.InternalSwap(&other->crews_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetCrewListResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetAssemblyPointRequest::InitAsDefaultInstance() {
  ::outer::fleet::_SetFleetAssemblyPointRequest_default_instance_._instance.get_mutable()->assembly_point_ = const_cast< ::common::msg::LocationMessage*>(
      ::common::msg::LocationMessage::internal_default_instance());
}
void SetFleetAssemblyPointRequest::clear_assembly_point() {
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetAssemblyPointRequest::kSetterUsernameFieldNumber;
const int SetFleetAssemblyPointRequest::kAppkeyFieldNumber;
const int SetFleetAssemblyPointRequest::kFleetUriFieldNumber;
const int SetFleetAssemblyPointRequest::kAssemblyPointFieldNumber;
const int SetFleetAssemblyPointRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetAssemblyPointRequest::SetFleetAssemblyPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetAssemblyPointRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetAssemblyPointRequest)
}
SetFleetAssemblyPointRequest::SetFleetAssemblyPointRequest(const SetFleetAssemblyPointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.setter_username().size() > 0) {
    setter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setter_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_assembly_point()) {
    assembly_point_ = new ::common::msg::LocationMessage(*from.assembly_point_);
  } else {
    assembly_point_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetAssemblyPointRequest)
}

void SetFleetAssemblyPointRequest::SharedCtor() {
  setter_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assembly_point_ = NULL;
  _cached_size_ = 0;
}

SetFleetAssemblyPointRequest::~SetFleetAssemblyPointRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetAssemblyPointRequest)
  SharedDtor();
}

void SetFleetAssemblyPointRequest::SharedDtor() {
  setter_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete assembly_point_;
}

void SetFleetAssemblyPointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetAssemblyPointRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetAssemblyPointRequest& SetFleetAssemblyPointRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetAssemblyPointRequest();
  return *internal_default_instance();
}

SetFleetAssemblyPointRequest* SetFleetAssemblyPointRequest::New(::google::protobuf::Arena* arena) const {
  SetFleetAssemblyPointRequest* n = new SetFleetAssemblyPointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetAssemblyPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setter_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
  _internal_metadata_.Clear();
}

bool SetFleetAssemblyPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetAssemblyPointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string setter_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_setter_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->setter_username().data(), static_cast<int>(this->setter_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetAssemblyPointRequest.setter_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetAssemblyPointRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetAssemblyPointRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.LocationMessage assembly_point = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assembly_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetAssemblyPointRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetAssemblyPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetAssemblyPointRequest)
  return false;
#undef DO_
}

void SetFleetAssemblyPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string setter_username = 1;
  if (this->setter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setter_username().data(), static_cast<int>(this->setter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.setter_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->setter_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fleet_uri(), output);
  }

  // .common.msg.LocationMessage assembly_point = 4;
  if (this->has_assembly_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->assembly_point_, output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetAssemblyPointRequest)
}

::google::protobuf::uint8* SetFleetAssemblyPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string setter_username = 1;
  if (this->setter_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->setter_username().data(), static_cast<int>(this->setter_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.setter_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->setter_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fleet_uri(), target);
  }

  // .common.msg.LocationMessage assembly_point = 4;
  if (this->has_assembly_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->assembly_point_, deterministic, target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetAssemblyPointRequest)
  return target;
}

size_t SetFleetAssemblyPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetAssemblyPointRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string setter_username = 1;
  if (this->setter_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->setter_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.msg.LocationMessage assembly_point = 4;
  if (this->has_assembly_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assembly_point_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetAssemblyPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetAssemblyPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetAssemblyPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetAssemblyPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetAssemblyPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetAssemblyPointRequest)
    MergeFrom(*source);
  }
}

void SetFleetAssemblyPointRequest::MergeFrom(const SetFleetAssemblyPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetAssemblyPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.setter_username().size() > 0) {

    setter_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.setter_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_assembly_point()) {
    mutable_assembly_point()->::common::msg::LocationMessage::MergeFrom(from.assembly_point());
  }
}

void SetFleetAssemblyPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetAssemblyPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetAssemblyPointRequest::CopyFrom(const SetFleetAssemblyPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetAssemblyPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetAssemblyPointRequest::IsInitialized() const {
  return true;
}

void SetFleetAssemblyPointRequest::Swap(SetFleetAssemblyPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetAssemblyPointRequest::InternalSwap(SetFleetAssemblyPointRequest* other) {
  using std::swap;
  setter_username_.Swap(&other->setter_username_);
  appkey_.Swap(&other->appkey_);
  fleet_uri_.Swap(&other->fleet_uri_);
  msg_id_.Swap(&other->msg_id_);
  swap(assembly_point_, other->assembly_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetAssemblyPointRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetAssemblyPointResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetAssemblyPointResponse::kRetFieldNumber;
const int SetFleetAssemblyPointResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetAssemblyPointResponse::SetFleetAssemblyPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetAssemblyPointResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetAssemblyPointResponse)
}
SetFleetAssemblyPointResponse::SetFleetAssemblyPointResponse(const SetFleetAssemblyPointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetAssemblyPointResponse)
}

void SetFleetAssemblyPointResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

SetFleetAssemblyPointResponse::~SetFleetAssemblyPointResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetAssemblyPointResponse)
  SharedDtor();
}

void SetFleetAssemblyPointResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFleetAssemblyPointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetAssemblyPointResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetAssemblyPointResponse& SetFleetAssemblyPointResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetAssemblyPointResponse();
  return *internal_default_instance();
}

SetFleetAssemblyPointResponse* SetFleetAssemblyPointResponse::New(::google::protobuf::Arena* arena) const {
  SetFleetAssemblyPointResponse* n = new SetFleetAssemblyPointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetAssemblyPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SetFleetAssemblyPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetAssemblyPointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetAssemblyPointResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetAssemblyPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetAssemblyPointResponse)
  return false;
#undef DO_
}

void SetFleetAssemblyPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetAssemblyPointResponse)
}

::google::protobuf::uint8* SetFleetAssemblyPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetAssemblyPointResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetAssemblyPointResponse)
  return target;
}

size_t SetFleetAssemblyPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetAssemblyPointResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetAssemblyPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetAssemblyPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetAssemblyPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetAssemblyPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetAssemblyPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetAssemblyPointResponse)
    MergeFrom(*source);
  }
}

void SetFleetAssemblyPointResponse::MergeFrom(const SetFleetAssemblyPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetAssemblyPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SetFleetAssemblyPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetAssemblyPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetAssemblyPointResponse::CopyFrom(const SetFleetAssemblyPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetAssemblyPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetAssemblyPointResponse::IsInitialized() const {
  return true;
}

void SetFleetAssemblyPointResponse::Swap(SetFleetAssemblyPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetAssemblyPointResponse::InternalSwap(SetFleetAssemblyPointResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetAssemblyPointResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssemblyPointChangedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_AssemblyPointChangedSignal_default_instance_._instance.get_mutable()->assembly_point_ = const_cast< ::common::msg::LocationMessage*>(
      ::common::msg::LocationMessage::internal_default_instance());
  ::outer::fleet::_AssemblyPointChangedSignal_default_instance_._instance.get_mutable()->setter_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
void AssemblyPointChangedSignal::clear_assembly_point() {
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssemblyPointChangedSignal::kAssemblyPointFieldNumber;
const int AssemblyPointChangedSignal::kSetterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssemblyPointChangedSignal::AssemblyPointChangedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsAssemblyPointChangedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.AssemblyPointChangedSignal)
}
AssemblyPointChangedSignal::AssemblyPointChangedSignal(const AssemblyPointChangedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_assembly_point()) {
    assembly_point_ = new ::common::msg::LocationMessage(*from.assembly_point_);
  } else {
    assembly_point_ = NULL;
  }
  if (from.has_setter()) {
    setter_ = new ::outer::fleet::FleetCrew(*from.setter_);
  } else {
    setter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.AssemblyPointChangedSignal)
}

void AssemblyPointChangedSignal::SharedCtor() {
  ::memset(&assembly_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&setter_) -
      reinterpret_cast<char*>(&assembly_point_)) + sizeof(setter_));
  _cached_size_ = 0;
}

AssemblyPointChangedSignal::~AssemblyPointChangedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.AssemblyPointChangedSignal)
  SharedDtor();
}

void AssemblyPointChangedSignal::SharedDtor() {
  if (this != internal_default_instance()) delete assembly_point_;
  if (this != internal_default_instance()) delete setter_;
}

void AssemblyPointChangedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssemblyPointChangedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssemblyPointChangedSignal& AssemblyPointChangedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsAssemblyPointChangedSignal();
  return *internal_default_instance();
}

AssemblyPointChangedSignal* AssemblyPointChangedSignal::New(::google::protobuf::Arena* arena) const {
  AssemblyPointChangedSignal* n = new AssemblyPointChangedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssemblyPointChangedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.AssemblyPointChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
  if (GetArenaNoVirtual() == NULL && setter_ != NULL) {
    delete setter_;
  }
  setter_ = NULL;
  _internal_metadata_.Clear();
}

bool AssemblyPointChangedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.AssemblyPointChangedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.msg.LocationMessage assembly_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assembly_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew setter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_setter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.AssemblyPointChangedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.AssemblyPointChangedSignal)
  return false;
#undef DO_
}

void AssemblyPointChangedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.AssemblyPointChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.LocationMessage assembly_point = 1;
  if (this->has_assembly_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->assembly_point_, output);
  }

  // .outer.fleet.FleetCrew setter = 2;
  if (this->has_setter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->setter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.AssemblyPointChangedSignal)
}

::google::protobuf::uint8* AssemblyPointChangedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.AssemblyPointChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.LocationMessage assembly_point = 1;
  if (this->has_assembly_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->assembly_point_, deterministic, target);
  }

  // .outer.fleet.FleetCrew setter = 2;
  if (this->has_setter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->setter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.AssemblyPointChangedSignal)
  return target;
}

size_t AssemblyPointChangedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.AssemblyPointChangedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.msg.LocationMessage assembly_point = 1;
  if (this->has_assembly_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assembly_point_);
  }

  // .outer.fleet.FleetCrew setter = 2;
  if (this->has_setter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->setter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssemblyPointChangedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.AssemblyPointChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const AssemblyPointChangedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssemblyPointChangedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.AssemblyPointChangedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.AssemblyPointChangedSignal)
    MergeFrom(*source);
  }
}

void AssemblyPointChangedSignal::MergeFrom(const AssemblyPointChangedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.AssemblyPointChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_assembly_point()) {
    mutable_assembly_point()->::common::msg::LocationMessage::MergeFrom(from.assembly_point());
  }
  if (from.has_setter()) {
    mutable_setter()->::outer::fleet::FleetCrew::MergeFrom(from.setter());
  }
}

void AssemblyPointChangedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.AssemblyPointChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssemblyPointChangedSignal::CopyFrom(const AssemblyPointChangedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.AssemblyPointChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssemblyPointChangedSignal::IsInitialized() const {
  return true;
}

void AssemblyPointChangedSignal::Swap(AssemblyPointChangedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssemblyPointChangedSignal::InternalSwap(AssemblyPointChangedSignal* other) {
  using std::swap;
  swap(assembly_point_, other->assembly_point_);
  swap(setter_, other->setter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssemblyPointChangedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetAssemblyPointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetAssemblyPointRequest::kUsernameFieldNumber;
const int GetFleetAssemblyPointRequest::kAppkeyFieldNumber;
const int GetFleetAssemblyPointRequest::kFleetUriFieldNumber;
const int GetFleetAssemblyPointRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetAssemblyPointRequest::GetFleetAssemblyPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetAssemblyPointRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetAssemblyPointRequest)
}
GetFleetAssemblyPointRequest::GetFleetAssemblyPointRequest(const GetFleetAssemblyPointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetAssemblyPointRequest)
}

void GetFleetAssemblyPointRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFleetAssemblyPointRequest::~GetFleetAssemblyPointRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetAssemblyPointRequest)
  SharedDtor();
}

void GetFleetAssemblyPointRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetAssemblyPointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetAssemblyPointRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetAssemblyPointRequest& GetFleetAssemblyPointRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetAssemblyPointRequest();
  return *internal_default_instance();
}

GetFleetAssemblyPointRequest* GetFleetAssemblyPointRequest::New(::google::protobuf::Arena* arena) const {
  GetFleetAssemblyPointRequest* n = new GetFleetAssemblyPointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetAssemblyPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetFleetAssemblyPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetAssemblyPointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetAssemblyPointRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetAssemblyPointRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetAssemblyPointRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetAssemblyPointRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetAssemblyPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetAssemblyPointRequest)
  return false;
#undef DO_
}

void GetFleetAssemblyPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fleet_uri(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetAssemblyPointRequest)
}

::google::protobuf::uint8* GetFleetAssemblyPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetAssemblyPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fleet_uri(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetAssemblyPointRequest)
  return target;
}

size_t GetFleetAssemblyPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetAssemblyPointRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetAssemblyPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetAssemblyPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetAssemblyPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetAssemblyPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetAssemblyPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetAssemblyPointRequest)
    MergeFrom(*source);
  }
}

void GetFleetAssemblyPointRequest::MergeFrom(const GetFleetAssemblyPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetAssemblyPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void GetFleetAssemblyPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetAssemblyPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetAssemblyPointRequest::CopyFrom(const GetFleetAssemblyPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetAssemblyPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetAssemblyPointRequest::IsInitialized() const {
  return true;
}

void GetFleetAssemblyPointRequest::Swap(GetFleetAssemblyPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetAssemblyPointRequest::InternalSwap(GetFleetAssemblyPointRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  fleet_uri_.Swap(&other->fleet_uri_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetAssemblyPointRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetAssemblyPointResponse::InitAsDefaultInstance() {
  ::outer::fleet::_GetFleetAssemblyPointResponse_default_instance_._instance.get_mutable()->assembly_point_ = const_cast< ::common::msg::LocationMessage*>(
      ::common::msg::LocationMessage::internal_default_instance());
}
void GetFleetAssemblyPointResponse::clear_assembly_point() {
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetAssemblyPointResponse::kRetFieldNumber;
const int GetFleetAssemblyPointResponse::kAssemblyPointFieldNumber;
const int GetFleetAssemblyPointResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetAssemblyPointResponse::GetFleetAssemblyPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetAssemblyPointResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetAssemblyPointResponse)
}
GetFleetAssemblyPointResponse::GetFleetAssemblyPointResponse(const GetFleetAssemblyPointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_assembly_point()) {
    assembly_point_ = new ::common::msg::LocationMessage(*from.assembly_point_);
  } else {
    assembly_point_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetAssemblyPointResponse)
}

void GetFleetAssemblyPointResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&assembly_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&assembly_point_)) + sizeof(ret_));
  _cached_size_ = 0;
}

GetFleetAssemblyPointResponse::~GetFleetAssemblyPointResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetAssemblyPointResponse)
  SharedDtor();
}

void GetFleetAssemblyPointResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete assembly_point_;
}

void GetFleetAssemblyPointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetAssemblyPointResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetAssemblyPointResponse& GetFleetAssemblyPointResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetAssemblyPointResponse();
  return *internal_default_instance();
}

GetFleetAssemblyPointResponse* GetFleetAssemblyPointResponse::New(::google::protobuf::Arena* arena) const {
  GetFleetAssemblyPointResponse* n = new GetFleetAssemblyPointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetAssemblyPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && assembly_point_ != NULL) {
    delete assembly_point_;
  }
  assembly_point_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetFleetAssemblyPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetAssemblyPointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.LocationMessage assembly_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assembly_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetAssemblyPointResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetAssemblyPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetAssemblyPointResponse)
  return false;
#undef DO_
}

void GetFleetAssemblyPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .common.msg.LocationMessage assembly_point = 2;
  if (this->has_assembly_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->assembly_point_, output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetAssemblyPointResponse)
}

::google::protobuf::uint8* GetFleetAssemblyPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetAssemblyPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .common.msg.LocationMessage assembly_point = 2;
  if (this->has_assembly_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->assembly_point_, deterministic, target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetAssemblyPointResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetAssemblyPointResponse)
  return target;
}

size_t GetFleetAssemblyPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetAssemblyPointResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.msg.LocationMessage assembly_point = 2;
  if (this->has_assembly_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assembly_point_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetAssemblyPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetAssemblyPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetAssemblyPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetAssemblyPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetAssemblyPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetAssemblyPointResponse)
    MergeFrom(*source);
  }
}

void GetFleetAssemblyPointResponse::MergeFrom(const GetFleetAssemblyPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetAssemblyPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_assembly_point()) {
    mutable_assembly_point()->::common::msg::LocationMessage::MergeFrom(from.assembly_point());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFleetAssemblyPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetAssemblyPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetAssemblyPointResponse::CopyFrom(const GetFleetAssemblyPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetAssemblyPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetAssemblyPointResponse::IsInitialized() const {
  return true;
}

void GetFleetAssemblyPointResponse::Swap(GetFleetAssemblyPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetAssemblyPointResponse::InternalSwap(GetFleetAssemblyPointResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(assembly_point_, other->assembly_point_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetAssemblyPointResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetInfoRequest::kUsernameFieldNumber;
const int GetFleetInfoRequest::kAppkeyFieldNumber;
const int GetFleetInfoRequest::kFleetUriFieldNumber;
const int GetFleetInfoRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetInfoRequest::GetFleetInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetInfoRequest)
}
GetFleetInfoRequest::GetFleetInfoRequest(const GetFleetInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetInfoRequest)
}

void GetFleetInfoRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFleetInfoRequest::~GetFleetInfoRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetInfoRequest)
  SharedDtor();
}

void GetFleetInfoRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetInfoRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetInfoRequest& GetFleetInfoRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInfoRequest();
  return *internal_default_instance();
}

GetFleetInfoRequest* GetFleetInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetFleetInfoRequest* n = new GetFleetInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetFleetInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInfoRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInfoRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInfoRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInfoRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetInfoRequest)
  return false;
#undef DO_
}

void GetFleetInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fleet_uri(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetInfoRequest)
}

::google::protobuf::uint8* GetFleetInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fleet_uri(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetInfoRequest)
  return target;
}

size_t GetFleetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_uri = 3;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetInfoRequest)
    MergeFrom(*source);
  }
}

void GetFleetInfoRequest::MergeFrom(const GetFleetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void GetFleetInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetInfoRequest::CopyFrom(const GetFleetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetInfoRequest::IsInitialized() const {
  return true;
}

void GetFleetInfoRequest::Swap(GetFleetInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetInfoRequest::InternalSwap(GetFleetInfoRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  fleet_uri_.Swap(&other->fleet_uri_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetInfoRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetInfoResponse::InitAsDefaultInstance() {
  ::outer::fleet::_GetFleetInfoResponse_default_instance_._instance.get_mutable()->fleet_info_ = const_cast< ::outer::fleet::FleetInfo*>(
      ::outer::fleet::FleetInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetInfoResponse::kRetFieldNumber;
const int GetFleetInfoResponse::kFleetInfoFieldNumber;
const int GetFleetInfoResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetInfoResponse::GetFleetInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetInfoResponse)
}
GetFleetInfoResponse::GetFleetInfoResponse(const GetFleetInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_fleet_info()) {
    fleet_info_ = new ::outer::fleet::FleetInfo(*from.fleet_info_);
  } else {
    fleet_info_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetInfoResponse)
}

void GetFleetInfoResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fleet_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&fleet_info_)) + sizeof(ret_));
  _cached_size_ = 0;
}

GetFleetInfoResponse::~GetFleetInfoResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetInfoResponse)
  SharedDtor();
}

void GetFleetInfoResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fleet_info_;
}

void GetFleetInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetInfoResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetInfoResponse& GetFleetInfoResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInfoResponse();
  return *internal_default_instance();
}

GetFleetInfoResponse* GetFleetInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetFleetInfoResponse* n = new GetFleetInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fleet_info_ != NULL) {
    delete fleet_info_;
  }
  fleet_info_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetFleetInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetInfo fleet_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fleet_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInfoResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetInfoResponse)
  return false;
#undef DO_
}

void GetFleetInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .outer.fleet.FleetInfo fleet_info = 2;
  if (this->has_fleet_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fleet_info_, output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetInfoResponse)
}

::google::protobuf::uint8* GetFleetInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .outer.fleet.FleetInfo fleet_info = 2;
  if (this->has_fleet_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->fleet_info_, deterministic, target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInfoResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetInfoResponse)
  return target;
}

size_t GetFleetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .outer.fleet.FleetInfo fleet_info = 2;
  if (this->has_fleet_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fleet_info_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetInfoResponse)
    MergeFrom(*source);
  }
}

void GetFleetInfoResponse::MergeFrom(const GetFleetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.has_fleet_info()) {
    mutable_fleet_info()->::outer::fleet::FleetInfo::MergeFrom(from.fleet_info());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFleetInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetInfoResponse::CopyFrom(const GetFleetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetInfoResponse::IsInitialized() const {
  return true;
}

void GetFleetInfoResponse::Swap(GetFleetInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetInfoResponse::InternalSwap(GetFleetInfoResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(fleet_info_, other->fleet_info_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetInfoResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetInvitationListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetInvitationListRequest::kUsernameFieldNumber;
const int GetFleetInvitationListRequest::kAppkeyFieldNumber;
const int GetFleetInvitationListRequest::kMsgIdFieldNumber;
const int GetFleetInvitationListRequest::kPageIndexFieldNumber;
const int GetFleetInvitationListRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetInvitationListRequest::GetFleetInvitationListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInvitationListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetInvitationListRequest)
}
GetFleetInvitationListRequest::GetFleetInvitationListRequest(const GetFleetInvitationListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ::memcpy(&page_index_, &from.page_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetInvitationListRequest)
}

void GetFleetInvitationListRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

GetFleetInvitationListRequest::~GetFleetInvitationListRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetInvitationListRequest)
  SharedDtor();
}

void GetFleetInvitationListRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetInvitationListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetInvitationListRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetInvitationListRequest& GetFleetInvitationListRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInvitationListRequest();
  return *internal_default_instance();
}

GetFleetInvitationListRequest* GetFleetInvitationListRequest::New(::google::protobuf::Arena* arena) const {
  GetFleetInvitationListRequest* n = new GetFleetInvitationListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetInvitationListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetInvitationListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool GetFleetInvitationListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetInvitationListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInvitationListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInvitationListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInvitationListRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetInvitationListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetInvitationListRequest)
  return false;
#undef DO_
}

void GetFleetInvitationListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetInvitationListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  // uint32 page_index = 4;
  if (this->page_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->page_index(), output);
  }

  // uint32 page_size = 5;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetInvitationListRequest)
}

::google::protobuf::uint8* GetFleetInvitationListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetInvitationListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  // uint32 page_index = 4;
  if (this->page_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->page_index(), target);
  }

  // uint32 page_size = 5;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetInvitationListRequest)
  return target;
}

size_t GetFleetInvitationListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetInvitationListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // uint32 page_index = 4;
  if (this->page_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_index());
  }

  // uint32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetInvitationListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetInvitationListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetInvitationListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetInvitationListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetInvitationListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetInvitationListRequest)
    MergeFrom(*source);
  }
}

void GetFleetInvitationListRequest::MergeFrom(const GetFleetInvitationListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetInvitationListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.page_index() != 0) {
    set_page_index(from.page_index());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void GetFleetInvitationListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetInvitationListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetInvitationListRequest::CopyFrom(const GetFleetInvitationListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetInvitationListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetInvitationListRequest::IsInitialized() const {
  return true;
}

void GetFleetInvitationListRequest::Swap(GetFleetInvitationListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetInvitationListRequest::InternalSwap(GetFleetInvitationListRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  swap(page_index_, other->page_index_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetInvitationListRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFleetInvitationListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFleetInvitationListResponse::kRetFieldNumber;
const int GetFleetInvitationListResponse::kInvitationNoticeInfoFieldNumber;
const int GetFleetInvitationListResponse::kTotalFieldNumber;
const int GetFleetInvitationListResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFleetInvitationListResponse::GetFleetInvitationListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInvitationListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.GetFleetInvitationListResponse)
}
GetFleetInvitationListResponse::GetFleetInvitationListResponse(const GetFleetInvitationListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      invitation_notice_info_(from.invitation_notice_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.fleet.GetFleetInvitationListResponse)
}

void GetFleetInvitationListResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  _cached_size_ = 0;
}

GetFleetInvitationListResponse::~GetFleetInvitationListResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.GetFleetInvitationListResponse)
  SharedDtor();
}

void GetFleetInvitationListResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFleetInvitationListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFleetInvitationListResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFleetInvitationListResponse& GetFleetInvitationListResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsGetFleetInvitationListResponse();
  return *internal_default_instance();
}

GetFleetInvitationListResponse* GetFleetInvitationListResponse::New(::google::protobuf::Arena* arena) const {
  GetFleetInvitationListResponse* n = new GetFleetInvitationListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFleetInvitationListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.GetFleetInvitationListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invitation_notice_info_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool GetFleetInvitationListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.GetFleetInvitationListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.fleet.InvitationNoticeInfo invitation_notice_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_invitation_notice_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.GetFleetInvitationListResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.GetFleetInvitationListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.GetFleetInvitationListResponse)
  return false;
#undef DO_
}

void GetFleetInvitationListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.GetFleetInvitationListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.fleet.InvitationNoticeInfo invitation_notice_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitation_notice_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->invitation_notice_info(static_cast<int>(i)), output);
  }

  // uint64 total = 3;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.GetFleetInvitationListResponse)
}

::google::protobuf::uint8* GetFleetInvitationListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.GetFleetInvitationListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.fleet.InvitationNoticeInfo invitation_notice_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invitation_notice_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->invitation_notice_info(static_cast<int>(i)), deterministic, target);
  }

  // uint64 total = 3;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.GetFleetInvitationListResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.GetFleetInvitationListResponse)
  return target;
}

size_t GetFleetInvitationListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.GetFleetInvitationListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.fleet.InvitationNoticeInfo invitation_notice_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->invitation_notice_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->invitation_notice_info(static_cast<int>(i)));
    }
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // uint64 total = 3;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFleetInvitationListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.GetFleetInvitationListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFleetInvitationListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFleetInvitationListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.GetFleetInvitationListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.GetFleetInvitationListResponse)
    MergeFrom(*source);
  }
}

void GetFleetInvitationListResponse::MergeFrom(const GetFleetInvitationListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.GetFleetInvitationListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invitation_notice_info_.MergeFrom(from.invitation_notice_info_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFleetInvitationListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.GetFleetInvitationListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFleetInvitationListResponse::CopyFrom(const GetFleetInvitationListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.GetFleetInvitationListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFleetInvitationListResponse::IsInitialized() const {
  return true;
}

void GetFleetInvitationListResponse::Swap(GetFleetInvitationListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFleetInvitationListResponse::InternalSwap(GetFleetInvitationListResponse* other) {
  using std::swap;
  invitation_notice_info_.InternalSwap(&other->invitation_notice_info_);
  msg_id_.Swap(&other->msg_id_);
  swap(total_, other->total_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFleetInvitationListResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetNameRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetNameRequest::kFleetUriFieldNumber;
const int SetFleetNameRequest::kActorUsernameFieldNumber;
const int SetFleetNameRequest::kAppkeyFieldNumber;
const int SetFleetNameRequest::kFleetNameFieldNumber;
const int SetFleetNameRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetNameRequest::SetFleetNameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetNameRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetNameRequest)
}
SetFleetNameRequest::SetFleetNameRequest(const SetFleetNameRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actor_username().size() > 0) {
    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetNameRequest)
}

void SetFleetNameRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetFleetNameRequest::~SetFleetNameRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetNameRequest)
  SharedDtor();
}

void SetFleetNameRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFleetNameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetNameRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetNameRequest& SetFleetNameRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetNameRequest();
  return *internal_default_instance();
}

SetFleetNameRequest* SetFleetNameRequest::New(::google::protobuf::Arena* arena) const {
  SetFleetNameRequest* n = new SetFleetNameRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetFleetNameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetNameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actor_username().data(), static_cast<int>(this->actor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameRequest.actor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameRequest.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetNameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetNameRequest)
  return false;
#undef DO_
}

void SetFleetNameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.actor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actor_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string fleet_name = 4;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fleet_name(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetNameRequest)
}

::google::protobuf::uint8* SetFleetNameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.actor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actor_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string fleet_name = 4;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fleet_name(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetNameRequest)
  return target;
}

size_t SetFleetNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetNameRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actor_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string fleet_name = 4;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetNameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetNameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetNameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetNameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetNameRequest)
    MergeFrom(*source);
  }
}

void SetFleetNameRequest::MergeFrom(const SetFleetNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.actor_username().size() > 0) {

    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void SetFleetNameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetNameRequest::CopyFrom(const SetFleetNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetNameRequest::IsInitialized() const {
  return true;
}

void SetFleetNameRequest::Swap(SetFleetNameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetNameRequest::InternalSwap(SetFleetNameRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  actor_username_.Swap(&other->actor_username_);
  appkey_.Swap(&other->appkey_);
  fleet_name_.Swap(&other->fleet_name_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetNameRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetNameResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetNameResponse::kRetFieldNumber;
const int SetFleetNameResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetNameResponse::SetFleetNameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetNameResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetNameResponse)
}
SetFleetNameResponse::SetFleetNameResponse(const SetFleetNameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetNameResponse)
}

void SetFleetNameResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

SetFleetNameResponse::~SetFleetNameResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetNameResponse)
  SharedDtor();
}

void SetFleetNameResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFleetNameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetNameResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetNameResponse& SetFleetNameResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetNameResponse();
  return *internal_default_instance();
}

SetFleetNameResponse* SetFleetNameResponse::New(::google::protobuf::Arena* arena) const {
  SetFleetNameResponse* n = new SetFleetNameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SetFleetNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetNameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetNameResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetNameResponse)
  return false;
#undef DO_
}

void SetFleetNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetNameResponse)
}

::google::protobuf::uint8* SetFleetNameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetNameResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetNameResponse)
  return target;
}

size_t SetFleetNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetNameResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetNameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetNameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetNameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetNameResponse)
    MergeFrom(*source);
  }
}

void SetFleetNameResponse::MergeFrom(const SetFleetNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SetFleetNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetNameResponse::CopyFrom(const SetFleetNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetNameResponse::IsInitialized() const {
  return true;
}

void SetFleetNameResponse::Swap(SetFleetNameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetNameResponse::InternalSwap(SetFleetNameResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetNameResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetNameChangedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetNameChangedSignal_default_instance_._instance.get_mutable()->actor_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetNameChangedSignal::kFleetNameFieldNumber;
const int FleetNameChangedSignal::kActorFieldNumber;
const int FleetNameChangedSignal::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetNameChangedSignal::FleetNameChangedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetNameChangedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetNameChangedSignal)
}
FleetNameChangedSignal::FleetNameChangedSignal(const FleetNameChangedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_name().size() > 0) {
    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_actor()) {
    actor_ = new ::outer::fleet::FleetCrew(*from.actor_);
  } else {
    actor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetNameChangedSignal)
}

void FleetNameChangedSignal::SharedCtor() {
  fleet_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_ = NULL;
  _cached_size_ = 0;
}

FleetNameChangedSignal::~FleetNameChangedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetNameChangedSignal)
  SharedDtor();
}

void FleetNameChangedSignal::SharedDtor() {
  fleet_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actor_;
}

void FleetNameChangedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetNameChangedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetNameChangedSignal& FleetNameChangedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetNameChangedSignal();
  return *internal_default_instance();
}

FleetNameChangedSignal* FleetNameChangedSignal::New(::google::protobuf::Arena* arena) const {
  FleetNameChangedSignal* n = new FleetNameChangedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetNameChangedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetNameChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetNameChangedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetNameChangedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetNameChangedSignal.fleet_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew actor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetNameChangedSignal.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetNameChangedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetNameChangedSignal)
  return false;
#undef DO_
}

void FleetNameChangedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetNameChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetNameChangedSignal.fleet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_name(), output);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->actor_, output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetNameChangedSignal.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetNameChangedSignal)
}

::google::protobuf::uint8* FleetNameChangedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetNameChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_name().data(), static_cast<int>(this->fleet_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetNameChangedSignal.fleet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_name(), target);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->actor_, deterministic, target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetNameChangedSignal.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetNameChangedSignal)
  return target;
}

size_t FleetNameChangedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetNameChangedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_name = 1;
  if (this->fleet_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_name());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetNameChangedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetNameChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetNameChangedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetNameChangedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetNameChangedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetNameChangedSignal)
    MergeFrom(*source);
  }
}

void FleetNameChangedSignal::MergeFrom(const FleetNameChangedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetNameChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_name().size() > 0) {

    fleet_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_name_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_actor()) {
    mutable_actor()->::outer::fleet::FleetCrew::MergeFrom(from.actor());
  }
}

void FleetNameChangedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetNameChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetNameChangedSignal::CopyFrom(const FleetNameChangedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetNameChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetNameChangedSignal::IsInitialized() const {
  return true;
}

void FleetNameChangedSignal::Swap(FleetNameChangedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetNameChangedSignal::InternalSwap(FleetNameChangedSignal* other) {
  using std::swap;
  fleet_name_.Swap(&other->fleet_name_);
  appkey_.Swap(&other->appkey_);
  swap(actor_, other->actor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetNameChangedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetDescRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetDescRequest::kFleetUriFieldNumber;
const int SetFleetDescRequest::kActorUsernameFieldNumber;
const int SetFleetDescRequest::kAppkeyFieldNumber;
const int SetFleetDescRequest::kDescFieldNumber;
const int SetFleetDescRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetDescRequest::SetFleetDescRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetDescRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetDescRequest)
}
SetFleetDescRequest::SetFleetDescRequest(const SetFleetDescRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actor_username().size() > 0) {
    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetDescRequest)
}

void SetFleetDescRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetFleetDescRequest::~SetFleetDescRequest() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetDescRequest)
  SharedDtor();
}

void SetFleetDescRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFleetDescRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetDescRequest::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetDescRequest& SetFleetDescRequest::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetDescRequest();
  return *internal_default_instance();
}

SetFleetDescRequest* SetFleetDescRequest::New(::google::protobuf::Arena* arena) const {
  SetFleetDescRequest* n = new SetFleetDescRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetDescRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetDescRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetFleetDescRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetDescRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actor_username().data(), static_cast<int>(this->actor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescRequest.actor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescRequest.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetDescRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetDescRequest)
  return false;
#undef DO_
}

void SetFleetDescRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetDescRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.actor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actor_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desc(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetDescRequest)
}

::google::protobuf::uint8* SetFleetDescRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetDescRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actor_username().data(), static_cast<int>(this->actor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.actor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actor_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetDescRequest)
  return target;
}

size_t SetFleetDescRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetDescRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string actor_username = 2;
  if (this->actor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actor_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetDescRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetDescRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetDescRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetDescRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetDescRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetDescRequest)
    MergeFrom(*source);
  }
}

void SetFleetDescRequest::MergeFrom(const SetFleetDescRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetDescRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.actor_username().size() > 0) {

    actor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void SetFleetDescRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetDescRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetDescRequest::CopyFrom(const SetFleetDescRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetDescRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetDescRequest::IsInitialized() const {
  return true;
}

void SetFleetDescRequest::Swap(SetFleetDescRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetDescRequest::InternalSwap(SetFleetDescRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  actor_username_.Swap(&other->actor_username_);
  appkey_.Swap(&other->appkey_);
  desc_.Swap(&other->desc_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetDescRequest::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetFleetDescResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetFleetDescResponse::kRetFieldNumber;
const int SetFleetDescResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetFleetDescResponse::SetFleetDescResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetDescResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.SetFleetDescResponse)
}
SetFleetDescResponse::SetFleetDescResponse(const SetFleetDescResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.fleet.SetFleetDescResponse)
}

void SetFleetDescResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

SetFleetDescResponse::~SetFleetDescResponse() {
  // @@protoc_insertion_point(destructor:outer.fleet.SetFleetDescResponse)
  SharedDtor();
}

void SetFleetDescResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetFleetDescResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFleetDescResponse::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetFleetDescResponse& SetFleetDescResponse::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsSetFleetDescResponse();
  return *internal_default_instance();
}

SetFleetDescResponse* SetFleetDescResponse::New(::google::protobuf::Arena* arena) const {
  SetFleetDescResponse* n = new SetFleetDescResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetFleetDescResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.SetFleetDescResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SetFleetDescResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.SetFleetDescResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.SetFleetDescResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.SetFleetDescResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.SetFleetDescResponse)
  return false;
#undef DO_
}

void SetFleetDescResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.SetFleetDescResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.SetFleetDescResponse)
}

::google::protobuf::uint8* SetFleetDescResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.SetFleetDescResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.SetFleetDescResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.SetFleetDescResponse)
  return target;
}

size_t SetFleetDescResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.SetFleetDescResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFleetDescResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.SetFleetDescResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetFleetDescResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetFleetDescResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.SetFleetDescResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.SetFleetDescResponse)
    MergeFrom(*source);
  }
}

void SetFleetDescResponse::MergeFrom(const SetFleetDescResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.SetFleetDescResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SetFleetDescResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.SetFleetDescResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFleetDescResponse::CopyFrom(const SetFleetDescResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.SetFleetDescResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFleetDescResponse::IsInitialized() const {
  return true;
}

void SetFleetDescResponse::Swap(SetFleetDescResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetFleetDescResponse::InternalSwap(SetFleetDescResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetFleetDescResponse::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetDescChangedSignal::InitAsDefaultInstance() {
  ::outer::fleet::_FleetDescChangedSignal_default_instance_._instance.get_mutable()->actor_ = const_cast< ::outer::fleet::FleetCrew*>(
      ::outer::fleet::FleetCrew::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetDescChangedSignal::kDescFieldNumber;
const int FleetDescChangedSignal::kActorFieldNumber;
const int FleetDescChangedSignal::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetDescChangedSignal::FleetDescChangedSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetDescChangedSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.fleet.FleetDescChangedSignal)
}
FleetDescChangedSignal::FleetDescChangedSignal(const FleetDescChangedSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_actor()) {
    actor_ = new ::outer::fleet::FleetCrew(*from.actor_);
  } else {
    actor_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.fleet.FleetDescChangedSignal)
}

void FleetDescChangedSignal::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_ = NULL;
  _cached_size_ = 0;
}

FleetDescChangedSignal::~FleetDescChangedSignal() {
  // @@protoc_insertion_point(destructor:outer.fleet.FleetDescChangedSignal)
  SharedDtor();
}

void FleetDescChangedSignal::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete actor_;
}

void FleetDescChangedSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetDescChangedSignal::descriptor() {
  ::protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetDescChangedSignal& FleetDescChangedSignal::default_instance() {
  ::protobuf_outer_2ffleet_2eproto::InitDefaultsFleetDescChangedSignal();
  return *internal_default_instance();
}

FleetDescChangedSignal* FleetDescChangedSignal::New(::google::protobuf::Arena* arena) const {
  FleetDescChangedSignal* n = new FleetDescChangedSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetDescChangedSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.fleet.FleetDescChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
  _internal_metadata_.Clear();
}

bool FleetDescChangedSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.fleet.FleetDescChangedSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string desc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetDescChangedSignal.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.fleet.FleetCrew actor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.fleet.FleetDescChangedSignal.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.fleet.FleetDescChangedSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.fleet.FleetDescChangedSignal)
  return false;
#undef DO_
}

void FleetDescChangedSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.fleet.FleetDescChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetDescChangedSignal.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->desc(), output);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->actor_, output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetDescChangedSignal.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.fleet.FleetDescChangedSignal)
}

::google::protobuf::uint8* FleetDescChangedSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.fleet.FleetDescChangedSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetDescChangedSignal.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->desc(), target);
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->actor_, deterministic, target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.fleet.FleetDescChangedSignal.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.fleet.FleetDescChangedSignal)
  return target;
}

size_t FleetDescChangedSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.fleet.FleetDescChangedSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string desc = 1;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // .outer.fleet.FleetCrew actor = 2;
  if (this->has_actor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actor_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetDescChangedSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.fleet.FleetDescChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetDescChangedSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetDescChangedSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.fleet.FleetDescChangedSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.fleet.FleetDescChangedSignal)
    MergeFrom(*source);
  }
}

void FleetDescChangedSignal::MergeFrom(const FleetDescChangedSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.fleet.FleetDescChangedSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.has_actor()) {
    mutable_actor()->::outer::fleet::FleetCrew::MergeFrom(from.actor());
  }
}

void FleetDescChangedSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.fleet.FleetDescChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetDescChangedSignal::CopyFrom(const FleetDescChangedSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.fleet.FleetDescChangedSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetDescChangedSignal::IsInitialized() const {
  return true;
}

void FleetDescChangedSignal::Swap(FleetDescChangedSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetDescChangedSignal::InternalSwap(FleetDescChangedSignal* other) {
  using std::swap;
  desc_.Swap(&other->desc_);
  appkey_.Swap(&other->appkey_);
  swap(actor_, other->actor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetDescChangedSignal::GetMetadata() const {
  protobuf_outer_2ffleet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffleet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fleet
}  // namespace outer

// @@protoc_insertion_point(global_scope)
