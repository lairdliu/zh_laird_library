// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/push.proto

#include "outer/push.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace push {
class CommonResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommonResponse>
      _instance;
} _CommonResponse_default_instance_;
class SetTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTokenRequest>
      _instance;
} _SetTokenRequest_default_instance_;
class ClearTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClearTokenRequest>
      _instance;
} _ClearTokenRequest_default_instance_;
class CreateCertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateCertRequest>
      _instance;
} _CreateCertRequest_default_instance_;
class OperateCertRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OperateCertRequest>
      _instance;
} _OperateCertRequest_default_instance_;
class QueryCertResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryCertResponse>
      _instance;
} _QueryCertResponse_default_instance_;
class SetBadgeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetBadgeRequest>
      _instance;
} _SetBadgeRequest_default_instance_;
}  // namespace push
}  // namespace outer
namespace protobuf_outer_2fpush_2eproto {
void InitDefaultsCommonResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_CommonResponse_default_instance_;
    new (ptr) ::outer::push::CommonResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::CommonResponse::InitAsDefaultInstance();
}

void InitDefaultsCommonResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommonResponseImpl);
}

void InitDefaultsSetTokenRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fbase_2eproto::InitDefaultsMobileBase();
  {
    void* ptr = &::outer::push::_SetTokenRequest_default_instance_;
    new (ptr) ::outer::push::SetTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::SetTokenRequest::InitAsDefaultInstance();
}

void InitDefaultsSetTokenRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetTokenRequestImpl);
}

void InitDefaultsClearTokenRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_ClearTokenRequest_default_instance_;
    new (ptr) ::outer::push::ClearTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::ClearTokenRequest::InitAsDefaultInstance();
}

void InitDefaultsClearTokenRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClearTokenRequestImpl);
}

void InitDefaultsCreateCertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_CreateCertRequest_default_instance_;
    new (ptr) ::outer::push::CreateCertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::CreateCertRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateCertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateCertRequestImpl);
}

void InitDefaultsOperateCertRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_OperateCertRequest_default_instance_;
    new (ptr) ::outer::push::OperateCertRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::OperateCertRequest::InitAsDefaultInstance();
}

void InitDefaultsOperateCertRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOperateCertRequestImpl);
}

void InitDefaultsQueryCertResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_QueryCertResponse_default_instance_;
    new (ptr) ::outer::push::QueryCertResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::QueryCertResponse::InitAsDefaultInstance();
}

void InitDefaultsQueryCertResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryCertResponseImpl);
}

void InitDefaultsSetBadgeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::push::_SetBadgeRequest_default_instance_;
    new (ptr) ::outer::push::SetBadgeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::push::SetBadgeRequest::InitAsDefaultInstance();
}

void InitDefaultsSetBadgeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetBadgeRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CommonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CommonResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, crt_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, ios_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, android_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, android_appsecret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, android_package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetTokenRequest, base_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::ClearTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::ClearTokenRequest, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_develop_crt_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_develop_crt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_develop_crt_pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_product_crt_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_product_crt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::CreateCertRequest, ios_product_crt_pwd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::OperateCertRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::OperateCertRequest, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_develop_crt_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_develop_crt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_develop_crt_pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_product_crt_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_product_crt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, ios_product_crt_pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, certid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, pro_bundle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, dev_bundle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::QueryCertResponse, modified_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetBadgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetBadgeRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::push::SetBadgeRequest, badge_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::push::CommonResponse)},
  { 6, -1, sizeof(::outer::push::SetTokenRequest)},
  { 18, -1, sizeof(::outer::push::ClearTokenRequest)},
  { 24, -1, sizeof(::outer::push::CreateCertRequest)},
  { 36, -1, sizeof(::outer::push::OperateCertRequest)},
  { 42, -1, sizeof(::outer::push::QueryCertResponse)},
  { 59, -1, sizeof(::outer::push::SetBadgeRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_CommonResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_SetTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_ClearTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_CreateCertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_OperateCertRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_QueryCertResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::push::_SetBadgeRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/push.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020outer/push.proto\022\nouter.push\032\024common/e"
      "rrcode.proto\032\021common/base.proto\"9\n\016Commo"
      "nResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode."
      "EErrorCode\"\326\001\n\017SetTokenRequest\022\'\n\010crt_ty"
      "pe\030\001 \001(\0162\025.outer.push.EPushType\022\021\n\tios_t"
      "oken\030\002 \001(\t\022\013\n\003uid\030\003 \001(\t\022\025\n\randroid_token"
      "\030\004 \001(\t\022\031\n\021android_appsecret\030\005 \001(\t\022\034\n\024and"
      "roid_package_name\030\006 \001(\t\022*\n\tbase_info\030\007 \001"
      "(\0132\027.common.base.MobileBase\" \n\021ClearToke"
      "nRequest\022\013\n\003uid\030\001 \001(\t\"\313\001\n\021CreateCertRequ"
      "est\022\034\n\024ios_develop_crt_name\030\001 \001(\t\022\016\n\006app"
      "key\030\002 \001(\t\022\027\n\017ios_develop_crt\030\003 \001(\014\022\033\n\023io"
      "s_develop_crt_pwd\030\004 \001(\t\022\034\n\024ios_product_c"
      "rt_name\030\005 \001(\t\022\027\n\017ios_product_crt\030\006 \001(\014\022\033"
      "\n\023ios_product_crt_pwd\030\007 \001(\t\"$\n\022OperateCe"
      "rtRequest\022\016\n\006appkey\030\001 \001(\t\"\254\002\n\021QueryCertR"
      "esponse\022\034\n\024ios_develop_crt_name\030\001 \001(\t\022\016\n"
      "\006appkey\030\002 \001(\t\022\027\n\017ios_develop_crt\030\003 \001(\014\022\033"
      "\n\023ios_develop_crt_pwd\030\004 \001(\t\022\034\n\024ios_produ"
      "ct_crt_name\030\005 \001(\t\022\027\n\017ios_product_crt\030\006 \001"
      "(\014\022\033\n\023ios_product_crt_pwd\030\007 \001(\t\022\016\n\006certi"
      "d\030\010 \001(\t\022\025\n\rpro_bundle_id\030\t \001(\t\022\025\n\rdev_bu"
      "ndle_id\030\n \001(\t\022\017\n\007created\030\013 \001(\004\022\020\n\010modifi"
      "ed\030\014 \001(\004\"-\n\017SetBadgeRequest\022\013\n\003uid\030\001 \001(\t"
      "\022\r\n\005badge\030\002 \001(\r*T\n\tEPushType\022\013\n\007UNKNOWN\020"
      "\000\022\017\n\013IOS_DEVELOP\020\004\022\017\n\013IOS_PRODUCT\020\001\022\013\n\007X"
      "IAO_MI\020\002\022\013\n\007HUA_WEI\020\0032\324\003\n\013PushService\022C\n"
      "\010SetToken\022\033.outer.push.SetTokenRequest\032\032"
      ".outer.push.CommonResponse\022G\n\nClearToken"
      "\022\035.outer.push.ClearTokenRequest\032\032.outer."
      "push.CommonResponse\022N\n\021CreateCertificate"
      "\022\035.outer.push.CreateCertRequest\032\032.outer."
      "push.CommonResponse\022O\n\021DeleteCertificate"
      "\022\036.outer.push.OperateCertRequest\032\032.outer"
      ".push.CommonResponse\022Q\n\020QueryCertificate"
      "\022\036.outer.push.OperateCertRequest\032\035.outer"
      ".push.QueryCertResponse\022C\n\010SetBadge\022\033.ou"
      "ter.push.SetBadgeRequest\032\032.outer.push.Co"
      "mmonResponseB&\n\034com.cmcc.littlec.proto.o"
      "uterB\004PushP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1580);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/push.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fpush_2eproto
namespace outer {
namespace push {
const ::google::protobuf::EnumDescriptor* EPushType_descriptor() {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2fpush_2eproto::file_level_enum_descriptors[0];
}
bool EPushType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CommonResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonResponse::CommonResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsCommonResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.CommonResponse)
}
CommonResponse::CommonResponse(const CommonResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.push.CommonResponse)
}

void CommonResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

CommonResponse::~CommonResponse() {
  // @@protoc_insertion_point(destructor:outer.push.CommonResponse)
  SharedDtor();
}

void CommonResponse::SharedDtor() {
}

void CommonResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonResponse::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommonResponse& CommonResponse::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsCommonResponse();
  return *internal_default_instance();
}

CommonResponse* CommonResponse::New(::google::protobuf::Arena* arena) const {
  CommonResponse* n = new CommonResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.CommonResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool CommonResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.CommonResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.CommonResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.CommonResponse)
  return false;
#undef DO_
}

void CommonResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.CommonResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.CommonResponse)
}

::google::protobuf::uint8* CommonResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.CommonResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.CommonResponse)
  return target;
}

size_t CommonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.CommonResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.CommonResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.CommonResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.CommonResponse)
    MergeFrom(*source);
  }
}

void CommonResponse::MergeFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.CommonResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CommonResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonResponse::CopyFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonResponse::IsInitialized() const {
  return true;
}

void CommonResponse::Swap(CommonResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonResponse::InternalSwap(CommonResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonResponse::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTokenRequest::InitAsDefaultInstance() {
  ::outer::push::_SetTokenRequest_default_instance_._instance.get_mutable()->base_info_ = const_cast< ::common::base::MobileBase*>(
      ::common::base::MobileBase::internal_default_instance());
}
void SetTokenRequest::clear_base_info() {
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTokenRequest::kCrtTypeFieldNumber;
const int SetTokenRequest::kIosTokenFieldNumber;
const int SetTokenRequest::kUidFieldNumber;
const int SetTokenRequest::kAndroidTokenFieldNumber;
const int SetTokenRequest::kAndroidAppsecretFieldNumber;
const int SetTokenRequest::kAndroidPackageNameFieldNumber;
const int SetTokenRequest::kBaseInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTokenRequest::SetTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsSetTokenRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.SetTokenRequest)
}
SetTokenRequest::SetTokenRequest(const SetTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ios_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_token().size() > 0) {
    ios_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_token_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  android_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.android_token().size() > 0) {
    android_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_token_);
  }
  android_appsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.android_appsecret().size() > 0) {
    android_appsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_appsecret_);
  }
  android_package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.android_package_name().size() > 0) {
    android_package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_package_name_);
  }
  if (from.has_base_info()) {
    base_info_ = new ::common::base::MobileBase(*from.base_info_);
  } else {
    base_info_ = NULL;
  }
  crt_type_ = from.crt_type_;
  // @@protoc_insertion_point(copy_constructor:outer.push.SetTokenRequest)
}

void SetTokenRequest::SharedCtor() {
  ios_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_appsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crt_type_) -
      reinterpret_cast<char*>(&base_info_)) + sizeof(crt_type_));
  _cached_size_ = 0;
}

SetTokenRequest::~SetTokenRequest() {
  // @@protoc_insertion_point(destructor:outer.push.SetTokenRequest)
  SharedDtor();
}

void SetTokenRequest::SharedDtor() {
  ios_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_appsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_info_;
}

void SetTokenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTokenRequest::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTokenRequest& SetTokenRequest::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsSetTokenRequest();
  return *internal_default_instance();
}

SetTokenRequest* SetTokenRequest::New(::google::protobuf::Arena* arena) const {
  SetTokenRequest* n = new SetTokenRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.SetTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ios_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_appsecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
  crt_type_ = 0;
  _internal_metadata_.Clear();
}

bool SetTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.SetTokenRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .outer.push.EPushType crt_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_crt_type(static_cast< ::outer::push::EPushType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_token().data(), static_cast<int>(this->ios_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetTokenRequest.ios_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetTokenRequest.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string android_token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->android_token().data(), static_cast<int>(this->android_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetTokenRequest.android_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string android_appsecret = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_appsecret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->android_appsecret().data(), static_cast<int>(this->android_appsecret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetTokenRequest.android_appsecret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string android_package_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_package_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->android_package_name().data(), static_cast<int>(this->android_package_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetTokenRequest.android_package_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.base.MobileBase base_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.SetTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.SetTokenRequest)
  return false;
#undef DO_
}

void SetTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.SetTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.push.EPushType crt_type = 1;
  if (this->crt_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->crt_type(), output);
  }

  // string ios_token = 2;
  if (this->ios_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_token().data(), static_cast<int>(this->ios_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.ios_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ios_token(), output);
  }

  // string uid = 3;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uid(), output);
  }

  // string android_token = 4;
  if (this->android_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_token().data(), static_cast<int>(this->android_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->android_token(), output);
  }

  // string android_appsecret = 5;
  if (this->android_appsecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_appsecret().data(), static_cast<int>(this->android_appsecret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_appsecret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->android_appsecret(), output);
  }

  // string android_package_name = 6;
  if (this->android_package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_package_name().data(), static_cast<int>(this->android_package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->android_package_name(), output);
  }

  // .common.base.MobileBase base_info = 7;
  if (this->has_base_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->base_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.SetTokenRequest)
}

::google::protobuf::uint8* SetTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.SetTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .outer.push.EPushType crt_type = 1;
  if (this->crt_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->crt_type(), target);
  }

  // string ios_token = 2;
  if (this->ios_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_token().data(), static_cast<int>(this->ios_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.ios_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ios_token(), target);
  }

  // string uid = 3;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uid(), target);
  }

  // string android_token = 4;
  if (this->android_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_token().data(), static_cast<int>(this->android_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->android_token(), target);
  }

  // string android_appsecret = 5;
  if (this->android_appsecret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_appsecret().data(), static_cast<int>(this->android_appsecret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_appsecret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->android_appsecret(), target);
  }

  // string android_package_name = 6;
  if (this->android_package_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_package_name().data(), static_cast<int>(this->android_package_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetTokenRequest.android_package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->android_package_name(), target);
  }

  // .common.base.MobileBase base_info = 7;
  if (this->has_base_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->base_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.SetTokenRequest)
  return target;
}

size_t SetTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.SetTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ios_token = 2;
  if (this->ios_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_token());
  }

  // string uid = 3;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string android_token = 4;
  if (this->android_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->android_token());
  }

  // string android_appsecret = 5;
  if (this->android_appsecret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->android_appsecret());
  }

  // string android_package_name = 6;
  if (this->android_package_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->android_package_name());
  }

  // .common.base.MobileBase base_info = 7;
  if (this->has_base_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_info_);
  }

  // .outer.push.EPushType crt_type = 1;
  if (this->crt_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->crt_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.SetTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.SetTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.SetTokenRequest)
    MergeFrom(*source);
  }
}

void SetTokenRequest::MergeFrom(const SetTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.SetTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ios_token().size() > 0) {

    ios_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_token_);
  }
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.android_token().size() > 0) {

    android_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_token_);
  }
  if (from.android_appsecret().size() > 0) {

    android_appsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_appsecret_);
  }
  if (from.android_package_name().size() > 0) {

    android_package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_package_name_);
  }
  if (from.has_base_info()) {
    mutable_base_info()->::common::base::MobileBase::MergeFrom(from.base_info());
  }
  if (from.crt_type() != 0) {
    set_crt_type(from.crt_type());
  }
}

void SetTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.SetTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTokenRequest::CopyFrom(const SetTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.SetTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTokenRequest::IsInitialized() const {
  return true;
}

void SetTokenRequest::Swap(SetTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTokenRequest::InternalSwap(SetTokenRequest* other) {
  using std::swap;
  ios_token_.Swap(&other->ios_token_);
  uid_.Swap(&other->uid_);
  android_token_.Swap(&other->android_token_);
  android_appsecret_.Swap(&other->android_appsecret_);
  android_package_name_.Swap(&other->android_package_name_);
  swap(base_info_, other->base_info_);
  swap(crt_type_, other->crt_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetTokenRequest::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClearTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearTokenRequest::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearTokenRequest::ClearTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsClearTokenRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.ClearTokenRequest)
}
ClearTokenRequest::ClearTokenRequest(const ClearTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.push.ClearTokenRequest)
}

void ClearTokenRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClearTokenRequest::~ClearTokenRequest() {
  // @@protoc_insertion_point(destructor:outer.push.ClearTokenRequest)
  SharedDtor();
}

void ClearTokenRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClearTokenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearTokenRequest::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearTokenRequest& ClearTokenRequest::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsClearTokenRequest();
  return *internal_default_instance();
}

ClearTokenRequest* ClearTokenRequest::New(::google::protobuf::Arena* arena) const {
  ClearTokenRequest* n = new ClearTokenRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.ClearTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClearTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.ClearTokenRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.ClearTokenRequest.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.ClearTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.ClearTokenRequest)
  return false;
#undef DO_
}

void ClearTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.ClearTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.ClearTokenRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.ClearTokenRequest)
}

::google::protobuf::uint8* ClearTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.ClearTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.ClearTokenRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.ClearTokenRequest)
  return target;
}

size_t ClearTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.ClearTokenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.ClearTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.ClearTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.ClearTokenRequest)
    MergeFrom(*source);
  }
}

void ClearTokenRequest::MergeFrom(const ClearTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.ClearTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void ClearTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.ClearTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearTokenRequest::CopyFrom(const ClearTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.ClearTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearTokenRequest::IsInitialized() const {
  return true;
}

void ClearTokenRequest::Swap(ClearTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearTokenRequest::InternalSwap(ClearTokenRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClearTokenRequest::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateCertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateCertRequest::kIosDevelopCrtNameFieldNumber;
const int CreateCertRequest::kAppkeyFieldNumber;
const int CreateCertRequest::kIosDevelopCrtFieldNumber;
const int CreateCertRequest::kIosDevelopCrtPwdFieldNumber;
const int CreateCertRequest::kIosProductCrtNameFieldNumber;
const int CreateCertRequest::kIosProductCrtFieldNumber;
const int CreateCertRequest::kIosProductCrtPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateCertRequest::CreateCertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsCreateCertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.CreateCertRequest)
}
CreateCertRequest::CreateCertRequest(const CreateCertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ios_develop_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt_name().size() > 0) {
    ios_develop_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_name_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ios_develop_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt().size() > 0) {
    ios_develop_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_);
  }
  ios_develop_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt_pwd().size() > 0) {
    ios_develop_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_pwd_);
  }
  ios_product_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt_name().size() > 0) {
    ios_product_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_name_);
  }
  ios_product_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt().size() > 0) {
    ios_product_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_);
  }
  ios_product_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt_pwd().size() > 0) {
    ios_product_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_pwd_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.push.CreateCertRequest)
}

void CreateCertRequest::SharedCtor() {
  ios_develop_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateCertRequest::~CreateCertRequest() {
  // @@protoc_insertion_point(destructor:outer.push.CreateCertRequest)
  SharedDtor();
}

void CreateCertRequest::SharedDtor() {
  ios_develop_crt_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateCertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCertRequest::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateCertRequest& CreateCertRequest::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsCreateCertRequest();
  return *internal_default_instance();
}

CreateCertRequest* CreateCertRequest::New(::google::protobuf::Arena* arena) const {
  CreateCertRequest* n = new CreateCertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateCertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.CreateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ios_develop_crt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateCertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.CreateCertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ios_develop_crt_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_develop_crt_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.CreateCertRequest.ios_develop_crt_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.CreateCertRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ios_develop_crt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_develop_crt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_develop_crt_pwd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_develop_crt_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.CreateCertRequest.ios_develop_crt_pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_product_crt_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_product_crt_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.CreateCertRequest.ios_product_crt_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ios_product_crt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_product_crt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_product_crt_pwd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_product_crt_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.CreateCertRequest.ios_product_crt_pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.CreateCertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.CreateCertRequest)
  return false;
#undef DO_
}

void CreateCertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.CreateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_develop_crt_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ios_develop_crt_name(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ios_develop_crt(), output);
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_develop_crt_pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ios_develop_crt_pwd(), output);
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_product_crt_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ios_product_crt_name(), output);
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ios_product_crt(), output);
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_product_crt_pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ios_product_crt_pwd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.CreateCertRequest)
}

::google::protobuf::uint8* CreateCertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.CreateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_develop_crt_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ios_develop_crt_name(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ios_develop_crt(), target);
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_develop_crt_pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ios_develop_crt_pwd(), target);
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_product_crt_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ios_product_crt_name(), target);
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ios_product_crt(), target);
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.CreateCertRequest.ios_product_crt_pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ios_product_crt_pwd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.CreateCertRequest)
  return target;
}

size_t CreateCertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.CreateCertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_develop_crt_name());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ios_develop_crt());
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_develop_crt_pwd());
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_product_crt_name());
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ios_product_crt());
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_product_crt_pwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.CreateCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateCertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.CreateCertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.CreateCertRequest)
    MergeFrom(*source);
  }
}

void CreateCertRequest::MergeFrom(const CreateCertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.CreateCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ios_develop_crt_name().size() > 0) {

    ios_develop_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_name_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.ios_develop_crt().size() > 0) {

    ios_develop_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_);
  }
  if (from.ios_develop_crt_pwd().size() > 0) {

    ios_develop_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_pwd_);
  }
  if (from.ios_product_crt_name().size() > 0) {

    ios_product_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_name_);
  }
  if (from.ios_product_crt().size() > 0) {

    ios_product_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_);
  }
  if (from.ios_product_crt_pwd().size() > 0) {

    ios_product_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_pwd_);
  }
}

void CreateCertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.CreateCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCertRequest::CopyFrom(const CreateCertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.CreateCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCertRequest::IsInitialized() const {
  return true;
}

void CreateCertRequest::Swap(CreateCertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateCertRequest::InternalSwap(CreateCertRequest* other) {
  using std::swap;
  ios_develop_crt_name_.Swap(&other->ios_develop_crt_name_);
  appkey_.Swap(&other->appkey_);
  ios_develop_crt_.Swap(&other->ios_develop_crt_);
  ios_develop_crt_pwd_.Swap(&other->ios_develop_crt_pwd_);
  ios_product_crt_name_.Swap(&other->ios_product_crt_name_);
  ios_product_crt_.Swap(&other->ios_product_crt_);
  ios_product_crt_pwd_.Swap(&other->ios_product_crt_pwd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateCertRequest::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OperateCertRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperateCertRequest::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperateCertRequest::OperateCertRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsOperateCertRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.OperateCertRequest)
}
OperateCertRequest::OperateCertRequest(const OperateCertRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.push.OperateCertRequest)
}

void OperateCertRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OperateCertRequest::~OperateCertRequest() {
  // @@protoc_insertion_point(destructor:outer.push.OperateCertRequest)
  SharedDtor();
}

void OperateCertRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperateCertRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperateCertRequest::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperateCertRequest& OperateCertRequest::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsOperateCertRequest();
  return *internal_default_instance();
}

OperateCertRequest* OperateCertRequest::New(::google::protobuf::Arena* arena) const {
  OperateCertRequest* n = new OperateCertRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperateCertRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.OperateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OperateCertRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.OperateCertRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.OperateCertRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.OperateCertRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.OperateCertRequest)
  return false;
#undef DO_
}

void OperateCertRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.OperateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.OperateCertRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.OperateCertRequest)
}

::google::protobuf::uint8* OperateCertRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.OperateCertRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.OperateCertRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.OperateCertRequest)
  return target;
}

size_t OperateCertRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.OperateCertRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperateCertRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.OperateCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateCertRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperateCertRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.OperateCertRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.OperateCertRequest)
    MergeFrom(*source);
  }
}

void OperateCertRequest::MergeFrom(const OperateCertRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.OperateCertRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void OperateCertRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.OperateCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateCertRequest::CopyFrom(const OperateCertRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.OperateCertRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateCertRequest::IsInitialized() const {
  return true;
}

void OperateCertRequest::Swap(OperateCertRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperateCertRequest::InternalSwap(OperateCertRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperateCertRequest::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryCertResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryCertResponse::kIosDevelopCrtNameFieldNumber;
const int QueryCertResponse::kAppkeyFieldNumber;
const int QueryCertResponse::kIosDevelopCrtFieldNumber;
const int QueryCertResponse::kIosDevelopCrtPwdFieldNumber;
const int QueryCertResponse::kIosProductCrtNameFieldNumber;
const int QueryCertResponse::kIosProductCrtFieldNumber;
const int QueryCertResponse::kIosProductCrtPwdFieldNumber;
const int QueryCertResponse::kCertidFieldNumber;
const int QueryCertResponse::kProBundleIdFieldNumber;
const int QueryCertResponse::kDevBundleIdFieldNumber;
const int QueryCertResponse::kCreatedFieldNumber;
const int QueryCertResponse::kModifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryCertResponse::QueryCertResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsQueryCertResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.QueryCertResponse)
}
QueryCertResponse::QueryCertResponse(const QueryCertResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ios_develop_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt_name().size() > 0) {
    ios_develop_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_name_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ios_develop_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt().size() > 0) {
    ios_develop_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_);
  }
  ios_develop_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_develop_crt_pwd().size() > 0) {
    ios_develop_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_pwd_);
  }
  ios_product_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt_name().size() > 0) {
    ios_product_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_name_);
  }
  ios_product_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt().size() > 0) {
    ios_product_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_);
  }
  ios_product_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ios_product_crt_pwd().size() > 0) {
    ios_product_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_pwd_);
  }
  certid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.certid().size() > 0) {
    certid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certid_);
  }
  pro_bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pro_bundle_id().size() > 0) {
    pro_bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pro_bundle_id_);
  }
  dev_bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dev_bundle_id().size() > 0) {
    dev_bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dev_bundle_id_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&modified_) -
    reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  // @@protoc_insertion_point(copy_constructor:outer.push.QueryCertResponse)
}

void QueryCertResponse::SharedCtor() {
  ios_develop_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pro_bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dev_bundle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_) -
      reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  _cached_size_ = 0;
}

QueryCertResponse::~QueryCertResponse() {
  // @@protoc_insertion_point(destructor:outer.push.QueryCertResponse)
  SharedDtor();
}

void QueryCertResponse::SharedDtor() {
  ios_develop_crt_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pro_bundle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dev_bundle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryCertResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryCertResponse::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryCertResponse& QueryCertResponse::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsQueryCertResponse();
  return *internal_default_instance();
}

QueryCertResponse* QueryCertResponse::New(::google::protobuf::Arena* arena) const {
  QueryCertResponse* n = new QueryCertResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryCertResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.QueryCertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ios_develop_crt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_develop_crt_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ios_product_crt_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pro_bundle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dev_bundle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_) -
      reinterpret_cast<char*>(&created_)) + sizeof(modified_));
  _internal_metadata_.Clear();
}

bool QueryCertResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.QueryCertResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ios_develop_crt_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_develop_crt_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.ios_develop_crt_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ios_develop_crt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_develop_crt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_develop_crt_pwd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_develop_crt_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.ios_develop_crt_pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_product_crt_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_product_crt_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.ios_product_crt_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ios_product_crt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ios_product_crt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ios_product_crt_pwd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ios_product_crt_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.ios_product_crt_pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string certid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->certid().data(), static_cast<int>(this->certid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.certid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pro_bundle_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pro_bundle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pro_bundle_id().data(), static_cast<int>(this->pro_bundle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.pro_bundle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dev_bundle_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dev_bundle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dev_bundle_id().data(), static_cast<int>(this->dev_bundle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.QueryCertResponse.dev_bundle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.QueryCertResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.QueryCertResponse)
  return false;
#undef DO_
}

void QueryCertResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.QueryCertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_develop_crt_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ios_develop_crt_name(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ios_develop_crt(), output);
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_develop_crt_pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ios_develop_crt_pwd(), output);
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_product_crt_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ios_product_crt_name(), output);
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ios_product_crt(), output);
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_product_crt_pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ios_product_crt_pwd(), output);
  }

  // string certid = 8;
  if (this->certid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certid().data(), static_cast<int>(this->certid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.certid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->certid(), output);
  }

  // string pro_bundle_id = 9;
  if (this->pro_bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pro_bundle_id().data(), static_cast<int>(this->pro_bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.pro_bundle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->pro_bundle_id(), output);
  }

  // string dev_bundle_id = 10;
  if (this->dev_bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dev_bundle_id().data(), static_cast<int>(this->dev_bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.dev_bundle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->dev_bundle_id(), output);
  }

  // uint64 created = 11;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->created(), output);
  }

  // uint64 modified = 12;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->modified(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.QueryCertResponse)
}

::google::protobuf::uint8* QueryCertResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.QueryCertResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_name().data(), static_cast<int>(this->ios_develop_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_develop_crt_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ios_develop_crt_name(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ios_develop_crt(), target);
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_develop_crt_pwd().data(), static_cast<int>(this->ios_develop_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_develop_crt_pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ios_develop_crt_pwd(), target);
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_name().data(), static_cast<int>(this->ios_product_crt_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_product_crt_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ios_product_crt_name(), target);
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ios_product_crt(), target);
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ios_product_crt_pwd().data(), static_cast<int>(this->ios_product_crt_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.ios_product_crt_pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ios_product_crt_pwd(), target);
  }

  // string certid = 8;
  if (this->certid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->certid().data(), static_cast<int>(this->certid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.certid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->certid(), target);
  }

  // string pro_bundle_id = 9;
  if (this->pro_bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pro_bundle_id().data(), static_cast<int>(this->pro_bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.pro_bundle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->pro_bundle_id(), target);
  }

  // string dev_bundle_id = 10;
  if (this->dev_bundle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dev_bundle_id().data(), static_cast<int>(this->dev_bundle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.QueryCertResponse.dev_bundle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->dev_bundle_id(), target);
  }

  // uint64 created = 11;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->created(), target);
  }

  // uint64 modified = 12;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->modified(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.QueryCertResponse)
  return target;
}

size_t QueryCertResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.QueryCertResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ios_develop_crt_name = 1;
  if (this->ios_develop_crt_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_develop_crt_name());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // bytes ios_develop_crt = 3;
  if (this->ios_develop_crt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ios_develop_crt());
  }

  // string ios_develop_crt_pwd = 4;
  if (this->ios_develop_crt_pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_develop_crt_pwd());
  }

  // string ios_product_crt_name = 5;
  if (this->ios_product_crt_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_product_crt_name());
  }

  // bytes ios_product_crt = 6;
  if (this->ios_product_crt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ios_product_crt());
  }

  // string ios_product_crt_pwd = 7;
  if (this->ios_product_crt_pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ios_product_crt_pwd());
  }

  // string certid = 8;
  if (this->certid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certid());
  }

  // string pro_bundle_id = 9;
  if (this->pro_bundle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pro_bundle_id());
  }

  // string dev_bundle_id = 10;
  if (this->dev_bundle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dev_bundle_id());
  }

  // uint64 created = 11;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // uint64 modified = 12;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryCertResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.QueryCertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryCertResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryCertResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.QueryCertResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.QueryCertResponse)
    MergeFrom(*source);
  }
}

void QueryCertResponse::MergeFrom(const QueryCertResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.QueryCertResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ios_develop_crt_name().size() > 0) {

    ios_develop_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_name_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.ios_develop_crt().size() > 0) {

    ios_develop_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_);
  }
  if (from.ios_develop_crt_pwd().size() > 0) {

    ios_develop_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_develop_crt_pwd_);
  }
  if (from.ios_product_crt_name().size() > 0) {

    ios_product_crt_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_name_);
  }
  if (from.ios_product_crt().size() > 0) {

    ios_product_crt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_);
  }
  if (from.ios_product_crt_pwd().size() > 0) {

    ios_product_crt_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ios_product_crt_pwd_);
  }
  if (from.certid().size() > 0) {

    certid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certid_);
  }
  if (from.pro_bundle_id().size() > 0) {

    pro_bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pro_bundle_id_);
  }
  if (from.dev_bundle_id().size() > 0) {

    dev_bundle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dev_bundle_id_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
}

void QueryCertResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.QueryCertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryCertResponse::CopyFrom(const QueryCertResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.QueryCertResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCertResponse::IsInitialized() const {
  return true;
}

void QueryCertResponse::Swap(QueryCertResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryCertResponse::InternalSwap(QueryCertResponse* other) {
  using std::swap;
  ios_develop_crt_name_.Swap(&other->ios_develop_crt_name_);
  appkey_.Swap(&other->appkey_);
  ios_develop_crt_.Swap(&other->ios_develop_crt_);
  ios_develop_crt_pwd_.Swap(&other->ios_develop_crt_pwd_);
  ios_product_crt_name_.Swap(&other->ios_product_crt_name_);
  ios_product_crt_.Swap(&other->ios_product_crt_);
  ios_product_crt_pwd_.Swap(&other->ios_product_crt_pwd_);
  certid_.Swap(&other->certid_);
  pro_bundle_id_.Swap(&other->pro_bundle_id_);
  dev_bundle_id_.Swap(&other->dev_bundle_id_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryCertResponse::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetBadgeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetBadgeRequest::kUidFieldNumber;
const int SetBadgeRequest::kBadgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetBadgeRequest::SetBadgeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fpush_2eproto::InitDefaultsSetBadgeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.push.SetBadgeRequest)
}
SetBadgeRequest::SetBadgeRequest(const SetBadgeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  badge_ = from.badge_;
  // @@protoc_insertion_point(copy_constructor:outer.push.SetBadgeRequest)
}

void SetBadgeRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  badge_ = 0u;
  _cached_size_ = 0;
}

SetBadgeRequest::~SetBadgeRequest() {
  // @@protoc_insertion_point(destructor:outer.push.SetBadgeRequest)
  SharedDtor();
}

void SetBadgeRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetBadgeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetBadgeRequest::descriptor() {
  ::protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetBadgeRequest& SetBadgeRequest::default_instance() {
  ::protobuf_outer_2fpush_2eproto::InitDefaultsSetBadgeRequest();
  return *internal_default_instance();
}

SetBadgeRequest* SetBadgeRequest::New(::google::protobuf::Arena* arena) const {
  SetBadgeRequest* n = new SetBadgeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetBadgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.push.SetBadgeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  badge_ = 0u;
  _internal_metadata_.Clear();
}

bool SetBadgeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.push.SetBadgeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.push.SetBadgeRequest.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 badge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &badge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.push.SetBadgeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.push.SetBadgeRequest)
  return false;
#undef DO_
}

void SetBadgeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.push.SetBadgeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetBadgeRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // uint32 badge = 2;
  if (this->badge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->badge(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.push.SetBadgeRequest)
}

::google::protobuf::uint8* SetBadgeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.push.SetBadgeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.push.SetBadgeRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // uint32 badge = 2;
  if (this->badge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->badge(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.push.SetBadgeRequest)
  return target;
}

size_t SetBadgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.push.SetBadgeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // uint32 badge = 2;
  if (this->badge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->badge());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetBadgeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.push.SetBadgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetBadgeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetBadgeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.push.SetBadgeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.push.SetBadgeRequest)
    MergeFrom(*source);
  }
}

void SetBadgeRequest::MergeFrom(const SetBadgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.push.SetBadgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.badge() != 0) {
    set_badge(from.badge());
  }
}

void SetBadgeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.push.SetBadgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetBadgeRequest::CopyFrom(const SetBadgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.push.SetBadgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetBadgeRequest::IsInitialized() const {
  return true;
}

void SetBadgeRequest::Swap(SetBadgeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetBadgeRequest::InternalSwap(SetBadgeRequest* other) {
  using std::swap;
  uid_.Swap(&other->uid_);
  swap(badge_, other->badge_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetBadgeRequest::GetMetadata() const {
  protobuf_outer_2fpush_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fpush_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace push
}  // namespace outer

// @@protoc_insertion_point(global_scope)
