// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/friends.proto

#include "outer/friends.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace friends {
class FriendInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendInfo>
      _instance;
} _FriendInfo_default_instance_;
class FriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendRequest>
      _instance;
} _FriendRequest_default_instance_;
class FriendSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendSignal>
      _instance;
} _FriendSignal_default_instance_;
class ApplyFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyFriendRequest>
      _instance;
} _ApplyFriendRequest_default_instance_;
class ApplyFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplyFriendResponse>
      _instance;
} _ApplyFriendResponse_default_instance_;
class AgreeFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgreeFriendRequest>
      _instance;
} _AgreeFriendRequest_default_instance_;
class AgreeFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgreeFriendResponse>
      _instance;
} _AgreeFriendResponse_default_instance_;
class RefuseFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefuseFriendRequest>
      _instance;
} _RefuseFriendRequest_default_instance_;
class RefuseFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefuseFriendResponse>
      _instance;
} _RefuseFriendResponse_default_instance_;
class RemoveFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveFriendRequest>
      _instance;
} _RemoveFriendRequest_default_instance_;
class RemoveFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveFriendResponse>
      _instance;
} _RemoveFriendResponse_default_instance_;
class SyncFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncFriendRequest>
      _instance;
} _SyncFriendRequest_default_instance_;
class SyncFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncFriendResponse>
      _instance;
} _SyncFriendResponse_default_instance_;
class UpdateFriendInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateFriendInfoRequest>
      _instance;
} _UpdateFriendInfoRequest_default_instance_;
class UpdateFriendInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateFriendInfoResponse>
      _instance;
} _UpdateFriendInfoResponse_default_instance_;
class UpdateSilentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSilentRequest>
      _instance;
} _UpdateSilentRequest_default_instance_;
class UpdateSilentResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateSilentRespone>
      _instance;
} _UpdateSilentRespone_default_instance_;
class GetFriendListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendListRequest>
      _instance;
} _GetFriendListRequest_default_instance_;
class GetFriendListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendListResponse>
      _instance;
} _GetFriendListResponse_default_instance_;
class HasReadFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HasReadFriendRequest>
      _instance;
} _HasReadFriendRequest_default_instance_;
class HasReadFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HasReadFriendResponse>
      _instance;
} _HasReadFriendResponse_default_instance_;
class HasIgnoreFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HasIgnoreFriendRequest>
      _instance;
} _HasIgnoreFriendRequest_default_instance_;
class HasIgnoreFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HasIgnoreFriendResponse>
      _instance;
} _HasIgnoreFriendResponse_default_instance_;
class BatchApplyFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendRequest>
      _instance;
} _BatchApplyFriendRequest_default_instance_;
class BatchApplyFriendResponse_ResultEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendResponse_ResultEntry_DoNotUse>
      _instance;
} _BatchApplyFriendResponse_ResultEntry_DoNotUse_default_instance_;
class BatchApplyFriendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendResponse>
      _instance;
} _BatchApplyFriendResponse_default_instance_;
class BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse>
      _instance;
} _BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse_default_instance_;
class BatchApplyFriendByFromUsersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendByFromUsersRequest>
      _instance;
} _BatchApplyFriendByFromUsersRequest_default_instance_;
class BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse>
      _instance;
} _BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse_default_instance_;
class BatchApplyFriendByFromUsersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchApplyFriendByFromUsersResponse>
      _instance;
} _BatchApplyFriendByFromUsersResponse_default_instance_;
class GetFriendDisplayRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendDisplayRequest>
      _instance;
} _GetFriendDisplayRequest_default_instance_;
class GetFriendDisplayResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendDisplayResponse>
      _instance;
} _GetFriendDisplayResponse_default_instance_;
}  // namespace friends
}  // namespace outer
namespace protobuf_outer_2ffriends_2eproto {
void InitDefaultsFriendInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_FriendInfo_default_instance_;
    new (ptr) ::outer::friends::FriendInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::FriendInfo::InitAsDefaultInstance();
}

void InitDefaultsFriendInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendInfoImpl);
}

void InitDefaultsFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_FriendRequest_default_instance_;
    new (ptr) ::outer::friends::FriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::FriendRequest::InitAsDefaultInstance();
}

void InitDefaultsFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendRequestImpl);
}

void InitDefaultsFriendSignalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_FriendSignal_default_instance_;
    new (ptr) ::outer::friends::FriendSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::FriendSignal::InitAsDefaultInstance();
}

void InitDefaultsFriendSignal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendSignalImpl);
}

void InitDefaultsApplyFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_ApplyFriendRequest_default_instance_;
    new (ptr) ::outer::friends::ApplyFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::ApplyFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsApplyFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsApplyFriendRequestImpl);
}

void InitDefaultsApplyFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_ApplyFriendResponse_default_instance_;
    new (ptr) ::outer::friends::ApplyFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::ApplyFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsApplyFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsApplyFriendResponseImpl);
}

void InitDefaultsAgreeFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_AgreeFriendRequest_default_instance_;
    new (ptr) ::outer::friends::AgreeFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::AgreeFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsAgreeFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAgreeFriendRequestImpl);
}

void InitDefaultsAgreeFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_AgreeFriendResponse_default_instance_;
    new (ptr) ::outer::friends::AgreeFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::AgreeFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsAgreeFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAgreeFriendResponseImpl);
}

void InitDefaultsRefuseFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_RefuseFriendRequest_default_instance_;
    new (ptr) ::outer::friends::RefuseFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::RefuseFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsRefuseFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRefuseFriendRequestImpl);
}

void InitDefaultsRefuseFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_RefuseFriendResponse_default_instance_;
    new (ptr) ::outer::friends::RefuseFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::RefuseFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsRefuseFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRefuseFriendResponseImpl);
}

void InitDefaultsRemoveFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_RemoveFriendRequest_default_instance_;
    new (ptr) ::outer::friends::RemoveFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::RemoveFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveFriendRequestImpl);
}

void InitDefaultsRemoveFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_RemoveFriendResponse_default_instance_;
    new (ptr) ::outer::friends::RemoveFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::RemoveFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsRemoveFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveFriendResponseImpl);
}

void InitDefaultsSyncFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_SyncFriendRequest_default_instance_;
    new (ptr) ::outer::friends::SyncFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::SyncFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncFriendRequestImpl);
}

void InitDefaultsSyncFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffriends_2eproto::InitDefaultsFriendInfo();
  protobuf_outer_2ffriends_2eproto::InitDefaultsFriendRequest();
  protobuf_outer_2ffriends_2eproto::InitDefaultsFriendSignal();
  {
    void* ptr = &::outer::friends::_SyncFriendResponse_default_instance_;
    new (ptr) ::outer::friends::SyncFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::SyncFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncFriendResponseImpl);
}

void InitDefaultsUpdateFriendInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_UpdateFriendInfoRequest_default_instance_;
    new (ptr) ::outer::friends::UpdateFriendInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::UpdateFriendInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateFriendInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateFriendInfoRequestImpl);
}

void InitDefaultsUpdateFriendInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_UpdateFriendInfoResponse_default_instance_;
    new (ptr) ::outer::friends::UpdateFriendInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::UpdateFriendInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsUpdateFriendInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateFriendInfoResponseImpl);
}

void InitDefaultsUpdateSilentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_UpdateSilentRequest_default_instance_;
    new (ptr) ::outer::friends::UpdateSilentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::UpdateSilentRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateSilentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateSilentRequestImpl);
}

void InitDefaultsUpdateSilentResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_UpdateSilentRespone_default_instance_;
    new (ptr) ::outer::friends::UpdateSilentRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::UpdateSilentRespone::InitAsDefaultInstance();
}

void InitDefaultsUpdateSilentRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateSilentResponeImpl);
}

void InitDefaultsGetFriendListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_GetFriendListRequest_default_instance_;
    new (ptr) ::outer::friends::GetFriendListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::GetFriendListRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFriendListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendListRequestImpl);
}

void InitDefaultsGetFriendListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffriends_2eproto::InitDefaultsFriendInfo();
  {
    void* ptr = &::outer::friends::_GetFriendListResponse_default_instance_;
    new (ptr) ::outer::friends::GetFriendListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::GetFriendListResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFriendListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendListResponseImpl);
}

void InitDefaultsHasReadFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_HasReadFriendRequest_default_instance_;
    new (ptr) ::outer::friends::HasReadFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::HasReadFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsHasReadFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHasReadFriendRequestImpl);
}

void InitDefaultsHasReadFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_HasReadFriendResponse_default_instance_;
    new (ptr) ::outer::friends::HasReadFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::HasReadFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsHasReadFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHasReadFriendResponseImpl);
}

void InitDefaultsHasIgnoreFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_HasIgnoreFriendRequest_default_instance_;
    new (ptr) ::outer::friends::HasIgnoreFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::HasIgnoreFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsHasIgnoreFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHasIgnoreFriendRequestImpl);
}

void InitDefaultsHasIgnoreFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_HasIgnoreFriendResponse_default_instance_;
    new (ptr) ::outer::friends::HasIgnoreFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::HasIgnoreFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsHasIgnoreFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHasIgnoreFriendResponseImpl);
}

void InitDefaultsBatchApplyFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_BatchApplyFriendRequest_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::BatchApplyFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendRequestImpl);
}

void InitDefaultsBatchApplyFriendResponse_ResultEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_BatchApplyFriendResponse_ResultEntry_DoNotUse_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse();
  }
  ::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendResponse_ResultEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendResponse_ResultEntry_DoNotUseImpl);
}

void InitDefaultsBatchApplyFriendResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendResponse_ResultEntry_DoNotUse();
  {
    void* ptr = &::outer::friends::_BatchApplyFriendResponse_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::BatchApplyFriendResponse::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendResponseImpl);
}

void InitDefaultsBatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse();
  }
  ::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUseImpl);
}

void InitDefaultsBatchApplyFriendByFromUsersRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse();
  {
    void* ptr = &::outer::friends::_BatchApplyFriendByFromUsersRequest_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendByFromUsersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::BatchApplyFriendByFromUsersRequest::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendByFromUsersRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendByFromUsersRequestImpl);
}

void InitDefaultsBatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse();
  }
  ::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUseImpl);
}

void InitDefaultsBatchApplyFriendByFromUsersResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse();
  {
    void* ptr = &::outer::friends::_BatchApplyFriendByFromUsersResponse_default_instance_;
    new (ptr) ::outer::friends::BatchApplyFriendByFromUsersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::BatchApplyFriendByFromUsersResponse::InitAsDefaultInstance();
}

void InitDefaultsBatchApplyFriendByFromUsersResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchApplyFriendByFromUsersResponseImpl);
}

void InitDefaultsGetFriendDisplayRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_GetFriendDisplayRequest_default_instance_;
    new (ptr) ::outer::friends::GetFriendDisplayRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::GetFriendDisplayRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFriendDisplayRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendDisplayRequestImpl);
}

void InitDefaultsGetFriendDisplayResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::friends::_GetFriendDisplayResponse_default_instance_;
    new (ptr) ::outer::friends::GetFriendDisplayResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::friends::GetFriendDisplayResponse::InitAsDefaultInstance();
}

void InitDefaultsGetFriendDisplayResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendDisplayResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[32];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, thumbnail_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, join_fleet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_nick_pinyin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_display_pinyin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_display_pinyin_blank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, friend_nick_pinyin_blank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, serial_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, member_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendInfo, user_enable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, from_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, req_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, thumbnail_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendRequest, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, from_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, friend_signal_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::FriendSignal, modified_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::ApplyFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::AgreeFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RefuseFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::RemoveFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, friend_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, friend_req_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, friend_signal_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendRequest, first_sync_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, friend_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, friend_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, friend_signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::SyncFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, friend_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, friend_display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateFriendInfoResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, friend_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, friend_silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRespone, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::UpdateSilentRespone, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListRequest, page_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListRequest, page_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListResponse, friend_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendListResponse, total_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasReadFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, req_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::HasIgnoreFriendResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendRequest, from_client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersRequest, from_client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::BatchApplyFriendByFromUsersResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayRequest, owner_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayRequest, friend_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::friends::GetFriendDisplayResponse, friend_display_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::friends::FriendInfo)},
  { 23, -1, sizeof(::outer::friends::FriendRequest)},
  { 39, -1, sizeof(::outer::friends::FriendSignal)},
  { 51, -1, sizeof(::outer::friends::ApplyFriendRequest)},
  { 62, -1, sizeof(::outer::friends::ApplyFriendResponse)},
  { 69, -1, sizeof(::outer::friends::AgreeFriendRequest)},
  { 79, -1, sizeof(::outer::friends::AgreeFriendResponse)},
  { 86, -1, sizeof(::outer::friends::RefuseFriendRequest)},
  { 97, -1, sizeof(::outer::friends::RefuseFriendResponse)},
  { 104, -1, sizeof(::outer::friends::RemoveFriendRequest)},
  { 114, -1, sizeof(::outer::friends::RemoveFriendResponse)},
  { 121, -1, sizeof(::outer::friends::SyncFriendRequest)},
  { 133, -1, sizeof(::outer::friends::SyncFriendResponse)},
  { 143, -1, sizeof(::outer::friends::UpdateFriendInfoRequest)},
  { 154, -1, sizeof(::outer::friends::UpdateFriendInfoResponse)},
  { 161, -1, sizeof(::outer::friends::UpdateSilentRequest)},
  { 172, -1, sizeof(::outer::friends::UpdateSilentRespone)},
  { 179, -1, sizeof(::outer::friends::GetFriendListRequest)},
  { 188, -1, sizeof(::outer::friends::GetFriendListResponse)},
  { 196, -1, sizeof(::outer::friends::HasReadFriendRequest)},
  { 206, -1, sizeof(::outer::friends::HasReadFriendResponse)},
  { 213, -1, sizeof(::outer::friends::HasIgnoreFriendRequest)},
  { 223, -1, sizeof(::outer::friends::HasIgnoreFriendResponse)},
  { 230, -1, sizeof(::outer::friends::BatchApplyFriendRequest)},
  { 241, 248, sizeof(::outer::friends::BatchApplyFriendResponse_ResultEntry_DoNotUse)},
  { 250, -1, sizeof(::outer::friends::BatchApplyFriendResponse)},
  { 258, 265, sizeof(::outer::friends::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse)},
  { 267, -1, sizeof(::outer::friends::BatchApplyFriendByFromUsersRequest)},
  { 278, 285, sizeof(::outer::friends::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse)},
  { 287, -1, sizeof(::outer::friends::BatchApplyFriendByFromUsersResponse)},
  { 295, -1, sizeof(::outer::friends::GetFriendDisplayRequest)},
  { 303, -1, sizeof(::outer::friends::GetFriendDisplayResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_FriendInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_FriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_FriendSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_ApplyFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_ApplyFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_AgreeFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_AgreeFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_RefuseFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_RefuseFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_RemoveFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_RemoveFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_SyncFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_SyncFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_UpdateFriendInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_UpdateFriendInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_UpdateSilentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_UpdateSilentRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_GetFriendListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_GetFriendListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_HasReadFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_HasReadFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_HasIgnoreFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_HasIgnoreFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendResponse_ResultEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendByFromUsersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_BatchApplyFriendByFromUsersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_GetFriendDisplayRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::friends::_GetFriendDisplayResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/friends.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023outer/friends.proto\022\router.friends\032\024co"
      "mmon/errcode.proto\032\030common/enumeration.p"
      "roto\"\341\003\n\nFriendInfo\022\016\n\006appkey\030\001 \001(\t\022\027\n\017f"
      "riend_username\030\002 \001(\t\022\023\n\013friend_nick\030\003 \001("
      "\t\022\026\n\016friend_display\030\004 \001(\t\022\025\n\roriginal_li"
      "nk\030\005 \001(\t\022\026\n\016thumbnail_link\030\006 \001(\t\022+\n\006enab"
      "le\030\007 \001(\0162\033.common.enumeration.EEnable\022\020\n"
      "\010modified\030\010 \001(\004\022+\n\006silent\030\t \001(\0162\033.common"
      ".enumeration.ESilent\022\r\n\005phone\030\n \001(\t\022\022\n\nj"
      "oin_fleet\030\013 \001(\010\022\032\n\022friend_nick_pinyin\030\014 "
      "\001(\t\022\035\n\025friend_display_pinyin\030\r \001(\t\022#\n\033fr"
      "iend_display_pinyin_blank\030\016 \001(\t\022 \n\030frien"
      "d_nick_pinyin_blank\030\017 \001(\t\022\023\n\013serial_name"
      "\030\020 \001(\t\022\023\n\013member_type\030\021 \001(\r\022\023\n\013user_enab"
      "le\030\022 \001(\r\"\377\001\n\rFriendRequest\022\016\n\006req_id\030\001 \001"
      "(\t\022\016\n\006appkey\030\002 \001(\t\022\025\n\rfrom_username\030\003 \001("
      "\t\022\021\n\tfrom_nick\030\004 \001(\t\0223\n\010req_type\030\005 \001(\0162!"
      ".outer.friends.EFriendRequestType\022\016\n\006rem"
      "ark\030\006 \001(\t\022\020\n\010modified\030\007 \001(\004\022\025\n\roriginal_"
      "link\030\010 \001(\t\022\026\n\016thumbnail_link\030\t \001(\t\022\017\n\007cr"
      "eated\030\n \001(\004\022\r\n\005state\030\013 \001(\r\"\271\001\n\014FriendSig"
      "nal\022\016\n\006appkey\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001"
      "(\t\022\021\n\tfrom_nick\030\003 \001(\t\022<\n\022friend_signal_t"
      "ype\030\004 \001(\0162 .outer.friends.EFriendSignalT"
      "ype\022\016\n\006remark\030\005 \001(\t\022\017\n\007created\030\006 \001(\004\022\020\n\010"
      "modified\030\007 \001(\004\"\253\001\n\022ApplyFriendRequest\022\025\n"
      "\rfrom_username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\023\n\013"
      "to_username\030\003 \001(\t\022\016\n\006remark\030\004 \001(\t\022\016\n\006msg"
      "_id\030\005 \001(\t\0229\n\020from_client_type\030\006 \001(\0162\037.co"
      "mmon.enumeration.EClientType\"N\n\023ApplyFri"
      "endResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcod"
      "e.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"\226\001\n\022AgreeFr"
      "iendRequest\022\016\n\006req_id\030\001 \001(\t\022\025\n\rfrom_user"
      "name\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\016\n\006msg_id\030\004 \001"
      "(\t\0229\n\020from_client_type\030\006 \001(\0162\037.common.en"
      "umeration.EClientType\"N\n\023AgreeFriendResp"
      "onse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EErro"
      "rCode\022\016\n\006msg_id\030\002 \001(\t\"\247\001\n\023RefuseFriendRe"
      "quest\022\016\n\006req_id\030\001 \001(\t\022\025\n\rfrom_username\030\002"
      " \001(\t\022\016\n\006appkey\030\003 \001(\t\022\016\n\006msg_id\030\004 \001(\t\022\016\n\006"
      "remark\030\005 \001(\t\0229\n\020from_client_type\030\006 \001(\0162\037"
      ".common.enumeration.EClientType\"O\n\024Refus"
      "eFriendResponse\022\'\n\003ret\030\001 \001(\0162\032.common.er"
      "rcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"\234\001\n\023Rem"
      "oveFriendRequest\022\025\n\rfrom_username\030\001 \001(\t\022"
      "\016\n\006appkey\030\002 \001(\t\022\023\n\013to_username\030\003 \001(\t\022\016\n\006"
      "msg_id\030\004 \001(\t\0229\n\020from_client_type\030\006 \001(\0162\037"
      ".common.enumeration.EClientType\"O\n\024Remov"
      "eFriendResponse\022\'\n\003ret\030\001 \001(\0162\032.common.er"
      "rcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"\257\001\n\021Syn"
      "cFriendRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006appk"
      "ey\030\002 \001(\t\022\027\n\017friend_modified\030\003 \001(\004\022\033\n\023fri"
      "end_req_modified\030\004 \001(\004\022\036\n\026friend_signal_"
      "modified\030\006 \001(\004\022\016\n\006msg_id\030\005 \001(\t\022\022\n\nfirst_"
      "sync\030\007 \001(\010\"\347\001\n\022SyncFriendResponse\022\'\n\003ret"
      "\030\001 \001(\0162\032.common.errcode.EErrorCode\022.\n\013fr"
      "iend_info\030\002 \003(\0132\031.outer.friends.FriendIn"
      "fo\0224\n\016friend_request\030\003 \003(\0132\034.outer.frien"
      "ds.FriendRequest\0222\n\rfriend_signal\030\004 \003(\0132"
      "\033.outer.friends.FriendSignal\022\016\n\006msg_id\030\005"
      " \001(\t\"\274\001\n\027UpdateFriendInfoRequest\022\016\n\006appk"
      "ey\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\027\n\017frien"
      "d_username\030\003 \001(\t\022\026\n\016friend_display\030\004 \001(\t"
      "\022\016\n\006msg_id\030\005 \001(\t\0229\n\020from_client_type\030\006 \001"
      "(\0162\037.common.enumeration.EClientType\"S\n\030U"
      "pdateFriendInfoResponse\022\'\n\003ret\030\001 \001(\0162\032.c"
      "ommon.errcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t"
      "\"\324\001\n\023UpdateSilentRequest\022\016\n\006appkey\030\001 \001(\t"
      "\022\025\n\rfrom_username\030\002 \001(\t\022\027\n\017friend_userna"
      "me\030\003 \001(\t\0222\n\rfriend_silent\030\004 \001(\0162\033.common"
      ".enumeration.ESilent\022\016\n\006msg_id\030\005 \001(\t\0229\n\020"
      "from_client_type\030\006 \001(\0162\037.common.enumerat"
      "ion.EClientType\"N\n\023UpdateSilentRespone\022\'"
      "\n\003ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022"
      "\016\n\006msg_id\030\002 \001(\t\"_\n\024GetFriendListRequest\022"
      "\016\n\006appkey\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\022\n\npag"
      "e_index\030\003 \001(\005\022\021\n\tpage_size\030\004 \001(\005\"\177\n\025GetF"
      "riendListResponse\022\'\n\003ret\030\001 \001(\0162\032.common."
      "errcode.EErrorCode\022.\n\013friend_info\030\002 \003(\0132"
      "\031.outer.friends.FriendInfo\022\r\n\005total\030\003 \001("
      "\003\"\223\001\n\024HasReadFriendRequest\022\016\n\006req_id\030\001 \003"
      "(\t\022\016\n\006appkey\030\002 \001(\t\022\020\n\010username\030\003 \001(\t\022\016\n\006"
      "msg_id\030\004 \001(\t\0229\n\020from_client_type\030\005 \001(\0162\037"
      ".common.enumeration.EClientType\"P\n\025HasRe"
      "adFriendResponse\022\'\n\003ret\030\001 \001(\0162\032.common.e"
      "rrcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"\225\001\n\026Ha"
      "sIgnoreFriendRequest\022\016\n\006req_id\030\001 \003(\t\022\016\n\006"
      "appkey\030\002 \001(\t\022\020\n\010username\030\003 \001(\t\022\016\n\006msg_id"
      "\030\004 \001(\t\0229\n\020from_client_type\030\005 \001(\0162\037.commo"
      "n.enumeration.EClientType\"R\n\027HasIgnoreFr"
      "iendResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errco"
      "de.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\"\260\001\n\027BatchA"
      "pplyFriendRequest\022\025\n\rfrom_username\030\001 \001(\t"
      "\022\016\n\006appkey\030\002 \001(\t\022\023\n\013to_username\030\003 \003(\t\022\016\n"
      "\006remark\030\004 \001(\t\022\016\n\006msg_id\030\005 \001(\t\0229\n\020from_cl"
      "ient_type\030\006 \001(\0162\037.common.enumeration.ECl"
      "ientType\"\343\001\n\030BatchApplyFriendResponse\022\'\n"
      "\003ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022\016"
      "\n\006msg_id\030\002 \001(\t\022C\n\006result\030\003 \003(\01323.outer.f"
      "riends.BatchApplyFriendResponse.ResultEn"
      "try\032I\n\013ResultEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value"
      "\030\002 \001(\0162\032.common.errcode.EErrorCode:\0028\001\"\251"
      "\002\n\"BatchApplyFriendByFromUsersRequest\022\025\n"
      "\rfrom_username\030\001 \003(\t\022\016\n\006appkey\030\002 \001(\t\022\023\n\013"
      "to_username\030\003 \001(\t\022M\n\006remark\030\004 \003(\0132=.oute"
      "r.friends.BatchApplyFriendByFromUsersReq"
      "uest.RemarkEntry\022\016\n\006msg_id\030\005 \001(\t\0229\n\020from"
      "_client_type\030\006 \001(\0162\037.common.enumeration."
      "EClientType\032-\n\013RemarkEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\371\001\n#BatchApplyFriendB"
      "yFromUsersResponse\022\'\n\003ret\030\001 \001(\0162\032.common"
      ".errcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t\022N\n\006r"
      "esult\030\003 \003(\0132>.outer.friends.BatchApplyFr"
      "iendByFromUsersResponse.ResultEntry\032I\n\013R"
      "esultEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0162\032"
      ".common.errcode.EErrorCode:\0028\001\"Z\n\027GetFri"
      "endDisplayRequest\022\016\n\006appkey\030\001 \001(\t\022\026\n\016own"
      "er_username\030\002 \001(\t\022\027\n\017friend_username\030\003 \001"
      "(\t\"[\n\030GetFriendDisplayResponse\022\'\n\003ret\030\001 "
      "\001(\0162\032.common.errcode.EErrorCode\022\026\n\016frien"
      "d_display\030\002 \001(\t*.\n\022EFriendRequestType\022\030\n"
      "\024APPLY_FRIEND_REQUEST\020\000*6\n\021EFriendSignal"
      "Type\022\t\n\005AGREE\020\000\022\n\n\006REFUSE\020\001\022\n\n\006REMOVE\020\0022"
      "\370\t\n\rFriendService\022T\n\013ApplyFriend\022!.outer"
      ".friends.ApplyFriendRequest\032\".outer.frie"
      "nds.ApplyFriendResponse\022c\n\020BatchApplyFri"
      "end\022&.outer.friends.BatchApplyFriendRequ"
      "est\032\'.outer.friends.BatchApplyFriendResp"
      "onse\022\204\001\n\033BatchApplyFriendByFromUsers\0221.o"
      "uter.friends.BatchApplyFriendByFromUsers"
      "Request\0322.outer.friends.BatchApplyFriend"
      "ByFromUsersResponse\022T\n\013AgreeFriend\022!.out"
      "er.friends.AgreeFriendRequest\032\".outer.fr"
      "iends.AgreeFriendResponse\022W\n\014RefuseFrien"
      "d\022\".outer.friends.RefuseFriendRequest\032#."
      "outer.friends.RefuseFriendResponse\022W\n\014Re"
      "moveFriend\022\".outer.friends.RemoveFriendR"
      "equest\032#.outer.friends.RemoveFriendRespo"
      "nse\022Q\n\nSyncFriend\022 .outer.friends.SyncFr"
      "iendRequest\032!.outer.friends.SyncFriendRe"
      "sponse\022c\n\020UpdateFriendInfo\022&.outer.frien"
      "ds.UpdateFriendInfoRequest\032\'.outer.frien"
      "ds.UpdateFriendInfoResponse\022\\\n\022UpdateFri"
      "endSilent\022\".outer.friends.UpdateSilentRe"
      "quest\032\".outer.friends.UpdateSilentRespon"
      "e\022Z\n\rGetFriendList\022#.outer.friends.GetFr"
      "iendListRequest\032$.outer.friends.GetFrien"
      "dListResponse\022_\n\022HasReadFriendApply\022#.ou"
      "ter.friends.HasReadFriendRequest\032$.outer"
      ".friends.HasReadFriendResponse\022e\n\024HasIgn"
      "oreFriendApply\022%.outer.friends.HasIgnore"
      "FriendRequest\032&.outer.friends.HasIgnoreF"
      "riendResponse\022c\n\020GetFriendDisplay\022&.oute"
      "r.friends.GetFriendDisplayRequest\032\'.oute"
      "r.friends.GetFriendDisplayResponseB(\n\034co"
      "m.cmcc.littlec.proto.outerB\006FriendP\000b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6244);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/friends.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2ffriends_2eproto
namespace outer {
namespace friends {
const ::google::protobuf::EnumDescriptor* EFriendRequestType_descriptor() {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2ffriends_2eproto::file_level_enum_descriptors[0];
}
bool EFriendRequestType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EFriendSignalType_descriptor() {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2ffriends_2eproto::file_level_enum_descriptors[1];
}
bool EFriendSignalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FriendInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendInfo::kAppkeyFieldNumber;
const int FriendInfo::kFriendUsernameFieldNumber;
const int FriendInfo::kFriendNickFieldNumber;
const int FriendInfo::kFriendDisplayFieldNumber;
const int FriendInfo::kOriginalLinkFieldNumber;
const int FriendInfo::kThumbnailLinkFieldNumber;
const int FriendInfo::kEnableFieldNumber;
const int FriendInfo::kModifiedFieldNumber;
const int FriendInfo::kSilentFieldNumber;
const int FriendInfo::kPhoneFieldNumber;
const int FriendInfo::kJoinFleetFieldNumber;
const int FriendInfo::kFriendNickPinyinFieldNumber;
const int FriendInfo::kFriendDisplayPinyinFieldNumber;
const int FriendInfo::kFriendDisplayPinyinBlankFieldNumber;
const int FriendInfo::kFriendNickPinyinBlankFieldNumber;
const int FriendInfo::kSerialNameFieldNumber;
const int FriendInfo::kMemberTypeFieldNumber;
const int FriendInfo::kUserEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendInfo::FriendInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.FriendInfo)
}
FriendInfo::FriendInfo(const FriendInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_username().size() > 0) {
    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_nick().size() > 0) {
    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_display().size() > 0) {
    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  friend_nick_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_nick_pinyin().size() > 0) {
    friend_nick_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_pinyin_);
  }
  friend_display_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_display_pinyin().size() > 0) {
    friend_display_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_pinyin_);
  }
  friend_display_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_display_pinyin_blank().size() > 0) {
    friend_display_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_pinyin_blank_);
  }
  friend_nick_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_nick_pinyin_blank().size() > 0) {
    friend_nick_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_pinyin_blank_);
  }
  serial_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serial_name().size() > 0) {
    serial_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_name_);
  }
  ::memcpy(&modified_, &from.modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_enable_) -
    reinterpret_cast<char*>(&modified_)) + sizeof(user_enable_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.FriendInfo)
}

void FriendInfo::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_enable_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(user_enable_));
  _cached_size_ = 0;
}

FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:outer.friends.FriendInfo)
  SharedDtor();
}

void FriendInfo::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_blank_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_blank_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendInfo::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendInfo& FriendInfo::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendInfo();
  return *internal_default_instance();
}

FriendInfo* FriendInfo::New(::google::protobuf::Arena* arena) const {
  FriendInfo* n = new FriendInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_pinyin_blank_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_nick_pinyin_blank_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_enable_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(user_enable_));
  _internal_metadata_.Clear();
}

bool FriendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.FriendInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_username().data(), static_cast<int>(this->friend_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_display = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_display().data(), static_cast<int>(this->friend_display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EEnable enable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enable(static_cast< ::common::enumeration::EEnable >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.ESilent silent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_silent(static_cast< ::common::enumeration::ESilent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool join_fleet = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &join_fleet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_nick_pinyin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_nick_pinyin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_nick_pinyin().data(), static_cast<int>(this->friend_nick_pinyin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_nick_pinyin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_display_pinyin = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_display_pinyin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_display_pinyin().data(), static_cast<int>(this->friend_display_pinyin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_display_pinyin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_display_pinyin_blank = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_display_pinyin_blank()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_display_pinyin_blank().data(), static_cast<int>(this->friend_display_pinyin_blank().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_display_pinyin_blank"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_nick_pinyin_blank = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_nick_pinyin_blank()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_nick_pinyin_blank().data(), static_cast<int>(this->friend_nick_pinyin_blank().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.friend_nick_pinyin_blank"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serial_name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serial_name().data(), static_cast<int>(this->serial_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendInfo.serial_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 member_type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_enable = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.FriendInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.FriendInfo)
  return false;
#undef DO_
}

void FriendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string friend_username = 2;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->friend_username(), output);
  }

  // string friend_nick = 3;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_nick(), output);
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->friend_display(), output);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->original_link(), output);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnail_link(), output);
  }

  // .common.enumeration.EEnable enable = 7;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->enable(), output);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->modified(), output);
  }

  // .common.enumeration.ESilent silent = 9;
  if (this->silent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->silent(), output);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phone(), output);
  }

  // bool join_fleet = 11;
  if (this->join_fleet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->join_fleet(), output);
  }

  // string friend_nick_pinyin = 12;
  if (this->friend_nick_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick_pinyin().data(), static_cast<int>(this->friend_nick_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick_pinyin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->friend_nick_pinyin(), output);
  }

  // string friend_display_pinyin = 13;
  if (this->friend_display_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display_pinyin().data(), static_cast<int>(this->friend_display_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display_pinyin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->friend_display_pinyin(), output);
  }

  // string friend_display_pinyin_blank = 14;
  if (this->friend_display_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display_pinyin_blank().data(), static_cast<int>(this->friend_display_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display_pinyin_blank");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->friend_display_pinyin_blank(), output);
  }

  // string friend_nick_pinyin_blank = 15;
  if (this->friend_nick_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick_pinyin_blank().data(), static_cast<int>(this->friend_nick_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick_pinyin_blank");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->friend_nick_pinyin_blank(), output);
  }

  // string serial_name = 16;
  if (this->serial_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_name().data(), static_cast<int>(this->serial_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.serial_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->serial_name(), output);
  }

  // uint32 member_type = 17;
  if (this->member_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->member_type(), output);
  }

  // uint32 user_enable = 18;
  if (this->user_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->user_enable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.FriendInfo)
}

::google::protobuf::uint8* FriendInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string friend_username = 2;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->friend_username(), target);
  }

  // string friend_nick = 3;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_nick(), target);
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->friend_display(), target);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->original_link(), target);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnail_link(), target);
  }

  // .common.enumeration.EEnable enable = 7;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->enable(), target);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->modified(), target);
  }

  // .common.enumeration.ESilent silent = 9;
  if (this->silent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->silent(), target);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phone(), target);
  }

  // bool join_fleet = 11;
  if (this->join_fleet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->join_fleet(), target);
  }

  // string friend_nick_pinyin = 12;
  if (this->friend_nick_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick_pinyin().data(), static_cast<int>(this->friend_nick_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick_pinyin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->friend_nick_pinyin(), target);
  }

  // string friend_display_pinyin = 13;
  if (this->friend_display_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display_pinyin().data(), static_cast<int>(this->friend_display_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display_pinyin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->friend_display_pinyin(), target);
  }

  // string friend_display_pinyin_blank = 14;
  if (this->friend_display_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display_pinyin_blank().data(), static_cast<int>(this->friend_display_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_display_pinyin_blank");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->friend_display_pinyin_blank(), target);
  }

  // string friend_nick_pinyin_blank = 15;
  if (this->friend_nick_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick_pinyin_blank().data(), static_cast<int>(this->friend_nick_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.friend_nick_pinyin_blank");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->friend_nick_pinyin_blank(), target);
  }

  // string serial_name = 16;
  if (this->serial_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_name().data(), static_cast<int>(this->serial_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendInfo.serial_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->serial_name(), target);
  }

  // uint32 member_type = 17;
  if (this->member_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->member_type(), target);
  }

  // uint32 user_enable = 18;
  if (this->user_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->user_enable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.FriendInfo)
  return target;
}

size_t FriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.FriendInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string friend_username = 2;
  if (this->friend_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_username());
  }

  // string friend_nick = 3;
  if (this->friend_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_nick());
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_display());
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string friend_nick_pinyin = 12;
  if (this->friend_nick_pinyin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_nick_pinyin());
  }

  // string friend_display_pinyin = 13;
  if (this->friend_display_pinyin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_display_pinyin());
  }

  // string friend_display_pinyin_blank = 14;
  if (this->friend_display_pinyin_blank().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_display_pinyin_blank());
  }

  // string friend_nick_pinyin_blank = 15;
  if (this->friend_nick_pinyin_blank().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_nick_pinyin_blank());
  }

  // string serial_name = 16;
  if (this->serial_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serial_name());
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  // .common.enumeration.EEnable enable = 7;
  if (this->enable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enable());
  }

  // .common.enumeration.ESilent silent = 9;
  if (this->silent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->silent());
  }

  // bool join_fleet = 11;
  if (this->join_fleet() != 0) {
    total_size += 1 + 1;
  }

  // uint32 member_type = 17;
  if (this->member_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_type());
  }

  // uint32 user_enable = 18;
  if (this->user_enable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_enable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.FriendInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.FriendInfo)
    MergeFrom(*source);
  }
}

void FriendInfo::MergeFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.friend_username().size() > 0) {

    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  if (from.friend_nick().size() > 0) {

    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  if (from.friend_display().size() > 0) {

    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.friend_nick_pinyin().size() > 0) {

    friend_nick_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_pinyin_);
  }
  if (from.friend_display_pinyin().size() > 0) {

    friend_display_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_pinyin_);
  }
  if (from.friend_display_pinyin_blank().size() > 0) {

    friend_display_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_pinyin_blank_);
  }
  if (from.friend_nick_pinyin_blank().size() > 0) {

    friend_nick_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_pinyin_blank_);
  }
  if (from.serial_name().size() > 0) {

    serial_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_name_);
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
  if (from.silent() != 0) {
    set_silent(from.silent());
  }
  if (from.join_fleet() != 0) {
    set_join_fleet(from.join_fleet());
  }
  if (from.member_type() != 0) {
    set_member_type(from.member_type());
  }
  if (from.user_enable() != 0) {
    set_user_enable(from.user_enable());
  }
}

void FriendInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfo::IsInitialized() const {
  return true;
}

void FriendInfo::Swap(FriendInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendInfo::InternalSwap(FriendInfo* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  friend_username_.Swap(&other->friend_username_);
  friend_nick_.Swap(&other->friend_nick_);
  friend_display_.Swap(&other->friend_display_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  phone_.Swap(&other->phone_);
  friend_nick_pinyin_.Swap(&other->friend_nick_pinyin_);
  friend_display_pinyin_.Swap(&other->friend_display_pinyin_);
  friend_display_pinyin_blank_.Swap(&other->friend_display_pinyin_blank_);
  friend_nick_pinyin_blank_.Swap(&other->friend_nick_pinyin_blank_);
  serial_name_.Swap(&other->serial_name_);
  swap(modified_, other->modified_);
  swap(enable_, other->enable_);
  swap(silent_, other->silent_);
  swap(join_fleet_, other->join_fleet_);
  swap(member_type_, other->member_type_);
  swap(user_enable_, other->user_enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendInfo::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendRequest::kReqIdFieldNumber;
const int FriendRequest::kAppkeyFieldNumber;
const int FriendRequest::kFromUsernameFieldNumber;
const int FriendRequest::kFromNickFieldNumber;
const int FriendRequest::kReqTypeFieldNumber;
const int FriendRequest::kRemarkFieldNumber;
const int FriendRequest::kModifiedFieldNumber;
const int FriendRequest::kOriginalLinkFieldNumber;
const int FriendRequest::kThumbnailLinkFieldNumber;
const int FriendRequest::kCreatedFieldNumber;
const int FriendRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendRequest::FriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.FriendRequest)
}
FriendRequest::FriendRequest(const FriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.req_id().size() > 0) {
    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  ::memcpy(&modified_, &from.modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&created_) -
    reinterpret_cast<char*>(&modified_)) + sizeof(created_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.FriendRequest)
}

void FriendRequest::SharedCtor() {
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(created_));
  _cached_size_ = 0;
}

FriendRequest::~FriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.FriendRequest)
  SharedDtor();
}

void FriendRequest::SharedDtor() {
  req_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendRequest& FriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendRequest();
  return *internal_default_instance();
}

FriendRequest* FriendRequest::New(::google::protobuf::Arena* arena) const {
  FriendRequest* n = new FriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.FriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_) -
      reinterpret_cast<char*>(&modified_)) + sizeof(created_));
  _internal_metadata_.Clear();
}

bool FriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.FriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string req_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_id().data(), static_cast<int>(this->req_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.friends.EFriendRequestType req_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_req_type(static_cast< ::outer::friends::EFriendRequestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendRequest.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.FriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.FriendRequest)
  return false;
#undef DO_
}

void FriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.FriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.req_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->req_id(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  // string from_nick = 4;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->from_nick(), output);
  }

  // .outer.friends.EFriendRequestType req_type = 5;
  if (this->req_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->req_type(), output);
  }

  // string remark = 6;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remark(), output);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->modified(), output);
  }

  // string original_link = 8;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->original_link(), output);
  }

  // string thumbnail_link = 9;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->thumbnail_link(), output);
  }

  // uint64 created = 10;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->created(), output);
  }

  // uint32 state = 11;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.FriendRequest)
}

::google::protobuf::uint8* FriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.FriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.req_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->req_id(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  // string from_nick = 4;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->from_nick(), target);
  }

  // .outer.friends.EFriendRequestType req_type = 5;
  if (this->req_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->req_type(), target);
  }

  // string remark = 6;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->remark(), target);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->modified(), target);
  }

  // string original_link = 8;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->original_link(), target);
  }

  // string thumbnail_link = 9;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendRequest.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->thumbnail_link(), target);
  }

  // uint64 created = 10;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->created(), target);
  }

  // uint32 state = 11;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.FriendRequest)
  return target;
}

size_t FriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.FriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string req_id = 1;
  if (this->req_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->req_id());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string from_nick = 4;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // string remark = 6;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string original_link = 8;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 9;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  // .outer.friends.EFriendRequestType req_type = 5;
  if (this->req_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->req_type());
  }

  // uint32 state = 11;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint64 created = 10;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.FriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.FriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.FriendRequest)
    MergeFrom(*source);
  }
}

void FriendRequest::MergeFrom(const FriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.FriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_id().size() > 0) {

    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
  if (from.req_type() != 0) {
    set_req_type(from.req_type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
}

void FriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.FriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendRequest::CopyFrom(const FriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.FriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendRequest::IsInitialized() const {
  return true;
}

void FriendRequest::Swap(FriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendRequest::InternalSwap(FriendRequest* other) {
  using std::swap;
  req_id_.Swap(&other->req_id_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  from_nick_.Swap(&other->from_nick_);
  remark_.Swap(&other->remark_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  swap(modified_, other->modified_);
  swap(req_type_, other->req_type_);
  swap(state_, other->state_);
  swap(created_, other->created_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendSignal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendSignal::kAppkeyFieldNumber;
const int FriendSignal::kFromUsernameFieldNumber;
const int FriendSignal::kFromNickFieldNumber;
const int FriendSignal::kFriendSignalTypeFieldNumber;
const int FriendSignal::kRemarkFieldNumber;
const int FriendSignal::kCreatedFieldNumber;
const int FriendSignal::kModifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendSignal::FriendSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendSignal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.FriendSignal)
}
FriendSignal::FriendSignal(const FriendSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_signal_type_) -
    reinterpret_cast<char*>(&created_)) + sizeof(friend_signal_type_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.FriendSignal)
}

void FriendSignal::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_signal_type_) -
      reinterpret_cast<char*>(&created_)) + sizeof(friend_signal_type_));
  _cached_size_ = 0;
}

FriendSignal::~FriendSignal() {
  // @@protoc_insertion_point(destructor:outer.friends.FriendSignal)
  SharedDtor();
}

void FriendSignal::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendSignal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendSignal::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendSignal& FriendSignal::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsFriendSignal();
  return *internal_default_instance();
}

FriendSignal* FriendSignal::New(::google::protobuf::Arena* arena) const {
  FriendSignal* n = new FriendSignal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.FriendSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_signal_type_) -
      reinterpret_cast<char*>(&created_)) + sizeof(friend_signal_type_));
  _internal_metadata_.Clear();
}

bool FriendSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.FriendSignal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendSignal.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendSignal.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendSignal.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.friends.EFriendSignalType friend_signal_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_friend_signal_type(static_cast< ::outer::friends::EFriendSignalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.FriendSignal.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.FriendSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.FriendSignal)
  return false;
#undef DO_
}

void FriendSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.FriendSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_nick(), output);
  }

  // .outer.friends.EFriendSignalType friend_signal_type = 4;
  if (this->friend_signal_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->friend_signal_type(), output);
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remark(), output);
  }

  // uint64 created = 6;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->created(), output);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->modified(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.FriendSignal)
}

::google::protobuf::uint8* FriendSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.FriendSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_nick(), target);
  }

  // .outer.friends.EFriendSignalType friend_signal_type = 4;
  if (this->friend_signal_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->friend_signal_type(), target);
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.FriendSignal.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remark(), target);
  }

  // uint64 created = 6;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->created(), target);
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->modified(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.FriendSignal)
  return target;
}

size_t FriendSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.FriendSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // uint64 created = 6;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // uint64 modified = 7;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  // .outer.friends.EFriendSignalType friend_signal_type = 4;
  if (this->friend_signal_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->friend_signal_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.FriendSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.FriendSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.FriendSignal)
    MergeFrom(*source);
  }
}

void FriendSignal::MergeFrom(const FriendSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.FriendSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
  if (from.friend_signal_type() != 0) {
    set_friend_signal_type(from.friend_signal_type());
  }
}

void FriendSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.FriendSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendSignal::CopyFrom(const FriendSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.FriendSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendSignal::IsInitialized() const {
  return true;
}

void FriendSignal::Swap(FriendSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendSignal::InternalSwap(FriendSignal* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  from_nick_.Swap(&other->from_nick_);
  remark_.Swap(&other->remark_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  swap(friend_signal_type_, other->friend_signal_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendSignal::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApplyFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyFriendRequest::kFromUsernameFieldNumber;
const int ApplyFriendRequest::kAppkeyFieldNumber;
const int ApplyFriendRequest::kToUsernameFieldNumber;
const int ApplyFriendRequest::kRemarkFieldNumber;
const int ApplyFriendRequest::kMsgIdFieldNumber;
const int ApplyFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyFriendRequest::ApplyFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsApplyFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.ApplyFriendRequest)
}
ApplyFriendRequest::ApplyFriendRequest(const ApplyFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.ApplyFriendRequest)
}

void ApplyFriendRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

ApplyFriendRequest::~ApplyFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.ApplyFriendRequest)
  SharedDtor();
}

void ApplyFriendRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplyFriendRequest& ApplyFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsApplyFriendRequest();
  return *internal_default_instance();
}

ApplyFriendRequest* ApplyFriendRequest::New(::google::protobuf::Arena* arena) const {
  ApplyFriendRequest* n = new ApplyFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.ApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool ApplyFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.ApplyFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendRequest.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.ApplyFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.ApplyFriendRequest)
  return false;
#undef DO_
}

void ApplyFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.ApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remark(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.ApplyFriendRequest)
}

::google::protobuf::uint8* ApplyFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.ApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remark(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.ApplyFriendRequest)
  return target;
}

size_t ApplyFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.ApplyFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.ApplyFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.ApplyFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.ApplyFriendRequest)
    MergeFrom(*source);
  }
}

void ApplyFriendRequest::MergeFrom(const ApplyFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.ApplyFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void ApplyFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.ApplyFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyFriendRequest::CopyFrom(const ApplyFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.ApplyFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendRequest::IsInitialized() const {
  return true;
}

void ApplyFriendRequest::Swap(ApplyFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyFriendRequest::InternalSwap(ApplyFriendRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  to_username_.Swap(&other->to_username_);
  remark_.Swap(&other->remark_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApplyFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyFriendResponse::kRetFieldNumber;
const int ApplyFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyFriendResponse::ApplyFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsApplyFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.ApplyFriendResponse)
}
ApplyFriendResponse::ApplyFriendResponse(const ApplyFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.ApplyFriendResponse)
}

void ApplyFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

ApplyFriendResponse::~ApplyFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.ApplyFriendResponse)
  SharedDtor();
}

void ApplyFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplyFriendResponse& ApplyFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsApplyFriendResponse();
  return *internal_default_instance();
}

ApplyFriendResponse* ApplyFriendResponse::New(::google::protobuf::Arena* arena) const {
  ApplyFriendResponse* n = new ApplyFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.ApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool ApplyFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.ApplyFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.ApplyFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.ApplyFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.ApplyFriendResponse)
  return false;
#undef DO_
}

void ApplyFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.ApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.ApplyFriendResponse)
}

::google::protobuf::uint8* ApplyFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.ApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.ApplyFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.ApplyFriendResponse)
  return target;
}

size_t ApplyFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.ApplyFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.ApplyFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.ApplyFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.ApplyFriendResponse)
    MergeFrom(*source);
  }
}

void ApplyFriendResponse::MergeFrom(const ApplyFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.ApplyFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void ApplyFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.ApplyFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyFriendResponse::CopyFrom(const ApplyFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.ApplyFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyFriendResponse::IsInitialized() const {
  return true;
}

void ApplyFriendResponse::Swap(ApplyFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyFriendResponse::InternalSwap(ApplyFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgreeFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeFriendRequest::kReqIdFieldNumber;
const int AgreeFriendRequest::kFromUsernameFieldNumber;
const int AgreeFriendRequest::kAppkeyFieldNumber;
const int AgreeFriendRequest::kMsgIdFieldNumber;
const int AgreeFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeFriendRequest::AgreeFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsAgreeFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.AgreeFriendRequest)
}
AgreeFriendRequest::AgreeFriendRequest(const AgreeFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.req_id().size() > 0) {
    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.AgreeFriendRequest)
}

void AgreeFriendRequest::SharedCtor() {
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

AgreeFriendRequest::~AgreeFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.AgreeFriendRequest)
  SharedDtor();
}

void AgreeFriendRequest::SharedDtor() {
  req_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AgreeFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgreeFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgreeFriendRequest& AgreeFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsAgreeFriendRequest();
  return *internal_default_instance();
}

AgreeFriendRequest* AgreeFriendRequest::New(::google::protobuf::Arena* arena) const {
  AgreeFriendRequest* n = new AgreeFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AgreeFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.AgreeFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool AgreeFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.AgreeFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string req_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_id().data(), static_cast<int>(this->req_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.AgreeFriendRequest.req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.AgreeFriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.AgreeFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.AgreeFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.AgreeFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.AgreeFriendRequest)
  return false;
#undef DO_
}

void AgreeFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.AgreeFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.req_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->req_id(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.AgreeFriendRequest)
}

::google::protobuf::uint8* AgreeFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.AgreeFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.req_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->req_id(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.AgreeFriendRequest)
  return target;
}

size_t AgreeFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.AgreeFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string req_id = 1;
  if (this->req_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->req_id());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgreeFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.AgreeFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AgreeFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.AgreeFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.AgreeFriendRequest)
    MergeFrom(*source);
  }
}

void AgreeFriendRequest::MergeFrom(const AgreeFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.AgreeFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_id().size() > 0) {

    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void AgreeFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.AgreeFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeFriendRequest::CopyFrom(const AgreeFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.AgreeFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendRequest::IsInitialized() const {
  return true;
}

void AgreeFriendRequest::Swap(AgreeFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeFriendRequest::InternalSwap(AgreeFriendRequest* other) {
  using std::swap;
  req_id_.Swap(&other->req_id_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgreeFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgreeFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeFriendResponse::kRetFieldNumber;
const int AgreeFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeFriendResponse::AgreeFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsAgreeFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.AgreeFriendResponse)
}
AgreeFriendResponse::AgreeFriendResponse(const AgreeFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.AgreeFriendResponse)
}

void AgreeFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

AgreeFriendResponse::~AgreeFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.AgreeFriendResponse)
  SharedDtor();
}

void AgreeFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AgreeFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgreeFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgreeFriendResponse& AgreeFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsAgreeFriendResponse();
  return *internal_default_instance();
}

AgreeFriendResponse* AgreeFriendResponse::New(::google::protobuf::Arena* arena) const {
  AgreeFriendResponse* n = new AgreeFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AgreeFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.AgreeFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool AgreeFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.AgreeFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.AgreeFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.AgreeFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.AgreeFriendResponse)
  return false;
#undef DO_
}

void AgreeFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.AgreeFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.AgreeFriendResponse)
}

::google::protobuf::uint8* AgreeFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.AgreeFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.AgreeFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.AgreeFriendResponse)
  return target;
}

size_t AgreeFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.AgreeFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgreeFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.AgreeFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AgreeFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.AgreeFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.AgreeFriendResponse)
    MergeFrom(*source);
  }
}

void AgreeFriendResponse::MergeFrom(const AgreeFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.AgreeFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void AgreeFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.AgreeFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeFriendResponse::CopyFrom(const AgreeFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.AgreeFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeFriendResponse::IsInitialized() const {
  return true;
}

void AgreeFriendResponse::Swap(AgreeFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeFriendResponse::InternalSwap(AgreeFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgreeFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefuseFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefuseFriendRequest::kReqIdFieldNumber;
const int RefuseFriendRequest::kFromUsernameFieldNumber;
const int RefuseFriendRequest::kAppkeyFieldNumber;
const int RefuseFriendRequest::kMsgIdFieldNumber;
const int RefuseFriendRequest::kRemarkFieldNumber;
const int RefuseFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefuseFriendRequest::RefuseFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsRefuseFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.RefuseFriendRequest)
}
RefuseFriendRequest::RefuseFriendRequest(const RefuseFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.req_id().size() > 0) {
    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.RefuseFriendRequest)
}

void RefuseFriendRequest::SharedCtor() {
  req_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

RefuseFriendRequest::~RefuseFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.RefuseFriendRequest)
  SharedDtor();
}

void RefuseFriendRequest::SharedDtor() {
  req_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefuseFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefuseFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefuseFriendRequest& RefuseFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsRefuseFriendRequest();
  return *internal_default_instance();
}

RefuseFriendRequest* RefuseFriendRequest::New(::google::protobuf::Arena* arena) const {
  RefuseFriendRequest* n = new RefuseFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefuseFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.RefuseFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool RefuseFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.RefuseFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string req_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_id().data(), static_cast<int>(this->req_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendRequest.req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendRequest.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.RefuseFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.RefuseFriendRequest)
  return false;
#undef DO_
}

void RefuseFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.RefuseFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.req_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->req_id(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remark(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.RefuseFriendRequest)
}

::google::protobuf::uint8* RefuseFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.RefuseFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_id = 1;
  if (this->req_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id().data(), static_cast<int>(this->req_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.req_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->req_id(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendRequest.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remark(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.RefuseFriendRequest)
  return target;
}

size_t RefuseFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.RefuseFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string req_id = 1;
  if (this->req_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->req_id());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string remark = 5;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefuseFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.RefuseFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefuseFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefuseFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.RefuseFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.RefuseFriendRequest)
    MergeFrom(*source);
  }
}

void RefuseFriendRequest::MergeFrom(const RefuseFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.RefuseFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_id().size() > 0) {

    req_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_id_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void RefuseFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.RefuseFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefuseFriendRequest::CopyFrom(const RefuseFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.RefuseFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefuseFriendRequest::IsInitialized() const {
  return true;
}

void RefuseFriendRequest::Swap(RefuseFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefuseFriendRequest::InternalSwap(RefuseFriendRequest* other) {
  using std::swap;
  req_id_.Swap(&other->req_id_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  remark_.Swap(&other->remark_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefuseFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefuseFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefuseFriendResponse::kRetFieldNumber;
const int RefuseFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefuseFriendResponse::RefuseFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsRefuseFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.RefuseFriendResponse)
}
RefuseFriendResponse::RefuseFriendResponse(const RefuseFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.RefuseFriendResponse)
}

void RefuseFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

RefuseFriendResponse::~RefuseFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.RefuseFriendResponse)
  SharedDtor();
}

void RefuseFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefuseFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefuseFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefuseFriendResponse& RefuseFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsRefuseFriendResponse();
  return *internal_default_instance();
}

RefuseFriendResponse* RefuseFriendResponse::New(::google::protobuf::Arena* arena) const {
  RefuseFriendResponse* n = new RefuseFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefuseFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.RefuseFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool RefuseFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.RefuseFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RefuseFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.RefuseFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.RefuseFriendResponse)
  return false;
#undef DO_
}

void RefuseFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.RefuseFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.RefuseFriendResponse)
}

::google::protobuf::uint8* RefuseFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.RefuseFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RefuseFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.RefuseFriendResponse)
  return target;
}

size_t RefuseFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.RefuseFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefuseFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.RefuseFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RefuseFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefuseFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.RefuseFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.RefuseFriendResponse)
    MergeFrom(*source);
  }
}

void RefuseFriendResponse::MergeFrom(const RefuseFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.RefuseFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void RefuseFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.RefuseFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefuseFriendResponse::CopyFrom(const RefuseFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.RefuseFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefuseFriendResponse::IsInitialized() const {
  return true;
}

void RefuseFriendResponse::Swap(RefuseFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefuseFriendResponse::InternalSwap(RefuseFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefuseFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveFriendRequest::kFromUsernameFieldNumber;
const int RemoveFriendRequest::kAppkeyFieldNumber;
const int RemoveFriendRequest::kToUsernameFieldNumber;
const int RemoveFriendRequest::kMsgIdFieldNumber;
const int RemoveFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveFriendRequest::RemoveFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsRemoveFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.RemoveFriendRequest)
}
RemoveFriendRequest::RemoveFriendRequest(const RemoveFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.RemoveFriendRequest)
}

void RemoveFriendRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

RemoveFriendRequest::~RemoveFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.RemoveFriendRequest)
  SharedDtor();
}

void RemoveFriendRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveFriendRequest& RemoveFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsRemoveFriendRequest();
  return *internal_default_instance();
}

RemoveFriendRequest* RemoveFriendRequest::New(::google::protobuf::Arena* arena) const {
  RemoveFriendRequest* n = new RemoveFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.RemoveFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.RemoveFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RemoveFriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RemoveFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RemoveFriendRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RemoveFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.RemoveFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.RemoveFriendRequest)
  return false;
#undef DO_
}

void RemoveFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.RemoveFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.RemoveFriendRequest)
}

::google::protobuf::uint8* RemoveFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.RemoveFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.RemoveFriendRequest)
  return target;
}

size_t RemoveFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.RemoveFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.RemoveFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.RemoveFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.RemoveFriendRequest)
    MergeFrom(*source);
  }
}

void RemoveFriendRequest::MergeFrom(const RemoveFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.RemoveFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void RemoveFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.RemoveFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveFriendRequest::CopyFrom(const RemoveFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.RemoveFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFriendRequest::IsInitialized() const {
  return true;
}

void RemoveFriendRequest::Swap(RemoveFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveFriendRequest::InternalSwap(RemoveFriendRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  to_username_.Swap(&other->to_username_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveFriendResponse::kRetFieldNumber;
const int RemoveFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveFriendResponse::RemoveFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsRemoveFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.RemoveFriendResponse)
}
RemoveFriendResponse::RemoveFriendResponse(const RemoveFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.RemoveFriendResponse)
}

void RemoveFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

RemoveFriendResponse::~RemoveFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.RemoveFriendResponse)
  SharedDtor();
}

void RemoveFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveFriendResponse& RemoveFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsRemoveFriendResponse();
  return *internal_default_instance();
}

RemoveFriendResponse* RemoveFriendResponse::New(::google::protobuf::Arena* arena) const {
  RemoveFriendResponse* n = new RemoveFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.RemoveFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.RemoveFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.RemoveFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.RemoveFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.RemoveFriendResponse)
  return false;
#undef DO_
}

void RemoveFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.RemoveFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.RemoveFriendResponse)
}

::google::protobuf::uint8* RemoveFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.RemoveFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.RemoveFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.RemoveFriendResponse)
  return target;
}

size_t RemoveFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.RemoveFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.RemoveFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.RemoveFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.RemoveFriendResponse)
    MergeFrom(*source);
  }
}

void RemoveFriendResponse::MergeFrom(const RemoveFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.RemoveFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void RemoveFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.RemoveFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveFriendResponse::CopyFrom(const RemoveFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.RemoveFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFriendResponse::IsInitialized() const {
  return true;
}

void RemoveFriendResponse::Swap(RemoveFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveFriendResponse::InternalSwap(RemoveFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncFriendRequest::kUsernameFieldNumber;
const int SyncFriendRequest::kAppkeyFieldNumber;
const int SyncFriendRequest::kFriendModifiedFieldNumber;
const int SyncFriendRequest::kFriendReqModifiedFieldNumber;
const int SyncFriendRequest::kFriendSignalModifiedFieldNumber;
const int SyncFriendRequest::kMsgIdFieldNumber;
const int SyncFriendRequest::kFirstSyncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncFriendRequest::SyncFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsSyncFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.SyncFriendRequest)
}
SyncFriendRequest::SyncFriendRequest(const SyncFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ::memcpy(&friend_modified_, &from.friend_modified_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_sync_) -
    reinterpret_cast<char*>(&friend_modified_)) + sizeof(first_sync_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.SyncFriendRequest)
}

void SyncFriendRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_sync_) -
      reinterpret_cast<char*>(&friend_modified_)) + sizeof(first_sync_));
  _cached_size_ = 0;
}

SyncFriendRequest::~SyncFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.SyncFriendRequest)
  SharedDtor();
}

void SyncFriendRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncFriendRequest& SyncFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsSyncFriendRequest();
  return *internal_default_instance();
}

SyncFriendRequest* SyncFriendRequest::New(::google::protobuf::Arena* arena) const {
  SyncFriendRequest* n = new SyncFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.SyncFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_modified_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_sync_) -
      reinterpret_cast<char*>(&friend_modified_)) + sizeof(first_sync_));
  _internal_metadata_.Clear();
}

bool SyncFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.SyncFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.SyncFriendRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.SyncFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 friend_modified = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 friend_req_modified = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend_req_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.SyncFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 friend_signal_modified = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend_signal_modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool first_sync = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_sync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.SyncFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.SyncFriendRequest)
  return false;
#undef DO_
}

void SyncFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.SyncFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // uint64 friend_modified = 3;
  if (this->friend_modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->friend_modified(), output);
  }

  // uint64 friend_req_modified = 4;
  if (this->friend_req_modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->friend_req_modified(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // uint64 friend_signal_modified = 6;
  if (this->friend_signal_modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->friend_signal_modified(), output);
  }

  // bool first_sync = 7;
  if (this->first_sync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->first_sync(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.SyncFriendRequest)
}

::google::protobuf::uint8* SyncFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.SyncFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // uint64 friend_modified = 3;
  if (this->friend_modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->friend_modified(), target);
  }

  // uint64 friend_req_modified = 4;
  if (this->friend_req_modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->friend_req_modified(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // uint64 friend_signal_modified = 6;
  if (this->friend_signal_modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->friend_signal_modified(), target);
  }

  // bool first_sync = 7;
  if (this->first_sync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->first_sync(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.SyncFriendRequest)
  return target;
}

size_t SyncFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.SyncFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // uint64 friend_modified = 3;
  if (this->friend_modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_modified());
  }

  // uint64 friend_req_modified = 4;
  if (this->friend_req_modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_req_modified());
  }

  // uint64 friend_signal_modified = 6;
  if (this->friend_signal_modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_signal_modified());
  }

  // bool first_sync = 7;
  if (this->first_sync() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.SyncFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.SyncFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.SyncFriendRequest)
    MergeFrom(*source);
  }
}

void SyncFriendRequest::MergeFrom(const SyncFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.SyncFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.friend_modified() != 0) {
    set_friend_modified(from.friend_modified());
  }
  if (from.friend_req_modified() != 0) {
    set_friend_req_modified(from.friend_req_modified());
  }
  if (from.friend_signal_modified() != 0) {
    set_friend_signal_modified(from.friend_signal_modified());
  }
  if (from.first_sync() != 0) {
    set_first_sync(from.first_sync());
  }
}

void SyncFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.SyncFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncFriendRequest::CopyFrom(const SyncFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.SyncFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFriendRequest::IsInitialized() const {
  return true;
}

void SyncFriendRequest::Swap(SyncFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncFriendRequest::InternalSwap(SyncFriendRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  swap(friend_modified_, other->friend_modified_);
  swap(friend_req_modified_, other->friend_req_modified_);
  swap(friend_signal_modified_, other->friend_signal_modified_);
  swap(first_sync_, other->first_sync_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncFriendResponse::kRetFieldNumber;
const int SyncFriendResponse::kFriendInfoFieldNumber;
const int SyncFriendResponse::kFriendRequestFieldNumber;
const int SyncFriendResponse::kFriendSignalFieldNumber;
const int SyncFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncFriendResponse::SyncFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsSyncFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.SyncFriendResponse)
}
SyncFriendResponse::SyncFriendResponse(const SyncFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_info_(from.friend_info_),
      friend_request_(from.friend_request_),
      friend_signal_(from.friend_signal_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.SyncFriendResponse)
}

void SyncFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

SyncFriendResponse::~SyncFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.SyncFriendResponse)
  SharedDtor();
}

void SyncFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncFriendResponse& SyncFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsSyncFriendResponse();
  return *internal_default_instance();
}

SyncFriendResponse* SyncFriendResponse::New(::google::protobuf::Arena* arena) const {
  SyncFriendResponse* n = new SyncFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.SyncFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_info_.Clear();
  friend_request_.Clear();
  friend_signal_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SyncFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.SyncFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.friends.FriendInfo friend_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_friend_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.friends.FriendRequest friend_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_friend_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.friends.FriendSignal friend_signal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_friend_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.SyncFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.SyncFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.SyncFriendResponse)
  return false;
#undef DO_
}

void SyncFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.SyncFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.friends.FriendInfo friend_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_info(static_cast<int>(i)), output);
  }

  // repeated .outer.friends.FriendRequest friend_request = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_request_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->friend_request(static_cast<int>(i)), output);
  }

  // repeated .outer.friends.FriendSignal friend_signal = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_signal_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->friend_signal(static_cast<int>(i)), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.SyncFriendResponse)
}

::google::protobuf::uint8* SyncFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.SyncFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.friends.FriendInfo friend_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->friend_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .outer.friends.FriendRequest friend_request = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_request_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->friend_request(static_cast<int>(i)), deterministic, target);
  }

  // repeated .outer.friends.FriendSignal friend_signal = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_signal_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->friend_signal(static_cast<int>(i)), deterministic, target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.SyncFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.SyncFriendResponse)
  return target;
}

size_t SyncFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.SyncFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.friends.FriendInfo friend_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_info(static_cast<int>(i)));
    }
  }

  // repeated .outer.friends.FriendRequest friend_request = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_request_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_request(static_cast<int>(i)));
    }
  }

  // repeated .outer.friends.FriendSignal friend_signal = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_signal_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_signal(static_cast<int>(i)));
    }
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.SyncFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.SyncFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.SyncFriendResponse)
    MergeFrom(*source);
  }
}

void SyncFriendResponse::MergeFrom(const SyncFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.SyncFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_info_.MergeFrom(from.friend_info_);
  friend_request_.MergeFrom(from.friend_request_);
  friend_signal_.MergeFrom(from.friend_signal_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.SyncFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncFriendResponse::CopyFrom(const SyncFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.SyncFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFriendResponse::IsInitialized() const {
  return true;
}

void SyncFriendResponse::Swap(SyncFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncFriendResponse::InternalSwap(SyncFriendResponse* other) {
  using std::swap;
  friend_info_.InternalSwap(&other->friend_info_);
  friend_request_.InternalSwap(&other->friend_request_);
  friend_signal_.InternalSwap(&other->friend_signal_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateFriendInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateFriendInfoRequest::kAppkeyFieldNumber;
const int UpdateFriendInfoRequest::kFromUsernameFieldNumber;
const int UpdateFriendInfoRequest::kFriendUsernameFieldNumber;
const int UpdateFriendInfoRequest::kFriendDisplayFieldNumber;
const int UpdateFriendInfoRequest::kMsgIdFieldNumber;
const int UpdateFriendInfoRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateFriendInfoRequest::UpdateFriendInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateFriendInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.UpdateFriendInfoRequest)
}
UpdateFriendInfoRequest::UpdateFriendInfoRequest(const UpdateFriendInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_username().size() > 0) {
    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_display().size() > 0) {
    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.UpdateFriendInfoRequest)
}

void UpdateFriendInfoRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

UpdateFriendInfoRequest::~UpdateFriendInfoRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.UpdateFriendInfoRequest)
  SharedDtor();
}

void UpdateFriendInfoRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateFriendInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFriendInfoRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateFriendInfoRequest& UpdateFriendInfoRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateFriendInfoRequest();
  return *internal_default_instance();
}

UpdateFriendInfoRequest* UpdateFriendInfoRequest::New(::google::protobuf::Arena* arena) const {
  UpdateFriendInfoRequest* n = new UpdateFriendInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateFriendInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.UpdateFriendInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateFriendInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.UpdateFriendInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_username().data(), static_cast<int>(this->friend_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoRequest.friend_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_display = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_display().data(), static_cast<int>(this->friend_display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoRequest.friend_display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.UpdateFriendInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.UpdateFriendInfoRequest)
  return false;
#undef DO_
}

void UpdateFriendInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.UpdateFriendInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.friend_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_username(), output);
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.friend_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->friend_display(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.UpdateFriendInfoRequest)
}

::google::protobuf::uint8* UpdateFriendInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.UpdateFriendInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.friend_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_username(), target);
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.friend_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->friend_display(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.UpdateFriendInfoRequest)
  return target;
}

size_t UpdateFriendInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.UpdateFriendInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_username());
  }

  // string friend_display = 4;
  if (this->friend_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_display());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateFriendInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.UpdateFriendInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateFriendInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateFriendInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.UpdateFriendInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.UpdateFriendInfoRequest)
    MergeFrom(*source);
  }
}

void UpdateFriendInfoRequest::MergeFrom(const UpdateFriendInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.UpdateFriendInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.friend_username().size() > 0) {

    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  if (from.friend_display().size() > 0) {

    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void UpdateFriendInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.UpdateFriendInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFriendInfoRequest::CopyFrom(const UpdateFriendInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.UpdateFriendInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFriendInfoRequest::IsInitialized() const {
  return true;
}

void UpdateFriendInfoRequest::Swap(UpdateFriendInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateFriendInfoRequest::InternalSwap(UpdateFriendInfoRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  friend_username_.Swap(&other->friend_username_);
  friend_display_.Swap(&other->friend_display_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateFriendInfoRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateFriendInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateFriendInfoResponse::kRetFieldNumber;
const int UpdateFriendInfoResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateFriendInfoResponse::UpdateFriendInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateFriendInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.UpdateFriendInfoResponse)
}
UpdateFriendInfoResponse::UpdateFriendInfoResponse(const UpdateFriendInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.UpdateFriendInfoResponse)
}

void UpdateFriendInfoResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

UpdateFriendInfoResponse::~UpdateFriendInfoResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.UpdateFriendInfoResponse)
  SharedDtor();
}

void UpdateFriendInfoResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateFriendInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFriendInfoResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateFriendInfoResponse& UpdateFriendInfoResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateFriendInfoResponse();
  return *internal_default_instance();
}

UpdateFriendInfoResponse* UpdateFriendInfoResponse::New(::google::protobuf::Arena* arena) const {
  UpdateFriendInfoResponse* n = new UpdateFriendInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateFriendInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.UpdateFriendInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateFriendInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.UpdateFriendInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateFriendInfoResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.UpdateFriendInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.UpdateFriendInfoResponse)
  return false;
#undef DO_
}

void UpdateFriendInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.UpdateFriendInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.UpdateFriendInfoResponse)
}

::google::protobuf::uint8* UpdateFriendInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.UpdateFriendInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateFriendInfoResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.UpdateFriendInfoResponse)
  return target;
}

size_t UpdateFriendInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.UpdateFriendInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateFriendInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.UpdateFriendInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateFriendInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateFriendInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.UpdateFriendInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.UpdateFriendInfoResponse)
    MergeFrom(*source);
  }
}

void UpdateFriendInfoResponse::MergeFrom(const UpdateFriendInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.UpdateFriendInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UpdateFriendInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.UpdateFriendInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFriendInfoResponse::CopyFrom(const UpdateFriendInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.UpdateFriendInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFriendInfoResponse::IsInitialized() const {
  return true;
}

void UpdateFriendInfoResponse::Swap(UpdateFriendInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateFriendInfoResponse::InternalSwap(UpdateFriendInfoResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateFriendInfoResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateSilentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSilentRequest::kAppkeyFieldNumber;
const int UpdateSilentRequest::kFromUsernameFieldNumber;
const int UpdateSilentRequest::kFriendUsernameFieldNumber;
const int UpdateSilentRequest::kFriendSilentFieldNumber;
const int UpdateSilentRequest::kMsgIdFieldNumber;
const int UpdateSilentRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSilentRequest::UpdateSilentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateSilentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.UpdateSilentRequest)
}
UpdateSilentRequest::UpdateSilentRequest(const UpdateSilentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_username().size() > 0) {
    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ::memcpy(&friend_silent_, &from.friend_silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_client_type_) -
    reinterpret_cast<char*>(&friend_silent_)) + sizeof(from_client_type_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.UpdateSilentRequest)
}

void UpdateSilentRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_silent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&friend_silent_)) + sizeof(from_client_type_));
  _cached_size_ = 0;
}

UpdateSilentRequest::~UpdateSilentRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.UpdateSilentRequest)
  SharedDtor();
}

void UpdateSilentRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateSilentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSilentRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateSilentRequest& UpdateSilentRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateSilentRequest();
  return *internal_default_instance();
}

UpdateSilentRequest* UpdateSilentRequest::New(::google::protobuf::Arena* arena) const {
  UpdateSilentRequest* n = new UpdateSilentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSilentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.UpdateSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_silent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&friend_silent_)) + sizeof(from_client_type_));
  _internal_metadata_.Clear();
}

bool UpdateSilentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.UpdateSilentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateSilentRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateSilentRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_username().data(), static_cast<int>(this->friend_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateSilentRequest.friend_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.ESilent friend_silent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_friend_silent(static_cast< ::common::enumeration::ESilent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateSilentRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.UpdateSilentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.UpdateSilentRequest)
  return false;
#undef DO_
}

void UpdateSilentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.UpdateSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.friend_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_username(), output);
  }

  // .common.enumeration.ESilent friend_silent = 4;
  if (this->friend_silent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->friend_silent(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.UpdateSilentRequest)
}

::google::protobuf::uint8* UpdateSilentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.UpdateSilentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.friend_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_username(), target);
  }

  // .common.enumeration.ESilent friend_silent = 4;
  if (this->friend_silent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->friend_silent(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.UpdateSilentRequest)
  return target;
}

size_t UpdateSilentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.UpdateSilentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_username());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.ESilent friend_silent = 4;
  if (this->friend_silent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->friend_silent());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSilentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.UpdateSilentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSilentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSilentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.UpdateSilentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.UpdateSilentRequest)
    MergeFrom(*source);
  }
}

void UpdateSilentRequest::MergeFrom(const UpdateSilentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.UpdateSilentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.friend_username().size() > 0) {

    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.friend_silent() != 0) {
    set_friend_silent(from.friend_silent());
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void UpdateSilentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.UpdateSilentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSilentRequest::CopyFrom(const UpdateSilentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.UpdateSilentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSilentRequest::IsInitialized() const {
  return true;
}

void UpdateSilentRequest::Swap(UpdateSilentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSilentRequest::InternalSwap(UpdateSilentRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  friend_username_.Swap(&other->friend_username_);
  msg_id_.Swap(&other->msg_id_);
  swap(friend_silent_, other->friend_silent_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSilentRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateSilentRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSilentRespone::kRetFieldNumber;
const int UpdateSilentRespone::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSilentRespone::UpdateSilentRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateSilentRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.UpdateSilentRespone)
}
UpdateSilentRespone::UpdateSilentRespone(const UpdateSilentRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.UpdateSilentRespone)
}

void UpdateSilentRespone::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

UpdateSilentRespone::~UpdateSilentRespone() {
  // @@protoc_insertion_point(destructor:outer.friends.UpdateSilentRespone)
  SharedDtor();
}

void UpdateSilentRespone::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateSilentRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSilentRespone::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateSilentRespone& UpdateSilentRespone::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsUpdateSilentRespone();
  return *internal_default_instance();
}

UpdateSilentRespone* UpdateSilentRespone::New(::google::protobuf::Arena* arena) const {
  UpdateSilentRespone* n = new UpdateSilentRespone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSilentRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.UpdateSilentRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateSilentRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.UpdateSilentRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.UpdateSilentRespone.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.UpdateSilentRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.UpdateSilentRespone)
  return false;
#undef DO_
}

void UpdateSilentRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.UpdateSilentRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRespone.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.UpdateSilentRespone)
}

::google::protobuf::uint8* UpdateSilentRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.UpdateSilentRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.UpdateSilentRespone.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.UpdateSilentRespone)
  return target;
}

size_t UpdateSilentRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.UpdateSilentRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSilentRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.UpdateSilentRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateSilentRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSilentRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.UpdateSilentRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.UpdateSilentRespone)
    MergeFrom(*source);
  }
}

void UpdateSilentRespone::MergeFrom(const UpdateSilentRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.UpdateSilentRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UpdateSilentRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.UpdateSilentRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSilentRespone::CopyFrom(const UpdateSilentRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.UpdateSilentRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSilentRespone::IsInitialized() const {
  return true;
}

void UpdateSilentRespone::Swap(UpdateSilentRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSilentRespone::InternalSwap(UpdateSilentRespone* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSilentRespone::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendListRequest::kAppkeyFieldNumber;
const int GetFriendListRequest::kUsernameFieldNumber;
const int GetFriendListRequest::kPageIndexFieldNumber;
const int GetFriendListRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendListRequest::GetFriendListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.GetFriendListRequest)
}
GetFriendListRequest::GetFriendListRequest(const GetFriendListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&page_index_, &from.page_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.GetFriendListRequest)
}

void GetFriendListRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  _cached_size_ = 0;
}

GetFriendListRequest::~GetFriendListRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.GetFriendListRequest)
  SharedDtor();
}

void GetFriendListRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFriendListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendListRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendListRequest& GetFriendListRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendListRequest();
  return *internal_default_instance();
}

GetFriendListRequest* GetFriendListRequest::New(::google::protobuf::Arena* arena) const {
  GetFriendListRequest* n = new GetFriendListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.GetFriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&page_index_)) + sizeof(page_size_));
  _internal_metadata_.Clear();
}

bool GetFriendListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.GetFriendListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 page_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.GetFriendListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.GetFriendListRequest)
  return false;
#undef DO_
}

void GetFriendListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.GetFriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // int32 page_index = 3;
  if (this->page_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_index(), output);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.GetFriendListRequest)
}

::google::protobuf::uint8* GetFriendListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.GetFriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // int32 page_index = 3;
  if (this->page_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_index(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.GetFriendListRequest)
  return target;
}

size_t GetFriendListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.GetFriendListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 page_index = 3;
  if (this->page_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_index());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.GetFriendListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.GetFriendListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.GetFriendListRequest)
    MergeFrom(*source);
  }
}

void GetFriendListRequest::MergeFrom(const GetFriendListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.GetFriendListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.page_index() != 0) {
    set_page_index(from.page_index());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void GetFriendListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.GetFriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendListRequest::CopyFrom(const GetFriendListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.GetFriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendListRequest::IsInitialized() const {
  return true;
}

void GetFriendListRequest::Swap(GetFriendListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendListRequest::InternalSwap(GetFriendListRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  swap(page_index_, other->page_index_);
  swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendListRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendListResponse::kRetFieldNumber;
const int GetFriendListResponse::kFriendInfoFieldNumber;
const int GetFriendListResponse::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendListResponse::GetFriendListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.GetFriendListResponse)
}
GetFriendListResponse::GetFriendListResponse(const GetFriendListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_info_(from.friend_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.friends.GetFriendListResponse)
}

void GetFriendListResponse::SharedCtor() {
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  _cached_size_ = 0;
}

GetFriendListResponse::~GetFriendListResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.GetFriendListResponse)
  SharedDtor();
}

void GetFriendListResponse::SharedDtor() {
}

void GetFriendListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendListResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendListResponse& GetFriendListResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendListResponse();
  return *internal_default_instance();
}

GetFriendListResponse* GetFriendListResponse::New(::google::protobuf::Arena* arena) const {
  GetFriendListResponse* n = new GetFriendListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.GetFriendListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_info_.Clear();
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&total_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool GetFriendListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.GetFriendListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.friends.FriendInfo friend_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_friend_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.GetFriendListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.GetFriendListResponse)
  return false;
#undef DO_
}

void GetFriendListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.GetFriendListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.friends.FriendInfo friend_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_info(static_cast<int>(i)), output);
  }

  // int64 total = 3;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.GetFriendListResponse)
}

::google::protobuf::uint8* GetFriendListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.GetFriendListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.friends.FriendInfo friend_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->friend_info(static_cast<int>(i)), deterministic, target);
  }

  // int64 total = 3;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.GetFriendListResponse)
  return target;
}

size_t GetFriendListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.GetFriendListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.friends.FriendInfo friend_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_info(static_cast<int>(i)));
    }
  }

  // int64 total = 3;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.GetFriendListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.GetFriendListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.GetFriendListResponse)
    MergeFrom(*source);
  }
}

void GetFriendListResponse::MergeFrom(const GetFriendListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.GetFriendListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_info_.MergeFrom(from.friend_info_);
  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFriendListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.GetFriendListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendListResponse::CopyFrom(const GetFriendListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.GetFriendListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendListResponse::IsInitialized() const {
  return true;
}

void GetFriendListResponse::Swap(GetFriendListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendListResponse::InternalSwap(GetFriendListResponse* other) {
  using std::swap;
  friend_info_.InternalSwap(&other->friend_info_);
  swap(total_, other->total_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendListResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HasReadFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HasReadFriendRequest::kReqIdFieldNumber;
const int HasReadFriendRequest::kAppkeyFieldNumber;
const int HasReadFriendRequest::kUsernameFieldNumber;
const int HasReadFriendRequest::kMsgIdFieldNumber;
const int HasReadFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HasReadFriendRequest::HasReadFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasReadFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.HasReadFriendRequest)
}
HasReadFriendRequest::HasReadFriendRequest(const HasReadFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      req_id_(from.req_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.HasReadFriendRequest)
}

void HasReadFriendRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

HasReadFriendRequest::~HasReadFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.HasReadFriendRequest)
  SharedDtor();
}

void HasReadFriendRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HasReadFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasReadFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HasReadFriendRequest& HasReadFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasReadFriendRequest();
  return *internal_default_instance();
}

HasReadFriendRequest* HasReadFriendRequest::New(::google::protobuf::Arena* arena) const {
  HasReadFriendRequest* n = new HasReadFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HasReadFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.HasReadFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_id_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool HasReadFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.HasReadFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string req_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_id(this->req_id_size() - 1).data(),
            static_cast<int>(this->req_id(this->req_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasReadFriendRequest.req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasReadFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasReadFriendRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasReadFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.HasReadFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.HasReadFriendRequest)
  return false;
#undef DO_
}

void HasReadFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.HasReadFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string req_id = 1;
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id(i).data(), static_cast<int>(this->req_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.req_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->req_id(i), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.HasReadFriendRequest)
}

::google::protobuf::uint8* HasReadFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.HasReadFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string req_id = 1;
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id(i).data(), static_cast<int>(this->req_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.req_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->req_id(i), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.HasReadFriendRequest)
  return target;
}

size_t HasReadFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.HasReadFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string req_id = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->req_id_size());
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->req_id(i));
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasReadFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.HasReadFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HasReadFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HasReadFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.HasReadFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.HasReadFriendRequest)
    MergeFrom(*source);
  }
}

void HasReadFriendRequest::MergeFrom(const HasReadFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.HasReadFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_id_.MergeFrom(from.req_id_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void HasReadFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.HasReadFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasReadFriendRequest::CopyFrom(const HasReadFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.HasReadFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasReadFriendRequest::IsInitialized() const {
  return true;
}

void HasReadFriendRequest::Swap(HasReadFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HasReadFriendRequest::InternalSwap(HasReadFriendRequest* other) {
  using std::swap;
  req_id_.InternalSwap(&other->req_id_);
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HasReadFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HasReadFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HasReadFriendResponse::kRetFieldNumber;
const int HasReadFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HasReadFriendResponse::HasReadFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasReadFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.HasReadFriendResponse)
}
HasReadFriendResponse::HasReadFriendResponse(const HasReadFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.HasReadFriendResponse)
}

void HasReadFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

HasReadFriendResponse::~HasReadFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.HasReadFriendResponse)
  SharedDtor();
}

void HasReadFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HasReadFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasReadFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HasReadFriendResponse& HasReadFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasReadFriendResponse();
  return *internal_default_instance();
}

HasReadFriendResponse* HasReadFriendResponse::New(::google::protobuf::Arena* arena) const {
  HasReadFriendResponse* n = new HasReadFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HasReadFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.HasReadFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool HasReadFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.HasReadFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasReadFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.HasReadFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.HasReadFriendResponse)
  return false;
#undef DO_
}

void HasReadFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.HasReadFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.HasReadFriendResponse)
}

::google::protobuf::uint8* HasReadFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.HasReadFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasReadFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.HasReadFriendResponse)
  return target;
}

size_t HasReadFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.HasReadFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasReadFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.HasReadFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HasReadFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HasReadFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.HasReadFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.HasReadFriendResponse)
    MergeFrom(*source);
  }
}

void HasReadFriendResponse::MergeFrom(const HasReadFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.HasReadFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void HasReadFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.HasReadFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasReadFriendResponse::CopyFrom(const HasReadFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.HasReadFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasReadFriendResponse::IsInitialized() const {
  return true;
}

void HasReadFriendResponse::Swap(HasReadFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HasReadFriendResponse::InternalSwap(HasReadFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HasReadFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HasIgnoreFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HasIgnoreFriendRequest::kReqIdFieldNumber;
const int HasIgnoreFriendRequest::kAppkeyFieldNumber;
const int HasIgnoreFriendRequest::kUsernameFieldNumber;
const int HasIgnoreFriendRequest::kMsgIdFieldNumber;
const int HasIgnoreFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HasIgnoreFriendRequest::HasIgnoreFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasIgnoreFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.HasIgnoreFriendRequest)
}
HasIgnoreFriendRequest::HasIgnoreFriendRequest(const HasIgnoreFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      req_id_(from.req_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.HasIgnoreFriendRequest)
}

void HasIgnoreFriendRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

HasIgnoreFriendRequest::~HasIgnoreFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.HasIgnoreFriendRequest)
  SharedDtor();
}

void HasIgnoreFriendRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HasIgnoreFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasIgnoreFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HasIgnoreFriendRequest& HasIgnoreFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasIgnoreFriendRequest();
  return *internal_default_instance();
}

HasIgnoreFriendRequest* HasIgnoreFriendRequest::New(::google::protobuf::Arena* arena) const {
  HasIgnoreFriendRequest* n = new HasIgnoreFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HasIgnoreFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.HasIgnoreFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_id_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool HasIgnoreFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.HasIgnoreFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string req_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_req_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_id(this->req_id_size() - 1).data(),
            static_cast<int>(this->req_id(this->req_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasIgnoreFriendRequest.req_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasIgnoreFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasIgnoreFriendRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasIgnoreFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.HasIgnoreFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.HasIgnoreFriendRequest)
  return false;
#undef DO_
}

void HasIgnoreFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.HasIgnoreFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string req_id = 1;
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id(i).data(), static_cast<int>(this->req_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.req_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->req_id(i), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.HasIgnoreFriendRequest)
}

::google::protobuf::uint8* HasIgnoreFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.HasIgnoreFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string req_id = 1;
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_id(i).data(), static_cast<int>(this->req_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.req_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->req_id(i), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.HasIgnoreFriendRequest)
  return target;
}

size_t HasIgnoreFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.HasIgnoreFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string req_id = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->req_id_size());
  for (int i = 0, n = this->req_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->req_id(i));
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string msg_id = 4;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasIgnoreFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.HasIgnoreFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HasIgnoreFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HasIgnoreFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.HasIgnoreFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.HasIgnoreFriendRequest)
    MergeFrom(*source);
  }
}

void HasIgnoreFriendRequest::MergeFrom(const HasIgnoreFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.HasIgnoreFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_id_.MergeFrom(from.req_id_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void HasIgnoreFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.HasIgnoreFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasIgnoreFriendRequest::CopyFrom(const HasIgnoreFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.HasIgnoreFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasIgnoreFriendRequest::IsInitialized() const {
  return true;
}

void HasIgnoreFriendRequest::Swap(HasIgnoreFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HasIgnoreFriendRequest::InternalSwap(HasIgnoreFriendRequest* other) {
  using std::swap;
  req_id_.InternalSwap(&other->req_id_);
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HasIgnoreFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HasIgnoreFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HasIgnoreFriendResponse::kRetFieldNumber;
const int HasIgnoreFriendResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HasIgnoreFriendResponse::HasIgnoreFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasIgnoreFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.HasIgnoreFriendResponse)
}
HasIgnoreFriendResponse::HasIgnoreFriendResponse(const HasIgnoreFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.HasIgnoreFriendResponse)
}

void HasIgnoreFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

HasIgnoreFriendResponse::~HasIgnoreFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.HasIgnoreFriendResponse)
  SharedDtor();
}

void HasIgnoreFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HasIgnoreFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HasIgnoreFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HasIgnoreFriendResponse& HasIgnoreFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsHasIgnoreFriendResponse();
  return *internal_default_instance();
}

HasIgnoreFriendResponse* HasIgnoreFriendResponse::New(::google::protobuf::Arena* arena) const {
  HasIgnoreFriendResponse* n = new HasIgnoreFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HasIgnoreFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.HasIgnoreFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool HasIgnoreFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.HasIgnoreFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.HasIgnoreFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.HasIgnoreFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.HasIgnoreFriendResponse)
  return false;
#undef DO_
}

void HasIgnoreFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.HasIgnoreFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.HasIgnoreFriendResponse)
}

::google::protobuf::uint8* HasIgnoreFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.HasIgnoreFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.HasIgnoreFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.HasIgnoreFriendResponse)
  return target;
}

size_t HasIgnoreFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.HasIgnoreFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HasIgnoreFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.HasIgnoreFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HasIgnoreFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HasIgnoreFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.HasIgnoreFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.HasIgnoreFriendResponse)
    MergeFrom(*source);
  }
}

void HasIgnoreFriendResponse::MergeFrom(const HasIgnoreFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.HasIgnoreFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void HasIgnoreFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.HasIgnoreFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HasIgnoreFriendResponse::CopyFrom(const HasIgnoreFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.HasIgnoreFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HasIgnoreFriendResponse::IsInitialized() const {
  return true;
}

void HasIgnoreFriendResponse::Swap(HasIgnoreFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HasIgnoreFriendResponse::InternalSwap(HasIgnoreFriendResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HasIgnoreFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchApplyFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchApplyFriendRequest::kFromUsernameFieldNumber;
const int BatchApplyFriendRequest::kAppkeyFieldNumber;
const int BatchApplyFriendRequest::kToUsernameFieldNumber;
const int BatchApplyFriendRequest::kRemarkFieldNumber;
const int BatchApplyFriendRequest::kMsgIdFieldNumber;
const int BatchApplyFriendRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchApplyFriendRequest::BatchApplyFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.BatchApplyFriendRequest)
}
BatchApplyFriendRequest::BatchApplyFriendRequest(const BatchApplyFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      to_username_(from.to_username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.BatchApplyFriendRequest)
}

void BatchApplyFriendRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

BatchApplyFriendRequest::~BatchApplyFriendRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.BatchApplyFriendRequest)
  SharedDtor();
}

void BatchApplyFriendRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchApplyFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchApplyFriendRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchApplyFriendRequest& BatchApplyFriendRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendRequest();
  return *internal_default_instance();
}

BatchApplyFriendRequest* BatchApplyFriendRequest::New(::google::protobuf::Arena* arena) const {
  BatchApplyFriendRequest* n = new BatchApplyFriendRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchApplyFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.BatchApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_username_.Clear();
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool BatchApplyFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.BatchApplyFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username(this->to_username_size() - 1).data(),
            static_cast<int>(this->to_username(this->to_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendRequest.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.BatchApplyFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.BatchApplyFriendRequest)
  return false;
#undef DO_
}

void BatchApplyFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.BatchApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // repeated string to_username = 3;
  for (int i = 0, n = this->to_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username(i).data(), static_cast<int>(this->to_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->to_username(i), output);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remark(), output);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.BatchApplyFriendRequest)
}

::google::protobuf::uint8* BatchApplyFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.BatchApplyFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // repeated string to_username = 3;
  for (int i = 0, n = this->to_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username(i).data(), static_cast<int>(this->to_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.to_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->to_username(i), target);
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remark(), target);
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.BatchApplyFriendRequest)
  return target;
}

size_t BatchApplyFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.BatchApplyFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string to_username = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->to_username_size());
  for (int i = 0, n = this->to_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->to_username(i));
  }

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string remark = 4;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchApplyFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.BatchApplyFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchApplyFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchApplyFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.BatchApplyFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.BatchApplyFriendRequest)
    MergeFrom(*source);
  }
}

void BatchApplyFriendRequest::MergeFrom(const BatchApplyFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.BatchApplyFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  to_username_.MergeFrom(from.to_username_);
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void BatchApplyFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.BatchApplyFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchApplyFriendRequest::CopyFrom(const BatchApplyFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.BatchApplyFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchApplyFriendRequest::IsInitialized() const {
  return true;
}

void BatchApplyFriendRequest::Swap(BatchApplyFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchApplyFriendRequest::InternalSwap(BatchApplyFriendRequest* other) {
  using std::swap;
  to_username_.InternalSwap(&other->to_username_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  remark_.Swap(&other->remark_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchApplyFriendRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BatchApplyFriendResponse_ResultEntry_DoNotUse::BatchApplyFriendResponse_ResultEntry_DoNotUse() {}
BatchApplyFriendResponse_ResultEntry_DoNotUse::BatchApplyFriendResponse_ResultEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BatchApplyFriendResponse_ResultEntry_DoNotUse::MergeFrom(const BatchApplyFriendResponse_ResultEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BatchApplyFriendResponse_ResultEntry_DoNotUse::GetMetadata() const {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[24];
}
void BatchApplyFriendResponse_ResultEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BatchApplyFriendResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchApplyFriendResponse::kRetFieldNumber;
const int BatchApplyFriendResponse::kMsgIdFieldNumber;
const int BatchApplyFriendResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchApplyFriendResponse::BatchApplyFriendResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.BatchApplyFriendResponse)
}
BatchApplyFriendResponse::BatchApplyFriendResponse(const BatchApplyFriendResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.MergeFrom(from.result_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.BatchApplyFriendResponse)
}

void BatchApplyFriendResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

BatchApplyFriendResponse::~BatchApplyFriendResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.BatchApplyFriendResponse)
  SharedDtor();
}

void BatchApplyFriendResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchApplyFriendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchApplyFriendResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchApplyFriendResponse& BatchApplyFriendResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendResponse();
  return *internal_default_instance();
}

BatchApplyFriendResponse* BatchApplyFriendResponse::New(::google::protobuf::Arena* arena) const {
  BatchApplyFriendResponse* n = new BatchApplyFriendResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchApplyFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.BatchApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool BatchApplyFriendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.BatchApplyFriendResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .common.errcode.EErrorCode> result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          BatchApplyFriendResponse_ResultEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BatchApplyFriendResponse_ResultEntry_DoNotUse,
              ::std::string, ::common::errcode::EErrorCode,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode > > parser(&result_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendResponse.ResultEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.BatchApplyFriendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.BatchApplyFriendResponse)
  return false;
#undef DO_
}

void BatchApplyFriendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.BatchApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  // map<string, .common.errcode.EErrorCode> result = 3;
  if (!this->result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendResponse.ResultEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->result().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendResponse_ResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(result_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendResponse_ResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it) {
        entry.reset(result_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.BatchApplyFriendResponse)
}

::google::protobuf::uint8* BatchApplyFriendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.BatchApplyFriendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  // map<string, .common.errcode.EErrorCode> result = 3;
  if (!this->result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendResponse.ResultEntry.key");
      }
    };

    if (deterministic &&
        this->result().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendResponse_ResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(result_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendResponse_ResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it) {
        entry.reset(result_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.BatchApplyFriendResponse)
  return target;
}

size_t BatchApplyFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.BatchApplyFriendResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .common.errcode.EErrorCode> result = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->result_size());
  {
    ::google::protobuf::scoped_ptr<BatchApplyFriendResponse_ResultEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
        it = this->result().begin();
        it != this->result().end(); ++it) {
      entry.reset(result_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchApplyFriendResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.BatchApplyFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchApplyFriendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchApplyFriendResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.BatchApplyFriendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.BatchApplyFriendResponse)
    MergeFrom(*source);
  }
}

void BatchApplyFriendResponse::MergeFrom(const BatchApplyFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.BatchApplyFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void BatchApplyFriendResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.BatchApplyFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchApplyFriendResponse::CopyFrom(const BatchApplyFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.BatchApplyFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchApplyFriendResponse::IsInitialized() const {
  return true;
}

void BatchApplyFriendResponse::Swap(BatchApplyFriendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchApplyFriendResponse::InternalSwap(BatchApplyFriendResponse* other) {
  using std::swap;
  result_.Swap(&other->result_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchApplyFriendResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse() {}
BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::MergeFrom(const BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::GetMetadata() const {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[26];
}
void BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BatchApplyFriendByFromUsersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchApplyFriendByFromUsersRequest::kFromUsernameFieldNumber;
const int BatchApplyFriendByFromUsersRequest::kAppkeyFieldNumber;
const int BatchApplyFriendByFromUsersRequest::kToUsernameFieldNumber;
const int BatchApplyFriendByFromUsersRequest::kRemarkFieldNumber;
const int BatchApplyFriendByFromUsersRequest::kMsgIdFieldNumber;
const int BatchApplyFriendByFromUsersRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchApplyFriendByFromUsersRequest::BatchApplyFriendByFromUsersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.BatchApplyFriendByFromUsersRequest)
}
BatchApplyFriendByFromUsersRequest::BatchApplyFriendByFromUsersRequest(const BatchApplyFriendByFromUsersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      from_username_(from.from_username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_.MergeFrom(from.remark_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_client_type_ = from.from_client_type_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.BatchApplyFriendByFromUsersRequest)
}

void BatchApplyFriendByFromUsersRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _cached_size_ = 0;
}

BatchApplyFriendByFromUsersRequest::~BatchApplyFriendByFromUsersRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.BatchApplyFriendByFromUsersRequest)
  SharedDtor();
}

void BatchApplyFriendByFromUsersRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchApplyFriendByFromUsersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchApplyFriendByFromUsersRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchApplyFriendByFromUsersRequest& BatchApplyFriendByFromUsersRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersRequest();
  return *internal_default_instance();
}

BatchApplyFriendByFromUsersRequest* BatchApplyFriendByFromUsersRequest::New(::google::protobuf::Arena* arena) const {
  BatchApplyFriendByFromUsersRequest* n = new BatchApplyFriendByFromUsersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchApplyFriendByFromUsersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.Clear();
  remark_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool BatchApplyFriendByFromUsersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username(this->from_username_size() - 1).data(),
            static_cast<int>(this->from_username(this->from_username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&remark_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.BatchApplyFriendByFromUsersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.BatchApplyFriendByFromUsersRequest)
  return false;
#undef DO_
}

void BatchApplyFriendByFromUsersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string from_username = 1;
  for (int i = 0, n = this->from_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username(i).data(), static_cast<int>(this->from_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->from_username(i), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  // map<string, string> remark = 4;
  if (!this->remark().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->remark().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->remark().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->remark().begin();
          it != this->remark().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(remark_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->remark().begin();
          it != this->remark().end(); ++it) {
        entry.reset(remark_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_id(), output);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.BatchApplyFriendByFromUsersRequest)
}

::google::protobuf::uint8* BatchApplyFriendByFromUsersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string from_username = 1;
  for (int i = 0, n = this->from_username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username(i).data(), static_cast<int>(this->from_username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.from_username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->from_username(i), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  // map<string, string> remark = 4;
  if (!this->remark().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersRequest.RemarkEntry.value");
      }
    };

    if (deterministic &&
        this->remark().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->remark().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->remark().begin();
          it != this->remark().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(remark_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->remark().begin();
          it != this->remark().end(); ++it) {
        entry.reset(remark_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_id(), target);
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.BatchApplyFriendByFromUsersRequest)
  return target;
}

size_t BatchApplyFriendByFromUsersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string from_username = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->from_username_size());
  for (int i = 0, n = this->from_username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->from_username(i));
  }

  // map<string, string> remark = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->remark_size());
  {
    ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersRequest_RemarkEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->remark().begin();
        it != this->remark().end(); ++it) {
      entry.reset(remark_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string msg_id = 5;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.enumeration.EClientType from_client_type = 6;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchApplyFriendByFromUsersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchApplyFriendByFromUsersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchApplyFriendByFromUsersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.BatchApplyFriendByFromUsersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.BatchApplyFriendByFromUsersRequest)
    MergeFrom(*source);
  }
}

void BatchApplyFriendByFromUsersRequest::MergeFrom(const BatchApplyFriendByFromUsersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  from_username_.MergeFrom(from.from_username_);
  remark_.MergeFrom(from.remark_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void BatchApplyFriendByFromUsersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchApplyFriendByFromUsersRequest::CopyFrom(const BatchApplyFriendByFromUsersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.BatchApplyFriendByFromUsersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchApplyFriendByFromUsersRequest::IsInitialized() const {
  return true;
}

void BatchApplyFriendByFromUsersRequest::Swap(BatchApplyFriendByFromUsersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchApplyFriendByFromUsersRequest::InternalSwap(BatchApplyFriendByFromUsersRequest* other) {
  using std::swap;
  from_username_.InternalSwap(&other->from_username_);
  remark_.Swap(&other->remark_);
  appkey_.Swap(&other->appkey_);
  to_username_.Swap(&other->to_username_);
  msg_id_.Swap(&other->msg_id_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchApplyFriendByFromUsersRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse() {}
BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::MergeFrom(const BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::GetMetadata() const {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[28];
}
void BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BatchApplyFriendByFromUsersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchApplyFriendByFromUsersResponse::kRetFieldNumber;
const int BatchApplyFriendByFromUsersResponse::kMsgIdFieldNumber;
const int BatchApplyFriendByFromUsersResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchApplyFriendByFromUsersResponse::BatchApplyFriendByFromUsersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.BatchApplyFriendByFromUsersResponse)
}
BatchApplyFriendByFromUsersResponse::BatchApplyFriendByFromUsersResponse(const BatchApplyFriendByFromUsersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.MergeFrom(from.result_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.BatchApplyFriendByFromUsersResponse)
}

void BatchApplyFriendByFromUsersResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

BatchApplyFriendByFromUsersResponse::~BatchApplyFriendByFromUsersResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.BatchApplyFriendByFromUsersResponse)
  SharedDtor();
}

void BatchApplyFriendByFromUsersResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchApplyFriendByFromUsersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchApplyFriendByFromUsersResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchApplyFriendByFromUsersResponse& BatchApplyFriendByFromUsersResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsBatchApplyFriendByFromUsersResponse();
  return *internal_default_instance();
}

BatchApplyFriendByFromUsersResponse* BatchApplyFriendByFromUsersResponse::New(::google::protobuf::Arena* arena) const {
  BatchApplyFriendByFromUsersResponse* n = new BatchApplyFriendByFromUsersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchApplyFriendByFromUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool BatchApplyFriendByFromUsersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .common.errcode.EErrorCode> result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse,
              ::std::string, ::common::errcode::EErrorCode,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
              0 >,
            ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode > > parser(&result_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.BatchApplyFriendByFromUsersResponse.ResultEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.BatchApplyFriendByFromUsersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.BatchApplyFriendByFromUsersResponse)
  return false;
#undef DO_
}

void BatchApplyFriendByFromUsersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  // map<string, .common.errcode.EErrorCode> result = 3;
  if (!this->result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersResponse.ResultEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->result().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(result_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it) {
        entry.reset(result_.NewEnumEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.BatchApplyFriendByFromUsersResponse)
}

::google::protobuf::uint8* BatchApplyFriendByFromUsersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.BatchApplyFriendByFromUsersResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  // map<string, .common.errcode.EErrorCode> result = 3;
  if (!this->result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "outer.friends.BatchApplyFriendByFromUsersResponse.ResultEntry.key");
      }
    };

    if (deterministic &&
        this->result().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(result_.NewEnumEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
          it = this->result().begin();
          it != this->result().end(); ++it) {
        entry.reset(result_.NewEnumEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.BatchApplyFriendByFromUsersResponse)
  return target;
}

size_t BatchApplyFriendByFromUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .common.errcode.EErrorCode> result = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->result_size());
  {
    ::google::protobuf::scoped_ptr<BatchApplyFriendByFromUsersResponse_ResultEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::common::errcode::EErrorCode >::const_iterator
        it = this->result().begin();
        it != this->result().end(); ++it) {
      entry.reset(result_.NewEnumEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchApplyFriendByFromUsersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchApplyFriendByFromUsersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchApplyFriendByFromUsersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.BatchApplyFriendByFromUsersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.BatchApplyFriendByFromUsersResponse)
    MergeFrom(*source);
  }
}

void BatchApplyFriendByFromUsersResponse::MergeFrom(const BatchApplyFriendByFromUsersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void BatchApplyFriendByFromUsersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchApplyFriendByFromUsersResponse::CopyFrom(const BatchApplyFriendByFromUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.BatchApplyFriendByFromUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchApplyFriendByFromUsersResponse::IsInitialized() const {
  return true;
}

void BatchApplyFriendByFromUsersResponse::Swap(BatchApplyFriendByFromUsersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchApplyFriendByFromUsersResponse::InternalSwap(BatchApplyFriendByFromUsersResponse* other) {
  using std::swap;
  result_.Swap(&other->result_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchApplyFriendByFromUsersResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendDisplayRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendDisplayRequest::kAppkeyFieldNumber;
const int GetFriendDisplayRequest::kOwnerUsernameFieldNumber;
const int GetFriendDisplayRequest::kFriendUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendDisplayRequest::GetFriendDisplayRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendDisplayRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.GetFriendDisplayRequest)
}
GetFriendDisplayRequest::GetFriendDisplayRequest(const GetFriendDisplayRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  owner_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner_username().size() > 0) {
    owner_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_username_);
  }
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_username().size() > 0) {
    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.friends.GetFriendDisplayRequest)
}

void GetFriendDisplayRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetFriendDisplayRequest::~GetFriendDisplayRequest() {
  // @@protoc_insertion_point(destructor:outer.friends.GetFriendDisplayRequest)
  SharedDtor();
}

void GetFriendDisplayRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFriendDisplayRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendDisplayRequest::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendDisplayRequest& GetFriendDisplayRequest::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendDisplayRequest();
  return *internal_default_instance();
}

GetFriendDisplayRequest* GetFriendDisplayRequest::New(::google::protobuf::Arena* arena) const {
  GetFriendDisplayRequest* n = new GetFriendDisplayRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendDisplayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.GetFriendDisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetFriendDisplayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.GetFriendDisplayRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendDisplayRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner_username().data(), static_cast<int>(this->owner_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendDisplayRequest.owner_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_username().data(), static_cast<int>(this->friend_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendDisplayRequest.friend_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.GetFriendDisplayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.GetFriendDisplayRequest)
  return false;
#undef DO_
}

void GetFriendDisplayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.GetFriendDisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string owner_username = 2;
  if (this->owner_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner_username().data(), static_cast<int>(this->owner_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.owner_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->owner_username(), output);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.friend_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.GetFriendDisplayRequest)
}

::google::protobuf::uint8* GetFriendDisplayRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.GetFriendDisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string owner_username = 2;
  if (this->owner_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner_username().data(), static_cast<int>(this->owner_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.owner_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->owner_username(), target);
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_username().data(), static_cast<int>(this->friend_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayRequest.friend_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.GetFriendDisplayRequest)
  return target;
}

size_t GetFriendDisplayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.GetFriendDisplayRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string owner_username = 2;
  if (this->owner_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner_username());
  }

  // string friend_username = 3;
  if (this->friend_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendDisplayRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.GetFriendDisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendDisplayRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendDisplayRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.GetFriendDisplayRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.GetFriendDisplayRequest)
    MergeFrom(*source);
  }
}

void GetFriendDisplayRequest::MergeFrom(const GetFriendDisplayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.GetFriendDisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.owner_username().size() > 0) {

    owner_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_username_);
  }
  if (from.friend_username().size() > 0) {

    friend_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_username_);
  }
}

void GetFriendDisplayRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.GetFriendDisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendDisplayRequest::CopyFrom(const GetFriendDisplayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.GetFriendDisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendDisplayRequest::IsInitialized() const {
  return true;
}

void GetFriendDisplayRequest::Swap(GetFriendDisplayRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendDisplayRequest::InternalSwap(GetFriendDisplayRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  owner_username_.Swap(&other->owner_username_);
  friend_username_.Swap(&other->friend_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendDisplayRequest::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendDisplayResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendDisplayResponse::kRetFieldNumber;
const int GetFriendDisplayResponse::kFriendDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendDisplayResponse::GetFriendDisplayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendDisplayResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.friends.GetFriendDisplayResponse)
}
GetFriendDisplayResponse::GetFriendDisplayResponse(const GetFriendDisplayResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_display().size() > 0) {
    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.friends.GetFriendDisplayResponse)
}

void GetFriendDisplayResponse::SharedCtor() {
  friend_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

GetFriendDisplayResponse::~GetFriendDisplayResponse() {
  // @@protoc_insertion_point(destructor:outer.friends.GetFriendDisplayResponse)
  SharedDtor();
}

void GetFriendDisplayResponse::SharedDtor() {
  friend_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetFriendDisplayResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendDisplayResponse::descriptor() {
  ::protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendDisplayResponse& GetFriendDisplayResponse::default_instance() {
  ::protobuf_outer_2ffriends_2eproto::InitDefaultsGetFriendDisplayResponse();
  return *internal_default_instance();
}

GetFriendDisplayResponse* GetFriendDisplayResponse::New(::google::protobuf::Arena* arena) const {
  GetFriendDisplayResponse* n = new GetFriendDisplayResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendDisplayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.friends.GetFriendDisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetFriendDisplayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.friends.GetFriendDisplayResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_display().data(), static_cast<int>(this->friend_display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.friends.GetFriendDisplayResponse.friend_display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.friends.GetFriendDisplayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.friends.GetFriendDisplayResponse)
  return false;
#undef DO_
}

void GetFriendDisplayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.friends.GetFriendDisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string friend_display = 2;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayResponse.friend_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->friend_display(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.friends.GetFriendDisplayResponse)
}

::google::protobuf::uint8* GetFriendDisplayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.friends.GetFriendDisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string friend_display = 2;
  if (this->friend_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_display().data(), static_cast<int>(this->friend_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.friends.GetFriendDisplayResponse.friend_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->friend_display(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.friends.GetFriendDisplayResponse)
  return target;
}

size_t GetFriendDisplayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.friends.GetFriendDisplayResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_display = 2;
  if (this->friend_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_display());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendDisplayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.friends.GetFriendDisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendDisplayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendDisplayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.friends.GetFriendDisplayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.friends.GetFriendDisplayResponse)
    MergeFrom(*source);
  }
}

void GetFriendDisplayResponse::MergeFrom(const GetFriendDisplayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.friends.GetFriendDisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_display().size() > 0) {

    friend_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_display_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetFriendDisplayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.friends.GetFriendDisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendDisplayResponse::CopyFrom(const GetFriendDisplayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.friends.GetFriendDisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendDisplayResponse::IsInitialized() const {
  return true;
}

void GetFriendDisplayResponse::Swap(GetFriendDisplayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendDisplayResponse::InternalSwap(GetFriendDisplayResponse* other) {
  using std::swap;
  friend_display_.Swap(&other->friend_display_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendDisplayResponse::GetMetadata() const {
  protobuf_outer_2ffriends_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2ffriends_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace friends
}  // namespace outer

// @@protoc_insertion_point(global_scope)
