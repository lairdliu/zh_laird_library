// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/history.proto

#include "outer/history.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace history {
class ChatHistoryMessageGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatHistoryMessageGetRequest>
      _instance;
} _ChatHistoryMessageGetRequest_default_instance_;
class GroupHistoryMessageGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupHistoryMessageGetRequest>
      _instance;
} _GroupHistoryMessageGetRequest_default_instance_;
class MessageSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageSyncRequest>
      _instance;
} _MessageSyncRequest_default_instance_;
class MsgGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgGetResponse>
      _instance;
} _MsgGetResponse_default_instance_;
class SyncChatSessionReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncChatSessionReadRequest>
      _instance;
} _SyncChatSessionReadRequest_default_instance_;
class SyncChatSessionReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncChatSessionReadResponse>
      _instance;
} _SyncChatSessionReadResponse_default_instance_;
class SyncGroupSessionReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncGroupSessionReadRequest>
      _instance;
} _SyncGroupSessionReadRequest_default_instance_;
class SyncGroupSessionReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncGroupSessionReadResponse>
      _instance;
} _SyncGroupSessionReadResponse_default_instance_;
class ChatMessageRemoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessageRemoveRequest>
      _instance;
} _ChatMessageRemoveRequest_default_instance_;
class GroupMessageRemoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupMessageRemoveRequest>
      _instance;
} _GroupMessageRemoveRequest_default_instance_;
class MessageRemoveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageRemoveResponse>
      _instance;
} _MessageRemoveResponse_default_instance_;
class SyncSendGUIDRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncSendGUIDRequest>
      _instance;
} _SyncSendGUIDRequest_default_instance_;
class SyncSendGUIDResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncSendGUIDResponse>
      _instance;
} _SyncSendGUIDResponse_default_instance_;
class SyncReceivedGUIDRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncReceivedGUIDRequest>
      _instance;
} _SyncReceivedGUIDRequest_default_instance_;
class SyncReceivedGUIDResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncReceivedGUIDResponse>
      _instance;
} _SyncReceivedGUIDResponse_default_instance_;
class FleetHistoryMessageGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FleetHistoryMessageGetRequest>
      _instance;
} _FleetHistoryMessageGetRequest_default_instance_;
class ContactInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactInfo>
      _instance;
} _ContactInfo_default_instance_;
class GetLatestContactRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLatestContactRequest>
      _instance;
} _GetLatestContactRequest_default_instance_;
class GetLatestContactResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLatestContactResponse>
      _instance;
} _GetLatestContactResponse_default_instance_;
class SingleMessageSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleMessageSyncRequest>
      _instance;
} _SingleMessageSyncRequest_default_instance_;
class SingleMessageSyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleMessageSyncResponse>
      _instance;
} _SingleMessageSyncResponse_default_instance_;
class OfflineCustomMessageSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineCustomMessageSyncRequest>
      _instance;
} _OfflineCustomMessageSyncRequest_default_instance_;
class ChatHistoryMessageUnRegistGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatHistoryMessageUnRegistGetRequest>
      _instance;
} _ChatHistoryMessageUnRegistGetRequest_default_instance_;
class ChatHistoryMessageUnRegistGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatHistoryMessageUnRegistGetResponse>
      _instance;
} _ChatHistoryMessageUnRegistGetResponse_default_instance_;
class CountMessageUnRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountMessageUnRegisterRequest>
      _instance;
} _CountMessageUnRegisterRequest_default_instance_;
class CountMessageUnRegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountMessageUnRegisterResponse>
      _instance;
} _CountMessageUnRegisterResponse_default_instance_;
class MergeMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeMessageRequest>
      _instance;
} _MergeMessageRequest_default_instance_;
class MergeMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeMessageResponse>
      _instance;
} _MergeMessageResponse_default_instance_;
}  // namespace history
}  // namespace outer
namespace protobuf_outer_2fhistory_2eproto {
void InitDefaultsChatHistoryMessageGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_ChatHistoryMessageGetRequest_default_instance_;
    new (ptr) ::outer::history::ChatHistoryMessageGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::ChatHistoryMessageGetRequest::InitAsDefaultInstance();
}

void InitDefaultsChatHistoryMessageGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatHistoryMessageGetRequestImpl);
}

void InitDefaultsGroupHistoryMessageGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_GroupHistoryMessageGetRequest_default_instance_;
    new (ptr) ::outer::history::GroupHistoryMessageGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::GroupHistoryMessageGetRequest::InitAsDefaultInstance();
}

void InitDefaultsGroupHistoryMessageGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupHistoryMessageGetRequestImpl);
}

void InitDefaultsMessageSyncRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_MessageSyncRequest_default_instance_;
    new (ptr) ::outer::history::MessageSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::MessageSyncRequest::InitAsDefaultInstance();
}

void InitDefaultsMessageSyncRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageSyncRequestImpl);
}

void InitDefaultsMsgGetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::outer::history::_MsgGetResponse_default_instance_;
    new (ptr) ::outer::history::MsgGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::MsgGetResponse::InitAsDefaultInstance();
}

void InitDefaultsMsgGetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgGetResponseImpl);
}

void InitDefaultsSyncChatSessionReadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncChatSessionReadRequest_default_instance_;
    new (ptr) ::outer::history::SyncChatSessionReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncChatSessionReadRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncChatSessionReadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncChatSessionReadRequestImpl);
}

void InitDefaultsSyncChatSessionReadResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncChatSessionReadResponse_default_instance_;
    new (ptr) ::outer::history::SyncChatSessionReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncChatSessionReadResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncChatSessionReadResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncChatSessionReadResponseImpl);
}

void InitDefaultsSyncGroupSessionReadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncGroupSessionReadRequest_default_instance_;
    new (ptr) ::outer::history::SyncGroupSessionReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncGroupSessionReadRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncGroupSessionReadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncGroupSessionReadRequestImpl);
}

void InitDefaultsSyncGroupSessionReadResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncGroupSessionReadResponse_default_instance_;
    new (ptr) ::outer::history::SyncGroupSessionReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncGroupSessionReadResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncGroupSessionReadResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncGroupSessionReadResponseImpl);
}

void InitDefaultsChatMessageRemoveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_ChatMessageRemoveRequest_default_instance_;
    new (ptr) ::outer::history::ChatMessageRemoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::ChatMessageRemoveRequest::InitAsDefaultInstance();
}

void InitDefaultsChatMessageRemoveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMessageRemoveRequestImpl);
}

void InitDefaultsGroupMessageRemoveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_GroupMessageRemoveRequest_default_instance_;
    new (ptr) ::outer::history::GroupMessageRemoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::GroupMessageRemoveRequest::InitAsDefaultInstance();
}

void InitDefaultsGroupMessageRemoveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupMessageRemoveRequestImpl);
}

void InitDefaultsMessageRemoveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_MessageRemoveResponse_default_instance_;
    new (ptr) ::outer::history::MessageRemoveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::MessageRemoveResponse::InitAsDefaultInstance();
}

void InitDefaultsMessageRemoveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageRemoveResponseImpl);
}

void InitDefaultsSyncSendGUIDRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncSendGUIDRequest_default_instance_;
    new (ptr) ::outer::history::SyncSendGUIDRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncSendGUIDRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncSendGUIDRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncSendGUIDRequestImpl);
}

void InitDefaultsSyncSendGUIDResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncSendGUIDResponse_default_instance_;
    new (ptr) ::outer::history::SyncSendGUIDResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncSendGUIDResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncSendGUIDResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncSendGUIDResponseImpl);
}

void InitDefaultsSyncReceivedGUIDRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncReceivedGUIDRequest_default_instance_;
    new (ptr) ::outer::history::SyncReceivedGUIDRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncReceivedGUIDRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncReceivedGUIDRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncReceivedGUIDRequestImpl);
}

void InitDefaultsSyncReceivedGUIDResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SyncReceivedGUIDResponse_default_instance_;
    new (ptr) ::outer::history::SyncReceivedGUIDResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SyncReceivedGUIDResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncReceivedGUIDResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncReceivedGUIDResponseImpl);
}

void InitDefaultsFleetHistoryMessageGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_FleetHistoryMessageGetRequest_default_instance_;
    new (ptr) ::outer::history::FleetHistoryMessageGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::FleetHistoryMessageGetRequest::InitAsDefaultInstance();
}

void InitDefaultsFleetHistoryMessageGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFleetHistoryMessageGetRequestImpl);
}

void InitDefaultsContactInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_ContactInfo_default_instance_;
    new (ptr) ::outer::history::ContactInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::ContactInfo::InitAsDefaultInstance();
}

void InitDefaultsContactInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContactInfoImpl);
}

void InitDefaultsGetLatestContactRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_GetLatestContactRequest_default_instance_;
    new (ptr) ::outer::history::GetLatestContactRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::GetLatestContactRequest::InitAsDefaultInstance();
}

void InitDefaultsGetLatestContactRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLatestContactRequestImpl);
}

void InitDefaultsGetLatestContactResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fhistory_2eproto::InitDefaultsContactInfo();
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::outer::history::_GetLatestContactResponse_default_instance_;
    new (ptr) ::outer::history::GetLatestContactResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::GetLatestContactResponse::InitAsDefaultInstance();
}

void InitDefaultsGetLatestContactResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLatestContactResponseImpl);
}

void InitDefaultsSingleMessageSyncRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_SingleMessageSyncRequest_default_instance_;
    new (ptr) ::outer::history::SingleMessageSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SingleMessageSyncRequest::InitAsDefaultInstance();
}

void InitDefaultsSingleMessageSyncRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSingleMessageSyncRequestImpl);
}

void InitDefaultsSingleMessageSyncResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::outer::history::_SingleMessageSyncResponse_default_instance_;
    new (ptr) ::outer::history::SingleMessageSyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::SingleMessageSyncResponse::InitAsDefaultInstance();
}

void InitDefaultsSingleMessageSyncResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSingleMessageSyncResponseImpl);
}

void InitDefaultsOfflineCustomMessageSyncRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_OfflineCustomMessageSyncRequest_default_instance_;
    new (ptr) ::outer::history::OfflineCustomMessageSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::OfflineCustomMessageSyncRequest::InitAsDefaultInstance();
}

void InitDefaultsOfflineCustomMessageSyncRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOfflineCustomMessageSyncRequestImpl);
}

void InitDefaultsChatHistoryMessageUnRegistGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_ChatHistoryMessageUnRegistGetRequest_default_instance_;
    new (ptr) ::outer::history::ChatHistoryMessageUnRegistGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::ChatHistoryMessageUnRegistGetRequest::InitAsDefaultInstance();
}

void InitDefaultsChatHistoryMessageUnRegistGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatHistoryMessageUnRegistGetRequestImpl);
}

void InitDefaultsChatHistoryMessageUnRegistGetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_ChatHistoryMessageUnRegistGetResponse_default_instance_;
    new (ptr) ::outer::history::ChatHistoryMessageUnRegistGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::ChatHistoryMessageUnRegistGetResponse::InitAsDefaultInstance();
}

void InitDefaultsChatHistoryMessageUnRegistGetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatHistoryMessageUnRegistGetResponseImpl);
}

void InitDefaultsCountMessageUnRegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_CountMessageUnRegisterRequest_default_instance_;
    new (ptr) ::outer::history::CountMessageUnRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::CountMessageUnRegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsCountMessageUnRegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCountMessageUnRegisterRequestImpl);
}

void InitDefaultsCountMessageUnRegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_CountMessageUnRegisterResponse_default_instance_;
    new (ptr) ::outer::history::CountMessageUnRegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::CountMessageUnRegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsCountMessageUnRegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCountMessageUnRegisterResponseImpl);
}

void InitDefaultsMergeMessageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::history::_MergeMessageRequest_default_instance_;
    new (ptr) ::outer::history::MergeMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::MergeMessageRequest::InitAsDefaultInstance();
}

void InitDefaultsMergeMessageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMergeMessageRequestImpl);
}

void InitDefaultsMergeMessageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::outer::history::_MergeMessageResponse_default_instance_;
    new (ptr) ::outer::history::MergeMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::history::MergeMessageResponse::InitAsDefaultInstance();
}

void InitDefaultsMergeMessageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMergeMessageResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[28];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, begin_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageGetRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, group_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, begin_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupHistoryMessageGetRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, sor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageSyncRequest, modified_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MsgGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MsgGetResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MsgGetResponse, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MsgGetResponse, modified_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadRequest, to_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncChatSessionReadResponse, read_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadRequest, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadRequest, to_username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncGroupSessionReadResponse, read_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatMessageRemoveRequest, remove_session_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupMessageRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupMessageRemoveRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupMessageRemoveRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupMessageRemoveRequest, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GroupMessageRemoveRequest, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageRemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MessageRemoveResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDRequest, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncSendGUIDResponse, send_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDRequest, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SyncReceivedGUIDResponse, received_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, begin_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::FleetHistoryMessageGetRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, contact_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, contact_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, contact_display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, thumbnail_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ContactInfo, phone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactResponse, contact_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::GetLatestContactResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncRequest, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::SingleMessageSyncResponse, unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, sor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, modified_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::OfflineCustomMessageSyncRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, to_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, begin_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::ChatHistoryMessageUnRegistGetResponse, messagelistjson_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, unregiger_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, app_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, platform_user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterRequest, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::CountMessageUnRegisterResponse, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MergeMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MergeMessageRequest, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MergeMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MergeMessageResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::history::MergeMessageResponse, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::history::ChatHistoryMessageGetRequest)},
  { 11, -1, sizeof(::outer::history::GroupHistoryMessageGetRequest)},
  { 21, -1, sizeof(::outer::history::MessageSyncRequest)},
  { 32, -1, sizeof(::outer::history::MsgGetResponse)},
  { 40, -1, sizeof(::outer::history::SyncChatSessionReadRequest)},
  { 48, -1, sizeof(::outer::history::SyncChatSessionReadResponse)},
  { 55, -1, sizeof(::outer::history::SyncGroupSessionReadRequest)},
  { 63, -1, sizeof(::outer::history::SyncGroupSessionReadResponse)},
  { 70, -1, sizeof(::outer::history::ChatMessageRemoveRequest)},
  { 80, -1, sizeof(::outer::history::GroupMessageRemoveRequest)},
  { 89, -1, sizeof(::outer::history::MessageRemoveResponse)},
  { 95, -1, sizeof(::outer::history::SyncSendGUIDRequest)},
  { 102, -1, sizeof(::outer::history::SyncSendGUIDResponse)},
  { 109, -1, sizeof(::outer::history::SyncReceivedGUIDRequest)},
  { 116, -1, sizeof(::outer::history::SyncReceivedGUIDResponse)},
  { 123, -1, sizeof(::outer::history::FleetHistoryMessageGetRequest)},
  { 133, -1, sizeof(::outer::history::ContactInfo)},
  { 146, -1, sizeof(::outer::history::GetLatestContactRequest)},
  { 153, -1, sizeof(::outer::history::GetLatestContactResponse)},
  { 161, -1, sizeof(::outer::history::SingleMessageSyncRequest)},
  { 169, -1, sizeof(::outer::history::SingleMessageSyncResponse)},
  { 176, -1, sizeof(::outer::history::OfflineCustomMessageSyncRequest)},
  { 186, -1, sizeof(::outer::history::ChatHistoryMessageUnRegistGetRequest)},
  { 197, -1, sizeof(::outer::history::ChatHistoryMessageUnRegistGetResponse)},
  { 203, -1, sizeof(::outer::history::CountMessageUnRegisterRequest)},
  { 213, -1, sizeof(::outer::history::CountMessageUnRegisterResponse)},
  { 219, -1, sizeof(::outer::history::MergeMessageRequest)},
  { 225, -1, sizeof(::outer::history::MergeMessageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_ChatHistoryMessageGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_GroupHistoryMessageGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_MessageSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_MsgGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncChatSessionReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncChatSessionReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncGroupSessionReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncGroupSessionReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_ChatMessageRemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_GroupMessageRemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_MessageRemoveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncSendGUIDRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncSendGUIDResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncReceivedGUIDRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SyncReceivedGUIDResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_FleetHistoryMessageGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_ContactInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_GetLatestContactRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_GetLatestContactResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SingleMessageSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_SingleMessageSyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_OfflineCustomMessageSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_ChatHistoryMessageUnRegistGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_ChatHistoryMessageUnRegistGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_CountMessageUnRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_CountMessageUnRegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_MergeMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::history::_MergeMessageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/history.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 28);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023outer/history.proto\022\router.history\032\024co"
      "mmon/errcode.proto\032\020common/msg.proto\"\244\001\n"
      "\034ChatHistoryMessageGetRequest\022\025\n\rfrom_us"
      "ername\030\001 \001(\t\022\023\n\013to_username\030\002 \001(\t\022\022\n\nbeg"
      "in_guid\030\003 \001(\004\022\r\n\005limit\030\004 \001(\r\022\016\n\006appkey\030\005"
      " \001(\t\022%\n\004type\030\006 \001(\0162\027.outer.history.END_T"
      "YPE\"|\n\035GroupHistoryMessageGetRequest\022\021\n\t"
      "group_uri\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\016"
      "\n\006appkey\030\003 \001(\t\022\022\n\nbegin_guid\030\004 \001(\004\022\r\n\005li"
      "mit\030\005 \001(\r\"\224\001\n\022MessageSyncRequest\022\014\n\004guid"
      "\030\001 \001(\004\022\020\n\010username\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t"
      "\022\013\n\003sor\030\004 \001(\010\022%\n\004type\030\005 \001(\0162\027.outer.hist"
      "ory.END_TYPE\022\032\n\022modified_timestamp\030\006 \001(\004"
      "\"|\n\016MsgGetResponse\022\'\n\003ret\030\001 \001(\0162\032.common"
      ".errcode.EErrorCode\022%\n\004data\030\002 \003(\0132\027.comm"
      "on.msg.MessageUnit\022\032\n\022modified_timestamp"
      "\030\006 \001(\004\"X\n\032SyncChatSessionReadRequest\022\016\n\006"
      "appkey\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\023\n\013t"
      "o_username\030\003 \001(\t\"Y\n\033SyncChatSessionReadR"
      "esponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EE"
      "rrorCode\022\021\n\tread_guid\030\002 \001(\003\"O\n\033SyncGroup"
      "SessionReadRequest\022\016\n\006appkey\030\001 \001(\t\022\013\n\003ur"
      "i\030\002 \001(\t\022\023\n\013to_username\030\003 \001(\t\"Z\n\034SyncGrou"
      "pSessionReadResponse\022\'\n\003ret\030\001 \001(\0162\032.comm"
      "on.errcode.EErrorCode\022\021\n\tread_guid\030\002 \001(\003"
      "\"|\n\030ChatMessageRemoveRequest\022\016\n\006appkey\030\001"
      " \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\023\n\013to_userna"
      "me\030\003 \001(\t\022\014\n\004guid\030\004 \003(\004\022\026\n\016remove_session"
      "\030\005 \001(\010\"]\n\031GroupMessageRemoveRequest\022\016\n\006a"
      "ppkey\030\001 \001(\t\022\025\n\rfrom_username\030\002 \001(\t\022\013\n\003ur"
      "i\030\003 \001(\t\022\014\n\004guid\030\004 \003(\004\"@\n\025MessageRemoveRe"
      "sponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EEr"
      "rorCode\"7\n\023SyncSendGUIDRequest\022\020\n\010userna"
      "me\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\"R\n\024SyncSendGUID"
      "Response\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.E"
      "ErrorCode\022\021\n\tsend_guid\030\002 \001(\004\";\n\027SyncRece"
      "ivedGUIDRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006app"
      "key\030\002 \001(\t\"Z\n\030SyncReceivedGUIDResponse\022\'\n"
      "\003ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022\025"
      "\n\rreceived_guid\030\002 \001(\004\"|\n\035FleetHistoryMes"
      "sageGetRequest\022\021\n\tfleet_uri\030\001 \001(\t\022\025\n\rfro"
      "m_username\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\022\n\nbegi"
      "n_guid\030\004 \001(\004\022\r\n\005limit\030\005 \001(\r\"\266\001\n\013ContactI"
      "nfo\022\016\n\006appkey\030\001 \001(\t\022\030\n\020contact_username\030"
      "\002 \001(\t\022\024\n\014contact_nick\030\003 \001(\t\022\027\n\017contact_d"
      "isplay\030\004 \001(\t\022\025\n\roriginal_link\030\005 \001(\t\022\026\n\016t"
      "humbnail_link\030\006 \001(\t\022\020\n\010modified\030\010 \001(\004\022\r\n"
      "\005phone\030\n \001(\t\";\n\027GetLatestContactRequest\022"
      "\016\n\006appkey\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\"\237\001\n\030Ge"
      "tLatestContactResponse\022\'\n\003ret\030\001 \001(\0162\032.co"
      "mmon.errcode.EErrorCode\0220\n\014contact_info\030"
      "\002 \003(\0132\032.outer.history.ContactInfo\022(\n\007mes"
      "sage\030\003 \003(\0132\027.common.msg.MessageUnit\"J\n\030S"
      "ingleMessageSyncRequest\022\016\n\006appkey\030\001 \001(\t\022"
      "\014\n\004guid\030\002 \001(\004\022\020\n\010username\030\003 \001(\t\"k\n\031Singl"
      "eMessageSyncResponse\022\'\n\003ret\030\001 \001(\0162\032.comm"
      "on.errcode.EErrorCode\022%\n\004unit\030\002 \001(\0132\027.co"
      "mmon.msg.MessageUnit\"{\n\037OfflineCustomMes"
      "sageSyncRequest\022\020\n\010username\030\002 \001(\t\022\016\n\006app"
      "key\030\003 \001(\t\022\013\n\003sor\030\004 \001(\010\022\032\n\022modified_times"
      "tamp\030\005 \001(\004\022\r\n\005limit\030\006 \001(\r\"\251\001\n$ChatHistor"
      "yMessageUnRegistGetRequest\022\025\n\rfrom_usern"
      "ame\030\001 \001(\t\022\020\n\010to_phone\030\002 \001(\t\022\022\n\nbegin_gui"
      "d\030\003 \001(\004\022\r\n\005limit\030\004 \001(\r\022\016\n\006appkey\030\005 \001(\t\022%"
      "\n\004type\030\006 \001(\0162\027.outer.history.END_TYPE\"@\n"
      "%ChatHistoryMessageUnRegistGetResponse\022\027"
      "\n\017messageListJson\030\001 \001(\014\"\213\001\n\035CountMessage"
      "UnRegisterRequest\022\027\n\017unregiger_phone\030\001 \001"
      "(\t\022\017\n\007app_key\030\002 \001(\t\022\032\n\022platform_user_nam"
      "e\030\003 \001(\t\022\022\n\nstart_time\030\004 \001(\004\022\020\n\010end_time\030"
      "\005 \001(\004\"/\n\036CountMessageUnRegisterResponse\022"
      "\r\n\005count\030\001 \001(\004\"#\n\023MergeMessageRequest\022\014\n"
      "\004guid\030\001 \001(\004\"f\n\024MergeMessageResponse\022\'\n\003r"
      "et\030\001 \001(\0162\032.common.errcode.EErrorCode\022%\n\004"
      "data\030\002 \003(\0132\027.common.msg.MessageUnit*,\n\010E"
      "ND_TYPE\022\013\n\007UNKNOWN\020\000\022\n\n\006MOBILE\020\002\022\007\n\003WEB\020"
      "\0012\225\014\n\016HistoryService\022O\n\013MessageSync\022!.ou"
      "ter.history.MessageSyncRequest\032\035.outer.h"
      "istory.MsgGetResponse\022c\n\025ChatHistoryMess"
      "ageGet\022+.outer.history.ChatHistoryMessag"
      "eGetRequest\032\035.outer.history.MsgGetRespon"
      "se\022e\n\026GroupHistoryMessageGet\022,.outer.his"
      "tory.GroupHistoryMessageGetRequest\032\035.out"
      "er.history.MsgGetResponse\022W\n\014SyncSendGUI"
      "D\022\".outer.history.SyncSendGUIDRequest\032#."
      "outer.history.SyncSendGUIDResponse\022c\n\020Sy"
      "ncReceivedGUID\022&.outer.history.SyncRecei"
      "vedGUIDRequest\032\'.outer.history.SyncRecei"
      "vedGUIDResponse\022b\n\021ChatMessageRemove\022\'.o"
      "uter.history.ChatMessageRemoveRequest\032$."
      "outer.history.MessageRemoveResponse\022d\n\022G"
      "roupMessageRemove\022(.outer.history.GroupM"
      "essageRemoveRequest\032$.outer.history.Mess"
      "ageRemoveResponse\022l\n\023SyncChatSessionRead"
      "\022).outer.history.SyncChatSessionReadRequ"
      "est\032*.outer.history.SyncChatSessionReadR"
      "esponse\022o\n\024SyncGroupSessionRead\022*.outer."
      "history.SyncGroupSessionReadRequest\032+.ou"
      "ter.history.SyncGroupSessionReadResponse"
      "\022c\n\020GetLatestContact\022&.outer.history.Get"
      "LatestContactRequest\032\'.outer.history.Get"
      "LatestContactResponse\022f\n\021SingleMessageSy"
      "nc\022\'.outer.history.SingleMessageSyncRequ"
      "est\032(.outer.history.SingleMessageSyncRes"
      "ponse\022i\n\030OfflineCustomMessageSync\022..oute"
      "r.history.OfflineCustomMessageSyncReques"
      "t\032\035.outer.history.MsgGetResponse\022l\n\026Chat"
      "MessageUnRegistGet\0223.outer.history.ChatH"
      "istoryMessageUnRegistGetRequest\032\035.outer."
      "history.MsgGetResponse\022}\n\036CountChatMessa"
      "geUnRegisterDate\022,.outer.history.CountMe"
      "ssageUnRegisterRequest\032-.outer.history.C"
      "ountMessageUnRegisterResponse\022Z\n\017GetMerg"
      "eMessage\022\".outer.history.MergeMessageReq"
      "uest\032#.outer.history.MergeMessageRespons"
      "eB)\n\034com.cmcc.littlec.proto.outerB\007Histo"
      "ryP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4652);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/history.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fmsg_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fhistory_2eproto
namespace outer {
namespace history {
const ::google::protobuf::EnumDescriptor* END_TYPE_descriptor() {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2fhistory_2eproto::file_level_enum_descriptors[0];
}
bool END_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ChatHistoryMessageGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatHistoryMessageGetRequest::kFromUsernameFieldNumber;
const int ChatHistoryMessageGetRequest::kToUsernameFieldNumber;
const int ChatHistoryMessageGetRequest::kBeginGuidFieldNumber;
const int ChatHistoryMessageGetRequest::kLimitFieldNumber;
const int ChatHistoryMessageGetRequest::kAppkeyFieldNumber;
const int ChatHistoryMessageGetRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatHistoryMessageGetRequest::ChatHistoryMessageGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.ChatHistoryMessageGetRequest)
}
ChatHistoryMessageGetRequest::ChatHistoryMessageGetRequest(const ChatHistoryMessageGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&begin_guid_, &from.begin_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:outer.history.ChatHistoryMessageGetRequest)
}

void ChatHistoryMessageGetRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  _cached_size_ = 0;
}

ChatHistoryMessageGetRequest::~ChatHistoryMessageGetRequest() {
  // @@protoc_insertion_point(destructor:outer.history.ChatHistoryMessageGetRequest)
  SharedDtor();
}

void ChatHistoryMessageGetRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatHistoryMessageGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatHistoryMessageGetRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatHistoryMessageGetRequest& ChatHistoryMessageGetRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageGetRequest();
  return *internal_default_instance();
}

ChatHistoryMessageGetRequest* ChatHistoryMessageGetRequest::New(::google::protobuf::Arena* arena) const {
  ChatHistoryMessageGetRequest* n = new ChatHistoryMessageGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatHistoryMessageGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.ChatHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ChatHistoryMessageGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.ChatHistoryMessageGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageGetRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageGetRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 begin_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begin_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageGetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.history.END_TYPE type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::outer::history::END_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.ChatHistoryMessageGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.ChatHistoryMessageGetRequest)
  return false;
#undef DO_
}

void ChatHistoryMessageGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.ChatHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string to_username = 2;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_username(), output);
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->begin_guid(), output);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appkey(), output);
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.ChatHistoryMessageGetRequest)
}

::google::protobuf::uint8* ChatHistoryMessageGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.ChatHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string to_username = 2;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_username(), target);
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->begin_guid(), target);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageGetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appkey(), target);
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.ChatHistoryMessageGetRequest)
  return target;
}

size_t ChatHistoryMessageGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.ChatHistoryMessageGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 2;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->begin_guid());
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatHistoryMessageGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.ChatHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatHistoryMessageGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatHistoryMessageGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.ChatHistoryMessageGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.ChatHistoryMessageGetRequest)
    MergeFrom(*source);
  }
}

void ChatHistoryMessageGetRequest::MergeFrom(const ChatHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.ChatHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.begin_guid() != 0) {
    set_begin_guid(from.begin_guid());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ChatHistoryMessageGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.ChatHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatHistoryMessageGetRequest::CopyFrom(const ChatHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.ChatHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatHistoryMessageGetRequest::IsInitialized() const {
  return true;
}

void ChatHistoryMessageGetRequest::Swap(ChatHistoryMessageGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatHistoryMessageGetRequest::InternalSwap(ChatHistoryMessageGetRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  appkey_.Swap(&other->appkey_);
  swap(begin_guid_, other->begin_guid_);
  swap(limit_, other->limit_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatHistoryMessageGetRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupHistoryMessageGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupHistoryMessageGetRequest::kGroupUriFieldNumber;
const int GroupHistoryMessageGetRequest::kFromUsernameFieldNumber;
const int GroupHistoryMessageGetRequest::kAppkeyFieldNumber;
const int GroupHistoryMessageGetRequest::kBeginGuidFieldNumber;
const int GroupHistoryMessageGetRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupHistoryMessageGetRequest::GroupHistoryMessageGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupHistoryMessageGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.GroupHistoryMessageGetRequest)
}
GroupHistoryMessageGetRequest::GroupHistoryMessageGetRequest(const GroupHistoryMessageGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_uri().size() > 0) {
    group_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_uri_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&begin_guid_, &from.begin_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:outer.history.GroupHistoryMessageGetRequest)
}

void GroupHistoryMessageGetRequest::SharedCtor() {
  group_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  _cached_size_ = 0;
}

GroupHistoryMessageGetRequest::~GroupHistoryMessageGetRequest() {
  // @@protoc_insertion_point(destructor:outer.history.GroupHistoryMessageGetRequest)
  SharedDtor();
}

void GroupHistoryMessageGetRequest::SharedDtor() {
  group_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupHistoryMessageGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupHistoryMessageGetRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupHistoryMessageGetRequest& GroupHistoryMessageGetRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupHistoryMessageGetRequest();
  return *internal_default_instance();
}

GroupHistoryMessageGetRequest* GroupHistoryMessageGetRequest::New(::google::protobuf::Arena* arena) const {
  GroupHistoryMessageGetRequest* n = new GroupHistoryMessageGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupHistoryMessageGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.GroupHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool GroupHistoryMessageGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.GroupHistoryMessageGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string group_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_uri().data(), static_cast<int>(this->group_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupHistoryMessageGetRequest.group_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupHistoryMessageGetRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupHistoryMessageGetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 begin_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begin_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.GroupHistoryMessageGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.GroupHistoryMessageGetRequest)
  return false;
#undef DO_
}

void GroupHistoryMessageGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.GroupHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_uri = 1;
  if (this->group_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_uri().data(), static_cast<int>(this->group_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.group_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_uri(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->begin_guid(), output);
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.GroupHistoryMessageGetRequest)
}

::google::protobuf::uint8* GroupHistoryMessageGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.GroupHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string group_uri = 1;
  if (this->group_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_uri().data(), static_cast<int>(this->group_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.group_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_uri(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupHistoryMessageGetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->begin_guid(), target);
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.GroupHistoryMessageGetRequest)
  return target;
}

size_t GroupHistoryMessageGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.GroupHistoryMessageGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_uri = 1;
  if (this->group_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_uri());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->begin_guid());
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupHistoryMessageGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.GroupHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupHistoryMessageGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupHistoryMessageGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.GroupHistoryMessageGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.GroupHistoryMessageGetRequest)
    MergeFrom(*source);
  }
}

void GroupHistoryMessageGetRequest::MergeFrom(const GroupHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.GroupHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_uri().size() > 0) {

    group_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_uri_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.begin_guid() != 0) {
    set_begin_guid(from.begin_guid());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void GroupHistoryMessageGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.GroupHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupHistoryMessageGetRequest::CopyFrom(const GroupHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.GroupHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupHistoryMessageGetRequest::IsInitialized() const {
  return true;
}

void GroupHistoryMessageGetRequest::Swap(GroupHistoryMessageGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupHistoryMessageGetRequest::InternalSwap(GroupHistoryMessageGetRequest* other) {
  using std::swap;
  group_uri_.Swap(&other->group_uri_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  swap(begin_guid_, other->begin_guid_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupHistoryMessageGetRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageSyncRequest::kGuidFieldNumber;
const int MessageSyncRequest::kUsernameFieldNumber;
const int MessageSyncRequest::kAppkeyFieldNumber;
const int MessageSyncRequest::kSorFieldNumber;
const int MessageSyncRequest::kTypeFieldNumber;
const int MessageSyncRequest::kModifiedTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageSyncRequest::MessageSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageSyncRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.MessageSyncRequest)
}
MessageSyncRequest::MessageSyncRequest(const MessageSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&modified_timestamp_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(modified_timestamp_));
  // @@protoc_insertion_point(copy_constructor:outer.history.MessageSyncRequest)
}

void MessageSyncRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_timestamp_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(modified_timestamp_));
  _cached_size_ = 0;
}

MessageSyncRequest::~MessageSyncRequest() {
  // @@protoc_insertion_point(destructor:outer.history.MessageSyncRequest)
  SharedDtor();
}

void MessageSyncRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSyncRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageSyncRequest& MessageSyncRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageSyncRequest();
  return *internal_default_instance();
}

MessageSyncRequest* MessageSyncRequest::New(::google::protobuf::Arena* arena) const {
  MessageSyncRequest* n = new MessageSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.MessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_timestamp_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(modified_timestamp_));
  _internal_metadata_.Clear();
}

bool MessageSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.MessageSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.MessageSyncRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.MessageSyncRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.history.END_TYPE type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::outer::history::END_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified_timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.MessageSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.MessageSyncRequest)
  return false;
#undef DO_
}

void MessageSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.MessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.MessageSyncRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.MessageSyncRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sor(), output);
  }

  // .outer.history.END_TYPE type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->modified_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.MessageSyncRequest)
}

::google::protobuf::uint8* MessageSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.MessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.MessageSyncRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.MessageSyncRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sor(), target);
  }

  // .outer.history.END_TYPE type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->modified_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.MessageSyncRequest)
  return target;
}

size_t MessageSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.MessageSyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    total_size += 1 + 1;
  }

  // .outer.history.END_TYPE type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.MessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.MessageSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.MessageSyncRequest)
    MergeFrom(*source);
  }
}

void MessageSyncRequest::MergeFrom(const MessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.MessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.sor() != 0) {
    set_sor(from.sor());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.modified_timestamp() != 0) {
    set_modified_timestamp(from.modified_timestamp());
  }
}

void MessageSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.MessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageSyncRequest::CopyFrom(const MessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.MessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageSyncRequest::IsInitialized() const {
  return true;
}

void MessageSyncRequest::Swap(MessageSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageSyncRequest::InternalSwap(MessageSyncRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  swap(guid_, other->guid_);
  swap(sor_, other->sor_);
  swap(type_, other->type_);
  swap(modified_timestamp_, other->modified_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageSyncRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgGetResponse::InitAsDefaultInstance() {
}
void MsgGetResponse::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetResponse::kRetFieldNumber;
const int MsgGetResponse::kDataFieldNumber;
const int MsgGetResponse::kModifiedTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetResponse::MsgGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsMsgGetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.MsgGetResponse)
}
MsgGetResponse::MsgGetResponse(const MsgGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&modified_timestamp_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(modified_timestamp_));
  // @@protoc_insertion_point(copy_constructor:outer.history.MsgGetResponse)
}

void MsgGetResponse::SharedCtor() {
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_timestamp_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(modified_timestamp_));
  _cached_size_ = 0;
}

MsgGetResponse::~MsgGetResponse() {
  // @@protoc_insertion_point(destructor:outer.history.MsgGetResponse)
  SharedDtor();
}

void MsgGetResponse::SharedDtor() {
}

void MsgGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgGetResponse& MsgGetResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsMsgGetResponse();
  return *internal_default_instance();
}

MsgGetResponse* MsgGetResponse::New(::google::protobuf::Arena* arena) const {
  MsgGetResponse* n = new MsgGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.MsgGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modified_timestamp_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(modified_timestamp_));
  _internal_metadata_.Clear();
}

bool MsgGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.MsgGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.msg.MessageUnit data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified_timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.MsgGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.MsgGetResponse)
  return false;
#undef DO_
}

void MsgGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.MsgGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .common.msg.MessageUnit data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(static_cast<int>(i)), output);
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->modified_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.MsgGetResponse)
}

::google::protobuf::uint8* MsgGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.MsgGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .common.msg.MessageUnit data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data(static_cast<int>(i)), deterministic, target);
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->modified_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.MsgGetResponse)
  return target;
}

size_t MsgGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.MsgGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.msg.MessageUnit data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // uint64 modified_timestamp = 6;
  if (this->modified_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.MsgGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.MsgGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.MsgGetResponse)
    MergeFrom(*source);
  }
}

void MsgGetResponse::MergeFrom(const MsgGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.MsgGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.modified_timestamp() != 0) {
    set_modified_timestamp(from.modified_timestamp());
  }
}

void MsgGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.MsgGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetResponse::CopyFrom(const MsgGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.MsgGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetResponse::IsInitialized() const {
  return true;
}

void MsgGetResponse::Swap(MsgGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetResponse::InternalSwap(MsgGetResponse* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(ret_, other->ret_);
  swap(modified_timestamp_, other->modified_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncChatSessionReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncChatSessionReadRequest::kAppkeyFieldNumber;
const int SyncChatSessionReadRequest::kFromUsernameFieldNumber;
const int SyncChatSessionReadRequest::kToUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncChatSessionReadRequest::SyncChatSessionReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncChatSessionReadRequest)
}
SyncChatSessionReadRequest::SyncChatSessionReadRequest(const SyncChatSessionReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncChatSessionReadRequest)
}

void SyncChatSessionReadRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncChatSessionReadRequest::~SyncChatSessionReadRequest() {
  // @@protoc_insertion_point(destructor:outer.history.SyncChatSessionReadRequest)
  SharedDtor();
}

void SyncChatSessionReadRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncChatSessionReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncChatSessionReadRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncChatSessionReadRequest& SyncChatSessionReadRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadRequest();
  return *internal_default_instance();
}

SyncChatSessionReadRequest* SyncChatSessionReadRequest::New(::google::protobuf::Arena* arena) const {
  SyncChatSessionReadRequest* n = new SyncChatSessionReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncChatSessionReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncChatSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncChatSessionReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncChatSessionReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncChatSessionReadRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncChatSessionReadRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncChatSessionReadRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncChatSessionReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncChatSessionReadRequest)
  return false;
#undef DO_
}

void SyncChatSessionReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncChatSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncChatSessionReadRequest)
}

::google::protobuf::uint8* SyncChatSessionReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncChatSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncChatSessionReadRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncChatSessionReadRequest)
  return target;
}

size_t SyncChatSessionReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncChatSessionReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncChatSessionReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncChatSessionReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncChatSessionReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncChatSessionReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncChatSessionReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncChatSessionReadRequest)
    MergeFrom(*source);
  }
}

void SyncChatSessionReadRequest::MergeFrom(const SyncChatSessionReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncChatSessionReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
}

void SyncChatSessionReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncChatSessionReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncChatSessionReadRequest::CopyFrom(const SyncChatSessionReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncChatSessionReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncChatSessionReadRequest::IsInitialized() const {
  return true;
}

void SyncChatSessionReadRequest::Swap(SyncChatSessionReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncChatSessionReadRequest::InternalSwap(SyncChatSessionReadRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncChatSessionReadRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncChatSessionReadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncChatSessionReadResponse::kRetFieldNumber;
const int SyncChatSessionReadResponse::kReadGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncChatSessionReadResponse::SyncChatSessionReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncChatSessionReadResponse)
}
SyncChatSessionReadResponse::SyncChatSessionReadResponse(const SyncChatSessionReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&read_guid_, &from.read_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncChatSessionReadResponse)
}

void SyncChatSessionReadResponse::SharedCtor() {
  ::memset(&read_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SyncChatSessionReadResponse::~SyncChatSessionReadResponse() {
  // @@protoc_insertion_point(destructor:outer.history.SyncChatSessionReadResponse)
  SharedDtor();
}

void SyncChatSessionReadResponse::SharedDtor() {
}

void SyncChatSessionReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncChatSessionReadResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncChatSessionReadResponse& SyncChatSessionReadResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadResponse();
  return *internal_default_instance();
}

SyncChatSessionReadResponse* SyncChatSessionReadResponse::New(::google::protobuf::Arena* arena) const {
  SyncChatSessionReadResponse* n = new SyncChatSessionReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncChatSessionReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncChatSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&read_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool SyncChatSessionReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncChatSessionReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncChatSessionReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncChatSessionReadResponse)
  return false;
#undef DO_
}

void SyncChatSessionReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncChatSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->read_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncChatSessionReadResponse)
}

::google::protobuf::uint8* SyncChatSessionReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncChatSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->read_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncChatSessionReadResponse)
  return target;
}

size_t SyncChatSessionReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncChatSessionReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_guid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncChatSessionReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncChatSessionReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncChatSessionReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncChatSessionReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncChatSessionReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncChatSessionReadResponse)
    MergeFrom(*source);
  }
}

void SyncChatSessionReadResponse::MergeFrom(const SyncChatSessionReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncChatSessionReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.read_guid() != 0) {
    set_read_guid(from.read_guid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncChatSessionReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncChatSessionReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncChatSessionReadResponse::CopyFrom(const SyncChatSessionReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncChatSessionReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncChatSessionReadResponse::IsInitialized() const {
  return true;
}

void SyncChatSessionReadResponse::Swap(SyncChatSessionReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncChatSessionReadResponse::InternalSwap(SyncChatSessionReadResponse* other) {
  using std::swap;
  swap(read_guid_, other->read_guid_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncChatSessionReadResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncGroupSessionReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncGroupSessionReadRequest::kAppkeyFieldNumber;
const int SyncGroupSessionReadRequest::kUriFieldNumber;
const int SyncGroupSessionReadRequest::kToUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncGroupSessionReadRequest::SyncGroupSessionReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncGroupSessionReadRequest)
}
SyncGroupSessionReadRequest::SyncGroupSessionReadRequest(const SyncGroupSessionReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncGroupSessionReadRequest)
}

void SyncGroupSessionReadRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncGroupSessionReadRequest::~SyncGroupSessionReadRequest() {
  // @@protoc_insertion_point(destructor:outer.history.SyncGroupSessionReadRequest)
  SharedDtor();
}

void SyncGroupSessionReadRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncGroupSessionReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncGroupSessionReadRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncGroupSessionReadRequest& SyncGroupSessionReadRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadRequest();
  return *internal_default_instance();
}

SyncGroupSessionReadRequest* SyncGroupSessionReadRequest::New(::google::protobuf::Arena* arena) const {
  SyncGroupSessionReadRequest* n = new SyncGroupSessionReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncGroupSessionReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncGroupSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncGroupSessionReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncGroupSessionReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncGroupSessionReadRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncGroupSessionReadRequest.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncGroupSessionReadRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncGroupSessionReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncGroupSessionReadRequest)
  return false;
#undef DO_
}

void SyncGroupSessionReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncGroupSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncGroupSessionReadRequest)
}

::google::protobuf::uint8* SyncGroupSessionReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncGroupSessionReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncGroupSessionReadRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncGroupSessionReadRequest)
  return target;
}

size_t SyncGroupSessionReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncGroupSessionReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncGroupSessionReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncGroupSessionReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncGroupSessionReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncGroupSessionReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncGroupSessionReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncGroupSessionReadRequest)
    MergeFrom(*source);
  }
}

void SyncGroupSessionReadRequest::MergeFrom(const SyncGroupSessionReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncGroupSessionReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
}

void SyncGroupSessionReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncGroupSessionReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncGroupSessionReadRequest::CopyFrom(const SyncGroupSessionReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncGroupSessionReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGroupSessionReadRequest::IsInitialized() const {
  return true;
}

void SyncGroupSessionReadRequest::Swap(SyncGroupSessionReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncGroupSessionReadRequest::InternalSwap(SyncGroupSessionReadRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  uri_.Swap(&other->uri_);
  to_username_.Swap(&other->to_username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncGroupSessionReadRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncGroupSessionReadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncGroupSessionReadResponse::kRetFieldNumber;
const int SyncGroupSessionReadResponse::kReadGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncGroupSessionReadResponse::SyncGroupSessionReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncGroupSessionReadResponse)
}
SyncGroupSessionReadResponse::SyncGroupSessionReadResponse(const SyncGroupSessionReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&read_guid_, &from.read_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncGroupSessionReadResponse)
}

void SyncGroupSessionReadResponse::SharedCtor() {
  ::memset(&read_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SyncGroupSessionReadResponse::~SyncGroupSessionReadResponse() {
  // @@protoc_insertion_point(destructor:outer.history.SyncGroupSessionReadResponse)
  SharedDtor();
}

void SyncGroupSessionReadResponse::SharedDtor() {
}

void SyncGroupSessionReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncGroupSessionReadResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncGroupSessionReadResponse& SyncGroupSessionReadResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadResponse();
  return *internal_default_instance();
}

SyncGroupSessionReadResponse* SyncGroupSessionReadResponse::New(::google::protobuf::Arena* arena) const {
  SyncGroupSessionReadResponse* n = new SyncGroupSessionReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncGroupSessionReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncGroupSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&read_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&read_guid_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool SyncGroupSessionReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncGroupSessionReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 read_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &read_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncGroupSessionReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncGroupSessionReadResponse)
  return false;
#undef DO_
}

void SyncGroupSessionReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncGroupSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->read_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncGroupSessionReadResponse)
}

::google::protobuf::uint8* SyncGroupSessionReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncGroupSessionReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->read_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncGroupSessionReadResponse)
  return target;
}

size_t SyncGroupSessionReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncGroupSessionReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 read_guid = 2;
  if (this->read_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->read_guid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncGroupSessionReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncGroupSessionReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncGroupSessionReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncGroupSessionReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncGroupSessionReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncGroupSessionReadResponse)
    MergeFrom(*source);
  }
}

void SyncGroupSessionReadResponse::MergeFrom(const SyncGroupSessionReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncGroupSessionReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.read_guid() != 0) {
    set_read_guid(from.read_guid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncGroupSessionReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncGroupSessionReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncGroupSessionReadResponse::CopyFrom(const SyncGroupSessionReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncGroupSessionReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGroupSessionReadResponse::IsInitialized() const {
  return true;
}

void SyncGroupSessionReadResponse::Swap(SyncGroupSessionReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncGroupSessionReadResponse::InternalSwap(SyncGroupSessionReadResponse* other) {
  using std::swap;
  swap(read_guid_, other->read_guid_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncGroupSessionReadResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessageRemoveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageRemoveRequest::kAppkeyFieldNumber;
const int ChatMessageRemoveRequest::kFromUsernameFieldNumber;
const int ChatMessageRemoveRequest::kToUsernameFieldNumber;
const int ChatMessageRemoveRequest::kGuidFieldNumber;
const int ChatMessageRemoveRequest::kRemoveSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageRemoveRequest::ChatMessageRemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatMessageRemoveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.ChatMessageRemoveRequest)
}
ChatMessageRemoveRequest::ChatMessageRemoveRequest(const ChatMessageRemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guid_(from.guid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  remove_session_ = from.remove_session_;
  // @@protoc_insertion_point(copy_constructor:outer.history.ChatMessageRemoveRequest)
}

void ChatMessageRemoveRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remove_session_ = false;
  _cached_size_ = 0;
}

ChatMessageRemoveRequest::~ChatMessageRemoveRequest() {
  // @@protoc_insertion_point(destructor:outer.history.ChatMessageRemoveRequest)
  SharedDtor();
}

void ChatMessageRemoveRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMessageRemoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageRemoveRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessageRemoveRequest& ChatMessageRemoveRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatMessageRemoveRequest();
  return *internal_default_instance();
}

ChatMessageRemoveRequest* ChatMessageRemoveRequest::New(::google::protobuf::Arena* arena) const {
  ChatMessageRemoveRequest* n = new ChatMessageRemoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.ChatMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remove_session_ = false;
  _internal_metadata_.Clear();
}

bool ChatMessageRemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.ChatMessageRemoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatMessageRemoveRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatMessageRemoveRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatMessageRemoveRequest.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool remove_session = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remove_session_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.ChatMessageRemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.ChatMessageRemoveRequest)
  return false;
#undef DO_
}

void ChatMessageRemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.ChatMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_username(), output);
  }

  // repeated uint64 guid = 4;
  if (this->guid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guid_cached_byte_size_));
  }
  for (int i = 0, n = this->guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guid(i), output);
  }

  // bool remove_session = 5;
  if (this->remove_session() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->remove_session(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.ChatMessageRemoveRequest)
}

::google::protobuf::uint8* ChatMessageRemoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.ChatMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatMessageRemoveRequest.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_username(), target);
  }

  // repeated uint64 guid = 4;
  if (this->guid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guid_, target);
  }

  // bool remove_session = 5;
  if (this->remove_session() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->remove_session(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.ChatMessageRemoveRequest)
  return target;
}

size_t ChatMessageRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.ChatMessageRemoveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 guid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_username = 3;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // bool remove_session = 5;
  if (this->remove_session() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageRemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.ChatMessageRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessageRemoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageRemoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.ChatMessageRemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.ChatMessageRemoveRequest)
    MergeFrom(*source);
  }
}

void ChatMessageRemoveRequest::MergeFrom(const ChatMessageRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.ChatMessageRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guid_.MergeFrom(from.guid_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.remove_session() != 0) {
    set_remove_session(from.remove_session());
  }
}

void ChatMessageRemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.ChatMessageRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageRemoveRequest::CopyFrom(const ChatMessageRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.ChatMessageRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageRemoveRequest::IsInitialized() const {
  return true;
}

void ChatMessageRemoveRequest::Swap(ChatMessageRemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageRemoveRequest::InternalSwap(ChatMessageRemoveRequest* other) {
  using std::swap;
  guid_.InternalSwap(&other->guid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_username_.Swap(&other->to_username_);
  swap(remove_session_, other->remove_session_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageRemoveRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupMessageRemoveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMessageRemoveRequest::kAppkeyFieldNumber;
const int GroupMessageRemoveRequest::kFromUsernameFieldNumber;
const int GroupMessageRemoveRequest::kUriFieldNumber;
const int GroupMessageRemoveRequest::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMessageRemoveRequest::GroupMessageRemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupMessageRemoveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.GroupMessageRemoveRequest)
}
GroupMessageRemoveRequest::GroupMessageRemoveRequest(const GroupMessageRemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guid_(from.guid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.GroupMessageRemoveRequest)
}

void GroupMessageRemoveRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GroupMessageRemoveRequest::~GroupMessageRemoveRequest() {
  // @@protoc_insertion_point(destructor:outer.history.GroupMessageRemoveRequest)
  SharedDtor();
}

void GroupMessageRemoveRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupMessageRemoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMessageRemoveRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupMessageRemoveRequest& GroupMessageRemoveRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupMessageRemoveRequest();
  return *internal_default_instance();
}

GroupMessageRemoveRequest* GroupMessageRemoveRequest::New(::google::protobuf::Arena* arena) const {
  GroupMessageRemoveRequest* n = new GroupMessageRemoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupMessageRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.GroupMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GroupMessageRemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.GroupMessageRemoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupMessageRemoveRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupMessageRemoveRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GroupMessageRemoveRequest.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.GroupMessageRemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.GroupMessageRemoveRequest)
  return false;
#undef DO_
}

void GroupMessageRemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.GroupMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string uri = 3;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uri(), output);
  }

  // repeated uint64 guid = 4;
  if (this->guid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guid_cached_byte_size_));
  }
  for (int i = 0, n = this->guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.GroupMessageRemoveRequest)
}

::google::protobuf::uint8* GroupMessageRemoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.GroupMessageRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string uri = 3;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GroupMessageRemoveRequest.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uri(), target);
  }

  // repeated uint64 guid = 4;
  if (this->guid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.GroupMessageRemoveRequest)
  return target;
}

size_t GroupMessageRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.GroupMessageRemoveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 guid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string uri = 3;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupMessageRemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.GroupMessageRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupMessageRemoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupMessageRemoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.GroupMessageRemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.GroupMessageRemoveRequest)
    MergeFrom(*source);
  }
}

void GroupMessageRemoveRequest::MergeFrom(const GroupMessageRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.GroupMessageRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guid_.MergeFrom(from.guid_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void GroupMessageRemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.GroupMessageRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupMessageRemoveRequest::CopyFrom(const GroupMessageRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.GroupMessageRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMessageRemoveRequest::IsInitialized() const {
  return true;
}

void GroupMessageRemoveRequest::Swap(GroupMessageRemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMessageRemoveRequest::InternalSwap(GroupMessageRemoveRequest* other) {
  using std::swap;
  guid_.InternalSwap(&other->guid_);
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  uri_.Swap(&other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupMessageRemoveRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageRemoveResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRemoveResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRemoveResponse::MessageRemoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageRemoveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.MessageRemoveResponse)
}
MessageRemoveResponse::MessageRemoveResponse(const MessageRemoveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.history.MessageRemoveResponse)
}

void MessageRemoveResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

MessageRemoveResponse::~MessageRemoveResponse() {
  // @@protoc_insertion_point(destructor:outer.history.MessageRemoveResponse)
  SharedDtor();
}

void MessageRemoveResponse::SharedDtor() {
}

void MessageRemoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRemoveResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageRemoveResponse& MessageRemoveResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageRemoveResponse();
  return *internal_default_instance();
}

MessageRemoveResponse* MessageRemoveResponse::New(::google::protobuf::Arena* arena) const {
  MessageRemoveResponse* n = new MessageRemoveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.MessageRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool MessageRemoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.MessageRemoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.MessageRemoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.MessageRemoveResponse)
  return false;
#undef DO_
}

void MessageRemoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.MessageRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.MessageRemoveResponse)
}

::google::protobuf::uint8* MessageRemoveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.MessageRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.MessageRemoveResponse)
  return target;
}

size_t MessageRemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.MessageRemoveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRemoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.MessageRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageRemoveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRemoveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.MessageRemoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.MessageRemoveResponse)
    MergeFrom(*source);
  }
}

void MessageRemoveResponse::MergeFrom(const MessageRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.MessageRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MessageRemoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.MessageRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRemoveResponse::CopyFrom(const MessageRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.MessageRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRemoveResponse::IsInitialized() const {
  return true;
}

void MessageRemoveResponse::Swap(MessageRemoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRemoveResponse::InternalSwap(MessageRemoveResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRemoveResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncSendGUIDRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncSendGUIDRequest::kUsernameFieldNumber;
const int SyncSendGUIDRequest::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncSendGUIDRequest::SyncSendGUIDRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncSendGUIDRequest)
}
SyncSendGUIDRequest::SyncSendGUIDRequest(const SyncSendGUIDRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncSendGUIDRequest)
}

void SyncSendGUIDRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncSendGUIDRequest::~SyncSendGUIDRequest() {
  // @@protoc_insertion_point(destructor:outer.history.SyncSendGUIDRequest)
  SharedDtor();
}

void SyncSendGUIDRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncSendGUIDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncSendGUIDRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncSendGUIDRequest& SyncSendGUIDRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDRequest();
  return *internal_default_instance();
}

SyncSendGUIDRequest* SyncSendGUIDRequest::New(::google::protobuf::Arena* arena) const {
  SyncSendGUIDRequest* n = new SyncSendGUIDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncSendGUIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncSendGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncSendGUIDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncSendGUIDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncSendGUIDRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncSendGUIDRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncSendGUIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncSendGUIDRequest)
  return false;
#undef DO_
}

void SyncSendGUIDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncSendGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncSendGUIDRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncSendGUIDRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncSendGUIDRequest)
}

::google::protobuf::uint8* SyncSendGUIDRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncSendGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncSendGUIDRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncSendGUIDRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncSendGUIDRequest)
  return target;
}

size_t SyncSendGUIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncSendGUIDRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncSendGUIDRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncSendGUIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncSendGUIDRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncSendGUIDRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncSendGUIDRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncSendGUIDRequest)
    MergeFrom(*source);
  }
}

void SyncSendGUIDRequest::MergeFrom(const SyncSendGUIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncSendGUIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void SyncSendGUIDRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncSendGUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncSendGUIDRequest::CopyFrom(const SyncSendGUIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncSendGUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncSendGUIDRequest::IsInitialized() const {
  return true;
}

void SyncSendGUIDRequest::Swap(SyncSendGUIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncSendGUIDRequest::InternalSwap(SyncSendGUIDRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncSendGUIDRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncSendGUIDResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncSendGUIDResponse::kRetFieldNumber;
const int SyncSendGUIDResponse::kSendGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncSendGUIDResponse::SyncSendGUIDResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncSendGUIDResponse)
}
SyncSendGUIDResponse::SyncSendGUIDResponse(const SyncSendGUIDResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&send_guid_, &from.send_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&send_guid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncSendGUIDResponse)
}

void SyncSendGUIDResponse::SharedCtor() {
  ::memset(&send_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&send_guid_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SyncSendGUIDResponse::~SyncSendGUIDResponse() {
  // @@protoc_insertion_point(destructor:outer.history.SyncSendGUIDResponse)
  SharedDtor();
}

void SyncSendGUIDResponse::SharedDtor() {
}

void SyncSendGUIDResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncSendGUIDResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncSendGUIDResponse& SyncSendGUIDResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDResponse();
  return *internal_default_instance();
}

SyncSendGUIDResponse* SyncSendGUIDResponse::New(::google::protobuf::Arena* arena) const {
  SyncSendGUIDResponse* n = new SyncSendGUIDResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncSendGUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncSendGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&send_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&send_guid_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool SyncSendGUIDResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncSendGUIDResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 send_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &send_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncSendGUIDResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncSendGUIDResponse)
  return false;
#undef DO_
}

void SyncSendGUIDResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncSendGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // uint64 send_guid = 2;
  if (this->send_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->send_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncSendGUIDResponse)
}

::google::protobuf::uint8* SyncSendGUIDResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncSendGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // uint64 send_guid = 2;
  if (this->send_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->send_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncSendGUIDResponse)
  return target;
}

size_t SyncSendGUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncSendGUIDResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 send_guid = 2;
  if (this->send_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->send_guid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncSendGUIDResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncSendGUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncSendGUIDResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncSendGUIDResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncSendGUIDResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncSendGUIDResponse)
    MergeFrom(*source);
  }
}

void SyncSendGUIDResponse::MergeFrom(const SyncSendGUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncSendGUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.send_guid() != 0) {
    set_send_guid(from.send_guid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncSendGUIDResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncSendGUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncSendGUIDResponse::CopyFrom(const SyncSendGUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncSendGUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncSendGUIDResponse::IsInitialized() const {
  return true;
}

void SyncSendGUIDResponse::Swap(SyncSendGUIDResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncSendGUIDResponse::InternalSwap(SyncSendGUIDResponse* other) {
  using std::swap;
  swap(send_guid_, other->send_guid_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncSendGUIDResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncReceivedGUIDRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncReceivedGUIDRequest::kUsernameFieldNumber;
const int SyncReceivedGUIDRequest::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncReceivedGUIDRequest::SyncReceivedGUIDRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncReceivedGUIDRequest)
}
SyncReceivedGUIDRequest::SyncReceivedGUIDRequest(const SyncReceivedGUIDRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncReceivedGUIDRequest)
}

void SyncReceivedGUIDRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncReceivedGUIDRequest::~SyncReceivedGUIDRequest() {
  // @@protoc_insertion_point(destructor:outer.history.SyncReceivedGUIDRequest)
  SharedDtor();
}

void SyncReceivedGUIDRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncReceivedGUIDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncReceivedGUIDRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncReceivedGUIDRequest& SyncReceivedGUIDRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDRequest();
  return *internal_default_instance();
}

SyncReceivedGUIDRequest* SyncReceivedGUIDRequest::New(::google::protobuf::Arena* arena) const {
  SyncReceivedGUIDRequest* n = new SyncReceivedGUIDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncReceivedGUIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncReceivedGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncReceivedGUIDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncReceivedGUIDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncReceivedGUIDRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SyncReceivedGUIDRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncReceivedGUIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncReceivedGUIDRequest)
  return false;
#undef DO_
}

void SyncReceivedGUIDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncReceivedGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncReceivedGUIDRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncReceivedGUIDRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncReceivedGUIDRequest)
}

::google::protobuf::uint8* SyncReceivedGUIDRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncReceivedGUIDRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncReceivedGUIDRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SyncReceivedGUIDRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncReceivedGUIDRequest)
  return target;
}

size_t SyncReceivedGUIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncReceivedGUIDRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncReceivedGUIDRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncReceivedGUIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncReceivedGUIDRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncReceivedGUIDRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncReceivedGUIDRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncReceivedGUIDRequest)
    MergeFrom(*source);
  }
}

void SyncReceivedGUIDRequest::MergeFrom(const SyncReceivedGUIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncReceivedGUIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void SyncReceivedGUIDRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncReceivedGUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncReceivedGUIDRequest::CopyFrom(const SyncReceivedGUIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncReceivedGUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncReceivedGUIDRequest::IsInitialized() const {
  return true;
}

void SyncReceivedGUIDRequest::Swap(SyncReceivedGUIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncReceivedGUIDRequest::InternalSwap(SyncReceivedGUIDRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncReceivedGUIDRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncReceivedGUIDResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncReceivedGUIDResponse::kRetFieldNumber;
const int SyncReceivedGUIDResponse::kReceivedGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncReceivedGUIDResponse::SyncReceivedGUIDResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SyncReceivedGUIDResponse)
}
SyncReceivedGUIDResponse::SyncReceivedGUIDResponse(const SyncReceivedGUIDResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&received_guid_, &from.received_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&received_guid_)) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:outer.history.SyncReceivedGUIDResponse)
}

void SyncReceivedGUIDResponse::SharedCtor() {
  ::memset(&received_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&received_guid_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SyncReceivedGUIDResponse::~SyncReceivedGUIDResponse() {
  // @@protoc_insertion_point(destructor:outer.history.SyncReceivedGUIDResponse)
  SharedDtor();
}

void SyncReceivedGUIDResponse::SharedDtor() {
}

void SyncReceivedGUIDResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncReceivedGUIDResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncReceivedGUIDResponse& SyncReceivedGUIDResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDResponse();
  return *internal_default_instance();
}

SyncReceivedGUIDResponse* SyncReceivedGUIDResponse::New(::google::protobuf::Arena* arena) const {
  SyncReceivedGUIDResponse* n = new SyncReceivedGUIDResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncReceivedGUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SyncReceivedGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&received_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&received_guid_)) + sizeof(ret_));
  _internal_metadata_.Clear();
}

bool SyncReceivedGUIDResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SyncReceivedGUIDResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 received_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &received_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SyncReceivedGUIDResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SyncReceivedGUIDResponse)
  return false;
#undef DO_
}

void SyncReceivedGUIDResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SyncReceivedGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // uint64 received_guid = 2;
  if (this->received_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->received_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SyncReceivedGUIDResponse)
}

::google::protobuf::uint8* SyncReceivedGUIDResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SyncReceivedGUIDResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // uint64 received_guid = 2;
  if (this->received_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->received_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SyncReceivedGUIDResponse)
  return target;
}

size_t SyncReceivedGUIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SyncReceivedGUIDResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 received_guid = 2;
  if (this->received_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->received_guid());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncReceivedGUIDResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SyncReceivedGUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncReceivedGUIDResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncReceivedGUIDResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SyncReceivedGUIDResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SyncReceivedGUIDResponse)
    MergeFrom(*source);
  }
}

void SyncReceivedGUIDResponse::MergeFrom(const SyncReceivedGUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SyncReceivedGUIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.received_guid() != 0) {
    set_received_guid(from.received_guid());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncReceivedGUIDResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SyncReceivedGUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncReceivedGUIDResponse::CopyFrom(const SyncReceivedGUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SyncReceivedGUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncReceivedGUIDResponse::IsInitialized() const {
  return true;
}

void SyncReceivedGUIDResponse::Swap(SyncReceivedGUIDResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncReceivedGUIDResponse::InternalSwap(SyncReceivedGUIDResponse* other) {
  using std::swap;
  swap(received_guid_, other->received_guid_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncReceivedGUIDResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FleetHistoryMessageGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FleetHistoryMessageGetRequest::kFleetUriFieldNumber;
const int FleetHistoryMessageGetRequest::kFromUsernameFieldNumber;
const int FleetHistoryMessageGetRequest::kAppkeyFieldNumber;
const int FleetHistoryMessageGetRequest::kBeginGuidFieldNumber;
const int FleetHistoryMessageGetRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FleetHistoryMessageGetRequest::FleetHistoryMessageGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsFleetHistoryMessageGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.FleetHistoryMessageGetRequest)
}
FleetHistoryMessageGetRequest::FleetHistoryMessageGetRequest(const FleetHistoryMessageGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&begin_guid_, &from.begin_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:outer.history.FleetHistoryMessageGetRequest)
}

void FleetHistoryMessageGetRequest::SharedCtor() {
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  _cached_size_ = 0;
}

FleetHistoryMessageGetRequest::~FleetHistoryMessageGetRequest() {
  // @@protoc_insertion_point(destructor:outer.history.FleetHistoryMessageGetRequest)
  SharedDtor();
}

void FleetHistoryMessageGetRequest::SharedDtor() {
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FleetHistoryMessageGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FleetHistoryMessageGetRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FleetHistoryMessageGetRequest& FleetHistoryMessageGetRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsFleetHistoryMessageGetRequest();
  return *internal_default_instance();
}

FleetHistoryMessageGetRequest* FleetHistoryMessageGetRequest::New(::google::protobuf::Arena* arena) const {
  FleetHistoryMessageGetRequest* n = new FleetHistoryMessageGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FleetHistoryMessageGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.FleetHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool FleetHistoryMessageGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.FleetHistoryMessageGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fleet_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.FleetHistoryMessageGetRequest.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.FleetHistoryMessageGetRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.FleetHistoryMessageGetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 begin_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begin_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.FleetHistoryMessageGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.FleetHistoryMessageGetRequest)
  return false;
#undef DO_
}

void FleetHistoryMessageGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.FleetHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fleet_uri(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->begin_guid(), output);
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.FleetHistoryMessageGetRequest)
}

::google::protobuf::uint8* FleetHistoryMessageGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.FleetHistoryMessageGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fleet_uri(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.FleetHistoryMessageGetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->begin_guid(), target);
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.FleetHistoryMessageGetRequest)
  return target;
}

size_t FleetHistoryMessageGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.FleetHistoryMessageGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string fleet_uri = 1;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 begin_guid = 4;
  if (this->begin_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->begin_guid());
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FleetHistoryMessageGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.FleetHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FleetHistoryMessageGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FleetHistoryMessageGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.FleetHistoryMessageGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.FleetHistoryMessageGetRequest)
    MergeFrom(*source);
  }
}

void FleetHistoryMessageGetRequest::MergeFrom(const FleetHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.FleetHistoryMessageGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.begin_guid() != 0) {
    set_begin_guid(from.begin_guid());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void FleetHistoryMessageGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.FleetHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FleetHistoryMessageGetRequest::CopyFrom(const FleetHistoryMessageGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.FleetHistoryMessageGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FleetHistoryMessageGetRequest::IsInitialized() const {
  return true;
}

void FleetHistoryMessageGetRequest::Swap(FleetHistoryMessageGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FleetHistoryMessageGetRequest::InternalSwap(FleetHistoryMessageGetRequest* other) {
  using std::swap;
  fleet_uri_.Swap(&other->fleet_uri_);
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  swap(begin_guid_, other->begin_guid_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FleetHistoryMessageGetRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactInfo::kAppkeyFieldNumber;
const int ContactInfo::kContactUsernameFieldNumber;
const int ContactInfo::kContactNickFieldNumber;
const int ContactInfo::kContactDisplayFieldNumber;
const int ContactInfo::kOriginalLinkFieldNumber;
const int ContactInfo::kThumbnailLinkFieldNumber;
const int ContactInfo::kModifiedFieldNumber;
const int ContactInfo::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactInfo::ContactInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsContactInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.ContactInfo)
}
ContactInfo::ContactInfo(const ContactInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  contact_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact_username().size() > 0) {
    contact_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_username_);
  }
  contact_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact_nick().size() > 0) {
    contact_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_nick_);
  }
  contact_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact_display().size() > 0) {
    contact_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_display_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  modified_ = from.modified_;
  // @@protoc_insertion_point(copy_constructor:outer.history.ContactInfo)
}

void ContactInfo::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ContactInfo::~ContactInfo() {
  // @@protoc_insertion_point(destructor:outer.history.ContactInfo)
  SharedDtor();
}

void ContactInfo::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContactInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactInfo::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactInfo& ContactInfo::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsContactInfo();
  return *internal_default_instance();
}

ContactInfo* ContactInfo::New(::google::protobuf::Arena* arena) const {
  ContactInfo* n = new ContactInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.ContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ContactInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.ContactInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact_username().data(), static_cast<int>(this->contact_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.contact_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact_nick().data(), static_cast<int>(this->contact_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.contact_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact_display = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact_display().data(), static_cast<int>(this->contact_display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.contact_display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ContactInfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.ContactInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.ContactInfo)
  return false;
#undef DO_
}

void ContactInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.ContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string contact_username = 2;
  if (this->contact_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_username().data(), static_cast<int>(this->contact_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contact_username(), output);
  }

  // string contact_nick = 3;
  if (this->contact_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_nick().data(), static_cast<int>(this->contact_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->contact_nick(), output);
  }

  // string contact_display = 4;
  if (this->contact_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_display().data(), static_cast<int>(this->contact_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->contact_display(), output);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->original_link(), output);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnail_link(), output);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->modified(), output);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.ContactInfo)
}

::google::protobuf::uint8* ContactInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.ContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string contact_username = 2;
  if (this->contact_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_username().data(), static_cast<int>(this->contact_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contact_username(), target);
  }

  // string contact_nick = 3;
  if (this->contact_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_nick().data(), static_cast<int>(this->contact_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->contact_nick(), target);
  }

  // string contact_display = 4;
  if (this->contact_display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact_display().data(), static_cast<int>(this->contact_display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.contact_display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->contact_display(), target);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->original_link(), target);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnail_link(), target);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->modified(), target);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ContactInfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.ContactInfo)
  return target;
}

size_t ContactInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.ContactInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string contact_username = 2;
  if (this->contact_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact_username());
  }

  // string contact_nick = 3;
  if (this->contact_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact_nick());
  }

  // string contact_display = 4;
  if (this->contact_display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact_display());
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.ContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.ContactInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.ContactInfo)
    MergeFrom(*source);
  }
}

void ContactInfo::MergeFrom(const ContactInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.ContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.contact_username().size() > 0) {

    contact_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_username_);
  }
  if (from.contact_nick().size() > 0) {

    contact_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_nick_);
  }
  if (from.contact_display().size() > 0) {

    contact_display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_display_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
}

void ContactInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.ContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactInfo::CopyFrom(const ContactInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.ContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactInfo::IsInitialized() const {
  return true;
}

void ContactInfo::Swap(ContactInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactInfo::InternalSwap(ContactInfo* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  contact_username_.Swap(&other->contact_username_);
  contact_nick_.Swap(&other->contact_nick_);
  contact_display_.Swap(&other->contact_display_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  phone_.Swap(&other->phone_);
  swap(modified_, other->modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContactInfo::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLatestContactRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLatestContactRequest::kAppkeyFieldNumber;
const int GetLatestContactRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLatestContactRequest::GetLatestContactRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.GetLatestContactRequest)
}
GetLatestContactRequest::GetLatestContactRequest(const GetLatestContactRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.GetLatestContactRequest)
}

void GetLatestContactRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetLatestContactRequest::~GetLatestContactRequest() {
  // @@protoc_insertion_point(destructor:outer.history.GetLatestContactRequest)
  SharedDtor();
}

void GetLatestContactRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLatestContactRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLatestContactRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLatestContactRequest& GetLatestContactRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactRequest();
  return *internal_default_instance();
}

GetLatestContactRequest* GetLatestContactRequest::New(::google::protobuf::Arena* arena) const {
  GetLatestContactRequest* n = new GetLatestContactRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLatestContactRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.GetLatestContactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetLatestContactRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.GetLatestContactRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GetLatestContactRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.GetLatestContactRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.GetLatestContactRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.GetLatestContactRequest)
  return false;
#undef DO_
}

void GetLatestContactRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.GetLatestContactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GetLatestContactRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GetLatestContactRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.GetLatestContactRequest)
}

::google::protobuf::uint8* GetLatestContactRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.GetLatestContactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GetLatestContactRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.GetLatestContactRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.GetLatestContactRequest)
  return target;
}

size_t GetLatestContactRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.GetLatestContactRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLatestContactRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.GetLatestContactRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLatestContactRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLatestContactRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.GetLatestContactRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.GetLatestContactRequest)
    MergeFrom(*source);
  }
}

void GetLatestContactRequest::MergeFrom(const GetLatestContactRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.GetLatestContactRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void GetLatestContactRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.GetLatestContactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLatestContactRequest::CopyFrom(const GetLatestContactRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.GetLatestContactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestContactRequest::IsInitialized() const {
  return true;
}

void GetLatestContactRequest::Swap(GetLatestContactRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLatestContactRequest::InternalSwap(GetLatestContactRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLatestContactRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLatestContactResponse::InitAsDefaultInstance() {
}
void GetLatestContactResponse::clear_message() {
  message_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLatestContactResponse::kRetFieldNumber;
const int GetLatestContactResponse::kContactInfoFieldNumber;
const int GetLatestContactResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLatestContactResponse::GetLatestContactResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.GetLatestContactResponse)
}
GetLatestContactResponse::GetLatestContactResponse(const GetLatestContactResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contact_info_(from.contact_info_),
      message_(from.message_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.history.GetLatestContactResponse)
}

void GetLatestContactResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

GetLatestContactResponse::~GetLatestContactResponse() {
  // @@protoc_insertion_point(destructor:outer.history.GetLatestContactResponse)
  SharedDtor();
}

void GetLatestContactResponse::SharedDtor() {
}

void GetLatestContactResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLatestContactResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLatestContactResponse& GetLatestContactResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactResponse();
  return *internal_default_instance();
}

GetLatestContactResponse* GetLatestContactResponse::New(::google::protobuf::Arena* arena) const {
  GetLatestContactResponse* n = new GetLatestContactResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLatestContactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.GetLatestContactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contact_info_.Clear();
  message_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetLatestContactResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.GetLatestContactResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.history.ContactInfo contact_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_contact_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.msg.MessageUnit message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.GetLatestContactResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.GetLatestContactResponse)
  return false;
#undef DO_
}

void GetLatestContactResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.GetLatestContactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.history.ContactInfo contact_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->contact_info(static_cast<int>(i)), output);
  }

  // repeated .common.msg.MessageUnit message = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->message(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.GetLatestContactResponse)
}

::google::protobuf::uint8* GetLatestContactResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.GetLatestContactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.history.ContactInfo contact_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contact_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->contact_info(static_cast<int>(i)), deterministic, target);
  }

  // repeated .common.msg.MessageUnit message = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.GetLatestContactResponse)
  return target;
}

size_t GetLatestContactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.GetLatestContactResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.history.ContactInfo contact_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->contact_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contact_info(static_cast<int>(i)));
    }
  }

  // repeated .common.msg.MessageUnit message = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLatestContactResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.GetLatestContactResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLatestContactResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLatestContactResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.GetLatestContactResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.GetLatestContactResponse)
    MergeFrom(*source);
  }
}

void GetLatestContactResponse::MergeFrom(const GetLatestContactResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.GetLatestContactResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contact_info_.MergeFrom(from.contact_info_);
  message_.MergeFrom(from.message_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetLatestContactResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.GetLatestContactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLatestContactResponse::CopyFrom(const GetLatestContactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.GetLatestContactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLatestContactResponse::IsInitialized() const {
  return true;
}

void GetLatestContactResponse::Swap(GetLatestContactResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLatestContactResponse::InternalSwap(GetLatestContactResponse* other) {
  using std::swap;
  contact_info_.InternalSwap(&other->contact_info_);
  message_.InternalSwap(&other->message_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLatestContactResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleMessageSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleMessageSyncRequest::kAppkeyFieldNumber;
const int SingleMessageSyncRequest::kGuidFieldNumber;
const int SingleMessageSyncRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleMessageSyncRequest::SingleMessageSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SingleMessageSyncRequest)
}
SingleMessageSyncRequest::SingleMessageSyncRequest(const SingleMessageSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:outer.history.SingleMessageSyncRequest)
}

void SingleMessageSyncRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SingleMessageSyncRequest::~SingleMessageSyncRequest() {
  // @@protoc_insertion_point(destructor:outer.history.SingleMessageSyncRequest)
  SharedDtor();
}

void SingleMessageSyncRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SingleMessageSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleMessageSyncRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleMessageSyncRequest& SingleMessageSyncRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncRequest();
  return *internal_default_instance();
}

SingleMessageSyncRequest* SingleMessageSyncRequest::New(::google::protobuf::Arena* arena) const {
  SingleMessageSyncRequest* n = new SingleMessageSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SingleMessageSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SingleMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SingleMessageSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SingleMessageSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SingleMessageSyncRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.SingleMessageSyncRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SingleMessageSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SingleMessageSyncRequest)
  return false;
#undef DO_
}

void SingleMessageSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SingleMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SingleMessageSyncRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SingleMessageSyncRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SingleMessageSyncRequest)
}

::google::protobuf::uint8* SingleMessageSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SingleMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SingleMessageSyncRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.SingleMessageSyncRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SingleMessageSyncRequest)
  return target;
}

size_t SingleMessageSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SingleMessageSyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleMessageSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SingleMessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleMessageSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleMessageSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SingleMessageSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SingleMessageSyncRequest)
    MergeFrom(*source);
  }
}

void SingleMessageSyncRequest::MergeFrom(const SingleMessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SingleMessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void SingleMessageSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SingleMessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleMessageSyncRequest::CopyFrom(const SingleMessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SingleMessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleMessageSyncRequest::IsInitialized() const {
  return true;
}

void SingleMessageSyncRequest::Swap(SingleMessageSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleMessageSyncRequest::InternalSwap(SingleMessageSyncRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SingleMessageSyncRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleMessageSyncResponse::InitAsDefaultInstance() {
  ::outer::history::_SingleMessageSyncResponse_default_instance_._instance.get_mutable()->unit_ = const_cast< ::common::msg::MessageUnit*>(
      ::common::msg::MessageUnit::internal_default_instance());
}
void SingleMessageSyncResponse::clear_unit() {
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleMessageSyncResponse::kRetFieldNumber;
const int SingleMessageSyncResponse::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleMessageSyncResponse::SingleMessageSyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.SingleMessageSyncResponse)
}
SingleMessageSyncResponse::SingleMessageSyncResponse(const SingleMessageSyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_unit()) {
    unit_ = new ::common::msg::MessageUnit(*from.unit_);
  } else {
    unit_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.history.SingleMessageSyncResponse)
}

void SingleMessageSyncResponse::SharedCtor() {
  ::memset(&unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&unit_)) + sizeof(ret_));
  _cached_size_ = 0;
}

SingleMessageSyncResponse::~SingleMessageSyncResponse() {
  // @@protoc_insertion_point(destructor:outer.history.SingleMessageSyncResponse)
  SharedDtor();
}

void SingleMessageSyncResponse::SharedDtor() {
  if (this != internal_default_instance()) delete unit_;
}

void SingleMessageSyncResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleMessageSyncResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleMessageSyncResponse& SingleMessageSyncResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncResponse();
  return *internal_default_instance();
}

SingleMessageSyncResponse* SingleMessageSyncResponse::New(::google::protobuf::Arena* arena) const {
  SingleMessageSyncResponse* n = new SingleMessageSyncResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SingleMessageSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.SingleMessageSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SingleMessageSyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.SingleMessageSyncResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.MessageUnit unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.SingleMessageSyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.SingleMessageSyncResponse)
  return false;
#undef DO_
}

void SingleMessageSyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.SingleMessageSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .common.msg.MessageUnit unit = 2;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->unit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.SingleMessageSyncResponse)
}

::google::protobuf::uint8* SingleMessageSyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.SingleMessageSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .common.msg.MessageUnit unit = 2;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->unit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.SingleMessageSyncResponse)
  return target;
}

size_t SingleMessageSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.SingleMessageSyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.msg.MessageUnit unit = 2;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->unit_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleMessageSyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.SingleMessageSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleMessageSyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleMessageSyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.SingleMessageSyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.SingleMessageSyncResponse)
    MergeFrom(*source);
  }
}

void SingleMessageSyncResponse::MergeFrom(const SingleMessageSyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.SingleMessageSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unit()) {
    mutable_unit()->::common::msg::MessageUnit::MergeFrom(from.unit());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SingleMessageSyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.SingleMessageSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleMessageSyncResponse::CopyFrom(const SingleMessageSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.SingleMessageSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleMessageSyncResponse::IsInitialized() const {
  return true;
}

void SingleMessageSyncResponse::Swap(SingleMessageSyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleMessageSyncResponse::InternalSwap(SingleMessageSyncResponse* other) {
  using std::swap;
  swap(unit_, other->unit_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SingleMessageSyncResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineCustomMessageSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineCustomMessageSyncRequest::kUsernameFieldNumber;
const int OfflineCustomMessageSyncRequest::kAppkeyFieldNumber;
const int OfflineCustomMessageSyncRequest::kSorFieldNumber;
const int OfflineCustomMessageSyncRequest::kModifiedTimestampFieldNumber;
const int OfflineCustomMessageSyncRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineCustomMessageSyncRequest::OfflineCustomMessageSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsOfflineCustomMessageSyncRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.OfflineCustomMessageSyncRequest)
}
OfflineCustomMessageSyncRequest::OfflineCustomMessageSyncRequest(const OfflineCustomMessageSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&modified_timestamp_, &from.modified_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&modified_timestamp_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:outer.history.OfflineCustomMessageSyncRequest)
}

void OfflineCustomMessageSyncRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&modified_timestamp_)) + sizeof(limit_));
  _cached_size_ = 0;
}

OfflineCustomMessageSyncRequest::~OfflineCustomMessageSyncRequest() {
  // @@protoc_insertion_point(destructor:outer.history.OfflineCustomMessageSyncRequest)
  SharedDtor();
}

void OfflineCustomMessageSyncRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineCustomMessageSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineCustomMessageSyncRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineCustomMessageSyncRequest& OfflineCustomMessageSyncRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsOfflineCustomMessageSyncRequest();
  return *internal_default_instance();
}

OfflineCustomMessageSyncRequest* OfflineCustomMessageSyncRequest::New(::google::protobuf::Arena* arena) const {
  OfflineCustomMessageSyncRequest* n = new OfflineCustomMessageSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineCustomMessageSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.OfflineCustomMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&modified_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&modified_timestamp_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool OfflineCustomMessageSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.OfflineCustomMessageSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.OfflineCustomMessageSyncRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.OfflineCustomMessageSyncRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.OfflineCustomMessageSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.OfflineCustomMessageSyncRequest)
  return false;
#undef DO_
}

void OfflineCustomMessageSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.OfflineCustomMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.OfflineCustomMessageSyncRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.OfflineCustomMessageSyncRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sor(), output);
  }

  // uint64 modified_timestamp = 5;
  if (this->modified_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->modified_timestamp(), output);
  }

  // uint32 limit = 6;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.OfflineCustomMessageSyncRequest)
}

::google::protobuf::uint8* OfflineCustomMessageSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.OfflineCustomMessageSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.OfflineCustomMessageSyncRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.OfflineCustomMessageSyncRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sor(), target);
  }

  // uint64 modified_timestamp = 5;
  if (this->modified_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->modified_timestamp(), target);
  }

  // uint32 limit = 6;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.OfflineCustomMessageSyncRequest)
  return target;
}

size_t OfflineCustomMessageSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.OfflineCustomMessageSyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 modified_timestamp = 5;
  if (this->modified_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified_timestamp());
  }

  // bool sor = 4;
  if (this->sor() != 0) {
    total_size += 1 + 1;
  }

  // uint32 limit = 6;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineCustomMessageSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.OfflineCustomMessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineCustomMessageSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineCustomMessageSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.OfflineCustomMessageSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.OfflineCustomMessageSyncRequest)
    MergeFrom(*source);
  }
}

void OfflineCustomMessageSyncRequest::MergeFrom(const OfflineCustomMessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.OfflineCustomMessageSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.modified_timestamp() != 0) {
    set_modified_timestamp(from.modified_timestamp());
  }
  if (from.sor() != 0) {
    set_sor(from.sor());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void OfflineCustomMessageSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.OfflineCustomMessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineCustomMessageSyncRequest::CopyFrom(const OfflineCustomMessageSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.OfflineCustomMessageSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineCustomMessageSyncRequest::IsInitialized() const {
  return true;
}

void OfflineCustomMessageSyncRequest::Swap(OfflineCustomMessageSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineCustomMessageSyncRequest::InternalSwap(OfflineCustomMessageSyncRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  swap(modified_timestamp_, other->modified_timestamp_);
  swap(sor_, other->sor_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineCustomMessageSyncRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatHistoryMessageUnRegistGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatHistoryMessageUnRegistGetRequest::kFromUsernameFieldNumber;
const int ChatHistoryMessageUnRegistGetRequest::kToPhoneFieldNumber;
const int ChatHistoryMessageUnRegistGetRequest::kBeginGuidFieldNumber;
const int ChatHistoryMessageUnRegistGetRequest::kLimitFieldNumber;
const int ChatHistoryMessageUnRegistGetRequest::kAppkeyFieldNumber;
const int ChatHistoryMessageUnRegistGetRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatHistoryMessageUnRegistGetRequest::ChatHistoryMessageUnRegistGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.ChatHistoryMessageUnRegistGetRequest)
}
ChatHistoryMessageUnRegistGetRequest::ChatHistoryMessageUnRegistGetRequest(const ChatHistoryMessageUnRegistGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_phone().size() > 0) {
    to_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_phone_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&begin_guid_, &from.begin_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:outer.history.ChatHistoryMessageUnRegistGetRequest)
}

void ChatHistoryMessageUnRegistGetRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  _cached_size_ = 0;
}

ChatHistoryMessageUnRegistGetRequest::~ChatHistoryMessageUnRegistGetRequest() {
  // @@protoc_insertion_point(destructor:outer.history.ChatHistoryMessageUnRegistGetRequest)
  SharedDtor();
}

void ChatHistoryMessageUnRegistGetRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatHistoryMessageUnRegistGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatHistoryMessageUnRegistGetRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatHistoryMessageUnRegistGetRequest& ChatHistoryMessageUnRegistGetRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetRequest();
  return *internal_default_instance();
}

ChatHistoryMessageUnRegistGetRequest* ChatHistoryMessageUnRegistGetRequest::New(::google::protobuf::Arena* arena) const {
  ChatHistoryMessageUnRegistGetRequest* n = new ChatHistoryMessageUnRegistGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatHistoryMessageUnRegistGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&begin_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&begin_guid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ChatHistoryMessageUnRegistGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageUnRegistGetRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_phone().data(), static_cast<int>(this->to_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 begin_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begin_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.ChatHistoryMessageUnRegistGetRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.history.END_TYPE type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::outer::history::END_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.ChatHistoryMessageUnRegistGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.ChatHistoryMessageUnRegistGetRequest)
  return false;
#undef DO_
}

void ChatHistoryMessageUnRegistGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string to_phone = 2;
  if (this->to_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_phone().data(), static_cast<int>(this->to_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_phone(), output);
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->begin_guid(), output);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appkey(), output);
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.ChatHistoryMessageUnRegistGetRequest)
}

::google::protobuf::uint8* ChatHistoryMessageUnRegistGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string to_phone = 2;
  if (this->to_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_phone().data(), static_cast<int>(this->to_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_phone(), target);
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->begin_guid(), target);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.ChatHistoryMessageUnRegistGetRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appkey(), target);
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.ChatHistoryMessageUnRegistGetRequest)
  return target;
}

size_t ChatHistoryMessageUnRegistGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_phone = 2;
  if (this->to_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_phone());
  }

  // string appkey = 5;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // uint64 begin_guid = 3;
  if (this->begin_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->begin_guid());
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  // .outer.history.END_TYPE type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatHistoryMessageUnRegistGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatHistoryMessageUnRegistGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatHistoryMessageUnRegistGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.ChatHistoryMessageUnRegistGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.ChatHistoryMessageUnRegistGetRequest)
    MergeFrom(*source);
  }
}

void ChatHistoryMessageUnRegistGetRequest::MergeFrom(const ChatHistoryMessageUnRegistGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_phone().size() > 0) {

    to_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_phone_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.begin_guid() != 0) {
    set_begin_guid(from.begin_guid());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ChatHistoryMessageUnRegistGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatHistoryMessageUnRegistGetRequest::CopyFrom(const ChatHistoryMessageUnRegistGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.ChatHistoryMessageUnRegistGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatHistoryMessageUnRegistGetRequest::IsInitialized() const {
  return true;
}

void ChatHistoryMessageUnRegistGetRequest::Swap(ChatHistoryMessageUnRegistGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatHistoryMessageUnRegistGetRequest::InternalSwap(ChatHistoryMessageUnRegistGetRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  to_phone_.Swap(&other->to_phone_);
  appkey_.Swap(&other->appkey_);
  swap(begin_guid_, other->begin_guid_);
  swap(limit_, other->limit_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatHistoryMessageUnRegistGetRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatHistoryMessageUnRegistGetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatHistoryMessageUnRegistGetResponse::kMessageListJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatHistoryMessageUnRegistGetResponse::ChatHistoryMessageUnRegistGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.ChatHistoryMessageUnRegistGetResponse)
}
ChatHistoryMessageUnRegistGetResponse::ChatHistoryMessageUnRegistGetResponse(const ChatHistoryMessageUnRegistGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagelistjson_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.messagelistjson().size() > 0) {
    messagelistjson_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagelistjson_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.history.ChatHistoryMessageUnRegistGetResponse)
}

void ChatHistoryMessageUnRegistGetResponse::SharedCtor() {
  messagelistjson_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ChatHistoryMessageUnRegistGetResponse::~ChatHistoryMessageUnRegistGetResponse() {
  // @@protoc_insertion_point(destructor:outer.history.ChatHistoryMessageUnRegistGetResponse)
  SharedDtor();
}

void ChatHistoryMessageUnRegistGetResponse::SharedDtor() {
  messagelistjson_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatHistoryMessageUnRegistGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatHistoryMessageUnRegistGetResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatHistoryMessageUnRegistGetResponse& ChatHistoryMessageUnRegistGetResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetResponse();
  return *internal_default_instance();
}

ChatHistoryMessageUnRegistGetResponse* ChatHistoryMessageUnRegistGetResponse::New(::google::protobuf::Arena* arena) const {
  ChatHistoryMessageUnRegistGetResponse* n = new ChatHistoryMessageUnRegistGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatHistoryMessageUnRegistGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messagelistjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ChatHistoryMessageUnRegistGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes messageListJson = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_messagelistjson()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.ChatHistoryMessageUnRegistGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.ChatHistoryMessageUnRegistGetResponse)
  return false;
#undef DO_
}

void ChatHistoryMessageUnRegistGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes messageListJson = 1;
  if (this->messagelistjson().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->messagelistjson(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.ChatHistoryMessageUnRegistGetResponse)
}

::google::protobuf::uint8* ChatHistoryMessageUnRegistGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes messageListJson = 1;
  if (this->messagelistjson().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->messagelistjson(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.ChatHistoryMessageUnRegistGetResponse)
  return target;
}

size_t ChatHistoryMessageUnRegistGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes messageListJson = 1;
  if (this->messagelistjson().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->messagelistjson());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatHistoryMessageUnRegistGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatHistoryMessageUnRegistGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatHistoryMessageUnRegistGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.ChatHistoryMessageUnRegistGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.ChatHistoryMessageUnRegistGetResponse)
    MergeFrom(*source);
  }
}

void ChatHistoryMessageUnRegistGetResponse::MergeFrom(const ChatHistoryMessageUnRegistGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messagelistjson().size() > 0) {

    messagelistjson_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagelistjson_);
  }
}

void ChatHistoryMessageUnRegistGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatHistoryMessageUnRegistGetResponse::CopyFrom(const ChatHistoryMessageUnRegistGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.ChatHistoryMessageUnRegistGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatHistoryMessageUnRegistGetResponse::IsInitialized() const {
  return true;
}

void ChatHistoryMessageUnRegistGetResponse::Swap(ChatHistoryMessageUnRegistGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatHistoryMessageUnRegistGetResponse::InternalSwap(ChatHistoryMessageUnRegistGetResponse* other) {
  using std::swap;
  messagelistjson_.Swap(&other->messagelistjson_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatHistoryMessageUnRegistGetResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountMessageUnRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountMessageUnRegisterRequest::kUnregigerPhoneFieldNumber;
const int CountMessageUnRegisterRequest::kAppKeyFieldNumber;
const int CountMessageUnRegisterRequest::kPlatformUserNameFieldNumber;
const int CountMessageUnRegisterRequest::kStartTimeFieldNumber;
const int CountMessageUnRegisterRequest::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountMessageUnRegisterRequest::CountMessageUnRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.CountMessageUnRegisterRequest)
}
CountMessageUnRegisterRequest::CountMessageUnRegisterRequest(const CountMessageUnRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unregiger_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unregiger_phone().size() > 0) {
    unregiger_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unregiger_phone_);
  }
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_key().size() > 0) {
    app_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_key_);
  }
  platform_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform_user_name().size() > 0) {
    platform_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_user_name_);
  }
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:outer.history.CountMessageUnRegisterRequest)
}

void CountMessageUnRegisterRequest::SharedCtor() {
  unregiger_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  _cached_size_ = 0;
}

CountMessageUnRegisterRequest::~CountMessageUnRegisterRequest() {
  // @@protoc_insertion_point(destructor:outer.history.CountMessageUnRegisterRequest)
  SharedDtor();
}

void CountMessageUnRegisterRequest::SharedDtor() {
  unregiger_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CountMessageUnRegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CountMessageUnRegisterRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountMessageUnRegisterRequest& CountMessageUnRegisterRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterRequest();
  return *internal_default_instance();
}

CountMessageUnRegisterRequest* CountMessageUnRegisterRequest::New(::google::protobuf::Arena* arena) const {
  CountMessageUnRegisterRequest* n = new CountMessageUnRegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CountMessageUnRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.CountMessageUnRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unregiger_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  _internal_metadata_.Clear();
}

bool CountMessageUnRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.CountMessageUnRegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string unregiger_phone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unregiger_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unregiger_phone().data(), static_cast<int>(this->unregiger_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.CountMessageUnRegisterRequest.unregiger_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_key().data(), static_cast<int>(this->app_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.CountMessageUnRegisterRequest.app_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform_user_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform_user_name().data(), static_cast<int>(this->platform_user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.history.CountMessageUnRegisterRequest.platform_user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.CountMessageUnRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.CountMessageUnRegisterRequest)
  return false;
#undef DO_
}

void CountMessageUnRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.CountMessageUnRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unregiger_phone = 1;
  if (this->unregiger_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unregiger_phone().data(), static_cast<int>(this->unregiger_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.unregiger_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unregiger_phone(), output);
  }

  // string app_key = 2;
  if (this->app_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_key().data(), static_cast<int>(this->app_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.app_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_key(), output);
  }

  // string platform_user_name = 3;
  if (this->platform_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_user_name().data(), static_cast<int>(this->platform_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.platform_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platform_user_name(), output);
  }

  // uint64 start_time = 4;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->start_time(), output);
  }

  // uint64 end_time = 5;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.CountMessageUnRegisterRequest)
}

::google::protobuf::uint8* CountMessageUnRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.CountMessageUnRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unregiger_phone = 1;
  if (this->unregiger_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unregiger_phone().data(), static_cast<int>(this->unregiger_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.unregiger_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unregiger_phone(), target);
  }

  // string app_key = 2;
  if (this->app_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_key().data(), static_cast<int>(this->app_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.app_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_key(), target);
  }

  // string platform_user_name = 3;
  if (this->platform_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_user_name().data(), static_cast<int>(this->platform_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.history.CountMessageUnRegisterRequest.platform_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platform_user_name(), target);
  }

  // uint64 start_time = 4;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->start_time(), target);
  }

  // uint64 end_time = 5;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.CountMessageUnRegisterRequest)
  return target;
}

size_t CountMessageUnRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.CountMessageUnRegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string unregiger_phone = 1;
  if (this->unregiger_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unregiger_phone());
  }

  // string app_key = 2;
  if (this->app_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_key());
  }

  // string platform_user_name = 3;
  if (this->platform_user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform_user_name());
  }

  // uint64 start_time = 4;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time());
  }

  // uint64 end_time = 5;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CountMessageUnRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.CountMessageUnRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CountMessageUnRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountMessageUnRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.CountMessageUnRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.CountMessageUnRegisterRequest)
    MergeFrom(*source);
  }
}

void CountMessageUnRegisterRequest::MergeFrom(const CountMessageUnRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.CountMessageUnRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unregiger_phone().size() > 0) {

    unregiger_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unregiger_phone_);
  }
  if (from.app_key().size() > 0) {

    app_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_key_);
  }
  if (from.platform_user_name().size() > 0) {

    platform_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_user_name_);
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void CountMessageUnRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.CountMessageUnRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountMessageUnRegisterRequest::CopyFrom(const CountMessageUnRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.CountMessageUnRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountMessageUnRegisterRequest::IsInitialized() const {
  return true;
}

void CountMessageUnRegisterRequest::Swap(CountMessageUnRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountMessageUnRegisterRequest::InternalSwap(CountMessageUnRegisterRequest* other) {
  using std::swap;
  unregiger_phone_.Swap(&other->unregiger_phone_);
  app_key_.Swap(&other->app_key_);
  platform_user_name_.Swap(&other->platform_user_name_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CountMessageUnRegisterRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountMessageUnRegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountMessageUnRegisterResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountMessageUnRegisterResponse::CountMessageUnRegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.CountMessageUnRegisterResponse)
}
CountMessageUnRegisterResponse::CountMessageUnRegisterResponse(const CountMessageUnRegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:outer.history.CountMessageUnRegisterResponse)
}

void CountMessageUnRegisterResponse::SharedCtor() {
  count_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

CountMessageUnRegisterResponse::~CountMessageUnRegisterResponse() {
  // @@protoc_insertion_point(destructor:outer.history.CountMessageUnRegisterResponse)
  SharedDtor();
}

void CountMessageUnRegisterResponse::SharedDtor() {
}

void CountMessageUnRegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CountMessageUnRegisterResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountMessageUnRegisterResponse& CountMessageUnRegisterResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterResponse();
  return *internal_default_instance();
}

CountMessageUnRegisterResponse* CountMessageUnRegisterResponse::New(::google::protobuf::Arena* arena) const {
  CountMessageUnRegisterResponse* n = new CountMessageUnRegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CountMessageUnRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.CountMessageUnRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CountMessageUnRegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.CountMessageUnRegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.CountMessageUnRegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.CountMessageUnRegisterResponse)
  return false;
#undef DO_
}

void CountMessageUnRegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.CountMessageUnRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.CountMessageUnRegisterResponse)
}

::google::protobuf::uint8* CountMessageUnRegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.CountMessageUnRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.CountMessageUnRegisterResponse)
  return target;
}

size_t CountMessageUnRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.CountMessageUnRegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CountMessageUnRegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.CountMessageUnRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CountMessageUnRegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountMessageUnRegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.CountMessageUnRegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.CountMessageUnRegisterResponse)
    MergeFrom(*source);
  }
}

void CountMessageUnRegisterResponse::MergeFrom(const CountMessageUnRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.CountMessageUnRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
}

void CountMessageUnRegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.CountMessageUnRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountMessageUnRegisterResponse::CopyFrom(const CountMessageUnRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.CountMessageUnRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountMessageUnRegisterResponse::IsInitialized() const {
  return true;
}

void CountMessageUnRegisterResponse::Swap(CountMessageUnRegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountMessageUnRegisterResponse::InternalSwap(CountMessageUnRegisterResponse* other) {
  using std::swap;
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CountMessageUnRegisterResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MergeMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeMessageRequest::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeMessageRequest::MergeMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.MergeMessageRequest)
}
MergeMessageRequest::MergeMessageRequest(const MergeMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:outer.history.MergeMessageRequest)
}

void MergeMessageRequest::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MergeMessageRequest::~MergeMessageRequest() {
  // @@protoc_insertion_point(destructor:outer.history.MergeMessageRequest)
  SharedDtor();
}

void MergeMessageRequest::SharedDtor() {
}

void MergeMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MergeMessageRequest::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MergeMessageRequest& MergeMessageRequest::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageRequest();
  return *internal_default_instance();
}

MergeMessageRequest* MergeMessageRequest::New(::google::protobuf::Arena* arena) const {
  MergeMessageRequest* n = new MergeMessageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MergeMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.MergeMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MergeMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.MergeMessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.MergeMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.MergeMessageRequest)
  return false;
#undef DO_
}

void MergeMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.MergeMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.MergeMessageRequest)
}

::google::protobuf::uint8* MergeMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.MergeMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.MergeMessageRequest)
  return target;
}

size_t MergeMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.MergeMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MergeMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.MergeMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MergeMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.MergeMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.MergeMessageRequest)
    MergeFrom(*source);
  }
}

void MergeMessageRequest::MergeFrom(const MergeMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.MergeMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void MergeMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.MergeMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeMessageRequest::CopyFrom(const MergeMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.MergeMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeMessageRequest::IsInitialized() const {
  return true;
}

void MergeMessageRequest::Swap(MergeMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeMessageRequest::InternalSwap(MergeMessageRequest* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MergeMessageRequest::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MergeMessageResponse::InitAsDefaultInstance() {
}
void MergeMessageResponse::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeMessageResponse::kRetFieldNumber;
const int MergeMessageResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeMessageResponse::MergeMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.history.MergeMessageResponse)
}
MergeMessageResponse::MergeMessageResponse(const MergeMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.history.MergeMessageResponse)
}

void MergeMessageResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

MergeMessageResponse::~MergeMessageResponse() {
  // @@protoc_insertion_point(destructor:outer.history.MergeMessageResponse)
  SharedDtor();
}

void MergeMessageResponse::SharedDtor() {
}

void MergeMessageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MergeMessageResponse::descriptor() {
  ::protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MergeMessageResponse& MergeMessageResponse::default_instance() {
  ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageResponse();
  return *internal_default_instance();
}

MergeMessageResponse* MergeMessageResponse::New(::google::protobuf::Arena* arena) const {
  MergeMessageResponse* n = new MergeMessageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MergeMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.history.MergeMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool MergeMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.history.MergeMessageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.msg.MessageUnit data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.history.MergeMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.history.MergeMessageResponse)
  return false;
#undef DO_
}

void MergeMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.history.MergeMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .common.msg.MessageUnit data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.history.MergeMessageResponse)
}

::google::protobuf::uint8* MergeMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.history.MergeMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .common.msg.MessageUnit data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.history.MergeMessageResponse)
  return target;
}

size_t MergeMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.history.MergeMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.msg.MessageUnit data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MergeMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.history.MergeMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MergeMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.history.MergeMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.history.MergeMessageResponse)
    MergeFrom(*source);
  }
}

void MergeMessageResponse::MergeFrom(const MergeMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.history.MergeMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MergeMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.history.MergeMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeMessageResponse::CopyFrom(const MergeMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.history.MergeMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeMessageResponse::IsInitialized() const {
  return true;
}

void MergeMessageResponse::Swap(MergeMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeMessageResponse::InternalSwap(MergeMessageResponse* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MergeMessageResponse::GetMetadata() const {
  protobuf_outer_2fhistory_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fhistory_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace history
}  // namespace outer

// @@protoc_insertion_point(global_scope)
