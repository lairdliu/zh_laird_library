// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/robot.proto

#include "outer/robot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace robot {
class ClassTextDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassTextData>
      _instance;
} _ClassTextData_default_instance_;
class ClassLinkDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassLinkData>
      _instance;
} _ClassLinkData_default_instance_;
class ArticleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Article>
      _instance;
} _Article_default_instance_;
class ClassNewsDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassNewsData>
      _instance;
} _ClassNewsData_default_instance_;
class CookBookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CookBook>
      _instance;
} _CookBook_default_instance_;
class ClassCookBookDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassCookBookData>
      _instance;
} _ClassCookBookData_default_instance_;
class AutoReplyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoReplyRequest>
      _instance;
} _AutoReplyRequest_default_instance_;
class AutoReplyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoReplyResponse>
      _instance;
} _AutoReplyResponse_default_instance_;
}  // namespace robot
}  // namespace outer
namespace protobuf_outer_2frobot_2eproto {
void InitDefaultsClassTextDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_ClassTextData_default_instance_;
    new (ptr) ::outer::robot::ClassTextData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::ClassTextData::InitAsDefaultInstance();
}

void InitDefaultsClassTextData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassTextDataImpl);
}

void InitDefaultsClassLinkDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_ClassLinkData_default_instance_;
    new (ptr) ::outer::robot::ClassLinkData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::ClassLinkData::InitAsDefaultInstance();
}

void InitDefaultsClassLinkData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassLinkDataImpl);
}

void InitDefaultsArticleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_Article_default_instance_;
    new (ptr) ::outer::robot::Article();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::Article::InitAsDefaultInstance();
}

void InitDefaultsArticle() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArticleImpl);
}

void InitDefaultsClassNewsDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2frobot_2eproto::InitDefaultsArticle();
  {
    void* ptr = &::outer::robot::_ClassNewsData_default_instance_;
    new (ptr) ::outer::robot::ClassNewsData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::ClassNewsData::InitAsDefaultInstance();
}

void InitDefaultsClassNewsData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassNewsDataImpl);
}

void InitDefaultsCookBookImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_CookBook_default_instance_;
    new (ptr) ::outer::robot::CookBook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::CookBook::InitAsDefaultInstance();
}

void InitDefaultsCookBook() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCookBookImpl);
}

void InitDefaultsClassCookBookDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2frobot_2eproto::InitDefaultsCookBook();
  {
    void* ptr = &::outer::robot::_ClassCookBookData_default_instance_;
    new (ptr) ::outer::robot::ClassCookBookData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::ClassCookBookData::InitAsDefaultInstance();
}

void InitDefaultsClassCookBookData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassCookBookDataImpl);
}

void InitDefaultsAutoReplyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_AutoReplyRequest_default_instance_;
    new (ptr) ::outer::robot::AutoReplyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::AutoReplyRequest::InitAsDefaultInstance();
}

void InitDefaultsAutoReplyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAutoReplyRequestImpl);
}

void InitDefaultsAutoReplyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::robot::_AutoReplyResponse_default_instance_;
    new (ptr) ::outer::robot::AutoReplyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::robot::AutoReplyResponse::InitAsDefaultInstance();
}

void InitDefaultsAutoReplyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAutoReplyResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassTextData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassTextData, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassLinkData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassLinkData, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassLinkData, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::Article, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::Article, article_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::Article, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::Article, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::Article, detailurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassNewsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassNewsData, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassNewsData, article_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::CookBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::CookBook, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::CookBook, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::CookBook, detailurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::CookBook, icon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassCookBookData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassCookBookData, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::ClassCookBookData, article_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyRequest, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyRequest, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyResponse, robot_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::robot::AutoReplyResponse, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::robot::ClassTextData)},
  { 6, -1, sizeof(::outer::robot::ClassLinkData)},
  { 13, -1, sizeof(::outer::robot::Article)},
  { 22, -1, sizeof(::outer::robot::ClassNewsData)},
  { 29, -1, sizeof(::outer::robot::CookBook)},
  { 38, -1, sizeof(::outer::robot::ClassCookBookData)},
  { 45, -1, sizeof(::outer::robot::AutoReplyRequest)},
  { 53, -1, sizeof(::outer::robot::AutoReplyResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_ClassTextData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_ClassLinkData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_Article_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_ClassNewsData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_CookBook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_ClassCookBookData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_AutoReplyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::robot::_AutoReplyResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/robot.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021outer/robot.proto\022\013outer.robot\032\024common"
      "/errcode.proto\"\035\n\rClassTextData\022\014\n\004text\030"
      "\001 \001(\t\"*\n\rClassLinkData\022\014\n\004text\030\001 \001(\t\022\013\n\003"
      "url\030\002 \001(\t\"K\n\007Article\022\017\n\007article\030\001 \001(\t\022\016\n"
      "\006source\030\002 \001(\t\022\014\n\004icon\030\003 \001(\t\022\021\n\tdetailurl"
      "\030\004 \001(\t\"D\n\rClassNewsData\022\014\n\004text\030\001 \001(\t\022%\n"
      "\007article\030\002 \003(\0132\024.outer.robot.Article\"G\n\010"
      "CookBook\022\014\n\004name\030\001 \001(\t\022\014\n\004info\030\002 \001(\t\022\021\n\t"
      "detailurl\030\003 \001(\t\022\014\n\004icon\030\004 \001(\t\"I\n\021ClassCo"
      "okBookData\022\014\n\004text\030\001 \001(\t\022&\n\007article\030\002 \003("
      "\0132\025.outer.robot.CookBook\"J\n\020AutoReplyReq"
      "uest\022\025\n\rfrom_username\030\001 \001(\t\022\016\n\006appkey\030\002 "
      "\001(\t\022\017\n\007content\030\003 \001(\t\"y\n\021AutoReplyRespons"
      "e\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EErrorCo"
      "de\022-\n\013robot_class\030\002 \001(\0162\030.outer.robot.ER"
      "obotClass\022\014\n\004data\030\003 \001(\014*\257\001\n\020ETulingError"
      "Code\022\013\n\007UNKNOWN\020\000\022\035\n\031TULING_ERROR_CODE_D"
      "EFAULT\020\001\022\025\n\017ERROR_KEY_ERROR\020\301\270\002\022\026\n\020ERROR"
      "_INFO_EMPTY\020\302\270\002\022!\n\033ERROR_REACH_DAY_COUNT"
      "_LIMIT\020\303\270\002\022\035\n\027ERROR_DATA_FORMAT_ERROR\020\304\270"
      "\002*\267\001\n\013ERobotClass\022\020\n\014UNKNOWNCLASS\020\000\022\027\n\023R"
      "OBOT_CLASS_DEFAULT\020\001\022\020\n\nCLASS_TEXT\020\240\215\006\022\020"
      "\n\nCLASS_LINK\020\300\232\014\022\020\n\nCLASS_NEWS\020\260\267\022\022\025\n\017CL"
      "ASS_COOK_BOOK\020\240\346\022\022\026\n\020CLASS_CHILD_SONG\020\250\215"
      "\023\022\030\n\022CLASS_CHILD_POETRY\020\220\225\0232Z\n\014RobotServ"
      "ice\022J\n\tAutoReply\022\035.outer.robot.AutoReply"
      "Request\032\036.outer.robot.AutoReplyResponseB"
      "\'\n\034com.cmcc.littlec.proto.outerB\005RobotP\000"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/robot.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2frobot_2eproto
namespace outer {
namespace robot {
const ::google::protobuf::EnumDescriptor* ETulingErrorCode_descriptor() {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2frobot_2eproto::file_level_enum_descriptors[0];
}
bool ETulingErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 40001:
    case 40002:
    case 40003:
    case 40004:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERobotClass_descriptor() {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_outer_2frobot_2eproto::file_level_enum_descriptors[1];
}
bool ERobotClass_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 100000:
    case 200000:
    case 302000:
    case 308000:
    case 313000:
    case 314000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClassTextData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassTextData::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassTextData::ClassTextData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsClassTextData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.ClassTextData)
}
ClassTextData::ClassTextData(const ClassTextData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.ClassTextData)
}

void ClassTextData::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClassTextData::~ClassTextData() {
  // @@protoc_insertion_point(destructor:outer.robot.ClassTextData)
  SharedDtor();
}

void ClassTextData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassTextData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassTextData::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassTextData& ClassTextData::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsClassTextData();
  return *internal_default_instance();
}

ClassTextData* ClassTextData::New(::google::protobuf::Arena* arena) const {
  ClassTextData* n = new ClassTextData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassTextData::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.ClassTextData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClassTextData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.ClassTextData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.ClassTextData.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.ClassTextData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.ClassTextData)
  return false;
#undef DO_
}

void ClassTextData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.ClassTextData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassTextData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.ClassTextData)
}

::google::protobuf::uint8* ClassTextData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.ClassTextData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassTextData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.ClassTextData)
  return target;
}

size_t ClassTextData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.ClassTextData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassTextData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.ClassTextData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassTextData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassTextData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.ClassTextData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.ClassTextData)
    MergeFrom(*source);
  }
}

void ClassTextData::MergeFrom(const ClassTextData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.ClassTextData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void ClassTextData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.ClassTextData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassTextData::CopyFrom(const ClassTextData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.ClassTextData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassTextData::IsInitialized() const {
  return true;
}

void ClassTextData::Swap(ClassTextData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassTextData::InternalSwap(ClassTextData* other) {
  using std::swap;
  text_.Swap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassTextData::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassLinkData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassLinkData::kTextFieldNumber;
const int ClassLinkData::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassLinkData::ClassLinkData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsClassLinkData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.ClassLinkData)
}
ClassLinkData::ClassLinkData(const ClassLinkData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.ClassLinkData)
}

void ClassLinkData::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClassLinkData::~ClassLinkData() {
  // @@protoc_insertion_point(destructor:outer.robot.ClassLinkData)
  SharedDtor();
}

void ClassLinkData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassLinkData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassLinkData::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassLinkData& ClassLinkData::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsClassLinkData();
  return *internal_default_instance();
}

ClassLinkData* ClassLinkData::New(::google::protobuf::Arena* arena) const {
  ClassLinkData* n = new ClassLinkData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassLinkData::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.ClassLinkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClassLinkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.ClassLinkData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.ClassLinkData.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.ClassLinkData.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.ClassLinkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.ClassLinkData)
  return false;
#undef DO_
}

void ClassLinkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.ClassLinkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassLinkData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassLinkData.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.ClassLinkData)
}

::google::protobuf::uint8* ClassLinkData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.ClassLinkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassLinkData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassLinkData.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.ClassLinkData)
  return target;
}

size_t ClassLinkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.ClassLinkData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassLinkData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.ClassLinkData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassLinkData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassLinkData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.ClassLinkData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.ClassLinkData)
    MergeFrom(*source);
  }
}

void ClassLinkData::MergeFrom(const ClassLinkData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.ClassLinkData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void ClassLinkData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.ClassLinkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassLinkData::CopyFrom(const ClassLinkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.ClassLinkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassLinkData::IsInitialized() const {
  return true;
}

void ClassLinkData::Swap(ClassLinkData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassLinkData::InternalSwap(ClassLinkData* other) {
  using std::swap;
  text_.Swap(&other->text_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassLinkData::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Article::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Article::kArticleFieldNumber;
const int Article::kSourceFieldNumber;
const int Article::kIconFieldNumber;
const int Article::kDetailurlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Article::Article()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsArticle();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.Article)
}
Article::Article(const Article& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  article_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.article().size() > 0) {
    article_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.article_);
  }
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  detailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailurl().size() > 0) {
    detailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailurl_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.Article)
}

void Article::SharedCtor() {
  article_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Article::~Article() {
  // @@protoc_insertion_point(destructor:outer.robot.Article)
  SharedDtor();
}

void Article::SharedDtor() {
  article_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Article::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Article::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Article& Article::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsArticle();
  return *internal_default_instance();
}

Article* Article::New(::google::protobuf::Arena* arena) const {
  Article* n = new Article;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Article::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  article_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Article::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.Article)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string article = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_article()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->article().data(), static_cast<int>(this->article().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.Article.article"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), static_cast<int>(this->source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.Article.source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.Article.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailurl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailurl().data(), static_cast<int>(this->detailurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.Article.detailurl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.Article)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.Article)
  return false;
#undef DO_
}

void Article::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string article = 1;
  if (this->article().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->article().data(), static_cast<int>(this->article().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.article");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->article(), output);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source(), output);
  }

  // string icon = 3;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->icon(), output);
  }

  // string detailurl = 4;
  if (this->detailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailurl().data(), static_cast<int>(this->detailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.detailurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->detailurl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.Article)
}

::google::protobuf::uint8* Article::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string article = 1;
  if (this->article().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->article().data(), static_cast<int>(this->article().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.article");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->article(), target);
  }

  // string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), static_cast<int>(this->source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source(), target);
  }

  // string icon = 3;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->icon(), target);
  }

  // string detailurl = 4;
  if (this->detailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailurl().data(), static_cast<int>(this->detailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.Article.detailurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->detailurl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.Article)
  return target;
}

size_t Article::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.Article)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string article = 1;
  if (this->article().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->article());
  }

  // string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // string icon = 3;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // string detailurl = 4;
  if (this->detailurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Article::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.Article)
  GOOGLE_DCHECK_NE(&from, this);
  const Article* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Article>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.Article)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.Article)
    MergeFrom(*source);
  }
}

void Article::MergeFrom(const Article& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.Article)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.article().size() > 0) {

    article_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.article_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.detailurl().size() > 0) {

    detailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailurl_);
  }
}

void Article::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.Article)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Article::CopyFrom(const Article& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.Article)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Article::IsInitialized() const {
  return true;
}

void Article::Swap(Article* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Article::InternalSwap(Article* other) {
  using std::swap;
  article_.Swap(&other->article_);
  source_.Swap(&other->source_);
  icon_.Swap(&other->icon_);
  detailurl_.Swap(&other->detailurl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Article::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassNewsData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassNewsData::kTextFieldNumber;
const int ClassNewsData::kArticleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassNewsData::ClassNewsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsClassNewsData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.ClassNewsData)
}
ClassNewsData::ClassNewsData(const ClassNewsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      article_(from.article_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.ClassNewsData)
}

void ClassNewsData::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClassNewsData::~ClassNewsData() {
  // @@protoc_insertion_point(destructor:outer.robot.ClassNewsData)
  SharedDtor();
}

void ClassNewsData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassNewsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassNewsData::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassNewsData& ClassNewsData::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsClassNewsData();
  return *internal_default_instance();
}

ClassNewsData* ClassNewsData::New(::google::protobuf::Arena* arena) const {
  ClassNewsData* n = new ClassNewsData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassNewsData::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.ClassNewsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  article_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClassNewsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.ClassNewsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.ClassNewsData.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.robot.Article article = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_article()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.ClassNewsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.ClassNewsData)
  return false;
#undef DO_
}

void ClassNewsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.ClassNewsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassNewsData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // repeated .outer.robot.Article article = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->article(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.ClassNewsData)
}

::google::protobuf::uint8* ClassNewsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.ClassNewsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassNewsData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // repeated .outer.robot.Article article = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->article(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.ClassNewsData)
  return target;
}

size_t ClassNewsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.ClassNewsData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.robot.Article article = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->article_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->article(static_cast<int>(i)));
    }
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassNewsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.ClassNewsData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassNewsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassNewsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.ClassNewsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.ClassNewsData)
    MergeFrom(*source);
  }
}

void ClassNewsData::MergeFrom(const ClassNewsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.ClassNewsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  article_.MergeFrom(from.article_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void ClassNewsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.ClassNewsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassNewsData::CopyFrom(const ClassNewsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.ClassNewsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassNewsData::IsInitialized() const {
  return true;
}

void ClassNewsData::Swap(ClassNewsData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassNewsData::InternalSwap(ClassNewsData* other) {
  using std::swap;
  article_.InternalSwap(&other->article_);
  text_.Swap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassNewsData::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CookBook::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CookBook::kNameFieldNumber;
const int CookBook::kInfoFieldNumber;
const int CookBook::kDetailurlFieldNumber;
const int CookBook::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CookBook::CookBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsCookBook();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.CookBook)
}
CookBook::CookBook(const CookBook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  detailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.detailurl().size() > 0) {
    detailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailurl_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.CookBook)
}

void CookBook::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CookBook::~CookBook() {
  // @@protoc_insertion_point(destructor:outer.robot.CookBook)
  SharedDtor();
}

void CookBook::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CookBook::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CookBook::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CookBook& CookBook::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsCookBook();
  return *internal_default_instance();
}

CookBook* CookBook::New(::google::protobuf::Arena* arena) const {
  CookBook* n = new CookBook;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CookBook::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.CookBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detailurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CookBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.CookBook)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.CookBook.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.CookBook.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string detailurl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detailurl().data(), static_cast<int>(this->detailurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.CookBook.detailurl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.CookBook.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.CookBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.CookBook)
  return false;
#undef DO_
}

void CookBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.CookBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string info = 2;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->info(), output);
  }

  // string detailurl = 3;
  if (this->detailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailurl().data(), static_cast<int>(this->detailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.detailurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->detailurl(), output);
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.CookBook)
}

::google::protobuf::uint8* CookBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.CookBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string info = 2;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->info(), target);
  }

  // string detailurl = 3;
  if (this->detailurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->detailurl().data(), static_cast<int>(this->detailurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.detailurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->detailurl(), target);
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.CookBook.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.CookBook)
  return target;
}

size_t CookBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.CookBook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string info = 2;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // string detailurl = 3;
  if (this->detailurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailurl());
  }

  // string icon = 4;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CookBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.CookBook)
  GOOGLE_DCHECK_NE(&from, this);
  const CookBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CookBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.CookBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.CookBook)
    MergeFrom(*source);
  }
}

void CookBook::MergeFrom(const CookBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.CookBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.detailurl().size() > 0) {

    detailurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailurl_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
}

void CookBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.CookBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CookBook::CopyFrom(const CookBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.CookBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CookBook::IsInitialized() const {
  return true;
}

void CookBook::Swap(CookBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CookBook::InternalSwap(CookBook* other) {
  using std::swap;
  name_.Swap(&other->name_);
  info_.Swap(&other->info_);
  detailurl_.Swap(&other->detailurl_);
  icon_.Swap(&other->icon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CookBook::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassCookBookData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassCookBookData::kTextFieldNumber;
const int ClassCookBookData::kArticleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassCookBookData::ClassCookBookData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsClassCookBookData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.ClassCookBookData)
}
ClassCookBookData::ClassCookBookData(const ClassCookBookData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      article_(from.article_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.ClassCookBookData)
}

void ClassCookBookData::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClassCookBookData::~ClassCookBookData() {
  // @@protoc_insertion_point(destructor:outer.robot.ClassCookBookData)
  SharedDtor();
}

void ClassCookBookData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassCookBookData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassCookBookData::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassCookBookData& ClassCookBookData::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsClassCookBookData();
  return *internal_default_instance();
}

ClassCookBookData* ClassCookBookData::New(::google::protobuf::Arena* arena) const {
  ClassCookBookData* n = new ClassCookBookData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassCookBookData::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.ClassCookBookData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  article_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClassCookBookData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.ClassCookBookData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.ClassCookBookData.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.robot.CookBook article = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_article()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.ClassCookBookData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.ClassCookBookData)
  return false;
#undef DO_
}

void ClassCookBookData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.ClassCookBookData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassCookBookData.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // repeated .outer.robot.CookBook article = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->article(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.ClassCookBookData)
}

::google::protobuf::uint8* ClassCookBookData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.ClassCookBookData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.ClassCookBookData.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // repeated .outer.robot.CookBook article = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->article(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.ClassCookBookData)
  return target;
}

size_t ClassCookBookData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.ClassCookBookData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.robot.CookBook article = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->article_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->article(static_cast<int>(i)));
    }
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassCookBookData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.ClassCookBookData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassCookBookData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassCookBookData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.ClassCookBookData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.ClassCookBookData)
    MergeFrom(*source);
  }
}

void ClassCookBookData::MergeFrom(const ClassCookBookData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.ClassCookBookData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  article_.MergeFrom(from.article_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void ClassCookBookData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.ClassCookBookData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassCookBookData::CopyFrom(const ClassCookBookData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.ClassCookBookData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassCookBookData::IsInitialized() const {
  return true;
}

void ClassCookBookData::Swap(ClassCookBookData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassCookBookData::InternalSwap(ClassCookBookData* other) {
  using std::swap;
  article_.InternalSwap(&other->article_);
  text_.Swap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassCookBookData::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoReplyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoReplyRequest::kFromUsernameFieldNumber;
const int AutoReplyRequest::kAppkeyFieldNumber;
const int AutoReplyRequest::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoReplyRequest::AutoReplyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsAutoReplyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.AutoReplyRequest)
}
AutoReplyRequest::AutoReplyRequest(const AutoReplyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.robot.AutoReplyRequest)
}

void AutoReplyRequest::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AutoReplyRequest::~AutoReplyRequest() {
  // @@protoc_insertion_point(destructor:outer.robot.AutoReplyRequest)
  SharedDtor();
}

void AutoReplyRequest::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutoReplyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoReplyRequest::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoReplyRequest& AutoReplyRequest::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsAutoReplyRequest();
  return *internal_default_instance();
}

AutoReplyRequest* AutoReplyRequest::New(::google::protobuf::Arena* arena) const {
  AutoReplyRequest* n = new AutoReplyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoReplyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.AutoReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AutoReplyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.AutoReplyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.AutoReplyRequest.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.AutoReplyRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.robot.AutoReplyRequest.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.AutoReplyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.AutoReplyRequest)
  return false;
#undef DO_
}

void AutoReplyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.AutoReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.AutoReplyRequest)
}

::google::protobuf::uint8* AutoReplyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.AutoReplyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.robot.AutoReplyRequest.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.AutoReplyRequest)
  return target;
}

size_t AutoReplyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.AutoReplyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoReplyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.AutoReplyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoReplyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoReplyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.AutoReplyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.AutoReplyRequest)
    MergeFrom(*source);
  }
}

void AutoReplyRequest::MergeFrom(const AutoReplyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.AutoReplyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void AutoReplyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.AutoReplyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoReplyRequest::CopyFrom(const AutoReplyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.AutoReplyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoReplyRequest::IsInitialized() const {
  return true;
}

void AutoReplyRequest::Swap(AutoReplyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoReplyRequest::InternalSwap(AutoReplyRequest* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoReplyRequest::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoReplyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoReplyResponse::kRetFieldNumber;
const int AutoReplyResponse::kRobotClassFieldNumber;
const int AutoReplyResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoReplyResponse::AutoReplyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2frobot_2eproto::InitDefaultsAutoReplyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.robot.AutoReplyResponse)
}
AutoReplyResponse::AutoReplyResponse(const AutoReplyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&robot_class_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(robot_class_));
  // @@protoc_insertion_point(copy_constructor:outer.robot.AutoReplyResponse)
}

void AutoReplyResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robot_class_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(robot_class_));
  _cached_size_ = 0;
}

AutoReplyResponse::~AutoReplyResponse() {
  // @@protoc_insertion_point(destructor:outer.robot.AutoReplyResponse)
  SharedDtor();
}

void AutoReplyResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AutoReplyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoReplyResponse::descriptor() {
  ::protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoReplyResponse& AutoReplyResponse::default_instance() {
  ::protobuf_outer_2frobot_2eproto::InitDefaultsAutoReplyResponse();
  return *internal_default_instance();
}

AutoReplyResponse* AutoReplyResponse::New(::google::protobuf::Arena* arena) const {
  AutoReplyResponse* n = new AutoReplyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoReplyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.robot.AutoReplyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robot_class_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(robot_class_));
  _internal_metadata_.Clear();
}

bool AutoReplyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.robot.AutoReplyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.robot.ERobotClass robot_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_robot_class(static_cast< ::outer::robot::ERobotClass >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.robot.AutoReplyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.robot.AutoReplyResponse)
  return false;
#undef DO_
}

void AutoReplyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.robot.AutoReplyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .outer.robot.ERobotClass robot_class = 2;
  if (this->robot_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->robot_class(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.robot.AutoReplyResponse)
}

::google::protobuf::uint8* AutoReplyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.robot.AutoReplyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .outer.robot.ERobotClass robot_class = 2;
  if (this->robot_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->robot_class(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.robot.AutoReplyResponse)
  return target;
}

size_t AutoReplyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.robot.AutoReplyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // .outer.robot.ERobotClass robot_class = 2;
  if (this->robot_class() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->robot_class());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoReplyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.robot.AutoReplyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoReplyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoReplyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.robot.AutoReplyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.robot.AutoReplyResponse)
    MergeFrom(*source);
  }
}

void AutoReplyResponse::MergeFrom(const AutoReplyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.robot.AutoReplyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.robot_class() != 0) {
    set_robot_class(from.robot_class());
  }
}

void AutoReplyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.robot.AutoReplyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoReplyResponse::CopyFrom(const AutoReplyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.robot.AutoReplyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoReplyResponse::IsInitialized() const {
  return true;
}

void AutoReplyResponse::Swap(AutoReplyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoReplyResponse::InternalSwap(AutoReplyResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(ret_, other->ret_);
  swap(robot_class_, other->robot_class_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoReplyResponse::GetMetadata() const {
  protobuf_outer_2frobot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2frobot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace robot
}  // namespace outer

// @@protoc_insertion_point(global_scope)
