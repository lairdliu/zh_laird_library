// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/history.proto

#ifndef PROTOBUF_outer_2fhistory_2eproto__INCLUDED
#define PROTOBUF_outer_2fhistory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/errcode.pb.h"
#include "common/msg.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_outer_2fhistory_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[28];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsChatHistoryMessageGetRequestImpl();
void InitDefaultsChatHistoryMessageGetRequest();
void InitDefaultsGroupHistoryMessageGetRequestImpl();
void InitDefaultsGroupHistoryMessageGetRequest();
void InitDefaultsMessageSyncRequestImpl();
void InitDefaultsMessageSyncRequest();
void InitDefaultsMsgGetResponseImpl();
void InitDefaultsMsgGetResponse();
void InitDefaultsSyncChatSessionReadRequestImpl();
void InitDefaultsSyncChatSessionReadRequest();
void InitDefaultsSyncChatSessionReadResponseImpl();
void InitDefaultsSyncChatSessionReadResponse();
void InitDefaultsSyncGroupSessionReadRequestImpl();
void InitDefaultsSyncGroupSessionReadRequest();
void InitDefaultsSyncGroupSessionReadResponseImpl();
void InitDefaultsSyncGroupSessionReadResponse();
void InitDefaultsChatMessageRemoveRequestImpl();
void InitDefaultsChatMessageRemoveRequest();
void InitDefaultsGroupMessageRemoveRequestImpl();
void InitDefaultsGroupMessageRemoveRequest();
void InitDefaultsMessageRemoveResponseImpl();
void InitDefaultsMessageRemoveResponse();
void InitDefaultsSyncSendGUIDRequestImpl();
void InitDefaultsSyncSendGUIDRequest();
void InitDefaultsSyncSendGUIDResponseImpl();
void InitDefaultsSyncSendGUIDResponse();
void InitDefaultsSyncReceivedGUIDRequestImpl();
void InitDefaultsSyncReceivedGUIDRequest();
void InitDefaultsSyncReceivedGUIDResponseImpl();
void InitDefaultsSyncReceivedGUIDResponse();
void InitDefaultsFleetHistoryMessageGetRequestImpl();
void InitDefaultsFleetHistoryMessageGetRequest();
void InitDefaultsContactInfoImpl();
void InitDefaultsContactInfo();
void InitDefaultsGetLatestContactRequestImpl();
void InitDefaultsGetLatestContactRequest();
void InitDefaultsGetLatestContactResponseImpl();
void InitDefaultsGetLatestContactResponse();
void InitDefaultsSingleMessageSyncRequestImpl();
void InitDefaultsSingleMessageSyncRequest();
void InitDefaultsSingleMessageSyncResponseImpl();
void InitDefaultsSingleMessageSyncResponse();
void InitDefaultsOfflineCustomMessageSyncRequestImpl();
void InitDefaultsOfflineCustomMessageSyncRequest();
void InitDefaultsChatHistoryMessageUnRegistGetRequestImpl();
void InitDefaultsChatHistoryMessageUnRegistGetRequest();
void InitDefaultsChatHistoryMessageUnRegistGetResponseImpl();
void InitDefaultsChatHistoryMessageUnRegistGetResponse();
void InitDefaultsCountMessageUnRegisterRequestImpl();
void InitDefaultsCountMessageUnRegisterRequest();
void InitDefaultsCountMessageUnRegisterResponseImpl();
void InitDefaultsCountMessageUnRegisterResponse();
void InitDefaultsMergeMessageRequestImpl();
void InitDefaultsMergeMessageRequest();
void InitDefaultsMergeMessageResponseImpl();
void InitDefaultsMergeMessageResponse();
inline void InitDefaults() {
  InitDefaultsChatHistoryMessageGetRequest();
  InitDefaultsGroupHistoryMessageGetRequest();
  InitDefaultsMessageSyncRequest();
  InitDefaultsMsgGetResponse();
  InitDefaultsSyncChatSessionReadRequest();
  InitDefaultsSyncChatSessionReadResponse();
  InitDefaultsSyncGroupSessionReadRequest();
  InitDefaultsSyncGroupSessionReadResponse();
  InitDefaultsChatMessageRemoveRequest();
  InitDefaultsGroupMessageRemoveRequest();
  InitDefaultsMessageRemoveResponse();
  InitDefaultsSyncSendGUIDRequest();
  InitDefaultsSyncSendGUIDResponse();
  InitDefaultsSyncReceivedGUIDRequest();
  InitDefaultsSyncReceivedGUIDResponse();
  InitDefaultsFleetHistoryMessageGetRequest();
  InitDefaultsContactInfo();
  InitDefaultsGetLatestContactRequest();
  InitDefaultsGetLatestContactResponse();
  InitDefaultsSingleMessageSyncRequest();
  InitDefaultsSingleMessageSyncResponse();
  InitDefaultsOfflineCustomMessageSyncRequest();
  InitDefaultsChatHistoryMessageUnRegistGetRequest();
  InitDefaultsChatHistoryMessageUnRegistGetResponse();
  InitDefaultsCountMessageUnRegisterRequest();
  InitDefaultsCountMessageUnRegisterResponse();
  InitDefaultsMergeMessageRequest();
  InitDefaultsMergeMessageResponse();
}
}  // namespace protobuf_outer_2fhistory_2eproto
namespace outer {
namespace history {
class ChatHistoryMessageGetRequest;
class ChatHistoryMessageGetRequestDefaultTypeInternal;
extern ChatHistoryMessageGetRequestDefaultTypeInternal _ChatHistoryMessageGetRequest_default_instance_;
class ChatHistoryMessageUnRegistGetRequest;
class ChatHistoryMessageUnRegistGetRequestDefaultTypeInternal;
extern ChatHistoryMessageUnRegistGetRequestDefaultTypeInternal _ChatHistoryMessageUnRegistGetRequest_default_instance_;
class ChatHistoryMessageUnRegistGetResponse;
class ChatHistoryMessageUnRegistGetResponseDefaultTypeInternal;
extern ChatHistoryMessageUnRegistGetResponseDefaultTypeInternal _ChatHistoryMessageUnRegistGetResponse_default_instance_;
class ChatMessageRemoveRequest;
class ChatMessageRemoveRequestDefaultTypeInternal;
extern ChatMessageRemoveRequestDefaultTypeInternal _ChatMessageRemoveRequest_default_instance_;
class ContactInfo;
class ContactInfoDefaultTypeInternal;
extern ContactInfoDefaultTypeInternal _ContactInfo_default_instance_;
class CountMessageUnRegisterRequest;
class CountMessageUnRegisterRequestDefaultTypeInternal;
extern CountMessageUnRegisterRequestDefaultTypeInternal _CountMessageUnRegisterRequest_default_instance_;
class CountMessageUnRegisterResponse;
class CountMessageUnRegisterResponseDefaultTypeInternal;
extern CountMessageUnRegisterResponseDefaultTypeInternal _CountMessageUnRegisterResponse_default_instance_;
class FleetHistoryMessageGetRequest;
class FleetHistoryMessageGetRequestDefaultTypeInternal;
extern FleetHistoryMessageGetRequestDefaultTypeInternal _FleetHistoryMessageGetRequest_default_instance_;
class GetLatestContactRequest;
class GetLatestContactRequestDefaultTypeInternal;
extern GetLatestContactRequestDefaultTypeInternal _GetLatestContactRequest_default_instance_;
class GetLatestContactResponse;
class GetLatestContactResponseDefaultTypeInternal;
extern GetLatestContactResponseDefaultTypeInternal _GetLatestContactResponse_default_instance_;
class GroupHistoryMessageGetRequest;
class GroupHistoryMessageGetRequestDefaultTypeInternal;
extern GroupHistoryMessageGetRequestDefaultTypeInternal _GroupHistoryMessageGetRequest_default_instance_;
class GroupMessageRemoveRequest;
class GroupMessageRemoveRequestDefaultTypeInternal;
extern GroupMessageRemoveRequestDefaultTypeInternal _GroupMessageRemoveRequest_default_instance_;
class MergeMessageRequest;
class MergeMessageRequestDefaultTypeInternal;
extern MergeMessageRequestDefaultTypeInternal _MergeMessageRequest_default_instance_;
class MergeMessageResponse;
class MergeMessageResponseDefaultTypeInternal;
extern MergeMessageResponseDefaultTypeInternal _MergeMessageResponse_default_instance_;
class MessageRemoveResponse;
class MessageRemoveResponseDefaultTypeInternal;
extern MessageRemoveResponseDefaultTypeInternal _MessageRemoveResponse_default_instance_;
class MessageSyncRequest;
class MessageSyncRequestDefaultTypeInternal;
extern MessageSyncRequestDefaultTypeInternal _MessageSyncRequest_default_instance_;
class MsgGetResponse;
class MsgGetResponseDefaultTypeInternal;
extern MsgGetResponseDefaultTypeInternal _MsgGetResponse_default_instance_;
class OfflineCustomMessageSyncRequest;
class OfflineCustomMessageSyncRequestDefaultTypeInternal;
extern OfflineCustomMessageSyncRequestDefaultTypeInternal _OfflineCustomMessageSyncRequest_default_instance_;
class SingleMessageSyncRequest;
class SingleMessageSyncRequestDefaultTypeInternal;
extern SingleMessageSyncRequestDefaultTypeInternal _SingleMessageSyncRequest_default_instance_;
class SingleMessageSyncResponse;
class SingleMessageSyncResponseDefaultTypeInternal;
extern SingleMessageSyncResponseDefaultTypeInternal _SingleMessageSyncResponse_default_instance_;
class SyncChatSessionReadRequest;
class SyncChatSessionReadRequestDefaultTypeInternal;
extern SyncChatSessionReadRequestDefaultTypeInternal _SyncChatSessionReadRequest_default_instance_;
class SyncChatSessionReadResponse;
class SyncChatSessionReadResponseDefaultTypeInternal;
extern SyncChatSessionReadResponseDefaultTypeInternal _SyncChatSessionReadResponse_default_instance_;
class SyncGroupSessionReadRequest;
class SyncGroupSessionReadRequestDefaultTypeInternal;
extern SyncGroupSessionReadRequestDefaultTypeInternal _SyncGroupSessionReadRequest_default_instance_;
class SyncGroupSessionReadResponse;
class SyncGroupSessionReadResponseDefaultTypeInternal;
extern SyncGroupSessionReadResponseDefaultTypeInternal _SyncGroupSessionReadResponse_default_instance_;
class SyncReceivedGUIDRequest;
class SyncReceivedGUIDRequestDefaultTypeInternal;
extern SyncReceivedGUIDRequestDefaultTypeInternal _SyncReceivedGUIDRequest_default_instance_;
class SyncReceivedGUIDResponse;
class SyncReceivedGUIDResponseDefaultTypeInternal;
extern SyncReceivedGUIDResponseDefaultTypeInternal _SyncReceivedGUIDResponse_default_instance_;
class SyncSendGUIDRequest;
class SyncSendGUIDRequestDefaultTypeInternal;
extern SyncSendGUIDRequestDefaultTypeInternal _SyncSendGUIDRequest_default_instance_;
class SyncSendGUIDResponse;
class SyncSendGUIDResponseDefaultTypeInternal;
extern SyncSendGUIDResponseDefaultTypeInternal _SyncSendGUIDResponse_default_instance_;
}  // namespace history
}  // namespace outer
namespace outer {
namespace history {

enum END_TYPE {
  UNKNOWN = 0,
  MOBILE = 2,
  WEB = 1,
  END_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  END_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool END_TYPE_IsValid(int value);
const END_TYPE END_TYPE_MIN = UNKNOWN;
const END_TYPE END_TYPE_MAX = MOBILE;
const int END_TYPE_ARRAYSIZE = END_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* END_TYPE_descriptor();
inline const ::std::string& END_TYPE_Name(END_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    END_TYPE_descriptor(), value);
}
inline bool END_TYPE_Parse(
    const ::std::string& name, END_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<END_TYPE>(
    END_TYPE_descriptor(), name, value);
}
// ===================================================================

class ChatHistoryMessageGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.ChatHistoryMessageGetRequest) */ {
 public:
  ChatHistoryMessageGetRequest();
  virtual ~ChatHistoryMessageGetRequest();

  ChatHistoryMessageGetRequest(const ChatHistoryMessageGetRequest& from);

  inline ChatHistoryMessageGetRequest& operator=(const ChatHistoryMessageGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHistoryMessageGetRequest(ChatHistoryMessageGetRequest&& from) noexcept
    : ChatHistoryMessageGetRequest() {
    *this = ::std::move(from);
  }

  inline ChatHistoryMessageGetRequest& operator=(ChatHistoryMessageGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHistoryMessageGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatHistoryMessageGetRequest* internal_default_instance() {
    return reinterpret_cast<const ChatHistoryMessageGetRequest*>(
               &_ChatHistoryMessageGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChatHistoryMessageGetRequest* other);
  friend void swap(ChatHistoryMessageGetRequest& a, ChatHistoryMessageGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHistoryMessageGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHistoryMessageGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHistoryMessageGetRequest& from);
  void MergeFrom(const ChatHistoryMessageGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHistoryMessageGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_username = 1;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 1;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string to_username = 2;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 2;
  const ::std::string& to_username() const;
  void set_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(::std::string&& value);
  #endif
  void set_to_username(const char* value);
  void set_to_username(const char* value, size_t size);
  ::std::string* mutable_to_username();
  ::std::string* release_to_username();
  void set_allocated_to_username(::std::string* to_username);

  // string appkey = 5;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 5;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 begin_guid = 3;
  void clear_begin_guid();
  static const int kBeginGuidFieldNumber = 3;
  ::google::protobuf::uint64 begin_guid() const;
  void set_begin_guid(::google::protobuf::uint64 value);

  // uint32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // .outer.history.END_TYPE type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::outer::history::END_TYPE type() const;
  void set_type(::outer::history::END_TYPE value);

  // @@protoc_insertion_point(class_scope:outer.history.ChatHistoryMessageGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr to_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 begin_guid_;
  ::google::protobuf::uint32 limit_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageGetRequestImpl();
};
// -------------------------------------------------------------------

class GroupHistoryMessageGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.GroupHistoryMessageGetRequest) */ {
 public:
  GroupHistoryMessageGetRequest();
  virtual ~GroupHistoryMessageGetRequest();

  GroupHistoryMessageGetRequest(const GroupHistoryMessageGetRequest& from);

  inline GroupHistoryMessageGetRequest& operator=(const GroupHistoryMessageGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupHistoryMessageGetRequest(GroupHistoryMessageGetRequest&& from) noexcept
    : GroupHistoryMessageGetRequest() {
    *this = ::std::move(from);
  }

  inline GroupHistoryMessageGetRequest& operator=(GroupHistoryMessageGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupHistoryMessageGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupHistoryMessageGetRequest* internal_default_instance() {
    return reinterpret_cast<const GroupHistoryMessageGetRequest*>(
               &_GroupHistoryMessageGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GroupHistoryMessageGetRequest* other);
  friend void swap(GroupHistoryMessageGetRequest& a, GroupHistoryMessageGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupHistoryMessageGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupHistoryMessageGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupHistoryMessageGetRequest& from);
  void MergeFrom(const GroupHistoryMessageGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupHistoryMessageGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_uri = 1;
  void clear_group_uri();
  static const int kGroupUriFieldNumber = 1;
  const ::std::string& group_uri() const;
  void set_group_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_group_uri(::std::string&& value);
  #endif
  void set_group_uri(const char* value);
  void set_group_uri(const char* value, size_t size);
  ::std::string* mutable_group_uri();
  ::std::string* release_group_uri();
  void set_allocated_group_uri(::std::string* group_uri);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 begin_guid = 4;
  void clear_begin_guid();
  static const int kBeginGuidFieldNumber = 4;
  ::google::protobuf::uint64 begin_guid() const;
  void set_begin_guid(::google::protobuf::uint64 value);

  // uint32 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:outer.history.GroupHistoryMessageGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_uri_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 begin_guid_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupHistoryMessageGetRequestImpl();
};
// -------------------------------------------------------------------

class MessageSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.MessageSyncRequest) */ {
 public:
  MessageSyncRequest();
  virtual ~MessageSyncRequest();

  MessageSyncRequest(const MessageSyncRequest& from);

  inline MessageSyncRequest& operator=(const MessageSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSyncRequest(MessageSyncRequest&& from) noexcept
    : MessageSyncRequest() {
    *this = ::std::move(from);
  }

  inline MessageSyncRequest& operator=(MessageSyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSyncRequest* internal_default_instance() {
    return reinterpret_cast<const MessageSyncRequest*>(
               &_MessageSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MessageSyncRequest* other);
  friend void swap(MessageSyncRequest& a, MessageSyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageSyncRequest& from);
  void MergeFrom(const MessageSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // bool sor = 4;
  void clear_sor();
  static const int kSorFieldNumber = 4;
  bool sor() const;
  void set_sor(bool value);

  // .outer.history.END_TYPE type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::outer::history::END_TYPE type() const;
  void set_type(::outer::history::END_TYPE value);

  // uint64 modified_timestamp = 6;
  void clear_modified_timestamp();
  static const int kModifiedTimestampFieldNumber = 6;
  ::google::protobuf::uint64 modified_timestamp() const;
  void set_modified_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.MessageSyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 guid_;
  bool sor_;
  int type_;
  ::google::protobuf::uint64 modified_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageSyncRequestImpl();
};
// -------------------------------------------------------------------

class MsgGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.MsgGetResponse) */ {
 public:
  MsgGetResponse();
  virtual ~MsgGetResponse();

  MsgGetResponse(const MsgGetResponse& from);

  inline MsgGetResponse& operator=(const MsgGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgGetResponse(MsgGetResponse&& from) noexcept
    : MsgGetResponse() {
    *this = ::std::move(from);
  }

  inline MsgGetResponse& operator=(MsgGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgGetResponse* internal_default_instance() {
    return reinterpret_cast<const MsgGetResponse*>(
               &_MsgGetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MsgGetResponse* other);
  friend void swap(MsgGetResponse& a, MsgGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgGetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgGetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgGetResponse& from);
  void MergeFrom(const MsgGetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.msg.MessageUnit data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::common::msg::MessageUnit& data(int index) const;
  ::common::msg::MessageUnit* mutable_data(int index);
  ::common::msg::MessageUnit* add_data();
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
      data() const;

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // uint64 modified_timestamp = 6;
  void clear_modified_timestamp();
  static const int kModifiedTimestampFieldNumber = 6;
  ::google::protobuf::uint64 modified_timestamp() const;
  void set_modified_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.MsgGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit > data_;
  int ret_;
  ::google::protobuf::uint64 modified_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsMsgGetResponseImpl();
};
// -------------------------------------------------------------------

class SyncChatSessionReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncChatSessionReadRequest) */ {
 public:
  SyncChatSessionReadRequest();
  virtual ~SyncChatSessionReadRequest();

  SyncChatSessionReadRequest(const SyncChatSessionReadRequest& from);

  inline SyncChatSessionReadRequest& operator=(const SyncChatSessionReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncChatSessionReadRequest(SyncChatSessionReadRequest&& from) noexcept
    : SyncChatSessionReadRequest() {
    *this = ::std::move(from);
  }

  inline SyncChatSessionReadRequest& operator=(SyncChatSessionReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncChatSessionReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncChatSessionReadRequest* internal_default_instance() {
    return reinterpret_cast<const SyncChatSessionReadRequest*>(
               &_SyncChatSessionReadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SyncChatSessionReadRequest* other);
  friend void swap(SyncChatSessionReadRequest& a, SyncChatSessionReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncChatSessionReadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncChatSessionReadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncChatSessionReadRequest& from);
  void MergeFrom(const SyncChatSessionReadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncChatSessionReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string to_username = 3;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 3;
  const ::std::string& to_username() const;
  void set_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(::std::string&& value);
  #endif
  void set_to_username(const char* value);
  void set_to_username(const char* value, size_t size);
  ::std::string* mutable_to_username();
  ::std::string* release_to_username();
  void set_allocated_to_username(::std::string* to_username);

  // @@protoc_insertion_point(class_scope:outer.history.SyncChatSessionReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr to_username_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadRequestImpl();
};
// -------------------------------------------------------------------

class SyncChatSessionReadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncChatSessionReadResponse) */ {
 public:
  SyncChatSessionReadResponse();
  virtual ~SyncChatSessionReadResponse();

  SyncChatSessionReadResponse(const SyncChatSessionReadResponse& from);

  inline SyncChatSessionReadResponse& operator=(const SyncChatSessionReadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncChatSessionReadResponse(SyncChatSessionReadResponse&& from) noexcept
    : SyncChatSessionReadResponse() {
    *this = ::std::move(from);
  }

  inline SyncChatSessionReadResponse& operator=(SyncChatSessionReadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncChatSessionReadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncChatSessionReadResponse* internal_default_instance() {
    return reinterpret_cast<const SyncChatSessionReadResponse*>(
               &_SyncChatSessionReadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SyncChatSessionReadResponse* other);
  friend void swap(SyncChatSessionReadResponse& a, SyncChatSessionReadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncChatSessionReadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncChatSessionReadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncChatSessionReadResponse& from);
  void MergeFrom(const SyncChatSessionReadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncChatSessionReadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 read_guid = 2;
  void clear_read_guid();
  static const int kReadGuidFieldNumber = 2;
  ::google::protobuf::int64 read_guid() const;
  void set_read_guid(::google::protobuf::int64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.SyncChatSessionReadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 read_guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncChatSessionReadResponseImpl();
};
// -------------------------------------------------------------------

class SyncGroupSessionReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncGroupSessionReadRequest) */ {
 public:
  SyncGroupSessionReadRequest();
  virtual ~SyncGroupSessionReadRequest();

  SyncGroupSessionReadRequest(const SyncGroupSessionReadRequest& from);

  inline SyncGroupSessionReadRequest& operator=(const SyncGroupSessionReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncGroupSessionReadRequest(SyncGroupSessionReadRequest&& from) noexcept
    : SyncGroupSessionReadRequest() {
    *this = ::std::move(from);
  }

  inline SyncGroupSessionReadRequest& operator=(SyncGroupSessionReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncGroupSessionReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGroupSessionReadRequest* internal_default_instance() {
    return reinterpret_cast<const SyncGroupSessionReadRequest*>(
               &_SyncGroupSessionReadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SyncGroupSessionReadRequest* other);
  friend void swap(SyncGroupSessionReadRequest& a, SyncGroupSessionReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncGroupSessionReadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncGroupSessionReadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncGroupSessionReadRequest& from);
  void MergeFrom(const SyncGroupSessionReadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncGroupSessionReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string to_username = 3;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 3;
  const ::std::string& to_username() const;
  void set_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(::std::string&& value);
  #endif
  void set_to_username(const char* value);
  void set_to_username(const char* value, size_t size);
  ::std::string* mutable_to_username();
  ::std::string* release_to_username();
  void set_allocated_to_username(::std::string* to_username);

  // @@protoc_insertion_point(class_scope:outer.history.SyncGroupSessionReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr to_username_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadRequestImpl();
};
// -------------------------------------------------------------------

class SyncGroupSessionReadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncGroupSessionReadResponse) */ {
 public:
  SyncGroupSessionReadResponse();
  virtual ~SyncGroupSessionReadResponse();

  SyncGroupSessionReadResponse(const SyncGroupSessionReadResponse& from);

  inline SyncGroupSessionReadResponse& operator=(const SyncGroupSessionReadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncGroupSessionReadResponse(SyncGroupSessionReadResponse&& from) noexcept
    : SyncGroupSessionReadResponse() {
    *this = ::std::move(from);
  }

  inline SyncGroupSessionReadResponse& operator=(SyncGroupSessionReadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncGroupSessionReadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGroupSessionReadResponse* internal_default_instance() {
    return reinterpret_cast<const SyncGroupSessionReadResponse*>(
               &_SyncGroupSessionReadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SyncGroupSessionReadResponse* other);
  friend void swap(SyncGroupSessionReadResponse& a, SyncGroupSessionReadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncGroupSessionReadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncGroupSessionReadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncGroupSessionReadResponse& from);
  void MergeFrom(const SyncGroupSessionReadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncGroupSessionReadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 read_guid = 2;
  void clear_read_guid();
  static const int kReadGuidFieldNumber = 2;
  ::google::protobuf::int64 read_guid() const;
  void set_read_guid(::google::protobuf::int64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.SyncGroupSessionReadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 read_guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncGroupSessionReadResponseImpl();
};
// -------------------------------------------------------------------

class ChatMessageRemoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.ChatMessageRemoveRequest) */ {
 public:
  ChatMessageRemoveRequest();
  virtual ~ChatMessageRemoveRequest();

  ChatMessageRemoveRequest(const ChatMessageRemoveRequest& from);

  inline ChatMessageRemoveRequest& operator=(const ChatMessageRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMessageRemoveRequest(ChatMessageRemoveRequest&& from) noexcept
    : ChatMessageRemoveRequest() {
    *this = ::std::move(from);
  }

  inline ChatMessageRemoveRequest& operator=(ChatMessageRemoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessageRemoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const ChatMessageRemoveRequest*>(
               &_ChatMessageRemoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ChatMessageRemoveRequest* other);
  friend void swap(ChatMessageRemoveRequest& a, ChatMessageRemoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageRemoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMessageRemoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMessageRemoveRequest& from);
  void MergeFrom(const ChatMessageRemoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMessageRemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 4;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string to_username = 3;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 3;
  const ::std::string& to_username() const;
  void set_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(::std::string&& value);
  #endif
  void set_to_username(const char* value);
  void set_to_username(const char* value, size_t size);
  ::std::string* mutable_to_username();
  ::std::string* release_to_username();
  void set_allocated_to_username(::std::string* to_username);

  // bool remove_session = 5;
  void clear_remove_session();
  static const int kRemoveSessionFieldNumber = 5;
  bool remove_session() const;
  void set_remove_session(bool value);

  // @@protoc_insertion_point(class_scope:outer.history.ChatMessageRemoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr to_username_;
  bool remove_session_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatMessageRemoveRequestImpl();
};
// -------------------------------------------------------------------

class GroupMessageRemoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.GroupMessageRemoveRequest) */ {
 public:
  GroupMessageRemoveRequest();
  virtual ~GroupMessageRemoveRequest();

  GroupMessageRemoveRequest(const GroupMessageRemoveRequest& from);

  inline GroupMessageRemoveRequest& operator=(const GroupMessageRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupMessageRemoveRequest(GroupMessageRemoveRequest&& from) noexcept
    : GroupMessageRemoveRequest() {
    *this = ::std::move(from);
  }

  inline GroupMessageRemoveRequest& operator=(GroupMessageRemoveRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMessageRemoveRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupMessageRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const GroupMessageRemoveRequest*>(
               &_GroupMessageRemoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GroupMessageRemoveRequest* other);
  friend void swap(GroupMessageRemoveRequest& a, GroupMessageRemoveRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupMessageRemoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupMessageRemoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupMessageRemoveRequest& from);
  void MergeFrom(const GroupMessageRemoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupMessageRemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 4;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string uri = 3;
  void clear_uri();
  static const int kUriFieldNumber = 3;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // @@protoc_insertion_point(class_scope:outer.history.GroupMessageRemoveRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsGroupMessageRemoveRequestImpl();
};
// -------------------------------------------------------------------

class MessageRemoveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.MessageRemoveResponse) */ {
 public:
  MessageRemoveResponse();
  virtual ~MessageRemoveResponse();

  MessageRemoveResponse(const MessageRemoveResponse& from);

  inline MessageRemoveResponse& operator=(const MessageRemoveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageRemoveResponse(MessageRemoveResponse&& from) noexcept
    : MessageRemoveResponse() {
    *this = ::std::move(from);
  }

  inline MessageRemoveResponse& operator=(MessageRemoveResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRemoveResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageRemoveResponse* internal_default_instance() {
    return reinterpret_cast<const MessageRemoveResponse*>(
               &_MessageRemoveResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(MessageRemoveResponse* other);
  friend void swap(MessageRemoveResponse& a, MessageRemoveResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageRemoveResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageRemoveResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageRemoveResponse& from);
  void MergeFrom(const MessageRemoveResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageRemoveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.MessageRemoveResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsMessageRemoveResponseImpl();
};
// -------------------------------------------------------------------

class SyncSendGUIDRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncSendGUIDRequest) */ {
 public:
  SyncSendGUIDRequest();
  virtual ~SyncSendGUIDRequest();

  SyncSendGUIDRequest(const SyncSendGUIDRequest& from);

  inline SyncSendGUIDRequest& operator=(const SyncSendGUIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncSendGUIDRequest(SyncSendGUIDRequest&& from) noexcept
    : SyncSendGUIDRequest() {
    *this = ::std::move(from);
  }

  inline SyncSendGUIDRequest& operator=(SyncSendGUIDRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncSendGUIDRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncSendGUIDRequest* internal_default_instance() {
    return reinterpret_cast<const SyncSendGUIDRequest*>(
               &_SyncSendGUIDRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SyncSendGUIDRequest* other);
  friend void swap(SyncSendGUIDRequest& a, SyncSendGUIDRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncSendGUIDRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncSendGUIDRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncSendGUIDRequest& from);
  void MergeFrom(const SyncSendGUIDRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncSendGUIDRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // @@protoc_insertion_point(class_scope:outer.history.SyncSendGUIDRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDRequestImpl();
};
// -------------------------------------------------------------------

class SyncSendGUIDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncSendGUIDResponse) */ {
 public:
  SyncSendGUIDResponse();
  virtual ~SyncSendGUIDResponse();

  SyncSendGUIDResponse(const SyncSendGUIDResponse& from);

  inline SyncSendGUIDResponse& operator=(const SyncSendGUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncSendGUIDResponse(SyncSendGUIDResponse&& from) noexcept
    : SyncSendGUIDResponse() {
    *this = ::std::move(from);
  }

  inline SyncSendGUIDResponse& operator=(SyncSendGUIDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncSendGUIDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncSendGUIDResponse* internal_default_instance() {
    return reinterpret_cast<const SyncSendGUIDResponse*>(
               &_SyncSendGUIDResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SyncSendGUIDResponse* other);
  friend void swap(SyncSendGUIDResponse& a, SyncSendGUIDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncSendGUIDResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncSendGUIDResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncSendGUIDResponse& from);
  void MergeFrom(const SyncSendGUIDResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncSendGUIDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 send_guid = 2;
  void clear_send_guid();
  static const int kSendGuidFieldNumber = 2;
  ::google::protobuf::uint64 send_guid() const;
  void set_send_guid(::google::protobuf::uint64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.SyncSendGUIDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 send_guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncSendGUIDResponseImpl();
};
// -------------------------------------------------------------------

class SyncReceivedGUIDRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncReceivedGUIDRequest) */ {
 public:
  SyncReceivedGUIDRequest();
  virtual ~SyncReceivedGUIDRequest();

  SyncReceivedGUIDRequest(const SyncReceivedGUIDRequest& from);

  inline SyncReceivedGUIDRequest& operator=(const SyncReceivedGUIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncReceivedGUIDRequest(SyncReceivedGUIDRequest&& from) noexcept
    : SyncReceivedGUIDRequest() {
    *this = ::std::move(from);
  }

  inline SyncReceivedGUIDRequest& operator=(SyncReceivedGUIDRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncReceivedGUIDRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncReceivedGUIDRequest* internal_default_instance() {
    return reinterpret_cast<const SyncReceivedGUIDRequest*>(
               &_SyncReceivedGUIDRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SyncReceivedGUIDRequest* other);
  friend void swap(SyncReceivedGUIDRequest& a, SyncReceivedGUIDRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncReceivedGUIDRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncReceivedGUIDRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncReceivedGUIDRequest& from);
  void MergeFrom(const SyncReceivedGUIDRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncReceivedGUIDRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // @@protoc_insertion_point(class_scope:outer.history.SyncReceivedGUIDRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDRequestImpl();
};
// -------------------------------------------------------------------

class SyncReceivedGUIDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SyncReceivedGUIDResponse) */ {
 public:
  SyncReceivedGUIDResponse();
  virtual ~SyncReceivedGUIDResponse();

  SyncReceivedGUIDResponse(const SyncReceivedGUIDResponse& from);

  inline SyncReceivedGUIDResponse& operator=(const SyncReceivedGUIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncReceivedGUIDResponse(SyncReceivedGUIDResponse&& from) noexcept
    : SyncReceivedGUIDResponse() {
    *this = ::std::move(from);
  }

  inline SyncReceivedGUIDResponse& operator=(SyncReceivedGUIDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncReceivedGUIDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncReceivedGUIDResponse* internal_default_instance() {
    return reinterpret_cast<const SyncReceivedGUIDResponse*>(
               &_SyncReceivedGUIDResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SyncReceivedGUIDResponse* other);
  friend void swap(SyncReceivedGUIDResponse& a, SyncReceivedGUIDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncReceivedGUIDResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncReceivedGUIDResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncReceivedGUIDResponse& from);
  void MergeFrom(const SyncReceivedGUIDResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncReceivedGUIDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 received_guid = 2;
  void clear_received_guid();
  static const int kReceivedGuidFieldNumber = 2;
  ::google::protobuf::uint64 received_guid() const;
  void set_received_guid(::google::protobuf::uint64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.SyncReceivedGUIDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 received_guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSyncReceivedGUIDResponseImpl();
};
// -------------------------------------------------------------------

class FleetHistoryMessageGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.FleetHistoryMessageGetRequest) */ {
 public:
  FleetHistoryMessageGetRequest();
  virtual ~FleetHistoryMessageGetRequest();

  FleetHistoryMessageGetRequest(const FleetHistoryMessageGetRequest& from);

  inline FleetHistoryMessageGetRequest& operator=(const FleetHistoryMessageGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FleetHistoryMessageGetRequest(FleetHistoryMessageGetRequest&& from) noexcept
    : FleetHistoryMessageGetRequest() {
    *this = ::std::move(from);
  }

  inline FleetHistoryMessageGetRequest& operator=(FleetHistoryMessageGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FleetHistoryMessageGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FleetHistoryMessageGetRequest* internal_default_instance() {
    return reinterpret_cast<const FleetHistoryMessageGetRequest*>(
               &_FleetHistoryMessageGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(FleetHistoryMessageGetRequest* other);
  friend void swap(FleetHistoryMessageGetRequest& a, FleetHistoryMessageGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FleetHistoryMessageGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FleetHistoryMessageGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FleetHistoryMessageGetRequest& from);
  void MergeFrom(const FleetHistoryMessageGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FleetHistoryMessageGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fleet_uri = 1;
  void clear_fleet_uri();
  static const int kFleetUriFieldNumber = 1;
  const ::std::string& fleet_uri() const;
  void set_fleet_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_fleet_uri(::std::string&& value);
  #endif
  void set_fleet_uri(const char* value);
  void set_fleet_uri(const char* value, size_t size);
  ::std::string* mutable_fleet_uri();
  ::std::string* release_fleet_uri();
  void set_allocated_fleet_uri(::std::string* fleet_uri);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 begin_guid = 4;
  void clear_begin_guid();
  static const int kBeginGuidFieldNumber = 4;
  ::google::protobuf::uint64 begin_guid() const;
  void set_begin_guid(::google::protobuf::uint64 value);

  // uint32 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:outer.history.FleetHistoryMessageGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fleet_uri_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 begin_guid_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsFleetHistoryMessageGetRequestImpl();
};
// -------------------------------------------------------------------

class ContactInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.ContactInfo) */ {
 public:
  ContactInfo();
  virtual ~ContactInfo();

  ContactInfo(const ContactInfo& from);

  inline ContactInfo& operator=(const ContactInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactInfo(ContactInfo&& from) noexcept
    : ContactInfo() {
    *this = ::std::move(from);
  }

  inline ContactInfo& operator=(ContactInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ContactInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactInfo* internal_default_instance() {
    return reinterpret_cast<const ContactInfo*>(
               &_ContactInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ContactInfo* other);
  friend void swap(ContactInfo& a, ContactInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ContactInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContactInfo& from);
  void MergeFrom(const ContactInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContactInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string contact_username = 2;
  void clear_contact_username();
  static const int kContactUsernameFieldNumber = 2;
  const ::std::string& contact_username() const;
  void set_contact_username(const ::std::string& value);
  #if LANG_CXX11
  void set_contact_username(::std::string&& value);
  #endif
  void set_contact_username(const char* value);
  void set_contact_username(const char* value, size_t size);
  ::std::string* mutable_contact_username();
  ::std::string* release_contact_username();
  void set_allocated_contact_username(::std::string* contact_username);

  // string contact_nick = 3;
  void clear_contact_nick();
  static const int kContactNickFieldNumber = 3;
  const ::std::string& contact_nick() const;
  void set_contact_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_contact_nick(::std::string&& value);
  #endif
  void set_contact_nick(const char* value);
  void set_contact_nick(const char* value, size_t size);
  ::std::string* mutable_contact_nick();
  ::std::string* release_contact_nick();
  void set_allocated_contact_nick(::std::string* contact_nick);

  // string contact_display = 4;
  void clear_contact_display();
  static const int kContactDisplayFieldNumber = 4;
  const ::std::string& contact_display() const;
  void set_contact_display(const ::std::string& value);
  #if LANG_CXX11
  void set_contact_display(::std::string&& value);
  #endif
  void set_contact_display(const char* value);
  void set_contact_display(const char* value, size_t size);
  ::std::string* mutable_contact_display();
  ::std::string* release_contact_display();
  void set_allocated_contact_display(::std::string* contact_display);

  // string original_link = 5;
  void clear_original_link();
  static const int kOriginalLinkFieldNumber = 5;
  const ::std::string& original_link() const;
  void set_original_link(const ::std::string& value);
  #if LANG_CXX11
  void set_original_link(::std::string&& value);
  #endif
  void set_original_link(const char* value);
  void set_original_link(const char* value, size_t size);
  ::std::string* mutable_original_link();
  ::std::string* release_original_link();
  void set_allocated_original_link(::std::string* original_link);

  // string thumbnail_link = 6;
  void clear_thumbnail_link();
  static const int kThumbnailLinkFieldNumber = 6;
  const ::std::string& thumbnail_link() const;
  void set_thumbnail_link(const ::std::string& value);
  #if LANG_CXX11
  void set_thumbnail_link(::std::string&& value);
  #endif
  void set_thumbnail_link(const char* value);
  void set_thumbnail_link(const char* value, size_t size);
  ::std::string* mutable_thumbnail_link();
  ::std::string* release_thumbnail_link();
  void set_allocated_thumbnail_link(::std::string* thumbnail_link);

  // string phone = 10;
  void clear_phone();
  static const int kPhoneFieldNumber = 10;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // uint64 modified = 8;
  void clear_modified();
  static const int kModifiedFieldNumber = 8;
  ::google::protobuf::uint64 modified() const;
  void set_modified(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.ContactInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr contact_username_;
  ::google::protobuf::internal::ArenaStringPtr contact_nick_;
  ::google::protobuf::internal::ArenaStringPtr contact_display_;
  ::google::protobuf::internal::ArenaStringPtr original_link_;
  ::google::protobuf::internal::ArenaStringPtr thumbnail_link_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::uint64 modified_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsContactInfoImpl();
};
// -------------------------------------------------------------------

class GetLatestContactRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.GetLatestContactRequest) */ {
 public:
  GetLatestContactRequest();
  virtual ~GetLatestContactRequest();

  GetLatestContactRequest(const GetLatestContactRequest& from);

  inline GetLatestContactRequest& operator=(const GetLatestContactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetLatestContactRequest(GetLatestContactRequest&& from) noexcept
    : GetLatestContactRequest() {
    *this = ::std::move(from);
  }

  inline GetLatestContactRequest& operator=(GetLatestContactRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLatestContactRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLatestContactRequest* internal_default_instance() {
    return reinterpret_cast<const GetLatestContactRequest*>(
               &_GetLatestContactRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetLatestContactRequest* other);
  friend void swap(GetLatestContactRequest& a, GetLatestContactRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLatestContactRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLatestContactRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLatestContactRequest& from);
  void MergeFrom(const GetLatestContactRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLatestContactRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:outer.history.GetLatestContactRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactRequestImpl();
};
// -------------------------------------------------------------------

class GetLatestContactResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.GetLatestContactResponse) */ {
 public:
  GetLatestContactResponse();
  virtual ~GetLatestContactResponse();

  GetLatestContactResponse(const GetLatestContactResponse& from);

  inline GetLatestContactResponse& operator=(const GetLatestContactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetLatestContactResponse(GetLatestContactResponse&& from) noexcept
    : GetLatestContactResponse() {
    *this = ::std::move(from);
  }

  inline GetLatestContactResponse& operator=(GetLatestContactResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLatestContactResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLatestContactResponse* internal_default_instance() {
    return reinterpret_cast<const GetLatestContactResponse*>(
               &_GetLatestContactResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetLatestContactResponse* other);
  friend void swap(GetLatestContactResponse& a, GetLatestContactResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLatestContactResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLatestContactResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLatestContactResponse& from);
  void MergeFrom(const GetLatestContactResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLatestContactResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.history.ContactInfo contact_info = 2;
  int contact_info_size() const;
  void clear_contact_info();
  static const int kContactInfoFieldNumber = 2;
  const ::outer::history::ContactInfo& contact_info(int index) const;
  ::outer::history::ContactInfo* mutable_contact_info(int index);
  ::outer::history::ContactInfo* add_contact_info();
  ::google::protobuf::RepeatedPtrField< ::outer::history::ContactInfo >*
      mutable_contact_info();
  const ::google::protobuf::RepeatedPtrField< ::outer::history::ContactInfo >&
      contact_info() const;

  // repeated .common.msg.MessageUnit message = 3;
  int message_size() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::common::msg::MessageUnit& message(int index) const;
  ::common::msg::MessageUnit* mutable_message(int index);
  ::common::msg::MessageUnit* add_message();
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
      mutable_message();
  const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
      message() const;

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.GetLatestContactResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::history::ContactInfo > contact_info_;
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit > message_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsGetLatestContactResponseImpl();
};
// -------------------------------------------------------------------

class SingleMessageSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SingleMessageSyncRequest) */ {
 public:
  SingleMessageSyncRequest();
  virtual ~SingleMessageSyncRequest();

  SingleMessageSyncRequest(const SingleMessageSyncRequest& from);

  inline SingleMessageSyncRequest& operator=(const SingleMessageSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SingleMessageSyncRequest(SingleMessageSyncRequest&& from) noexcept
    : SingleMessageSyncRequest() {
    *this = ::std::move(from);
  }

  inline SingleMessageSyncRequest& operator=(SingleMessageSyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleMessageSyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleMessageSyncRequest* internal_default_instance() {
    return reinterpret_cast<const SingleMessageSyncRequest*>(
               &_SingleMessageSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SingleMessageSyncRequest* other);
  friend void swap(SingleMessageSyncRequest& a, SingleMessageSyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SingleMessageSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SingleMessageSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SingleMessageSyncRequest& from);
  void MergeFrom(const SingleMessageSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SingleMessageSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string username = 3;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.SingleMessageSyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncRequestImpl();
};
// -------------------------------------------------------------------

class SingleMessageSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.SingleMessageSyncResponse) */ {
 public:
  SingleMessageSyncResponse();
  virtual ~SingleMessageSyncResponse();

  SingleMessageSyncResponse(const SingleMessageSyncResponse& from);

  inline SingleMessageSyncResponse& operator=(const SingleMessageSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SingleMessageSyncResponse(SingleMessageSyncResponse&& from) noexcept
    : SingleMessageSyncResponse() {
    *this = ::std::move(from);
  }

  inline SingleMessageSyncResponse& operator=(SingleMessageSyncResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleMessageSyncResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleMessageSyncResponse* internal_default_instance() {
    return reinterpret_cast<const SingleMessageSyncResponse*>(
               &_SingleMessageSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SingleMessageSyncResponse* other);
  friend void swap(SingleMessageSyncResponse& a, SingleMessageSyncResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SingleMessageSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SingleMessageSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SingleMessageSyncResponse& from);
  void MergeFrom(const SingleMessageSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SingleMessageSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common.msg.MessageUnit unit = 2;
  bool has_unit() const;
  void clear_unit();
  static const int kUnitFieldNumber = 2;
  const ::common::msg::MessageUnit& unit() const;
  ::common::msg::MessageUnit* release_unit();
  ::common::msg::MessageUnit* mutable_unit();
  void set_allocated_unit(::common::msg::MessageUnit* unit);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.SingleMessageSyncResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common::msg::MessageUnit* unit_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsSingleMessageSyncResponseImpl();
};
// -------------------------------------------------------------------

class OfflineCustomMessageSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.OfflineCustomMessageSyncRequest) */ {
 public:
  OfflineCustomMessageSyncRequest();
  virtual ~OfflineCustomMessageSyncRequest();

  OfflineCustomMessageSyncRequest(const OfflineCustomMessageSyncRequest& from);

  inline OfflineCustomMessageSyncRequest& operator=(const OfflineCustomMessageSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineCustomMessageSyncRequest(OfflineCustomMessageSyncRequest&& from) noexcept
    : OfflineCustomMessageSyncRequest() {
    *this = ::std::move(from);
  }

  inline OfflineCustomMessageSyncRequest& operator=(OfflineCustomMessageSyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineCustomMessageSyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OfflineCustomMessageSyncRequest* internal_default_instance() {
    return reinterpret_cast<const OfflineCustomMessageSyncRequest*>(
               &_OfflineCustomMessageSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(OfflineCustomMessageSyncRequest* other);
  friend void swap(OfflineCustomMessageSyncRequest& a, OfflineCustomMessageSyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineCustomMessageSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineCustomMessageSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineCustomMessageSyncRequest& from);
  void MergeFrom(const OfflineCustomMessageSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineCustomMessageSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 modified_timestamp = 5;
  void clear_modified_timestamp();
  static const int kModifiedTimestampFieldNumber = 5;
  ::google::protobuf::uint64 modified_timestamp() const;
  void set_modified_timestamp(::google::protobuf::uint64 value);

  // bool sor = 4;
  void clear_sor();
  static const int kSorFieldNumber = 4;
  bool sor() const;
  void set_sor(bool value);

  // uint32 limit = 6;
  void clear_limit();
  static const int kLimitFieldNumber = 6;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:outer.history.OfflineCustomMessageSyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 modified_timestamp_;
  bool sor_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsOfflineCustomMessageSyncRequestImpl();
};
// -------------------------------------------------------------------

class ChatHistoryMessageUnRegistGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.ChatHistoryMessageUnRegistGetRequest) */ {
 public:
  ChatHistoryMessageUnRegistGetRequest();
  virtual ~ChatHistoryMessageUnRegistGetRequest();

  ChatHistoryMessageUnRegistGetRequest(const ChatHistoryMessageUnRegistGetRequest& from);

  inline ChatHistoryMessageUnRegistGetRequest& operator=(const ChatHistoryMessageUnRegistGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHistoryMessageUnRegistGetRequest(ChatHistoryMessageUnRegistGetRequest&& from) noexcept
    : ChatHistoryMessageUnRegistGetRequest() {
    *this = ::std::move(from);
  }

  inline ChatHistoryMessageUnRegistGetRequest& operator=(ChatHistoryMessageUnRegistGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHistoryMessageUnRegistGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatHistoryMessageUnRegistGetRequest* internal_default_instance() {
    return reinterpret_cast<const ChatHistoryMessageUnRegistGetRequest*>(
               &_ChatHistoryMessageUnRegistGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ChatHistoryMessageUnRegistGetRequest* other);
  friend void swap(ChatHistoryMessageUnRegistGetRequest& a, ChatHistoryMessageUnRegistGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHistoryMessageUnRegistGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHistoryMessageUnRegistGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHistoryMessageUnRegistGetRequest& from);
  void MergeFrom(const ChatHistoryMessageUnRegistGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHistoryMessageUnRegistGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_username = 1;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 1;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string to_phone = 2;
  void clear_to_phone();
  static const int kToPhoneFieldNumber = 2;
  const ::std::string& to_phone() const;
  void set_to_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_to_phone(::std::string&& value);
  #endif
  void set_to_phone(const char* value);
  void set_to_phone(const char* value, size_t size);
  ::std::string* mutable_to_phone();
  ::std::string* release_to_phone();
  void set_allocated_to_phone(::std::string* to_phone);

  // string appkey = 5;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 5;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // uint64 begin_guid = 3;
  void clear_begin_guid();
  static const int kBeginGuidFieldNumber = 3;
  ::google::protobuf::uint64 begin_guid() const;
  void set_begin_guid(::google::protobuf::uint64 value);

  // uint32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // .outer.history.END_TYPE type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::outer::history::END_TYPE type() const;
  void set_type(::outer::history::END_TYPE value);

  // @@protoc_insertion_point(class_scope:outer.history.ChatHistoryMessageUnRegistGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr to_phone_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::uint64 begin_guid_;
  ::google::protobuf::uint32 limit_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetRequestImpl();
};
// -------------------------------------------------------------------

class ChatHistoryMessageUnRegistGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.ChatHistoryMessageUnRegistGetResponse) */ {
 public:
  ChatHistoryMessageUnRegistGetResponse();
  virtual ~ChatHistoryMessageUnRegistGetResponse();

  ChatHistoryMessageUnRegistGetResponse(const ChatHistoryMessageUnRegistGetResponse& from);

  inline ChatHistoryMessageUnRegistGetResponse& operator=(const ChatHistoryMessageUnRegistGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHistoryMessageUnRegistGetResponse(ChatHistoryMessageUnRegistGetResponse&& from) noexcept
    : ChatHistoryMessageUnRegistGetResponse() {
    *this = ::std::move(from);
  }

  inline ChatHistoryMessageUnRegistGetResponse& operator=(ChatHistoryMessageUnRegistGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHistoryMessageUnRegistGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatHistoryMessageUnRegistGetResponse* internal_default_instance() {
    return reinterpret_cast<const ChatHistoryMessageUnRegistGetResponse*>(
               &_ChatHistoryMessageUnRegistGetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ChatHistoryMessageUnRegistGetResponse* other);
  friend void swap(ChatHistoryMessageUnRegistGetResponse& a, ChatHistoryMessageUnRegistGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHistoryMessageUnRegistGetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHistoryMessageUnRegistGetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHistoryMessageUnRegistGetResponse& from);
  void MergeFrom(const ChatHistoryMessageUnRegistGetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHistoryMessageUnRegistGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes messageListJson = 1;
  void clear_messagelistjson();
  static const int kMessageListJsonFieldNumber = 1;
  const ::std::string& messagelistjson() const;
  void set_messagelistjson(const ::std::string& value);
  #if LANG_CXX11
  void set_messagelistjson(::std::string&& value);
  #endif
  void set_messagelistjson(const char* value);
  void set_messagelistjson(const void* value, size_t size);
  ::std::string* mutable_messagelistjson();
  ::std::string* release_messagelistjson();
  void set_allocated_messagelistjson(::std::string* messagelistjson);

  // @@protoc_insertion_point(class_scope:outer.history.ChatHistoryMessageUnRegistGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr messagelistjson_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsChatHistoryMessageUnRegistGetResponseImpl();
};
// -------------------------------------------------------------------

class CountMessageUnRegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.CountMessageUnRegisterRequest) */ {
 public:
  CountMessageUnRegisterRequest();
  virtual ~CountMessageUnRegisterRequest();

  CountMessageUnRegisterRequest(const CountMessageUnRegisterRequest& from);

  inline CountMessageUnRegisterRequest& operator=(const CountMessageUnRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountMessageUnRegisterRequest(CountMessageUnRegisterRequest&& from) noexcept
    : CountMessageUnRegisterRequest() {
    *this = ::std::move(from);
  }

  inline CountMessageUnRegisterRequest& operator=(CountMessageUnRegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CountMessageUnRegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountMessageUnRegisterRequest* internal_default_instance() {
    return reinterpret_cast<const CountMessageUnRegisterRequest*>(
               &_CountMessageUnRegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CountMessageUnRegisterRequest* other);
  friend void swap(CountMessageUnRegisterRequest& a, CountMessageUnRegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountMessageUnRegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CountMessageUnRegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CountMessageUnRegisterRequest& from);
  void MergeFrom(const CountMessageUnRegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CountMessageUnRegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string unregiger_phone = 1;
  void clear_unregiger_phone();
  static const int kUnregigerPhoneFieldNumber = 1;
  const ::std::string& unregiger_phone() const;
  void set_unregiger_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_unregiger_phone(::std::string&& value);
  #endif
  void set_unregiger_phone(const char* value);
  void set_unregiger_phone(const char* value, size_t size);
  ::std::string* mutable_unregiger_phone();
  ::std::string* release_unregiger_phone();
  void set_allocated_unregiger_phone(::std::string* unregiger_phone);

  // string app_key = 2;
  void clear_app_key();
  static const int kAppKeyFieldNumber = 2;
  const ::std::string& app_key() const;
  void set_app_key(const ::std::string& value);
  #if LANG_CXX11
  void set_app_key(::std::string&& value);
  #endif
  void set_app_key(const char* value);
  void set_app_key(const char* value, size_t size);
  ::std::string* mutable_app_key();
  ::std::string* release_app_key();
  void set_allocated_app_key(::std::string* app_key);

  // string platform_user_name = 3;
  void clear_platform_user_name();
  static const int kPlatformUserNameFieldNumber = 3;
  const ::std::string& platform_user_name() const;
  void set_platform_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_platform_user_name(::std::string&& value);
  #endif
  void set_platform_user_name(const char* value);
  void set_platform_user_name(const char* value, size_t size);
  ::std::string* mutable_platform_user_name();
  ::std::string* release_platform_user_name();
  void set_allocated_platform_user_name(::std::string* platform_user_name);

  // uint64 start_time = 4;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint64 start_time() const;
  void set_start_time(::google::protobuf::uint64 value);

  // uint64 end_time = 5;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint64 end_time() const;
  void set_end_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.CountMessageUnRegisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr unregiger_phone_;
  ::google::protobuf::internal::ArenaStringPtr app_key_;
  ::google::protobuf::internal::ArenaStringPtr platform_user_name_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 end_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterRequestImpl();
};
// -------------------------------------------------------------------

class CountMessageUnRegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.CountMessageUnRegisterResponse) */ {
 public:
  CountMessageUnRegisterResponse();
  virtual ~CountMessageUnRegisterResponse();

  CountMessageUnRegisterResponse(const CountMessageUnRegisterResponse& from);

  inline CountMessageUnRegisterResponse& operator=(const CountMessageUnRegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CountMessageUnRegisterResponse(CountMessageUnRegisterResponse&& from) noexcept
    : CountMessageUnRegisterResponse() {
    *this = ::std::move(from);
  }

  inline CountMessageUnRegisterResponse& operator=(CountMessageUnRegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CountMessageUnRegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CountMessageUnRegisterResponse* internal_default_instance() {
    return reinterpret_cast<const CountMessageUnRegisterResponse*>(
               &_CountMessageUnRegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CountMessageUnRegisterResponse* other);
  friend void swap(CountMessageUnRegisterResponse& a, CountMessageUnRegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CountMessageUnRegisterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CountMessageUnRegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CountMessageUnRegisterResponse& from);
  void MergeFrom(const CountMessageUnRegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CountMessageUnRegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.CountMessageUnRegisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsCountMessageUnRegisterResponseImpl();
};
// -------------------------------------------------------------------

class MergeMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.MergeMessageRequest) */ {
 public:
  MergeMessageRequest();
  virtual ~MergeMessageRequest();

  MergeMessageRequest(const MergeMessageRequest& from);

  inline MergeMessageRequest& operator=(const MergeMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeMessageRequest(MergeMessageRequest&& from) noexcept
    : MergeMessageRequest() {
    *this = ::std::move(from);
  }

  inline MergeMessageRequest& operator=(MergeMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeMessageRequest* internal_default_instance() {
    return reinterpret_cast<const MergeMessageRequest*>(
               &_MergeMessageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(MergeMessageRequest* other);
  friend void swap(MergeMessageRequest& a, MergeMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeMessageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MergeMessageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MergeMessageRequest& from);
  void MergeFrom(const MergeMessageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MergeMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.history.MergeMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageRequestImpl();
};
// -------------------------------------------------------------------

class MergeMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.history.MergeMessageResponse) */ {
 public:
  MergeMessageResponse();
  virtual ~MergeMessageResponse();

  MergeMessageResponse(const MergeMessageResponse& from);

  inline MergeMessageResponse& operator=(const MergeMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeMessageResponse(MergeMessageResponse&& from) noexcept
    : MergeMessageResponse() {
    *this = ::std::move(from);
  }

  inline MergeMessageResponse& operator=(MergeMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeMessageResponse* internal_default_instance() {
    return reinterpret_cast<const MergeMessageResponse*>(
               &_MergeMessageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(MergeMessageResponse* other);
  friend void swap(MergeMessageResponse& a, MergeMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeMessageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  MergeMessageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MergeMessageResponse& from);
  void MergeFrom(const MergeMessageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MergeMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.msg.MessageUnit data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::common::msg::MessageUnit& data(int index) const;
  ::common::msg::MessageUnit* mutable_data(int index);
  ::common::msg::MessageUnit* add_data();
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
      data() const;

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.history.MergeMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit > data_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fhistory_2eproto::TableStruct;
  friend void ::protobuf_outer_2fhistory_2eproto::InitDefaultsMergeMessageResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChatHistoryMessageGetRequest

// string from_username = 1;
inline void ChatHistoryMessageGetRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageGetRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.from_username)
  return from_username_.GetNoArena();
}
inline void ChatHistoryMessageGetRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.from_username)
}
#if LANG_CXX11
inline void ChatHistoryMessageGetRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageGetRequest.from_username)
}
#endif
inline void ChatHistoryMessageGetRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageGetRequest.from_username)
}
inline void ChatHistoryMessageGetRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageGetRequest.from_username)
}
inline ::std::string* ChatHistoryMessageGetRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageGetRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageGetRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageGetRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageGetRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageGetRequest.from_username)
}

// string to_username = 2;
inline void ChatHistoryMessageGetRequest::clear_to_username() {
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageGetRequest::to_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.to_username)
  return to_username_.GetNoArena();
}
inline void ChatHistoryMessageGetRequest::set_to_username(const ::std::string& value) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.to_username)
}
#if LANG_CXX11
inline void ChatHistoryMessageGetRequest::set_to_username(::std::string&& value) {
  
  to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageGetRequest.to_username)
}
#endif
inline void ChatHistoryMessageGetRequest::set_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageGetRequest.to_username)
}
inline void ChatHistoryMessageGetRequest::set_to_username(const char* value, size_t size) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageGetRequest.to_username)
}
inline ::std::string* ChatHistoryMessageGetRequest::mutable_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageGetRequest.to_username)
  return to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageGetRequest::release_to_username() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageGetRequest.to_username)
  
  return to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageGetRequest::set_allocated_to_username(::std::string* to_username) {
  if (to_username != NULL) {
    
  } else {
    
  }
  to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageGetRequest.to_username)
}

// uint64 begin_guid = 3;
inline void ChatHistoryMessageGetRequest::clear_begin_guid() {
  begin_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatHistoryMessageGetRequest::begin_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.begin_guid)
  return begin_guid_;
}
inline void ChatHistoryMessageGetRequest::set_begin_guid(::google::protobuf::uint64 value) {
  
  begin_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.begin_guid)
}

// uint32 limit = 4;
inline void ChatHistoryMessageGetRequest::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 ChatHistoryMessageGetRequest::limit() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.limit)
  return limit_;
}
inline void ChatHistoryMessageGetRequest::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.limit)
}

// string appkey = 5;
inline void ChatHistoryMessageGetRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageGetRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ChatHistoryMessageGetRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.appkey)
}
#if LANG_CXX11
inline void ChatHistoryMessageGetRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageGetRequest.appkey)
}
#endif
inline void ChatHistoryMessageGetRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageGetRequest.appkey)
}
inline void ChatHistoryMessageGetRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageGetRequest.appkey)
}
inline ::std::string* ChatHistoryMessageGetRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageGetRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageGetRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageGetRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageGetRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageGetRequest.appkey)
}

// .outer.history.END_TYPE type = 6;
inline void ChatHistoryMessageGetRequest::clear_type() {
  type_ = 0;
}
inline ::outer::history::END_TYPE ChatHistoryMessageGetRequest::type() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageGetRequest.type)
  return static_cast< ::outer::history::END_TYPE >(type_);
}
inline void ChatHistoryMessageGetRequest::set_type(::outer::history::END_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageGetRequest.type)
}

// -------------------------------------------------------------------

// GroupHistoryMessageGetRequest

// string group_uri = 1;
inline void GroupHistoryMessageGetRequest::clear_group_uri() {
  group_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupHistoryMessageGetRequest::group_uri() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupHistoryMessageGetRequest.group_uri)
  return group_uri_.GetNoArena();
}
inline void GroupHistoryMessageGetRequest::set_group_uri(const ::std::string& value) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupHistoryMessageGetRequest.group_uri)
}
#if LANG_CXX11
inline void GroupHistoryMessageGetRequest::set_group_uri(::std::string&& value) {
  
  group_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupHistoryMessageGetRequest.group_uri)
}
#endif
inline void GroupHistoryMessageGetRequest::set_group_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupHistoryMessageGetRequest.group_uri)
}
inline void GroupHistoryMessageGetRequest::set_group_uri(const char* value, size_t size) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupHistoryMessageGetRequest.group_uri)
}
inline ::std::string* GroupHistoryMessageGetRequest::mutable_group_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupHistoryMessageGetRequest.group_uri)
  return group_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupHistoryMessageGetRequest::release_group_uri() {
  // @@protoc_insertion_point(field_release:outer.history.GroupHistoryMessageGetRequest.group_uri)
  
  return group_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupHistoryMessageGetRequest::set_allocated_group_uri(::std::string* group_uri) {
  if (group_uri != NULL) {
    
  } else {
    
  }
  group_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_uri);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupHistoryMessageGetRequest.group_uri)
}

// string from_username = 2;
inline void GroupHistoryMessageGetRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupHistoryMessageGetRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupHistoryMessageGetRequest.from_username)
  return from_username_.GetNoArena();
}
inline void GroupHistoryMessageGetRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupHistoryMessageGetRequest.from_username)
}
#if LANG_CXX11
inline void GroupHistoryMessageGetRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupHistoryMessageGetRequest.from_username)
}
#endif
inline void GroupHistoryMessageGetRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupHistoryMessageGetRequest.from_username)
}
inline void GroupHistoryMessageGetRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupHistoryMessageGetRequest.from_username)
}
inline ::std::string* GroupHistoryMessageGetRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupHistoryMessageGetRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupHistoryMessageGetRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.GroupHistoryMessageGetRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupHistoryMessageGetRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupHistoryMessageGetRequest.from_username)
}

// string appkey = 3;
inline void GroupHistoryMessageGetRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupHistoryMessageGetRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupHistoryMessageGetRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GroupHistoryMessageGetRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupHistoryMessageGetRequest.appkey)
}
#if LANG_CXX11
inline void GroupHistoryMessageGetRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupHistoryMessageGetRequest.appkey)
}
#endif
inline void GroupHistoryMessageGetRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupHistoryMessageGetRequest.appkey)
}
inline void GroupHistoryMessageGetRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupHistoryMessageGetRequest.appkey)
}
inline ::std::string* GroupHistoryMessageGetRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupHistoryMessageGetRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupHistoryMessageGetRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.GroupHistoryMessageGetRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupHistoryMessageGetRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupHistoryMessageGetRequest.appkey)
}

// uint64 begin_guid = 4;
inline void GroupHistoryMessageGetRequest::clear_begin_guid() {
  begin_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupHistoryMessageGetRequest::begin_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupHistoryMessageGetRequest.begin_guid)
  return begin_guid_;
}
inline void GroupHistoryMessageGetRequest::set_begin_guid(::google::protobuf::uint64 value) {
  
  begin_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.GroupHistoryMessageGetRequest.begin_guid)
}

// uint32 limit = 5;
inline void GroupHistoryMessageGetRequest::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 GroupHistoryMessageGetRequest::limit() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupHistoryMessageGetRequest.limit)
  return limit_;
}
inline void GroupHistoryMessageGetRequest::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:outer.history.GroupHistoryMessageGetRequest.limit)
}

// -------------------------------------------------------------------

// MessageSyncRequest

// uint64 guid = 1;
inline void MessageSyncRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageSyncRequest::guid() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.guid)
  return guid_;
}
inline void MessageSyncRequest::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.guid)
}

// string username = 2;
inline void MessageSyncRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageSyncRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.username)
  return username_.GetNoArena();
}
inline void MessageSyncRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.username)
}
#if LANG_CXX11
inline void MessageSyncRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.MessageSyncRequest.username)
}
#endif
inline void MessageSyncRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.MessageSyncRequest.username)
}
inline void MessageSyncRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.MessageSyncRequest.username)
}
inline ::std::string* MessageSyncRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.MessageSyncRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageSyncRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.MessageSyncRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageSyncRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.MessageSyncRequest.username)
}

// string appkey = 3;
inline void MessageSyncRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageSyncRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.appkey)
  return appkey_.GetNoArena();
}
inline void MessageSyncRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.appkey)
}
#if LANG_CXX11
inline void MessageSyncRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.MessageSyncRequest.appkey)
}
#endif
inline void MessageSyncRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.MessageSyncRequest.appkey)
}
inline void MessageSyncRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.MessageSyncRequest.appkey)
}
inline ::std::string* MessageSyncRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.MessageSyncRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageSyncRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.MessageSyncRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageSyncRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.MessageSyncRequest.appkey)
}

// bool sor = 4;
inline void MessageSyncRequest::clear_sor() {
  sor_ = false;
}
inline bool MessageSyncRequest::sor() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.sor)
  return sor_;
}
inline void MessageSyncRequest::set_sor(bool value) {
  
  sor_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.sor)
}

// .outer.history.END_TYPE type = 5;
inline void MessageSyncRequest::clear_type() {
  type_ = 0;
}
inline ::outer::history::END_TYPE MessageSyncRequest::type() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.type)
  return static_cast< ::outer::history::END_TYPE >(type_);
}
inline void MessageSyncRequest::set_type(::outer::history::END_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.type)
}

// uint64 modified_timestamp = 6;
inline void MessageSyncRequest::clear_modified_timestamp() {
  modified_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageSyncRequest::modified_timestamp() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageSyncRequest.modified_timestamp)
  return modified_timestamp_;
}
inline void MessageSyncRequest::set_modified_timestamp(::google::protobuf::uint64 value) {
  
  modified_timestamp_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MessageSyncRequest.modified_timestamp)
}

// -------------------------------------------------------------------

// MsgGetResponse

// .common.errcode.EErrorCode ret = 1;
inline void MsgGetResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode MsgGetResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.MsgGetResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void MsgGetResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MsgGetResponse.ret)
}

// repeated .common.msg.MessageUnit data = 2;
inline int MsgGetResponse::data_size() const {
  return data_.size();
}
inline const ::common::msg::MessageUnit& MsgGetResponse::data(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.MsgGetResponse.data)
  return data_.Get(index);
}
inline ::common::msg::MessageUnit* MsgGetResponse::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:outer.history.MsgGetResponse.data)
  return data_.Mutable(index);
}
inline ::common::msg::MessageUnit* MsgGetResponse::add_data() {
  // @@protoc_insertion_point(field_add:outer.history.MsgGetResponse.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
MsgGetResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.MsgGetResponse.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
MsgGetResponse::data() const {
  // @@protoc_insertion_point(field_list:outer.history.MsgGetResponse.data)
  return data_;
}

// uint64 modified_timestamp = 6;
inline void MsgGetResponse::clear_modified_timestamp() {
  modified_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgGetResponse::modified_timestamp() const {
  // @@protoc_insertion_point(field_get:outer.history.MsgGetResponse.modified_timestamp)
  return modified_timestamp_;
}
inline void MsgGetResponse::set_modified_timestamp(::google::protobuf::uint64 value) {
  
  modified_timestamp_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MsgGetResponse.modified_timestamp)
}

// -------------------------------------------------------------------

// SyncChatSessionReadRequest

// string appkey = 1;
inline void SyncChatSessionReadRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncChatSessionReadRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncChatSessionReadRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SyncChatSessionReadRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncChatSessionReadRequest.appkey)
}
#if LANG_CXX11
inline void SyncChatSessionReadRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncChatSessionReadRequest.appkey)
}
#endif
inline void SyncChatSessionReadRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncChatSessionReadRequest.appkey)
}
inline void SyncChatSessionReadRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncChatSessionReadRequest.appkey)
}
inline ::std::string* SyncChatSessionReadRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncChatSessionReadRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncChatSessionReadRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.SyncChatSessionReadRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncChatSessionReadRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncChatSessionReadRequest.appkey)
}

// string from_username = 2;
inline void SyncChatSessionReadRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncChatSessionReadRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncChatSessionReadRequest.from_username)
  return from_username_.GetNoArena();
}
inline void SyncChatSessionReadRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncChatSessionReadRequest.from_username)
}
#if LANG_CXX11
inline void SyncChatSessionReadRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncChatSessionReadRequest.from_username)
}
#endif
inline void SyncChatSessionReadRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncChatSessionReadRequest.from_username)
}
inline void SyncChatSessionReadRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncChatSessionReadRequest.from_username)
}
inline ::std::string* SyncChatSessionReadRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncChatSessionReadRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncChatSessionReadRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.SyncChatSessionReadRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncChatSessionReadRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncChatSessionReadRequest.from_username)
}

// string to_username = 3;
inline void SyncChatSessionReadRequest::clear_to_username() {
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncChatSessionReadRequest::to_username() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncChatSessionReadRequest.to_username)
  return to_username_.GetNoArena();
}
inline void SyncChatSessionReadRequest::set_to_username(const ::std::string& value) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncChatSessionReadRequest.to_username)
}
#if LANG_CXX11
inline void SyncChatSessionReadRequest::set_to_username(::std::string&& value) {
  
  to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncChatSessionReadRequest.to_username)
}
#endif
inline void SyncChatSessionReadRequest::set_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncChatSessionReadRequest.to_username)
}
inline void SyncChatSessionReadRequest::set_to_username(const char* value, size_t size) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncChatSessionReadRequest.to_username)
}
inline ::std::string* SyncChatSessionReadRequest::mutable_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncChatSessionReadRequest.to_username)
  return to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncChatSessionReadRequest::release_to_username() {
  // @@protoc_insertion_point(field_release:outer.history.SyncChatSessionReadRequest.to_username)
  
  return to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncChatSessionReadRequest::set_allocated_to_username(::std::string* to_username) {
  if (to_username != NULL) {
    
  } else {
    
  }
  to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncChatSessionReadRequest.to_username)
}

// -------------------------------------------------------------------

// SyncChatSessionReadResponse

// .common.errcode.EErrorCode ret = 1;
inline void SyncChatSessionReadResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SyncChatSessionReadResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncChatSessionReadResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SyncChatSessionReadResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncChatSessionReadResponse.ret)
}

// int64 read_guid = 2;
inline void SyncChatSessionReadResponse::clear_read_guid() {
  read_guid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SyncChatSessionReadResponse::read_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncChatSessionReadResponse.read_guid)
  return read_guid_;
}
inline void SyncChatSessionReadResponse::set_read_guid(::google::protobuf::int64 value) {
  
  read_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncChatSessionReadResponse.read_guid)
}

// -------------------------------------------------------------------

// SyncGroupSessionReadRequest

// string appkey = 1;
inline void SyncGroupSessionReadRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncGroupSessionReadRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncGroupSessionReadRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SyncGroupSessionReadRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncGroupSessionReadRequest.appkey)
}
#if LANG_CXX11
inline void SyncGroupSessionReadRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncGroupSessionReadRequest.appkey)
}
#endif
inline void SyncGroupSessionReadRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncGroupSessionReadRequest.appkey)
}
inline void SyncGroupSessionReadRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncGroupSessionReadRequest.appkey)
}
inline ::std::string* SyncGroupSessionReadRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncGroupSessionReadRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncGroupSessionReadRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.SyncGroupSessionReadRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGroupSessionReadRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncGroupSessionReadRequest.appkey)
}

// string uri = 2;
inline void SyncGroupSessionReadRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncGroupSessionReadRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncGroupSessionReadRequest.uri)
  return uri_.GetNoArena();
}
inline void SyncGroupSessionReadRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncGroupSessionReadRequest.uri)
}
#if LANG_CXX11
inline void SyncGroupSessionReadRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncGroupSessionReadRequest.uri)
}
#endif
inline void SyncGroupSessionReadRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncGroupSessionReadRequest.uri)
}
inline void SyncGroupSessionReadRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncGroupSessionReadRequest.uri)
}
inline ::std::string* SyncGroupSessionReadRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncGroupSessionReadRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncGroupSessionReadRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.history.SyncGroupSessionReadRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGroupSessionReadRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncGroupSessionReadRequest.uri)
}

// string to_username = 3;
inline void SyncGroupSessionReadRequest::clear_to_username() {
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncGroupSessionReadRequest::to_username() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncGroupSessionReadRequest.to_username)
  return to_username_.GetNoArena();
}
inline void SyncGroupSessionReadRequest::set_to_username(const ::std::string& value) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncGroupSessionReadRequest.to_username)
}
#if LANG_CXX11
inline void SyncGroupSessionReadRequest::set_to_username(::std::string&& value) {
  
  to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncGroupSessionReadRequest.to_username)
}
#endif
inline void SyncGroupSessionReadRequest::set_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncGroupSessionReadRequest.to_username)
}
inline void SyncGroupSessionReadRequest::set_to_username(const char* value, size_t size) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncGroupSessionReadRequest.to_username)
}
inline ::std::string* SyncGroupSessionReadRequest::mutable_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncGroupSessionReadRequest.to_username)
  return to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncGroupSessionReadRequest::release_to_username() {
  // @@protoc_insertion_point(field_release:outer.history.SyncGroupSessionReadRequest.to_username)
  
  return to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGroupSessionReadRequest::set_allocated_to_username(::std::string* to_username) {
  if (to_username != NULL) {
    
  } else {
    
  }
  to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncGroupSessionReadRequest.to_username)
}

// -------------------------------------------------------------------

// SyncGroupSessionReadResponse

// .common.errcode.EErrorCode ret = 1;
inline void SyncGroupSessionReadResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SyncGroupSessionReadResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncGroupSessionReadResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SyncGroupSessionReadResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncGroupSessionReadResponse.ret)
}

// int64 read_guid = 2;
inline void SyncGroupSessionReadResponse::clear_read_guid() {
  read_guid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SyncGroupSessionReadResponse::read_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncGroupSessionReadResponse.read_guid)
  return read_guid_;
}
inline void SyncGroupSessionReadResponse::set_read_guid(::google::protobuf::int64 value) {
  
  read_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncGroupSessionReadResponse.read_guid)
}

// -------------------------------------------------------------------

// ChatMessageRemoveRequest

// string appkey = 1;
inline void ChatMessageRemoveRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageRemoveRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatMessageRemoveRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ChatMessageRemoveRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatMessageRemoveRequest.appkey)
}
#if LANG_CXX11
inline void ChatMessageRemoveRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatMessageRemoveRequest.appkey)
}
#endif
inline void ChatMessageRemoveRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatMessageRemoveRequest.appkey)
}
inline void ChatMessageRemoveRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatMessageRemoveRequest.appkey)
}
inline ::std::string* ChatMessageRemoveRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatMessageRemoveRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageRemoveRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.ChatMessageRemoveRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageRemoveRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatMessageRemoveRequest.appkey)
}

// string from_username = 2;
inline void ChatMessageRemoveRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageRemoveRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatMessageRemoveRequest.from_username)
  return from_username_.GetNoArena();
}
inline void ChatMessageRemoveRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatMessageRemoveRequest.from_username)
}
#if LANG_CXX11
inline void ChatMessageRemoveRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatMessageRemoveRequest.from_username)
}
#endif
inline void ChatMessageRemoveRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatMessageRemoveRequest.from_username)
}
inline void ChatMessageRemoveRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatMessageRemoveRequest.from_username)
}
inline ::std::string* ChatMessageRemoveRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatMessageRemoveRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageRemoveRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.ChatMessageRemoveRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageRemoveRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatMessageRemoveRequest.from_username)
}

// string to_username = 3;
inline void ChatMessageRemoveRequest::clear_to_username() {
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageRemoveRequest::to_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatMessageRemoveRequest.to_username)
  return to_username_.GetNoArena();
}
inline void ChatMessageRemoveRequest::set_to_username(const ::std::string& value) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatMessageRemoveRequest.to_username)
}
#if LANG_CXX11
inline void ChatMessageRemoveRequest::set_to_username(::std::string&& value) {
  
  to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatMessageRemoveRequest.to_username)
}
#endif
inline void ChatMessageRemoveRequest::set_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatMessageRemoveRequest.to_username)
}
inline void ChatMessageRemoveRequest::set_to_username(const char* value, size_t size) {
  
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatMessageRemoveRequest.to_username)
}
inline ::std::string* ChatMessageRemoveRequest::mutable_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatMessageRemoveRequest.to_username)
  return to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageRemoveRequest::release_to_username() {
  // @@protoc_insertion_point(field_release:outer.history.ChatMessageRemoveRequest.to_username)
  
  return to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageRemoveRequest::set_allocated_to_username(::std::string* to_username) {
  if (to_username != NULL) {
    
  } else {
    
  }
  to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatMessageRemoveRequest.to_username)
}

// repeated uint64 guid = 4;
inline int ChatMessageRemoveRequest::guid_size() const {
  return guid_.size();
}
inline void ChatMessageRemoveRequest::clear_guid() {
  guid_.Clear();
}
inline ::google::protobuf::uint64 ChatMessageRemoveRequest::guid(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.ChatMessageRemoveRequest.guid)
  return guid_.Get(index);
}
inline void ChatMessageRemoveRequest::set_guid(int index, ::google::protobuf::uint64 value) {
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:outer.history.ChatMessageRemoveRequest.guid)
}
inline void ChatMessageRemoveRequest::add_guid(::google::protobuf::uint64 value) {
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:outer.history.ChatMessageRemoveRequest.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChatMessageRemoveRequest::guid() const {
  // @@protoc_insertion_point(field_list:outer.history.ChatMessageRemoveRequest.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChatMessageRemoveRequest::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.ChatMessageRemoveRequest.guid)
  return &guid_;
}

// bool remove_session = 5;
inline void ChatMessageRemoveRequest::clear_remove_session() {
  remove_session_ = false;
}
inline bool ChatMessageRemoveRequest::remove_session() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatMessageRemoveRequest.remove_session)
  return remove_session_;
}
inline void ChatMessageRemoveRequest::set_remove_session(bool value) {
  
  remove_session_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatMessageRemoveRequest.remove_session)
}

// -------------------------------------------------------------------

// GroupMessageRemoveRequest

// string appkey = 1;
inline void GroupMessageRemoveRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRemoveRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupMessageRemoveRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GroupMessageRemoveRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupMessageRemoveRequest.appkey)
}
#if LANG_CXX11
inline void GroupMessageRemoveRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupMessageRemoveRequest.appkey)
}
#endif
inline void GroupMessageRemoveRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupMessageRemoveRequest.appkey)
}
inline void GroupMessageRemoveRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupMessageRemoveRequest.appkey)
}
inline ::std::string* GroupMessageRemoveRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupMessageRemoveRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRemoveRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.GroupMessageRemoveRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRemoveRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupMessageRemoveRequest.appkey)
}

// string from_username = 2;
inline void GroupMessageRemoveRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRemoveRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupMessageRemoveRequest.from_username)
  return from_username_.GetNoArena();
}
inline void GroupMessageRemoveRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupMessageRemoveRequest.from_username)
}
#if LANG_CXX11
inline void GroupMessageRemoveRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupMessageRemoveRequest.from_username)
}
#endif
inline void GroupMessageRemoveRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupMessageRemoveRequest.from_username)
}
inline void GroupMessageRemoveRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupMessageRemoveRequest.from_username)
}
inline ::std::string* GroupMessageRemoveRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupMessageRemoveRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRemoveRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.GroupMessageRemoveRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRemoveRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupMessageRemoveRequest.from_username)
}

// string uri = 3;
inline void GroupMessageRemoveRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRemoveRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.history.GroupMessageRemoveRequest.uri)
  return uri_.GetNoArena();
}
inline void GroupMessageRemoveRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GroupMessageRemoveRequest.uri)
}
#if LANG_CXX11
inline void GroupMessageRemoveRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GroupMessageRemoveRequest.uri)
}
#endif
inline void GroupMessageRemoveRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GroupMessageRemoveRequest.uri)
}
inline void GroupMessageRemoveRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GroupMessageRemoveRequest.uri)
}
inline ::std::string* GroupMessageRemoveRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GroupMessageRemoveRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRemoveRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.history.GroupMessageRemoveRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRemoveRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GroupMessageRemoveRequest.uri)
}

// repeated uint64 guid = 4;
inline int GroupMessageRemoveRequest::guid_size() const {
  return guid_.size();
}
inline void GroupMessageRemoveRequest::clear_guid() {
  guid_.Clear();
}
inline ::google::protobuf::uint64 GroupMessageRemoveRequest::guid(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.GroupMessageRemoveRequest.guid)
  return guid_.Get(index);
}
inline void GroupMessageRemoveRequest::set_guid(int index, ::google::protobuf::uint64 value) {
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:outer.history.GroupMessageRemoveRequest.guid)
}
inline void GroupMessageRemoveRequest::add_guid(::google::protobuf::uint64 value) {
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:outer.history.GroupMessageRemoveRequest.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GroupMessageRemoveRequest::guid() const {
  // @@protoc_insertion_point(field_list:outer.history.GroupMessageRemoveRequest.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GroupMessageRemoveRequest::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.GroupMessageRemoveRequest.guid)
  return &guid_;
}

// -------------------------------------------------------------------

// MessageRemoveResponse

// .common.errcode.EErrorCode ret = 1;
inline void MessageRemoveResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode MessageRemoveResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.MessageRemoveResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void MessageRemoveResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MessageRemoveResponse.ret)
}

// -------------------------------------------------------------------

// SyncSendGUIDRequest

// string username = 1;
inline void SyncSendGUIDRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncSendGUIDRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncSendGUIDRequest.username)
  return username_.GetNoArena();
}
inline void SyncSendGUIDRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncSendGUIDRequest.username)
}
#if LANG_CXX11
inline void SyncSendGUIDRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncSendGUIDRequest.username)
}
#endif
inline void SyncSendGUIDRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncSendGUIDRequest.username)
}
inline void SyncSendGUIDRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncSendGUIDRequest.username)
}
inline ::std::string* SyncSendGUIDRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncSendGUIDRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncSendGUIDRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.SyncSendGUIDRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncSendGUIDRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncSendGUIDRequest.username)
}

// string appkey = 2;
inline void SyncSendGUIDRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncSendGUIDRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncSendGUIDRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SyncSendGUIDRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncSendGUIDRequest.appkey)
}
#if LANG_CXX11
inline void SyncSendGUIDRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncSendGUIDRequest.appkey)
}
#endif
inline void SyncSendGUIDRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncSendGUIDRequest.appkey)
}
inline void SyncSendGUIDRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncSendGUIDRequest.appkey)
}
inline ::std::string* SyncSendGUIDRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncSendGUIDRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncSendGUIDRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.SyncSendGUIDRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncSendGUIDRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncSendGUIDRequest.appkey)
}

// -------------------------------------------------------------------

// SyncSendGUIDResponse

// .common.errcode.EErrorCode ret = 1;
inline void SyncSendGUIDResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SyncSendGUIDResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncSendGUIDResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SyncSendGUIDResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncSendGUIDResponse.ret)
}

// uint64 send_guid = 2;
inline void SyncSendGUIDResponse::clear_send_guid() {
  send_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SyncSendGUIDResponse::send_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncSendGUIDResponse.send_guid)
  return send_guid_;
}
inline void SyncSendGUIDResponse::set_send_guid(::google::protobuf::uint64 value) {
  
  send_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncSendGUIDResponse.send_guid)
}

// -------------------------------------------------------------------

// SyncReceivedGUIDRequest

// string username = 1;
inline void SyncReceivedGUIDRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncReceivedGUIDRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncReceivedGUIDRequest.username)
  return username_.GetNoArena();
}
inline void SyncReceivedGUIDRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncReceivedGUIDRequest.username)
}
#if LANG_CXX11
inline void SyncReceivedGUIDRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncReceivedGUIDRequest.username)
}
#endif
inline void SyncReceivedGUIDRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncReceivedGUIDRequest.username)
}
inline void SyncReceivedGUIDRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncReceivedGUIDRequest.username)
}
inline ::std::string* SyncReceivedGUIDRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncReceivedGUIDRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncReceivedGUIDRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.SyncReceivedGUIDRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncReceivedGUIDRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncReceivedGUIDRequest.username)
}

// string appkey = 2;
inline void SyncReceivedGUIDRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SyncReceivedGUIDRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncReceivedGUIDRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SyncReceivedGUIDRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SyncReceivedGUIDRequest.appkey)
}
#if LANG_CXX11
inline void SyncReceivedGUIDRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SyncReceivedGUIDRequest.appkey)
}
#endif
inline void SyncReceivedGUIDRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SyncReceivedGUIDRequest.appkey)
}
inline void SyncReceivedGUIDRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SyncReceivedGUIDRequest.appkey)
}
inline ::std::string* SyncReceivedGUIDRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SyncReceivedGUIDRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncReceivedGUIDRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.SyncReceivedGUIDRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncReceivedGUIDRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SyncReceivedGUIDRequest.appkey)
}

// -------------------------------------------------------------------

// SyncReceivedGUIDResponse

// .common.errcode.EErrorCode ret = 1;
inline void SyncReceivedGUIDResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SyncReceivedGUIDResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncReceivedGUIDResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SyncReceivedGUIDResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncReceivedGUIDResponse.ret)
}

// uint64 received_guid = 2;
inline void SyncReceivedGUIDResponse::clear_received_guid() {
  received_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SyncReceivedGUIDResponse::received_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.SyncReceivedGUIDResponse.received_guid)
  return received_guid_;
}
inline void SyncReceivedGUIDResponse::set_received_guid(::google::protobuf::uint64 value) {
  
  received_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SyncReceivedGUIDResponse.received_guid)
}

// -------------------------------------------------------------------

// FleetHistoryMessageGetRequest

// string fleet_uri = 1;
inline void FleetHistoryMessageGetRequest::clear_fleet_uri() {
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FleetHistoryMessageGetRequest::fleet_uri() const {
  // @@protoc_insertion_point(field_get:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
  return fleet_uri_.GetNoArena();
}
inline void FleetHistoryMessageGetRequest::set_fleet_uri(const ::std::string& value) {
  
  fleet_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
}
#if LANG_CXX11
inline void FleetHistoryMessageGetRequest::set_fleet_uri(::std::string&& value) {
  
  fleet_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
}
#endif
inline void FleetHistoryMessageGetRequest::set_fleet_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fleet_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
}
inline void FleetHistoryMessageGetRequest::set_fleet_uri(const char* value, size_t size) {
  
  fleet_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
}
inline ::std::string* FleetHistoryMessageGetRequest::mutable_fleet_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
  return fleet_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FleetHistoryMessageGetRequest::release_fleet_uri() {
  // @@protoc_insertion_point(field_release:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
  
  return fleet_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FleetHistoryMessageGetRequest::set_allocated_fleet_uri(::std::string* fleet_uri) {
  if (fleet_uri != NULL) {
    
  } else {
    
  }
  fleet_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fleet_uri);
  // @@protoc_insertion_point(field_set_allocated:outer.history.FleetHistoryMessageGetRequest.fleet_uri)
}

// string from_username = 2;
inline void FleetHistoryMessageGetRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FleetHistoryMessageGetRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.FleetHistoryMessageGetRequest.from_username)
  return from_username_.GetNoArena();
}
inline void FleetHistoryMessageGetRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.FleetHistoryMessageGetRequest.from_username)
}
#if LANG_CXX11
inline void FleetHistoryMessageGetRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.FleetHistoryMessageGetRequest.from_username)
}
#endif
inline void FleetHistoryMessageGetRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.FleetHistoryMessageGetRequest.from_username)
}
inline void FleetHistoryMessageGetRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.FleetHistoryMessageGetRequest.from_username)
}
inline ::std::string* FleetHistoryMessageGetRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.FleetHistoryMessageGetRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FleetHistoryMessageGetRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.FleetHistoryMessageGetRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FleetHistoryMessageGetRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.FleetHistoryMessageGetRequest.from_username)
}

// string appkey = 3;
inline void FleetHistoryMessageGetRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FleetHistoryMessageGetRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.FleetHistoryMessageGetRequest.appkey)
  return appkey_.GetNoArena();
}
inline void FleetHistoryMessageGetRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.FleetHistoryMessageGetRequest.appkey)
}
#if LANG_CXX11
inline void FleetHistoryMessageGetRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.FleetHistoryMessageGetRequest.appkey)
}
#endif
inline void FleetHistoryMessageGetRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.FleetHistoryMessageGetRequest.appkey)
}
inline void FleetHistoryMessageGetRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.FleetHistoryMessageGetRequest.appkey)
}
inline ::std::string* FleetHistoryMessageGetRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.FleetHistoryMessageGetRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FleetHistoryMessageGetRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.FleetHistoryMessageGetRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FleetHistoryMessageGetRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.FleetHistoryMessageGetRequest.appkey)
}

// uint64 begin_guid = 4;
inline void FleetHistoryMessageGetRequest::clear_begin_guid() {
  begin_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FleetHistoryMessageGetRequest::begin_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.FleetHistoryMessageGetRequest.begin_guid)
  return begin_guid_;
}
inline void FleetHistoryMessageGetRequest::set_begin_guid(::google::protobuf::uint64 value) {
  
  begin_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.FleetHistoryMessageGetRequest.begin_guid)
}

// uint32 limit = 5;
inline void FleetHistoryMessageGetRequest::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 FleetHistoryMessageGetRequest::limit() const {
  // @@protoc_insertion_point(field_get:outer.history.FleetHistoryMessageGetRequest.limit)
  return limit_;
}
inline void FleetHistoryMessageGetRequest::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:outer.history.FleetHistoryMessageGetRequest.limit)
}

// -------------------------------------------------------------------

// ContactInfo

// string appkey = 1;
inline void ContactInfo::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.appkey)
  return appkey_.GetNoArena();
}
inline void ContactInfo::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.appkey)
}
#if LANG_CXX11
inline void ContactInfo::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.appkey)
}
#endif
inline void ContactInfo::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.appkey)
}
inline void ContactInfo::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.appkey)
}
inline ::std::string* ContactInfo::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.appkey)
}

// string contact_username = 2;
inline void ContactInfo::clear_contact_username() {
  contact_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::contact_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.contact_username)
  return contact_username_.GetNoArena();
}
inline void ContactInfo::set_contact_username(const ::std::string& value) {
  
  contact_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.contact_username)
}
#if LANG_CXX11
inline void ContactInfo::set_contact_username(::std::string&& value) {
  
  contact_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.contact_username)
}
#endif
inline void ContactInfo::set_contact_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.contact_username)
}
inline void ContactInfo::set_contact_username(const char* value, size_t size) {
  
  contact_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.contact_username)
}
inline ::std::string* ContactInfo::mutable_contact_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.contact_username)
  return contact_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_contact_username() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.contact_username)
  
  return contact_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_contact_username(::std::string* contact_username) {
  if (contact_username != NULL) {
    
  } else {
    
  }
  contact_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.contact_username)
}

// string contact_nick = 3;
inline void ContactInfo::clear_contact_nick() {
  contact_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::contact_nick() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.contact_nick)
  return contact_nick_.GetNoArena();
}
inline void ContactInfo::set_contact_nick(const ::std::string& value) {
  
  contact_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.contact_nick)
}
#if LANG_CXX11
inline void ContactInfo::set_contact_nick(::std::string&& value) {
  
  contact_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.contact_nick)
}
#endif
inline void ContactInfo::set_contact_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.contact_nick)
}
inline void ContactInfo::set_contact_nick(const char* value, size_t size) {
  
  contact_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.contact_nick)
}
inline ::std::string* ContactInfo::mutable_contact_nick() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.contact_nick)
  return contact_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_contact_nick() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.contact_nick)
  
  return contact_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_contact_nick(::std::string* contact_nick) {
  if (contact_nick != NULL) {
    
  } else {
    
  }
  contact_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact_nick);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.contact_nick)
}

// string contact_display = 4;
inline void ContactInfo::clear_contact_display() {
  contact_display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::contact_display() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.contact_display)
  return contact_display_.GetNoArena();
}
inline void ContactInfo::set_contact_display(const ::std::string& value) {
  
  contact_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.contact_display)
}
#if LANG_CXX11
inline void ContactInfo::set_contact_display(::std::string&& value) {
  
  contact_display_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.contact_display)
}
#endif
inline void ContactInfo::set_contact_display(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  contact_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.contact_display)
}
inline void ContactInfo::set_contact_display(const char* value, size_t size) {
  
  contact_display_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.contact_display)
}
inline ::std::string* ContactInfo::mutable_contact_display() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.contact_display)
  return contact_display_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_contact_display() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.contact_display)
  
  return contact_display_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_contact_display(::std::string* contact_display) {
  if (contact_display != NULL) {
    
  } else {
    
  }
  contact_display_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact_display);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.contact_display)
}

// string original_link = 5;
inline void ContactInfo::clear_original_link() {
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::original_link() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.original_link)
  return original_link_.GetNoArena();
}
inline void ContactInfo::set_original_link(const ::std::string& value) {
  
  original_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.original_link)
}
#if LANG_CXX11
inline void ContactInfo::set_original_link(::std::string&& value) {
  
  original_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.original_link)
}
#endif
inline void ContactInfo::set_original_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  original_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.original_link)
}
inline void ContactInfo::set_original_link(const char* value, size_t size) {
  
  original_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.original_link)
}
inline ::std::string* ContactInfo::mutable_original_link() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.original_link)
  return original_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_original_link() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.original_link)
  
  return original_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_original_link(::std::string* original_link) {
  if (original_link != NULL) {
    
  } else {
    
  }
  original_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_link);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.original_link)
}

// string thumbnail_link = 6;
inline void ContactInfo::clear_thumbnail_link() {
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::thumbnail_link() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.thumbnail_link)
  return thumbnail_link_.GetNoArena();
}
inline void ContactInfo::set_thumbnail_link(const ::std::string& value) {
  
  thumbnail_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.thumbnail_link)
}
#if LANG_CXX11
inline void ContactInfo::set_thumbnail_link(::std::string&& value) {
  
  thumbnail_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.thumbnail_link)
}
#endif
inline void ContactInfo::set_thumbnail_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  thumbnail_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.thumbnail_link)
}
inline void ContactInfo::set_thumbnail_link(const char* value, size_t size) {
  
  thumbnail_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.thumbnail_link)
}
inline ::std::string* ContactInfo::mutable_thumbnail_link() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.thumbnail_link)
  return thumbnail_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_thumbnail_link() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.thumbnail_link)
  
  return thumbnail_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_thumbnail_link(::std::string* thumbnail_link) {
  if (thumbnail_link != NULL) {
    
  } else {
    
  }
  thumbnail_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbnail_link);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.thumbnail_link)
}

// uint64 modified = 8;
inline void ContactInfo::clear_modified() {
  modified_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ContactInfo::modified() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.modified)
  return modified_;
}
inline void ContactInfo::set_modified(::google::protobuf::uint64 value) {
  
  modified_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.modified)
}

// string phone = 10;
inline void ContactInfo::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContactInfo::phone() const {
  // @@protoc_insertion_point(field_get:outer.history.ContactInfo.phone)
  return phone_.GetNoArena();
}
inline void ContactInfo::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ContactInfo.phone)
}
#if LANG_CXX11
inline void ContactInfo::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ContactInfo.phone)
}
#endif
inline void ContactInfo::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ContactInfo.phone)
}
inline void ContactInfo::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ContactInfo.phone)
}
inline ::std::string* ContactInfo::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ContactInfo.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContactInfo::release_phone() {
  // @@protoc_insertion_point(field_release:outer.history.ContactInfo.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContactInfo::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ContactInfo.phone)
}

// -------------------------------------------------------------------

// GetLatestContactRequest

// string appkey = 1;
inline void GetLatestContactRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLatestContactRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.GetLatestContactRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetLatestContactRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GetLatestContactRequest.appkey)
}
#if LANG_CXX11
inline void GetLatestContactRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GetLatestContactRequest.appkey)
}
#endif
inline void GetLatestContactRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GetLatestContactRequest.appkey)
}
inline void GetLatestContactRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GetLatestContactRequest.appkey)
}
inline ::std::string* GetLatestContactRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GetLatestContactRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLatestContactRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.GetLatestContactRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLatestContactRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GetLatestContactRequest.appkey)
}

// string username = 2;
inline void GetLatestContactRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetLatestContactRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.GetLatestContactRequest.username)
  return username_.GetNoArena();
}
inline void GetLatestContactRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.GetLatestContactRequest.username)
}
#if LANG_CXX11
inline void GetLatestContactRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.GetLatestContactRequest.username)
}
#endif
inline void GetLatestContactRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.GetLatestContactRequest.username)
}
inline void GetLatestContactRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.GetLatestContactRequest.username)
}
inline ::std::string* GetLatestContactRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.GetLatestContactRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLatestContactRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.GetLatestContactRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLatestContactRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.GetLatestContactRequest.username)
}

// -------------------------------------------------------------------

// GetLatestContactResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetLatestContactResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetLatestContactResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.GetLatestContactResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetLatestContactResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.GetLatestContactResponse.ret)
}

// repeated .outer.history.ContactInfo contact_info = 2;
inline int GetLatestContactResponse::contact_info_size() const {
  return contact_info_.size();
}
inline void GetLatestContactResponse::clear_contact_info() {
  contact_info_.Clear();
}
inline const ::outer::history::ContactInfo& GetLatestContactResponse::contact_info(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.GetLatestContactResponse.contact_info)
  return contact_info_.Get(index);
}
inline ::outer::history::ContactInfo* GetLatestContactResponse::mutable_contact_info(int index) {
  // @@protoc_insertion_point(field_mutable:outer.history.GetLatestContactResponse.contact_info)
  return contact_info_.Mutable(index);
}
inline ::outer::history::ContactInfo* GetLatestContactResponse::add_contact_info() {
  // @@protoc_insertion_point(field_add:outer.history.GetLatestContactResponse.contact_info)
  return contact_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::history::ContactInfo >*
GetLatestContactResponse::mutable_contact_info() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.GetLatestContactResponse.contact_info)
  return &contact_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::history::ContactInfo >&
GetLatestContactResponse::contact_info() const {
  // @@protoc_insertion_point(field_list:outer.history.GetLatestContactResponse.contact_info)
  return contact_info_;
}

// repeated .common.msg.MessageUnit message = 3;
inline int GetLatestContactResponse::message_size() const {
  return message_.size();
}
inline const ::common::msg::MessageUnit& GetLatestContactResponse::message(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.GetLatestContactResponse.message)
  return message_.Get(index);
}
inline ::common::msg::MessageUnit* GetLatestContactResponse::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:outer.history.GetLatestContactResponse.message)
  return message_.Mutable(index);
}
inline ::common::msg::MessageUnit* GetLatestContactResponse::add_message() {
  // @@protoc_insertion_point(field_add:outer.history.GetLatestContactResponse.message)
  return message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
GetLatestContactResponse::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.GetLatestContactResponse.message)
  return &message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
GetLatestContactResponse::message() const {
  // @@protoc_insertion_point(field_list:outer.history.GetLatestContactResponse.message)
  return message_;
}

// -------------------------------------------------------------------

// SingleMessageSyncRequest

// string appkey = 1;
inline void SingleMessageSyncRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SingleMessageSyncRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.SingleMessageSyncRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SingleMessageSyncRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SingleMessageSyncRequest.appkey)
}
#if LANG_CXX11
inline void SingleMessageSyncRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SingleMessageSyncRequest.appkey)
}
#endif
inline void SingleMessageSyncRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SingleMessageSyncRequest.appkey)
}
inline void SingleMessageSyncRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SingleMessageSyncRequest.appkey)
}
inline ::std::string* SingleMessageSyncRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SingleMessageSyncRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleMessageSyncRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.SingleMessageSyncRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleMessageSyncRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SingleMessageSyncRequest.appkey)
}

// uint64 guid = 2;
inline void SingleMessageSyncRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SingleMessageSyncRequest::guid() const {
  // @@protoc_insertion_point(field_get:outer.history.SingleMessageSyncRequest.guid)
  return guid_;
}
inline void SingleMessageSyncRequest::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SingleMessageSyncRequest.guid)
}

// string username = 3;
inline void SingleMessageSyncRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SingleMessageSyncRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.SingleMessageSyncRequest.username)
  return username_.GetNoArena();
}
inline void SingleMessageSyncRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.SingleMessageSyncRequest.username)
}
#if LANG_CXX11
inline void SingleMessageSyncRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.SingleMessageSyncRequest.username)
}
#endif
inline void SingleMessageSyncRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.SingleMessageSyncRequest.username)
}
inline void SingleMessageSyncRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.SingleMessageSyncRequest.username)
}
inline ::std::string* SingleMessageSyncRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.SingleMessageSyncRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleMessageSyncRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.SingleMessageSyncRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleMessageSyncRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.SingleMessageSyncRequest.username)
}

// -------------------------------------------------------------------

// SingleMessageSyncResponse

// .common.errcode.EErrorCode ret = 1;
inline void SingleMessageSyncResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SingleMessageSyncResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.SingleMessageSyncResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SingleMessageSyncResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.SingleMessageSyncResponse.ret)
}

// .common.msg.MessageUnit unit = 2;
inline bool SingleMessageSyncResponse::has_unit() const {
  return this != internal_default_instance() && unit_ != NULL;
}
inline const ::common::msg::MessageUnit& SingleMessageSyncResponse::unit() const {
  const ::common::msg::MessageUnit* p = unit_;
  // @@protoc_insertion_point(field_get:outer.history.SingleMessageSyncResponse.unit)
  return p != NULL ? *p : *reinterpret_cast<const ::common::msg::MessageUnit*>(
      &::common::msg::_MessageUnit_default_instance_);
}
inline ::common::msg::MessageUnit* SingleMessageSyncResponse::release_unit() {
  // @@protoc_insertion_point(field_release:outer.history.SingleMessageSyncResponse.unit)
  
  ::common::msg::MessageUnit* temp = unit_;
  unit_ = NULL;
  return temp;
}
inline ::common::msg::MessageUnit* SingleMessageSyncResponse::mutable_unit() {
  
  if (unit_ == NULL) {
    unit_ = new ::common::msg::MessageUnit;
  }
  // @@protoc_insertion_point(field_mutable:outer.history.SingleMessageSyncResponse.unit)
  return unit_;
}
inline void SingleMessageSyncResponse::set_allocated_unit(::common::msg::MessageUnit* unit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(unit_);
  }
  if (unit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unit, submessage_arena);
    }
    
  } else {
    
  }
  unit_ = unit;
  // @@protoc_insertion_point(field_set_allocated:outer.history.SingleMessageSyncResponse.unit)
}

// -------------------------------------------------------------------

// OfflineCustomMessageSyncRequest

// string username = 2;
inline void OfflineCustomMessageSyncRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineCustomMessageSyncRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.history.OfflineCustomMessageSyncRequest.username)
  return username_.GetNoArena();
}
inline void OfflineCustomMessageSyncRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.OfflineCustomMessageSyncRequest.username)
}
#if LANG_CXX11
inline void OfflineCustomMessageSyncRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.OfflineCustomMessageSyncRequest.username)
}
#endif
inline void OfflineCustomMessageSyncRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.OfflineCustomMessageSyncRequest.username)
}
inline void OfflineCustomMessageSyncRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.OfflineCustomMessageSyncRequest.username)
}
inline ::std::string* OfflineCustomMessageSyncRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.OfflineCustomMessageSyncRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineCustomMessageSyncRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.history.OfflineCustomMessageSyncRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineCustomMessageSyncRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.OfflineCustomMessageSyncRequest.username)
}

// string appkey = 3;
inline void OfflineCustomMessageSyncRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineCustomMessageSyncRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.OfflineCustomMessageSyncRequest.appkey)
  return appkey_.GetNoArena();
}
inline void OfflineCustomMessageSyncRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.OfflineCustomMessageSyncRequest.appkey)
}
#if LANG_CXX11
inline void OfflineCustomMessageSyncRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.OfflineCustomMessageSyncRequest.appkey)
}
#endif
inline void OfflineCustomMessageSyncRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.OfflineCustomMessageSyncRequest.appkey)
}
inline void OfflineCustomMessageSyncRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.OfflineCustomMessageSyncRequest.appkey)
}
inline ::std::string* OfflineCustomMessageSyncRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.OfflineCustomMessageSyncRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineCustomMessageSyncRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.OfflineCustomMessageSyncRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineCustomMessageSyncRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.OfflineCustomMessageSyncRequest.appkey)
}

// bool sor = 4;
inline void OfflineCustomMessageSyncRequest::clear_sor() {
  sor_ = false;
}
inline bool OfflineCustomMessageSyncRequest::sor() const {
  // @@protoc_insertion_point(field_get:outer.history.OfflineCustomMessageSyncRequest.sor)
  return sor_;
}
inline void OfflineCustomMessageSyncRequest::set_sor(bool value) {
  
  sor_ = value;
  // @@protoc_insertion_point(field_set:outer.history.OfflineCustomMessageSyncRequest.sor)
}

// uint64 modified_timestamp = 5;
inline void OfflineCustomMessageSyncRequest::clear_modified_timestamp() {
  modified_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OfflineCustomMessageSyncRequest::modified_timestamp() const {
  // @@protoc_insertion_point(field_get:outer.history.OfflineCustomMessageSyncRequest.modified_timestamp)
  return modified_timestamp_;
}
inline void OfflineCustomMessageSyncRequest::set_modified_timestamp(::google::protobuf::uint64 value) {
  
  modified_timestamp_ = value;
  // @@protoc_insertion_point(field_set:outer.history.OfflineCustomMessageSyncRequest.modified_timestamp)
}

// uint32 limit = 6;
inline void OfflineCustomMessageSyncRequest::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 OfflineCustomMessageSyncRequest::limit() const {
  // @@protoc_insertion_point(field_get:outer.history.OfflineCustomMessageSyncRequest.limit)
  return limit_;
}
inline void OfflineCustomMessageSyncRequest::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:outer.history.OfflineCustomMessageSyncRequest.limit)
}

// -------------------------------------------------------------------

// ChatHistoryMessageUnRegistGetRequest

// string from_username = 1;
inline void ChatHistoryMessageUnRegistGetRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageUnRegistGetRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
  return from_username_.GetNoArena();
}
inline void ChatHistoryMessageUnRegistGetRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
}
#if LANG_CXX11
inline void ChatHistoryMessageUnRegistGetRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
}
#endif
inline void ChatHistoryMessageUnRegistGetRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
}
inline void ChatHistoryMessageUnRegistGetRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageUnRegistGetRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageUnRegistGetRequest.from_username)
}

// string to_phone = 2;
inline void ChatHistoryMessageUnRegistGetRequest::clear_to_phone() {
  to_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageUnRegistGetRequest::to_phone() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
  return to_phone_.GetNoArena();
}
inline void ChatHistoryMessageUnRegistGetRequest::set_to_phone(const ::std::string& value) {
  
  to_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
}
#if LANG_CXX11
inline void ChatHistoryMessageUnRegistGetRequest::set_to_phone(::std::string&& value) {
  
  to_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
}
#endif
inline void ChatHistoryMessageUnRegistGetRequest::set_to_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
}
inline void ChatHistoryMessageUnRegistGetRequest::set_to_phone(const char* value, size_t size) {
  
  to_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::mutable_to_phone() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
  return to_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::release_to_phone() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
  
  return to_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageUnRegistGetRequest::set_allocated_to_phone(::std::string* to_phone) {
  if (to_phone != NULL) {
    
  } else {
    
  }
  to_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_phone);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageUnRegistGetRequest.to_phone)
}

// uint64 begin_guid = 3;
inline void ChatHistoryMessageUnRegistGetRequest::clear_begin_guid() {
  begin_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatHistoryMessageUnRegistGetRequest::begin_guid() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.begin_guid)
  return begin_guid_;
}
inline void ChatHistoryMessageUnRegistGetRequest::set_begin_guid(::google::protobuf::uint64 value) {
  
  begin_guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.begin_guid)
}

// uint32 limit = 4;
inline void ChatHistoryMessageUnRegistGetRequest::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 ChatHistoryMessageUnRegistGetRequest::limit() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.limit)
  return limit_;
}
inline void ChatHistoryMessageUnRegistGetRequest::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.limit)
}

// string appkey = 5;
inline void ChatHistoryMessageUnRegistGetRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageUnRegistGetRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ChatHistoryMessageUnRegistGetRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
}
#if LANG_CXX11
inline void ChatHistoryMessageUnRegistGetRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
}
#endif
inline void ChatHistoryMessageUnRegistGetRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
}
inline void ChatHistoryMessageUnRegistGetRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageUnRegistGetRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageUnRegistGetRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageUnRegistGetRequest.appkey)
}

// .outer.history.END_TYPE type = 6;
inline void ChatHistoryMessageUnRegistGetRequest::clear_type() {
  type_ = 0;
}
inline ::outer::history::END_TYPE ChatHistoryMessageUnRegistGetRequest::type() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetRequest.type)
  return static_cast< ::outer::history::END_TYPE >(type_);
}
inline void ChatHistoryMessageUnRegistGetRequest::set_type(::outer::history::END_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetRequest.type)
}

// -------------------------------------------------------------------

// ChatHistoryMessageUnRegistGetResponse

// bytes messageListJson = 1;
inline void ChatHistoryMessageUnRegistGetResponse::clear_messagelistjson() {
  messagelistjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatHistoryMessageUnRegistGetResponse::messagelistjson() const {
  // @@protoc_insertion_point(field_get:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
  return messagelistjson_.GetNoArena();
}
inline void ChatHistoryMessageUnRegistGetResponse::set_messagelistjson(const ::std::string& value) {
  
  messagelistjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
}
#if LANG_CXX11
inline void ChatHistoryMessageUnRegistGetResponse::set_messagelistjson(::std::string&& value) {
  
  messagelistjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
}
#endif
inline void ChatHistoryMessageUnRegistGetResponse::set_messagelistjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  messagelistjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
}
inline void ChatHistoryMessageUnRegistGetResponse::set_messagelistjson(const void* value, size_t size) {
  
  messagelistjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
}
inline ::std::string* ChatHistoryMessageUnRegistGetResponse::mutable_messagelistjson() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
  return messagelistjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHistoryMessageUnRegistGetResponse::release_messagelistjson() {
  // @@protoc_insertion_point(field_release:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
  
  return messagelistjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHistoryMessageUnRegistGetResponse::set_allocated_messagelistjson(::std::string* messagelistjson) {
  if (messagelistjson != NULL) {
    
  } else {
    
  }
  messagelistjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagelistjson);
  // @@protoc_insertion_point(field_set_allocated:outer.history.ChatHistoryMessageUnRegistGetResponse.messageListJson)
}

// -------------------------------------------------------------------

// CountMessageUnRegisterRequest

// string unregiger_phone = 1;
inline void CountMessageUnRegisterRequest::clear_unregiger_phone() {
  unregiger_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CountMessageUnRegisterRequest::unregiger_phone() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
  return unregiger_phone_.GetNoArena();
}
inline void CountMessageUnRegisterRequest::set_unregiger_phone(const ::std::string& value) {
  
  unregiger_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
}
#if LANG_CXX11
inline void CountMessageUnRegisterRequest::set_unregiger_phone(::std::string&& value) {
  
  unregiger_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
}
#endif
inline void CountMessageUnRegisterRequest::set_unregiger_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  unregiger_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
}
inline void CountMessageUnRegisterRequest::set_unregiger_phone(const char* value, size_t size) {
  
  unregiger_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
}
inline ::std::string* CountMessageUnRegisterRequest::mutable_unregiger_phone() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
  return unregiger_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountMessageUnRegisterRequest::release_unregiger_phone() {
  // @@protoc_insertion_point(field_release:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
  
  return unregiger_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountMessageUnRegisterRequest::set_allocated_unregiger_phone(::std::string* unregiger_phone) {
  if (unregiger_phone != NULL) {
    
  } else {
    
  }
  unregiger_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unregiger_phone);
  // @@protoc_insertion_point(field_set_allocated:outer.history.CountMessageUnRegisterRequest.unregiger_phone)
}

// string app_key = 2;
inline void CountMessageUnRegisterRequest::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CountMessageUnRegisterRequest::app_key() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterRequest.app_key)
  return app_key_.GetNoArena();
}
inline void CountMessageUnRegisterRequest::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterRequest.app_key)
}
#if LANG_CXX11
inline void CountMessageUnRegisterRequest::set_app_key(::std::string&& value) {
  
  app_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.CountMessageUnRegisterRequest.app_key)
}
#endif
inline void CountMessageUnRegisterRequest::set_app_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.CountMessageUnRegisterRequest.app_key)
}
inline void CountMessageUnRegisterRequest::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.CountMessageUnRegisterRequest.app_key)
}
inline ::std::string* CountMessageUnRegisterRequest::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.CountMessageUnRegisterRequest.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountMessageUnRegisterRequest::release_app_key() {
  // @@protoc_insertion_point(field_release:outer.history.CountMessageUnRegisterRequest.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountMessageUnRegisterRequest::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:outer.history.CountMessageUnRegisterRequest.app_key)
}

// string platform_user_name = 3;
inline void CountMessageUnRegisterRequest::clear_platform_user_name() {
  platform_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CountMessageUnRegisterRequest::platform_user_name() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterRequest.platform_user_name)
  return platform_user_name_.GetNoArena();
}
inline void CountMessageUnRegisterRequest::set_platform_user_name(const ::std::string& value) {
  
  platform_user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterRequest.platform_user_name)
}
#if LANG_CXX11
inline void CountMessageUnRegisterRequest::set_platform_user_name(::std::string&& value) {
  
  platform_user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.history.CountMessageUnRegisterRequest.platform_user_name)
}
#endif
inline void CountMessageUnRegisterRequest::set_platform_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.history.CountMessageUnRegisterRequest.platform_user_name)
}
inline void CountMessageUnRegisterRequest::set_platform_user_name(const char* value, size_t size) {
  
  platform_user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.history.CountMessageUnRegisterRequest.platform_user_name)
}
inline ::std::string* CountMessageUnRegisterRequest::mutable_platform_user_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.history.CountMessageUnRegisterRequest.platform_user_name)
  return platform_user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CountMessageUnRegisterRequest::release_platform_user_name() {
  // @@protoc_insertion_point(field_release:outer.history.CountMessageUnRegisterRequest.platform_user_name)
  
  return platform_user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CountMessageUnRegisterRequest::set_allocated_platform_user_name(::std::string* platform_user_name) {
  if (platform_user_name != NULL) {
    
  } else {
    
  }
  platform_user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_user_name);
  // @@protoc_insertion_point(field_set_allocated:outer.history.CountMessageUnRegisterRequest.platform_user_name)
}

// uint64 start_time = 4;
inline void CountMessageUnRegisterRequest::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CountMessageUnRegisterRequest::start_time() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterRequest.start_time)
  return start_time_;
}
inline void CountMessageUnRegisterRequest::set_start_time(::google::protobuf::uint64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterRequest.start_time)
}

// uint64 end_time = 5;
inline void CountMessageUnRegisterRequest::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CountMessageUnRegisterRequest::end_time() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterRequest.end_time)
  return end_time_;
}
inline void CountMessageUnRegisterRequest::set_end_time(::google::protobuf::uint64 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterRequest.end_time)
}

// -------------------------------------------------------------------

// CountMessageUnRegisterResponse

// uint64 count = 1;
inline void CountMessageUnRegisterResponse::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CountMessageUnRegisterResponse::count() const {
  // @@protoc_insertion_point(field_get:outer.history.CountMessageUnRegisterResponse.count)
  return count_;
}
inline void CountMessageUnRegisterResponse::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:outer.history.CountMessageUnRegisterResponse.count)
}

// -------------------------------------------------------------------

// MergeMessageRequest

// uint64 guid = 1;
inline void MergeMessageRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeMessageRequest::guid() const {
  // @@protoc_insertion_point(field_get:outer.history.MergeMessageRequest.guid)
  return guid_;
}
inline void MergeMessageRequest::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MergeMessageRequest.guid)
}

// -------------------------------------------------------------------

// MergeMessageResponse

// .common.errcode.EErrorCode ret = 1;
inline void MergeMessageResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode MergeMessageResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.history.MergeMessageResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void MergeMessageResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.history.MergeMessageResponse.ret)
}

// repeated .common.msg.MessageUnit data = 2;
inline int MergeMessageResponse::data_size() const {
  return data_.size();
}
inline const ::common::msg::MessageUnit& MergeMessageResponse::data(int index) const {
  // @@protoc_insertion_point(field_get:outer.history.MergeMessageResponse.data)
  return data_.Get(index);
}
inline ::common::msg::MessageUnit* MergeMessageResponse::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:outer.history.MergeMessageResponse.data)
  return data_.Mutable(index);
}
inline ::common::msg::MessageUnit* MergeMessageResponse::add_data() {
  // @@protoc_insertion_point(field_add:outer.history.MergeMessageResponse.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >*
MergeMessageResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:outer.history.MergeMessageResponse.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::msg::MessageUnit >&
MergeMessageResponse::data() const {
  // @@protoc_insertion_point(field_list:outer.history.MergeMessageResponse.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace history
}  // namespace outer

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::outer::history::END_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::outer::history::END_TYPE>() {
  return ::outer::history::END_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_outer_2fhistory_2eproto__INCLUDED
