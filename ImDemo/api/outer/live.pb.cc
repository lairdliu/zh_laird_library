// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/live.proto

#include "outer/live.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace live {
class LiveInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiveInfo>
      _instance;
} _LiveInfo_default_instance_;
class CreateLiveRoomRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateLiveRoomRequest>
      _instance;
} _CreateLiveRoomRequest_default_instance_;
class CreateLiveRoomResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateLiveRoomResponse>
      _instance;
} _CreateLiveRoomResponse_default_instance_;
class StartStreamingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartStreamingRequest>
      _instance;
} _StartStreamingRequest_default_instance_;
class StartStreamingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartStreamingResponse>
      _instance;
} _StartStreamingResponse_default_instance_;
class StopStreamingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopStreamingRequest>
      _instance;
} _StopStreamingRequest_default_instance_;
class StopStreamingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopStreamingResponse>
      _instance;
} _StopStreamingResponse_default_instance_;
class QueryLiveListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryLiveListRequest>
      _instance;
} _QueryLiveListRequest_default_instance_;
class QueryLiveListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryLiveListResponse>
      _instance;
} _QueryLiveListResponse_default_instance_;
}  // namespace live
}  // namespace outer
namespace protobuf_outer_2flive_2eproto {
void InitDefaultsLiveInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_LiveInfo_default_instance_;
    new (ptr) ::outer::live::LiveInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::LiveInfo::InitAsDefaultInstance();
}

void InitDefaultsLiveInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLiveInfoImpl);
}

void InitDefaultsCreateLiveRoomRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_CreateLiveRoomRequest_default_instance_;
    new (ptr) ::outer::live::CreateLiveRoomRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::CreateLiveRoomRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateLiveRoomRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateLiveRoomRequestImpl);
}

void InitDefaultsCreateLiveRoomResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_CreateLiveRoomResponse_default_instance_;
    new (ptr) ::outer::live::CreateLiveRoomResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::CreateLiveRoomResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateLiveRoomResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateLiveRoomResponseImpl);
}

void InitDefaultsStartStreamingRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_StartStreamingRequest_default_instance_;
    new (ptr) ::outer::live::StartStreamingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::StartStreamingRequest::InitAsDefaultInstance();
}

void InitDefaultsStartStreamingRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartStreamingRequestImpl);
}

void InitDefaultsStartStreamingResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_StartStreamingResponse_default_instance_;
    new (ptr) ::outer::live::StartStreamingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::StartStreamingResponse::InitAsDefaultInstance();
}

void InitDefaultsStartStreamingResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartStreamingResponseImpl);
}

void InitDefaultsStopStreamingRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_StopStreamingRequest_default_instance_;
    new (ptr) ::outer::live::StopStreamingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::StopStreamingRequest::InitAsDefaultInstance();
}

void InitDefaultsStopStreamingRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopStreamingRequestImpl);
}

void InitDefaultsStopStreamingResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_StopStreamingResponse_default_instance_;
    new (ptr) ::outer::live::StopStreamingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::StopStreamingResponse::InitAsDefaultInstance();
}

void InitDefaultsStopStreamingResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopStreamingResponseImpl);
}

void InitDefaultsQueryLiveListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::live::_QueryLiveListRequest_default_instance_;
    new (ptr) ::outer::live::QueryLiveListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::QueryLiveListRequest::InitAsDefaultInstance();
}

void InitDefaultsQueryLiveListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryLiveListRequestImpl);
}

void InitDefaultsQueryLiveListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2flive_2eproto::InitDefaultsLiveInfo();
  {
    void* ptr = &::outer::live::_QueryLiveListResponse_default_instance_;
    new (ptr) ::outer::live::QueryLiveListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::live::QueryLiveListResponse::InitAsDefaultInstance();
}

void InitDefaultsQueryLiveListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryLiveListResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, live_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, anchor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, anchor_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, head_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::LiveInfo, thumb_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, anchor_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, anchor_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, live_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, head_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomRequest, desc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomResponse, live_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomResponse, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::CreateLiveRoomResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingRequest, live_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingResponse, stream_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StartStreamingResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingRequest, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::StopStreamingResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::live::QueryLiveListResponse, live_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::live::LiveInfo)},
  { 11, -1, sizeof(::outer::live::CreateLiveRoomRequest)},
  { 22, -1, sizeof(::outer::live::CreateLiveRoomResponse)},
  { 30, -1, sizeof(::outer::live::StartStreamingRequest)},
  { 38, -1, sizeof(::outer::live::StartStreamingResponse)},
  { 45, -1, sizeof(::outer::live::StopStreamingRequest)},
  { 53, -1, sizeof(::outer::live::StopStreamingResponse)},
  { 59, -1, sizeof(::outer::live::QueryLiveListRequest)},
  { 66, -1, sizeof(::outer::live::QueryLiveListResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_LiveInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_CreateLiveRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_CreateLiveRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_StartStreamingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_StartStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_StopStreamingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_StopStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_QueryLiveListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::live::_QueryLiveListResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/live.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020outer/live.proto\022\nouter.live\032\024common/e"
      "rrcode.proto\"|\n\010LiveInfo\022\021\n\tlive_name\030\001 "
      "\001(\t\022\027\n\017anchor_username\030\002 \001(\t\022\023\n\013anchor_n"
      "ick\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\022\n\nhead_image\030\005 "
      "\001(\t\022\r\n\005thumb\030\006 \001(\t\"\212\001\n\025CreateLiveRoomReq"
      "uest\022\016\n\006appkey\030\001 \001(\t\022\027\n\017anchor_username\030"
      "\002 \001(\t\022\023\n\013anchor_nick\030\003 \001(\t\022\021\n\tlive_name\030"
      "\004 \001(\t\022\022\n\nhead_image\030\005 \001(\t\022\014\n\004desc\030\006 \001(\t\""
      "c\n\026CreateLiveRoomResponse\022\017\n\007live_id\030\001 \001"
      "(\t\022\017\n\007room_id\030\002 \001(\t\022\'\n\003ret\030\003 \001(\0162\032.commo"
      "n.errcode.EErrorCode\"J\n\025StartStreamingRe"
      "quest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022"
      "\017\n\007live_id\030\003 \001(\t\"T\n\026StartStreamingRespon"
      "se\022\021\n\tstream_id\030\001 \001(\t\022\'\n\003ret\030\002 \001(\0162\032.com"
      "mon.errcode.EErrorCode\"I\n\024StopStreamingR"
      "equest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t"
      "\022\017\n\007room_id\030\003 \001(\t\"@\n\025StopStreamingRespon"
      "se\022\'\n\003ret\030\002 \001(\0162\032.common.errcode.EErrorC"
      "ode\"8\n\024QueryLiveListRequest\022\016\n\006appkey\030\001 "
      "\001(\t\022\020\n\010username\030\002 \001(\t\"i\n\025QueryLiveListRe"
      "sponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EEr"
      "rorCode\022\'\n\tlive_info\030\002 \003(\0132\024.outer.live."
      "LiveInfo2\353\002\n\013LiveService\022W\n\016CreateLiveRo"
      "om\022!.outer.live.CreateLiveRoomRequest\032\"."
      "outer.live.CreateLiveRoomResponse\022W\n\016Sta"
      "rtStreaming\022!.outer.live.StartStreamingR"
      "equest\032\".outer.live.StartStreamingRespon"
      "se\022T\n\rStopStreaming\022 .outer.live.StopStr"
      "eamingRequest\032!.outer.live.StopStreaming"
      "Response\022T\n\rQueryLiveList\022 .outer.live.Q"
      "ueryLiveListRequest\032!.outer.live.QueryLi"
      "veListResponseB&\n\034com.cmcc.littlec.proto"
      ".outerB\004LiveP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/live.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2flive_2eproto
namespace outer {
namespace live {

// ===================================================================

void LiveInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiveInfo::kLiveNameFieldNumber;
const int LiveInfo::kAnchorUsernameFieldNumber;
const int LiveInfo::kAnchorNickFieldNumber;
const int LiveInfo::kDescFieldNumber;
const int LiveInfo::kHeadImageFieldNumber;
const int LiveInfo::kThumbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiveInfo::LiveInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsLiveInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.LiveInfo)
}
LiveInfo::LiveInfo(const LiveInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.live_name().size() > 0) {
    live_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_name_);
  }
  anchor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.anchor_username().size() > 0) {
    anchor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_username_);
  }
  anchor_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.anchor_nick().size() > 0) {
    anchor_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_nick_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  head_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.head_image().size() > 0) {
    head_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_image_);
  }
  thumb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumb().size() > 0) {
    thumb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.live.LiveInfo)
}

void LiveInfo::SharedCtor() {
  live_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LiveInfo::~LiveInfo() {
  // @@protoc_insertion_point(destructor:outer.live.LiveInfo)
  SharedDtor();
}

void LiveInfo::SharedDtor() {
  live_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LiveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveInfo::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiveInfo& LiveInfo::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsLiveInfo();
  return *internal_default_instance();
}

LiveInfo* LiveInfo::New(::google::protobuf::Arena* arena) const {
  LiveInfo* n = new LiveInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LiveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.LiveInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string live_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->live_name().data(), static_cast<int>(this->live_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.live_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string anchor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.anchor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string anchor_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.anchor_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string head_image = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head_image().data(), static_cast<int>(this->head_image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.head_image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumb = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumb()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumb().data(), static_cast<int>(this->thumb().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.LiveInfo.thumb"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.LiveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.LiveInfo)
  return false;
#undef DO_
}

void LiveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string live_name = 1;
  if (this->live_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_name().data(), static_cast<int>(this->live_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.live_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->live_name(), output);
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.anchor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->anchor_username(), output);
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.anchor_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->anchor_nick(), output);
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desc(), output);
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head_image().data(), static_cast<int>(this->head_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.head_image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->head_image(), output);
  }

  // string thumb = 6;
  if (this->thumb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb().data(), static_cast<int>(this->thumb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.thumb");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.LiveInfo)
}

::google::protobuf::uint8* LiveInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.LiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string live_name = 1;
  if (this->live_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_name().data(), static_cast<int>(this->live_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.live_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->live_name(), target);
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.anchor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->anchor_username(), target);
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.anchor_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->anchor_nick(), target);
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head_image().data(), static_cast<int>(this->head_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.head_image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->head_image(), target);
  }

  // string thumb = 6;
  if (this->thumb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb().data(), static_cast<int>(this->thumb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.LiveInfo.thumb");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.LiveInfo)
  return target;
}

size_t LiveInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.LiveInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string live_name = 1;
  if (this->live_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->live_name());
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anchor_username());
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anchor_nick());
  }

  // string desc = 4;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head_image());
  }

  // string thumb = 6;
  if (this->thumb().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.LiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LiveInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiveInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.LiveInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.LiveInfo)
    MergeFrom(*source);
  }
}

void LiveInfo::MergeFrom(const LiveInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.LiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_name().size() > 0) {

    live_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_name_);
  }
  if (from.anchor_username().size() > 0) {

    anchor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_username_);
  }
  if (from.anchor_nick().size() > 0) {

    anchor_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_nick_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.head_image().size() > 0) {

    head_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_image_);
  }
  if (from.thumb().size() > 0) {

    thumb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_);
  }
}

void LiveInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.LiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveInfo::CopyFrom(const LiveInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.LiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveInfo::IsInitialized() const {
  return true;
}

void LiveInfo::Swap(LiveInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveInfo::InternalSwap(LiveInfo* other) {
  using std::swap;
  live_name_.Swap(&other->live_name_);
  anchor_username_.Swap(&other->anchor_username_);
  anchor_nick_.Swap(&other->anchor_nick_);
  desc_.Swap(&other->desc_);
  head_image_.Swap(&other->head_image_);
  thumb_.Swap(&other->thumb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveInfo::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateLiveRoomRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateLiveRoomRequest::kAppkeyFieldNumber;
const int CreateLiveRoomRequest::kAnchorUsernameFieldNumber;
const int CreateLiveRoomRequest::kAnchorNickFieldNumber;
const int CreateLiveRoomRequest::kLiveNameFieldNumber;
const int CreateLiveRoomRequest::kHeadImageFieldNumber;
const int CreateLiveRoomRequest::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateLiveRoomRequest::CreateLiveRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsCreateLiveRoomRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.CreateLiveRoomRequest)
}
CreateLiveRoomRequest::CreateLiveRoomRequest(const CreateLiveRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  anchor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.anchor_username().size() > 0) {
    anchor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_username_);
  }
  anchor_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.anchor_nick().size() > 0) {
    anchor_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_nick_);
  }
  live_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.live_name().size() > 0) {
    live_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_name_);
  }
  head_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.head_image().size() > 0) {
    head_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_image_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.live.CreateLiveRoomRequest)
}

void CreateLiveRoomRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateLiveRoomRequest::~CreateLiveRoomRequest() {
  // @@protoc_insertion_point(destructor:outer.live.CreateLiveRoomRequest)
  SharedDtor();
}

void CreateLiveRoomRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateLiveRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateLiveRoomRequest::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateLiveRoomRequest& CreateLiveRoomRequest::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsCreateLiveRoomRequest();
  return *internal_default_instance();
}

CreateLiveRoomRequest* CreateLiveRoomRequest::New(::google::protobuf::Arena* arena) const {
  CreateLiveRoomRequest* n = new CreateLiveRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateLiveRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.CreateLiveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anchor_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateLiveRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.CreateLiveRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string anchor_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.anchor_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string anchor_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anchor_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.anchor_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string live_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->live_name().data(), static_cast<int>(this->live_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.live_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string head_image = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head_image().data(), static_cast<int>(this->head_image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.head_image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string desc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomRequest.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.CreateLiveRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.CreateLiveRoomRequest)
  return false;
#undef DO_
}

void CreateLiveRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.CreateLiveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.anchor_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->anchor_username(), output);
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.anchor_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->anchor_nick(), output);
  }

  // string live_name = 4;
  if (this->live_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_name().data(), static_cast<int>(this->live_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.live_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->live_name(), output);
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head_image().data(), static_cast<int>(this->head_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.head_image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->head_image(), output);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->desc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.CreateLiveRoomRequest)
}

::google::protobuf::uint8* CreateLiveRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.CreateLiveRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_username().data(), static_cast<int>(this->anchor_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.anchor_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->anchor_username(), target);
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anchor_nick().data(), static_cast<int>(this->anchor_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.anchor_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->anchor_nick(), target);
  }

  // string live_name = 4;
  if (this->live_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_name().data(), static_cast<int>(this->live_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.live_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->live_name(), target);
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head_image().data(), static_cast<int>(this->head_image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.head_image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->head_image(), target);
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomRequest.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.CreateLiveRoomRequest)
  return target;
}

size_t CreateLiveRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.CreateLiveRoomRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string anchor_username = 2;
  if (this->anchor_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anchor_username());
  }

  // string anchor_nick = 3;
  if (this->anchor_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anchor_nick());
  }

  // string live_name = 4;
  if (this->live_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->live_name());
  }

  // string head_image = 5;
  if (this->head_image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head_image());
  }

  // string desc = 6;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateLiveRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.CreateLiveRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateLiveRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateLiveRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.CreateLiveRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.CreateLiveRoomRequest)
    MergeFrom(*source);
  }
}

void CreateLiveRoomRequest::MergeFrom(const CreateLiveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.CreateLiveRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.anchor_username().size() > 0) {

    anchor_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_username_);
  }
  if (from.anchor_nick().size() > 0) {

    anchor_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anchor_nick_);
  }
  if (from.live_name().size() > 0) {

    live_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_name_);
  }
  if (from.head_image().size() > 0) {

    head_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_image_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
}

void CreateLiveRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.CreateLiveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateLiveRoomRequest::CopyFrom(const CreateLiveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.CreateLiveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLiveRoomRequest::IsInitialized() const {
  return true;
}

void CreateLiveRoomRequest::Swap(CreateLiveRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateLiveRoomRequest::InternalSwap(CreateLiveRoomRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  anchor_username_.Swap(&other->anchor_username_);
  anchor_nick_.Swap(&other->anchor_nick_);
  live_name_.Swap(&other->live_name_);
  head_image_.Swap(&other->head_image_);
  desc_.Swap(&other->desc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateLiveRoomRequest::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateLiveRoomResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateLiveRoomResponse::kLiveIdFieldNumber;
const int CreateLiveRoomResponse::kRoomIdFieldNumber;
const int CreateLiveRoomResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateLiveRoomResponse::CreateLiveRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsCreateLiveRoomResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.CreateLiveRoomResponse)
}
CreateLiveRoomResponse::CreateLiveRoomResponse(const CreateLiveRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  live_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.live_id().size() > 0) {
    live_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_id_);
  }
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_id().size() > 0) {
    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.live.CreateLiveRoomResponse)
}

void CreateLiveRoomResponse::SharedCtor() {
  live_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

CreateLiveRoomResponse::~CreateLiveRoomResponse() {
  // @@protoc_insertion_point(destructor:outer.live.CreateLiveRoomResponse)
  SharedDtor();
}

void CreateLiveRoomResponse::SharedDtor() {
  live_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateLiveRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateLiveRoomResponse::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateLiveRoomResponse& CreateLiveRoomResponse::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsCreateLiveRoomResponse();
  return *internal_default_instance();
}

CreateLiveRoomResponse* CreateLiveRoomResponse::New(::google::protobuf::Arena* arena) const {
  CreateLiveRoomResponse* n = new CreateLiveRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateLiveRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.CreateLiveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool CreateLiveRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.CreateLiveRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string live_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->live_id().data(), static_cast<int>(this->live_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomResponse.live_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_id().data(), static_cast<int>(this->room_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.CreateLiveRoomResponse.room_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.errcode.EErrorCode ret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.CreateLiveRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.CreateLiveRoomResponse)
  return false;
#undef DO_
}

void CreateLiveRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.CreateLiveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string live_id = 1;
  if (this->live_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_id().data(), static_cast<int>(this->live_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomResponse.live_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->live_id(), output);
  }

  // string room_id = 2;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomResponse.room_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->room_id(), output);
  }

  // .common.errcode.EErrorCode ret = 3;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.CreateLiveRoomResponse)
}

::google::protobuf::uint8* CreateLiveRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.CreateLiveRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string live_id = 1;
  if (this->live_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_id().data(), static_cast<int>(this->live_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomResponse.live_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->live_id(), target);
  }

  // string room_id = 2;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.CreateLiveRoomResponse.room_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->room_id(), target);
  }

  // .common.errcode.EErrorCode ret = 3;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.CreateLiveRoomResponse)
  return target;
}

size_t CreateLiveRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.CreateLiveRoomResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string live_id = 1;
  if (this->live_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->live_id());
  }

  // string room_id = 2;
  if (this->room_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_id());
  }

  // .common.errcode.EErrorCode ret = 3;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateLiveRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.CreateLiveRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateLiveRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateLiveRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.CreateLiveRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.CreateLiveRoomResponse)
    MergeFrom(*source);
  }
}

void CreateLiveRoomResponse::MergeFrom(const CreateLiveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.CreateLiveRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.live_id().size() > 0) {

    live_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_id_);
  }
  if (from.room_id().size() > 0) {

    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CreateLiveRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.CreateLiveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateLiveRoomResponse::CopyFrom(const CreateLiveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.CreateLiveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLiveRoomResponse::IsInitialized() const {
  return true;
}

void CreateLiveRoomResponse::Swap(CreateLiveRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateLiveRoomResponse::InternalSwap(CreateLiveRoomResponse* other) {
  using std::swap;
  live_id_.Swap(&other->live_id_);
  room_id_.Swap(&other->room_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateLiveRoomResponse::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartStreamingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartStreamingRequest::kUsernameFieldNumber;
const int StartStreamingRequest::kAppkeyFieldNumber;
const int StartStreamingRequest::kLiveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartStreamingRequest::StartStreamingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsStartStreamingRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.StartStreamingRequest)
}
StartStreamingRequest::StartStreamingRequest(const StartStreamingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  live_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.live_id().size() > 0) {
    live_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.live.StartStreamingRequest)
}

void StartStreamingRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StartStreamingRequest::~StartStreamingRequest() {
  // @@protoc_insertion_point(destructor:outer.live.StartStreamingRequest)
  SharedDtor();
}

void StartStreamingRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartStreamingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartStreamingRequest::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartStreamingRequest& StartStreamingRequest::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsStartStreamingRequest();
  return *internal_default_instance();
}

StartStreamingRequest* StartStreamingRequest::New(::google::protobuf::Arena* arena) const {
  StartStreamingRequest* n = new StartStreamingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.StartStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  live_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StartStreamingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.StartStreamingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StartStreamingRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StartStreamingRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string live_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_live_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->live_id().data(), static_cast<int>(this->live_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StartStreamingRequest.live_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.StartStreamingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.StartStreamingRequest)
  return false;
#undef DO_
}

void StartStreamingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.StartStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string live_id = 3;
  if (this->live_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_id().data(), static_cast<int>(this->live_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.live_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->live_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.StartStreamingRequest)
}

::google::protobuf::uint8* StartStreamingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.StartStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string live_id = 3;
  if (this->live_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->live_id().data(), static_cast<int>(this->live_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingRequest.live_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->live_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.StartStreamingRequest)
  return target;
}

size_t StartStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.StartStreamingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string live_id = 3;
  if (this->live_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->live_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartStreamingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.StartStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartStreamingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartStreamingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.StartStreamingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.StartStreamingRequest)
    MergeFrom(*source);
  }
}

void StartStreamingRequest::MergeFrom(const StartStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.StartStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.live_id().size() > 0) {

    live_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.live_id_);
  }
}

void StartStreamingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.StartStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartStreamingRequest::CopyFrom(const StartStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.StartStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartStreamingRequest::IsInitialized() const {
  return true;
}

void StartStreamingRequest::Swap(StartStreamingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartStreamingRequest::InternalSwap(StartStreamingRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  live_id_.Swap(&other->live_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartStreamingRequest::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartStreamingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartStreamingResponse::kStreamIdFieldNumber;
const int StartStreamingResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartStreamingResponse::StartStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsStartStreamingResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.StartStreamingResponse)
}
StartStreamingResponse::StartStreamingResponse(const StartStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stream_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream_id().size() > 0) {
    stream_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.live.StartStreamingResponse)
}

void StartStreamingResponse::SharedCtor() {
  stream_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

StartStreamingResponse::~StartStreamingResponse() {
  // @@protoc_insertion_point(destructor:outer.live.StartStreamingResponse)
  SharedDtor();
}

void StartStreamingResponse::SharedDtor() {
  stream_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartStreamingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartStreamingResponse::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartStreamingResponse& StartStreamingResponse::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsStartStreamingResponse();
  return *internal_default_instance();
}

StartStreamingResponse* StartStreamingResponse::New(::google::protobuf::Arena* arena) const {
  StartStreamingResponse* n = new StartStreamingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.StartStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool StartStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.StartStreamingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string stream_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stream_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stream_id().data(), static_cast<int>(this->stream_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StartStreamingResponse.stream_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.errcode.EErrorCode ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.StartStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.StartStreamingResponse)
  return false;
#undef DO_
}

void StartStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.StartStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stream_id().data(), static_cast<int>(this->stream_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingResponse.stream_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stream_id(), output);
  }

  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.StartStreamingResponse)
}

::google::protobuf::uint8* StartStreamingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.StartStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stream_id().data(), static_cast<int>(this->stream_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StartStreamingResponse.stream_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stream_id(), target);
  }

  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.StartStreamingResponse)
  return target;
}

size_t StartStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.StartStreamingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stream_id());
  }

  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.StartStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartStreamingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartStreamingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.StartStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.StartStreamingResponse)
    MergeFrom(*source);
  }
}

void StartStreamingResponse::MergeFrom(const StartStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.StartStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_id().size() > 0) {

    stream_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void StartStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.StartStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartStreamingResponse::CopyFrom(const StartStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.StartStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartStreamingResponse::IsInitialized() const {
  return true;
}

void StartStreamingResponse::Swap(StartStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartStreamingResponse::InternalSwap(StartStreamingResponse* other) {
  using std::swap;
  stream_id_.Swap(&other->stream_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartStreamingResponse::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopStreamingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopStreamingRequest::kUsernameFieldNumber;
const int StopStreamingRequest::kAppkeyFieldNumber;
const int StopStreamingRequest::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopStreamingRequest::StopStreamingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsStopStreamingRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.StopStreamingRequest)
}
StopStreamingRequest::StopStreamingRequest(const StopStreamingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_id().size() > 0) {
    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.live.StopStreamingRequest)
}

void StopStreamingRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StopStreamingRequest::~StopStreamingRequest() {
  // @@protoc_insertion_point(destructor:outer.live.StopStreamingRequest)
  SharedDtor();
}

void StopStreamingRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopStreamingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopStreamingRequest::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopStreamingRequest& StopStreamingRequest::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsStopStreamingRequest();
  return *internal_default_instance();
}

StopStreamingRequest* StopStreamingRequest::New(::google::protobuf::Arena* arena) const {
  StopStreamingRequest* n = new StopStreamingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.StopStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StopStreamingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.StopStreamingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StopStreamingRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StopStreamingRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string room_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_id().data(), static_cast<int>(this->room_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.StopStreamingRequest.room_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.StopStreamingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.StopStreamingRequest)
  return false;
#undef DO_
}

void StopStreamingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.StopStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string room_id = 3;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.room_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.StopStreamingRequest)
}

::google::protobuf::uint8* StopStreamingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.StopStreamingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string room_id = 3;
  if (this->room_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_id().data(), static_cast<int>(this->room_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.StopStreamingRequest.room_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.StopStreamingRequest)
  return target;
}

size_t StopStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.StopStreamingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string room_id = 3;
  if (this->room_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopStreamingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.StopStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopStreamingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopStreamingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.StopStreamingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.StopStreamingRequest)
    MergeFrom(*source);
  }
}

void StopStreamingRequest::MergeFrom(const StopStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.StopStreamingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.room_id().size() > 0) {

    room_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_id_);
  }
}

void StopStreamingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.StopStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopStreamingRequest::CopyFrom(const StopStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.StopStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopStreamingRequest::IsInitialized() const {
  return true;
}

void StopStreamingRequest::Swap(StopStreamingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopStreamingRequest::InternalSwap(StopStreamingRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  room_id_.Swap(&other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopStreamingRequest::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopStreamingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopStreamingResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopStreamingResponse::StopStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsStopStreamingResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.StopStreamingResponse)
}
StopStreamingResponse::StopStreamingResponse(const StopStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.live.StopStreamingResponse)
}

void StopStreamingResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

StopStreamingResponse::~StopStreamingResponse() {
  // @@protoc_insertion_point(destructor:outer.live.StopStreamingResponse)
  SharedDtor();
}

void StopStreamingResponse::SharedDtor() {
}

void StopStreamingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopStreamingResponse::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopStreamingResponse& StopStreamingResponse::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsStopStreamingResponse();
  return *internal_default_instance();
}

StopStreamingResponse* StopStreamingResponse::New(::google::protobuf::Arena* arena) const {
  StopStreamingResponse* n = new StopStreamingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.StopStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool StopStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.StopStreamingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.StopStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.StopStreamingResponse)
  return false;
#undef DO_
}

void StopStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.StopStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.StopStreamingResponse)
}

::google::protobuf::uint8* StopStreamingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.StopStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.StopStreamingResponse)
  return target;
}

size_t StopStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.StopStreamingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.StopStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopStreamingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopStreamingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.StopStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.StopStreamingResponse)
    MergeFrom(*source);
  }
}

void StopStreamingResponse::MergeFrom(const StopStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.StopStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void StopStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.StopStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopStreamingResponse::CopyFrom(const StopStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.StopStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopStreamingResponse::IsInitialized() const {
  return true;
}

void StopStreamingResponse::Swap(StopStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopStreamingResponse::InternalSwap(StopStreamingResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopStreamingResponse::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryLiveListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryLiveListRequest::kAppkeyFieldNumber;
const int QueryLiveListRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryLiveListRequest::QueryLiveListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsQueryLiveListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.QueryLiveListRequest)
}
QueryLiveListRequest::QueryLiveListRequest(const QueryLiveListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.live.QueryLiveListRequest)
}

void QueryLiveListRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryLiveListRequest::~QueryLiveListRequest() {
  // @@protoc_insertion_point(destructor:outer.live.QueryLiveListRequest)
  SharedDtor();
}

void QueryLiveListRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryLiveListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryLiveListRequest::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryLiveListRequest& QueryLiveListRequest::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsQueryLiveListRequest();
  return *internal_default_instance();
}

QueryLiveListRequest* QueryLiveListRequest::New(::google::protobuf::Arena* arena) const {
  QueryLiveListRequest* n = new QueryLiveListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryLiveListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.QueryLiveListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryLiveListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.QueryLiveListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.QueryLiveListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.live.QueryLiveListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.QueryLiveListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.QueryLiveListRequest)
  return false;
#undef DO_
}

void QueryLiveListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.QueryLiveListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.QueryLiveListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.QueryLiveListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.QueryLiveListRequest)
}

::google::protobuf::uint8* QueryLiveListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.QueryLiveListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.QueryLiveListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.live.QueryLiveListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.QueryLiveListRequest)
  return target;
}

size_t QueryLiveListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.QueryLiveListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryLiveListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.QueryLiveListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryLiveListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryLiveListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.QueryLiveListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.QueryLiveListRequest)
    MergeFrom(*source);
  }
}

void QueryLiveListRequest::MergeFrom(const QueryLiveListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.QueryLiveListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void QueryLiveListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.QueryLiveListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryLiveListRequest::CopyFrom(const QueryLiveListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.QueryLiveListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLiveListRequest::IsInitialized() const {
  return true;
}

void QueryLiveListRequest::Swap(QueryLiveListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryLiveListRequest::InternalSwap(QueryLiveListRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryLiveListRequest::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryLiveListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryLiveListResponse::kRetFieldNumber;
const int QueryLiveListResponse::kLiveInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryLiveListResponse::QueryLiveListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2flive_2eproto::InitDefaultsQueryLiveListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.live.QueryLiveListResponse)
}
QueryLiveListResponse::QueryLiveListResponse(const QueryLiveListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      live_info_(from.live_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.live.QueryLiveListResponse)
}

void QueryLiveListResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

QueryLiveListResponse::~QueryLiveListResponse() {
  // @@protoc_insertion_point(destructor:outer.live.QueryLiveListResponse)
  SharedDtor();
}

void QueryLiveListResponse::SharedDtor() {
}

void QueryLiveListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryLiveListResponse::descriptor() {
  ::protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryLiveListResponse& QueryLiveListResponse::default_instance() {
  ::protobuf_outer_2flive_2eproto::InitDefaultsQueryLiveListResponse();
  return *internal_default_instance();
}

QueryLiveListResponse* QueryLiveListResponse::New(::google::protobuf::Arena* arena) const {
  QueryLiveListResponse* n = new QueryLiveListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryLiveListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.live.QueryLiveListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  live_info_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool QueryLiveListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.live.QueryLiveListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.live.LiveInfo live_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_live_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.live.QueryLiveListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.live.QueryLiveListResponse)
  return false;
#undef DO_
}

void QueryLiveListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.live.QueryLiveListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.live.LiveInfo live_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->live_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->live_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.live.QueryLiveListResponse)
}

::google::protobuf::uint8* QueryLiveListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.live.QueryLiveListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.live.LiveInfo live_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->live_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->live_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.live.QueryLiveListResponse)
  return target;
}

size_t QueryLiveListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.live.QueryLiveListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.live.LiveInfo live_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->live_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->live_info(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryLiveListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.live.QueryLiveListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryLiveListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryLiveListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.live.QueryLiveListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.live.QueryLiveListResponse)
    MergeFrom(*source);
  }
}

void QueryLiveListResponse::MergeFrom(const QueryLiveListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.live.QueryLiveListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  live_info_.MergeFrom(from.live_info_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void QueryLiveListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.live.QueryLiveListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryLiveListResponse::CopyFrom(const QueryLiveListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.live.QueryLiveListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLiveListResponse::IsInitialized() const {
  return true;
}

void QueryLiveListResponse::Swap(QueryLiveListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryLiveListResponse::InternalSwap(QueryLiveListResponse* other) {
  using std::swap;
  live_info_.InternalSwap(&other->live_info_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryLiveListResponse::GetMetadata() const {
  protobuf_outer_2flive_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2flive_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace live
}  // namespace outer

// @@protoc_insertion_point(global_scope)
