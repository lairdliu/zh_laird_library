// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/jimao.proto

#ifndef PROTOBUF_outer_2fjimao_2eproto__INCLUDED
#define PROTOBUF_outer_2fjimao_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common/errcode.pb.h"
#include "common/msg.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_outer_2fjimao_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsJimaoReadedSignalImpl();
void InitDefaultsJimaoReadedSignal();
void InitDefaultsJimaoSendedSignalImpl();
void InitDefaultsJimaoSendedSignal();
void InitDefaultsReadJimaoRequestImpl();
void InitDefaultsReadJimaoRequest();
void InitDefaultsReadJimaoResponseImpl();
void InitDefaultsReadJimaoResponse();
void InitDefaultsGetJimaoStatusRequestImpl();
void InitDefaultsGetJimaoStatusRequest();
void InitDefaultsGetJimaoStatusResponseImpl();
void InitDefaultsGetJimaoStatusResponse();
inline void InitDefaults() {
  InitDefaultsJimaoReadedSignal();
  InitDefaultsJimaoSendedSignal();
  InitDefaultsReadJimaoRequest();
  InitDefaultsReadJimaoResponse();
  InitDefaultsGetJimaoStatusRequest();
  InitDefaultsGetJimaoStatusResponse();
}
}  // namespace protobuf_outer_2fjimao_2eproto
namespace outer {
namespace jimao {
class GetJimaoStatusRequest;
class GetJimaoStatusRequestDefaultTypeInternal;
extern GetJimaoStatusRequestDefaultTypeInternal _GetJimaoStatusRequest_default_instance_;
class GetJimaoStatusResponse;
class GetJimaoStatusResponseDefaultTypeInternal;
extern GetJimaoStatusResponseDefaultTypeInternal _GetJimaoStatusResponse_default_instance_;
class JimaoReadedSignal;
class JimaoReadedSignalDefaultTypeInternal;
extern JimaoReadedSignalDefaultTypeInternal _JimaoReadedSignal_default_instance_;
class JimaoSendedSignal;
class JimaoSendedSignalDefaultTypeInternal;
extern JimaoSendedSignalDefaultTypeInternal _JimaoSendedSignal_default_instance_;
class ReadJimaoRequest;
class ReadJimaoRequestDefaultTypeInternal;
extern ReadJimaoRequestDefaultTypeInternal _ReadJimaoRequest_default_instance_;
class ReadJimaoResponse;
class ReadJimaoResponseDefaultTypeInternal;
extern ReadJimaoResponseDefaultTypeInternal _ReadJimaoResponse_default_instance_;
}  // namespace jimao
}  // namespace outer
namespace outer {
namespace jimao {

// ===================================================================

class JimaoReadedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.JimaoReadedSignal) */ {
 public:
  JimaoReadedSignal();
  virtual ~JimaoReadedSignal();

  JimaoReadedSignal(const JimaoReadedSignal& from);

  inline JimaoReadedSignal& operator=(const JimaoReadedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JimaoReadedSignal(JimaoReadedSignal&& from) noexcept
    : JimaoReadedSignal() {
    *this = ::std::move(from);
  }

  inline JimaoReadedSignal& operator=(JimaoReadedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JimaoReadedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JimaoReadedSignal* internal_default_instance() {
    return reinterpret_cast<const JimaoReadedSignal*>(
               &_JimaoReadedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(JimaoReadedSignal* other);
  friend void swap(JimaoReadedSignal& a, JimaoReadedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JimaoReadedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  JimaoReadedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JimaoReadedSignal& from);
  void MergeFrom(const JimaoReadedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JimaoReadedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string read_username = 3;
  void clear_read_username();
  static const int kReadUsernameFieldNumber = 3;
  const ::std::string& read_username() const;
  void set_read_username(const ::std::string& value);
  #if LANG_CXX11
  void set_read_username(::std::string&& value);
  #endif
  void set_read_username(const char* value);
  void set_read_username(const char* value, size_t size);
  ::std::string* mutable_read_username();
  ::std::string* release_read_username();
  void set_allocated_read_username(::std::string* read_username);

  // string read_nick = 4;
  void clear_read_nick();
  static const int kReadNickFieldNumber = 4;
  const ::std::string& read_nick() const;
  void set_read_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_read_nick(::std::string&& value);
  #endif
  void set_read_nick(const char* value);
  void set_read_nick(const char* value, size_t size);
  ::std::string* mutable_read_nick();
  ::std::string* release_read_nick();
  void set_allocated_read_nick(::std::string* read_nick);

  // string uri = 6;
  void clear_uri();
  static const int kUriFieldNumber = 6;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // uint64 guid = 5;
  void clear_guid();
  static const int kGuidFieldNumber = 5;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.jimao.JimaoReadedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr read_username_;
  ::google::protobuf::internal::ArenaStringPtr read_nick_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsJimaoReadedSignalImpl();
};
// -------------------------------------------------------------------

class JimaoSendedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.JimaoSendedSignal) */ {
 public:
  JimaoSendedSignal();
  virtual ~JimaoSendedSignal();

  JimaoSendedSignal(const JimaoSendedSignal& from);

  inline JimaoSendedSignal& operator=(const JimaoSendedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JimaoSendedSignal(JimaoSendedSignal&& from) noexcept
    : JimaoSendedSignal() {
    *this = ::std::move(from);
  }

  inline JimaoSendedSignal& operator=(JimaoSendedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JimaoSendedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JimaoSendedSignal* internal_default_instance() {
    return reinterpret_cast<const JimaoSendedSignal*>(
               &_JimaoSendedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(JimaoSendedSignal* other);
  friend void swap(JimaoSendedSignal& a, JimaoSendedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JimaoSendedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  JimaoSendedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JimaoSendedSignal& from);
  void MergeFrom(const JimaoSendedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JimaoSendedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string to_username = 3;
  int to_username_size() const;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 3;
  const ::std::string& to_username(int index) const;
  ::std::string* mutable_to_username(int index);
  void set_to_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(int index, ::std::string&& value);
  #endif
  void set_to_username(int index, const char* value);
  void set_to_username(int index, const char* value, size_t size);
  ::std::string* add_to_username();
  void add_to_username(const ::std::string& value);
  #if LANG_CXX11
  void add_to_username(::std::string&& value);
  #endif
  void add_to_username(const char* value);
  void add_to_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& to_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_to_username();

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string uri = 5;
  void clear_uri();
  static const int kUriFieldNumber = 5;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // uint64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.jimao.JimaoSendedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> to_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsJimaoSendedSignalImpl();
};
// -------------------------------------------------------------------

class ReadJimaoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.ReadJimaoRequest) */ {
 public:
  ReadJimaoRequest();
  virtual ~ReadJimaoRequest();

  ReadJimaoRequest(const ReadJimaoRequest& from);

  inline ReadJimaoRequest& operator=(const ReadJimaoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadJimaoRequest(ReadJimaoRequest&& from) noexcept
    : ReadJimaoRequest() {
    *this = ::std::move(from);
  }

  inline ReadJimaoRequest& operator=(ReadJimaoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadJimaoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadJimaoRequest* internal_default_instance() {
    return reinterpret_cast<const ReadJimaoRequest*>(
               &_ReadJimaoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ReadJimaoRequest* other);
  friend void swap(ReadJimaoRequest& a, ReadJimaoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadJimaoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadJimaoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadJimaoRequest& from);
  void MergeFrom(const ReadJimaoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadJimaoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string read_username = 3;
  void clear_read_username();
  static const int kReadUsernameFieldNumber = 3;
  const ::std::string& read_username() const;
  void set_read_username(const ::std::string& value);
  #if LANG_CXX11
  void set_read_username(::std::string&& value);
  #endif
  void set_read_username(const char* value);
  void set_read_username(const char* value, size_t size);
  ::std::string* mutable_read_username();
  ::std::string* release_read_username();
  void set_allocated_read_username(::std::string* read_username);

  // string uri = 5;
  void clear_uri();
  static const int kUriFieldNumber = 5;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // uint64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // .common.msg.EMsgType msg_type = 6;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 6;
  ::common::msg::EMsgType msg_type() const;
  void set_msg_type(::common::msg::EMsgType value);

  // @@protoc_insertion_point(class_scope:outer.jimao.ReadJimaoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr read_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::uint64 guid_;
  int msg_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsReadJimaoRequestImpl();
};
// -------------------------------------------------------------------

class ReadJimaoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.ReadJimaoResponse) */ {
 public:
  ReadJimaoResponse();
  virtual ~ReadJimaoResponse();

  ReadJimaoResponse(const ReadJimaoResponse& from);

  inline ReadJimaoResponse& operator=(const ReadJimaoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadJimaoResponse(ReadJimaoResponse&& from) noexcept
    : ReadJimaoResponse() {
    *this = ::std::move(from);
  }

  inline ReadJimaoResponse& operator=(ReadJimaoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadJimaoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadJimaoResponse* internal_default_instance() {
    return reinterpret_cast<const ReadJimaoResponse*>(
               &_ReadJimaoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ReadJimaoResponse* other);
  friend void swap(ReadJimaoResponse& a, ReadJimaoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadJimaoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadJimaoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadJimaoResponse& from);
  void MergeFrom(const ReadJimaoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadJimaoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.jimao.ReadJimaoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsReadJimaoResponseImpl();
};
// -------------------------------------------------------------------

class GetJimaoStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.GetJimaoStatusRequest) */ {
 public:
  GetJimaoStatusRequest();
  virtual ~GetJimaoStatusRequest();

  GetJimaoStatusRequest(const GetJimaoStatusRequest& from);

  inline GetJimaoStatusRequest& operator=(const GetJimaoStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJimaoStatusRequest(GetJimaoStatusRequest&& from) noexcept
    : GetJimaoStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetJimaoStatusRequest& operator=(GetJimaoStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJimaoStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJimaoStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetJimaoStatusRequest*>(
               &_GetJimaoStatusRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetJimaoStatusRequest* other);
  friend void swap(GetJimaoStatusRequest& a, GetJimaoStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJimaoStatusRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetJimaoStatusRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetJimaoStatusRequest& from);
  void MergeFrom(const GetJimaoStatusRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetJimaoStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // uint64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.jimao.GetJimaoStatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsGetJimaoStatusRequestImpl();
};
// -------------------------------------------------------------------

class GetJimaoStatusResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.jimao.GetJimaoStatusResponse) */ {
 public:
  GetJimaoStatusResponse();
  virtual ~GetJimaoStatusResponse();

  GetJimaoStatusResponse(const GetJimaoStatusResponse& from);

  inline GetJimaoStatusResponse& operator=(const GetJimaoStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetJimaoStatusResponse(GetJimaoStatusResponse&& from) noexcept
    : GetJimaoStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetJimaoStatusResponse& operator=(GetJimaoStatusResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJimaoStatusResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetJimaoStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetJimaoStatusResponse*>(
               &_GetJimaoStatusResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetJimaoStatusResponse* other);
  friend void swap(GetJimaoStatusResponse& a, GetJimaoStatusResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetJimaoStatusResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetJimaoStatusResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetJimaoStatusResponse& from);
  void MergeFrom(const GetJimaoStatusResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetJimaoStatusResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string unread_username = 3;
  int unread_username_size() const;
  void clear_unread_username();
  static const int kUnreadUsernameFieldNumber = 3;
  const ::std::string& unread_username(int index) const;
  ::std::string* mutable_unread_username(int index);
  void set_unread_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_unread_username(int index, ::std::string&& value);
  #endif
  void set_unread_username(int index, const char* value);
  void set_unread_username(int index, const char* value, size_t size);
  ::std::string* add_unread_username();
  void add_unread_username(const ::std::string& value);
  #if LANG_CXX11
  void add_unread_username(::std::string&& value);
  #endif
  void add_unread_username(const char* value);
  void add_unread_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& unread_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_unread_username();

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // int32 jimao_status = 2;
  void clear_jimao_status();
  static const int kJimaoStatusFieldNumber = 2;
  ::google::protobuf::int32 jimao_status() const;
  void set_jimao_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:outer.jimao.GetJimaoStatusResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> unread_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  int ret_;
  ::google::protobuf::int32 jimao_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fjimao_2eproto::TableStruct;
  friend void ::protobuf_outer_2fjimao_2eproto::InitDefaultsGetJimaoStatusResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JimaoReadedSignal

// string appkey = 1;
inline void JimaoReadedSignal::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoReadedSignal::appkey() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.appkey)
  return appkey_.GetNoArena();
}
inline void JimaoReadedSignal::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.appkey)
}
#if LANG_CXX11
inline void JimaoReadedSignal::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoReadedSignal.appkey)
}
#endif
inline void JimaoReadedSignal::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoReadedSignal.appkey)
}
inline void JimaoReadedSignal::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoReadedSignal.appkey)
}
inline ::std::string* JimaoReadedSignal::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoReadedSignal.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoReadedSignal::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoReadedSignal.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoReadedSignal::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoReadedSignal.appkey)
}

// string from_username = 2;
inline void JimaoReadedSignal::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoReadedSignal::from_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.from_username)
  return from_username_.GetNoArena();
}
inline void JimaoReadedSignal::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.from_username)
}
#if LANG_CXX11
inline void JimaoReadedSignal::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoReadedSignal.from_username)
}
#endif
inline void JimaoReadedSignal::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoReadedSignal.from_username)
}
inline void JimaoReadedSignal::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoReadedSignal.from_username)
}
inline ::std::string* JimaoReadedSignal::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoReadedSignal.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoReadedSignal::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoReadedSignal.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoReadedSignal::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoReadedSignal.from_username)
}

// string read_username = 3;
inline void JimaoReadedSignal::clear_read_username() {
  read_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoReadedSignal::read_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.read_username)
  return read_username_.GetNoArena();
}
inline void JimaoReadedSignal::set_read_username(const ::std::string& value) {
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.read_username)
}
#if LANG_CXX11
inline void JimaoReadedSignal::set_read_username(::std::string&& value) {
  
  read_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoReadedSignal.read_username)
}
#endif
inline void JimaoReadedSignal::set_read_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoReadedSignal.read_username)
}
inline void JimaoReadedSignal::set_read_username(const char* value, size_t size) {
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoReadedSignal.read_username)
}
inline ::std::string* JimaoReadedSignal::mutable_read_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoReadedSignal.read_username)
  return read_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoReadedSignal::release_read_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoReadedSignal.read_username)
  
  return read_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoReadedSignal::set_allocated_read_username(::std::string* read_username) {
  if (read_username != NULL) {
    
  } else {
    
  }
  read_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoReadedSignal.read_username)
}

// string read_nick = 4;
inline void JimaoReadedSignal::clear_read_nick() {
  read_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoReadedSignal::read_nick() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.read_nick)
  return read_nick_.GetNoArena();
}
inline void JimaoReadedSignal::set_read_nick(const ::std::string& value) {
  
  read_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.read_nick)
}
#if LANG_CXX11
inline void JimaoReadedSignal::set_read_nick(::std::string&& value) {
  
  read_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoReadedSignal.read_nick)
}
#endif
inline void JimaoReadedSignal::set_read_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  read_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoReadedSignal.read_nick)
}
inline void JimaoReadedSignal::set_read_nick(const char* value, size_t size) {
  
  read_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoReadedSignal.read_nick)
}
inline ::std::string* JimaoReadedSignal::mutable_read_nick() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoReadedSignal.read_nick)
  return read_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoReadedSignal::release_read_nick() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoReadedSignal.read_nick)
  
  return read_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoReadedSignal::set_allocated_read_nick(::std::string* read_nick) {
  if (read_nick != NULL) {
    
  } else {
    
  }
  read_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_nick);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoReadedSignal.read_nick)
}

// uint64 guid = 5;
inline void JimaoReadedSignal::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JimaoReadedSignal::guid() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.guid)
  return guid_;
}
inline void JimaoReadedSignal::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.guid)
}

// string uri = 6;
inline void JimaoReadedSignal::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoReadedSignal::uri() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoReadedSignal.uri)
  return uri_.GetNoArena();
}
inline void JimaoReadedSignal::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoReadedSignal.uri)
}
#if LANG_CXX11
inline void JimaoReadedSignal::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoReadedSignal.uri)
}
#endif
inline void JimaoReadedSignal::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoReadedSignal.uri)
}
inline void JimaoReadedSignal::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoReadedSignal.uri)
}
inline ::std::string* JimaoReadedSignal::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoReadedSignal.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoReadedSignal::release_uri() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoReadedSignal.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoReadedSignal::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoReadedSignal.uri)
}

// -------------------------------------------------------------------

// JimaoSendedSignal

// string appkey = 1;
inline void JimaoSendedSignal::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoSendedSignal::appkey() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoSendedSignal.appkey)
  return appkey_.GetNoArena();
}
inline void JimaoSendedSignal::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.appkey)
}
#if LANG_CXX11
inline void JimaoSendedSignal::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoSendedSignal.appkey)
}
#endif
inline void JimaoSendedSignal::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoSendedSignal.appkey)
}
inline void JimaoSendedSignal::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoSendedSignal.appkey)
}
inline ::std::string* JimaoSendedSignal::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoSendedSignal.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoSendedSignal::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoSendedSignal.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoSendedSignal::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoSendedSignal.appkey)
}

// string from_username = 2;
inline void JimaoSendedSignal::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoSendedSignal::from_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoSendedSignal.from_username)
  return from_username_.GetNoArena();
}
inline void JimaoSendedSignal::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.from_username)
}
#if LANG_CXX11
inline void JimaoSendedSignal::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoSendedSignal.from_username)
}
#endif
inline void JimaoSendedSignal::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoSendedSignal.from_username)
}
inline void JimaoSendedSignal::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoSendedSignal.from_username)
}
inline ::std::string* JimaoSendedSignal::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoSendedSignal.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoSendedSignal::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoSendedSignal.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoSendedSignal::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoSendedSignal.from_username)
}

// repeated string to_username = 3;
inline int JimaoSendedSignal::to_username_size() const {
  return to_username_.size();
}
inline void JimaoSendedSignal::clear_to_username() {
  to_username_.Clear();
}
inline const ::std::string& JimaoSendedSignal::to_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoSendedSignal.to_username)
  return to_username_.Get(index);
}
inline ::std::string* JimaoSendedSignal::mutable_to_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoSendedSignal.to_username)
  return to_username_.Mutable(index);
}
inline void JimaoSendedSignal::set_to_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.to_username)
  to_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void JimaoSendedSignal::set_to_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.to_username)
  to_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void JimaoSendedSignal::set_to_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  to_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoSendedSignal.to_username)
}
inline void JimaoSendedSignal::set_to_username(int index, const char* value, size_t size) {
  to_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoSendedSignal.to_username)
}
inline ::std::string* JimaoSendedSignal::add_to_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.jimao.JimaoSendedSignal.to_username)
  return to_username_.Add();
}
inline void JimaoSendedSignal::add_to_username(const ::std::string& value) {
  to_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.jimao.JimaoSendedSignal.to_username)
}
#if LANG_CXX11
inline void JimaoSendedSignal::add_to_username(::std::string&& value) {
  to_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.jimao.JimaoSendedSignal.to_username)
}
#endif
inline void JimaoSendedSignal::add_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  to_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.jimao.JimaoSendedSignal.to_username)
}
inline void JimaoSendedSignal::add_to_username(const char* value, size_t size) {
  to_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.jimao.JimaoSendedSignal.to_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JimaoSendedSignal::to_username() const {
  // @@protoc_insertion_point(field_list:outer.jimao.JimaoSendedSignal.to_username)
  return to_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JimaoSendedSignal::mutable_to_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.jimao.JimaoSendedSignal.to_username)
  return &to_username_;
}

// uint64 guid = 4;
inline void JimaoSendedSignal::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JimaoSendedSignal::guid() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoSendedSignal.guid)
  return guid_;
}
inline void JimaoSendedSignal::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.guid)
}

// string uri = 5;
inline void JimaoSendedSignal::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JimaoSendedSignal::uri() const {
  // @@protoc_insertion_point(field_get:outer.jimao.JimaoSendedSignal.uri)
  return uri_.GetNoArena();
}
inline void JimaoSendedSignal::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.JimaoSendedSignal.uri)
}
#if LANG_CXX11
inline void JimaoSendedSignal::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.JimaoSendedSignal.uri)
}
#endif
inline void JimaoSendedSignal::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.JimaoSendedSignal.uri)
}
inline void JimaoSendedSignal::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.JimaoSendedSignal.uri)
}
inline ::std::string* JimaoSendedSignal::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.JimaoSendedSignal.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JimaoSendedSignal::release_uri() {
  // @@protoc_insertion_point(field_release:outer.jimao.JimaoSendedSignal.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JimaoSendedSignal::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.JimaoSendedSignal.uri)
}

// -------------------------------------------------------------------

// ReadJimaoRequest

// string appkey = 1;
inline void ReadJimaoRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadJimaoRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ReadJimaoRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.appkey)
}
#if LANG_CXX11
inline void ReadJimaoRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.ReadJimaoRequest.appkey)
}
#endif
inline void ReadJimaoRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.ReadJimaoRequest.appkey)
}
inline void ReadJimaoRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.ReadJimaoRequest.appkey)
}
inline ::std::string* ReadJimaoRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.ReadJimaoRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadJimaoRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.jimao.ReadJimaoRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadJimaoRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.ReadJimaoRequest.appkey)
}

// string from_username = 2;
inline void ReadJimaoRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadJimaoRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.from_username)
  return from_username_.GetNoArena();
}
inline void ReadJimaoRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.from_username)
}
#if LANG_CXX11
inline void ReadJimaoRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.ReadJimaoRequest.from_username)
}
#endif
inline void ReadJimaoRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.ReadJimaoRequest.from_username)
}
inline void ReadJimaoRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.ReadJimaoRequest.from_username)
}
inline ::std::string* ReadJimaoRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.ReadJimaoRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadJimaoRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.ReadJimaoRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadJimaoRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.ReadJimaoRequest.from_username)
}

// string read_username = 3;
inline void ReadJimaoRequest::clear_read_username() {
  read_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadJimaoRequest::read_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.read_username)
  return read_username_.GetNoArena();
}
inline void ReadJimaoRequest::set_read_username(const ::std::string& value) {
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.read_username)
}
#if LANG_CXX11
inline void ReadJimaoRequest::set_read_username(::std::string&& value) {
  
  read_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.ReadJimaoRequest.read_username)
}
#endif
inline void ReadJimaoRequest::set_read_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.ReadJimaoRequest.read_username)
}
inline void ReadJimaoRequest::set_read_username(const char* value, size_t size) {
  
  read_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.ReadJimaoRequest.read_username)
}
inline ::std::string* ReadJimaoRequest::mutable_read_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.ReadJimaoRequest.read_username)
  return read_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadJimaoRequest::release_read_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.ReadJimaoRequest.read_username)
  
  return read_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadJimaoRequest::set_allocated_read_username(::std::string* read_username) {
  if (read_username != NULL) {
    
  } else {
    
  }
  read_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.ReadJimaoRequest.read_username)
}

// uint64 guid = 4;
inline void ReadJimaoRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadJimaoRequest::guid() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.guid)
  return guid_;
}
inline void ReadJimaoRequest::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.guid)
}

// string uri = 5;
inline void ReadJimaoRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadJimaoRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.uri)
  return uri_.GetNoArena();
}
inline void ReadJimaoRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.uri)
}
#if LANG_CXX11
inline void ReadJimaoRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.ReadJimaoRequest.uri)
}
#endif
inline void ReadJimaoRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.ReadJimaoRequest.uri)
}
inline void ReadJimaoRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.ReadJimaoRequest.uri)
}
inline ::std::string* ReadJimaoRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.ReadJimaoRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadJimaoRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.jimao.ReadJimaoRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadJimaoRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.ReadJimaoRequest.uri)
}

// .common.msg.EMsgType msg_type = 6;
inline void ReadJimaoRequest::clear_msg_type() {
  msg_type_ = 0;
}
inline ::common::msg::EMsgType ReadJimaoRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoRequest.msg_type)
  return static_cast< ::common::msg::EMsgType >(msg_type_);
}
inline void ReadJimaoRequest::set_msg_type(::common::msg::EMsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoRequest.msg_type)
}

// -------------------------------------------------------------------

// ReadJimaoResponse

// .common.errcode.EErrorCode ret = 1;
inline void ReadJimaoResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode ReadJimaoResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void ReadJimaoResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoResponse.ret)
}

// uint64 guid = 2;
inline void ReadJimaoResponse::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadJimaoResponse::guid() const {
  // @@protoc_insertion_point(field_get:outer.jimao.ReadJimaoResponse.guid)
  return guid_;
}
inline void ReadJimaoResponse::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.ReadJimaoResponse.guid)
}

// -------------------------------------------------------------------

// GetJimaoStatusRequest

// string appkey = 1;
inline void GetJimaoStatusRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetJimaoStatusRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetJimaoStatusRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusRequest.appkey)
}
#if LANG_CXX11
inline void GetJimaoStatusRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.GetJimaoStatusRequest.appkey)
}
#endif
inline void GetJimaoStatusRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.GetJimaoStatusRequest.appkey)
}
inline void GetJimaoStatusRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.GetJimaoStatusRequest.appkey)
}
inline ::std::string* GetJimaoStatusRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.GetJimaoStatusRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetJimaoStatusRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.jimao.GetJimaoStatusRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetJimaoStatusRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.GetJimaoStatusRequest.appkey)
}

// string from_username = 2;
inline void GetJimaoStatusRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetJimaoStatusRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusRequest.from_username)
  return from_username_.GetNoArena();
}
inline void GetJimaoStatusRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusRequest.from_username)
}
#if LANG_CXX11
inline void GetJimaoStatusRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.GetJimaoStatusRequest.from_username)
}
#endif
inline void GetJimaoStatusRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.GetJimaoStatusRequest.from_username)
}
inline void GetJimaoStatusRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.GetJimaoStatusRequest.from_username)
}
inline ::std::string* GetJimaoStatusRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.GetJimaoStatusRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetJimaoStatusRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.jimao.GetJimaoStatusRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetJimaoStatusRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.GetJimaoStatusRequest.from_username)
}

// uint64 guid = 3;
inline void GetJimaoStatusRequest::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetJimaoStatusRequest::guid() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusRequest.guid)
  return guid_;
}
inline void GetJimaoStatusRequest::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusRequest.guid)
}

// -------------------------------------------------------------------

// GetJimaoStatusResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetJimaoStatusResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetJimaoStatusResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetJimaoStatusResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusResponse.ret)
}

// int32 jimao_status = 2;
inline void GetJimaoStatusResponse::clear_jimao_status() {
  jimao_status_ = 0;
}
inline ::google::protobuf::int32 GetJimaoStatusResponse::jimao_status() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusResponse.jimao_status)
  return jimao_status_;
}
inline void GetJimaoStatusResponse::set_jimao_status(::google::protobuf::int32 value) {
  
  jimao_status_ = value;
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusResponse.jimao_status)
}

// repeated string unread_username = 3;
inline int GetJimaoStatusResponse::unread_username_size() const {
  return unread_username_.size();
}
inline void GetJimaoStatusResponse::clear_unread_username() {
  unread_username_.Clear();
}
inline const ::std::string& GetJimaoStatusResponse::unread_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusResponse.unread_username)
  return unread_username_.Get(index);
}
inline ::std::string* GetJimaoStatusResponse::mutable_unread_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.jimao.GetJimaoStatusResponse.unread_username)
  return unread_username_.Mutable(index);
}
inline void GetJimaoStatusResponse::set_unread_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusResponse.unread_username)
  unread_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetJimaoStatusResponse::set_unread_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusResponse.unread_username)
  unread_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetJimaoStatusResponse::set_unread_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  unread_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.jimao.GetJimaoStatusResponse.unread_username)
}
inline void GetJimaoStatusResponse::set_unread_username(int index, const char* value, size_t size) {
  unread_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.GetJimaoStatusResponse.unread_username)
}
inline ::std::string* GetJimaoStatusResponse::add_unread_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.jimao.GetJimaoStatusResponse.unread_username)
  return unread_username_.Add();
}
inline void GetJimaoStatusResponse::add_unread_username(const ::std::string& value) {
  unread_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.jimao.GetJimaoStatusResponse.unread_username)
}
#if LANG_CXX11
inline void GetJimaoStatusResponse::add_unread_username(::std::string&& value) {
  unread_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.jimao.GetJimaoStatusResponse.unread_username)
}
#endif
inline void GetJimaoStatusResponse::add_unread_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  unread_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.jimao.GetJimaoStatusResponse.unread_username)
}
inline void GetJimaoStatusResponse::add_unread_username(const char* value, size_t size) {
  unread_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.jimao.GetJimaoStatusResponse.unread_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetJimaoStatusResponse::unread_username() const {
  // @@protoc_insertion_point(field_list:outer.jimao.GetJimaoStatusResponse.unread_username)
  return unread_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetJimaoStatusResponse::mutable_unread_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.jimao.GetJimaoStatusResponse.unread_username)
  return &unread_username_;
}

// string appkey = 4;
inline void GetJimaoStatusResponse::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetJimaoStatusResponse::appkey() const {
  // @@protoc_insertion_point(field_get:outer.jimao.GetJimaoStatusResponse.appkey)
  return appkey_.GetNoArena();
}
inline void GetJimaoStatusResponse::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.jimao.GetJimaoStatusResponse.appkey)
}
#if LANG_CXX11
inline void GetJimaoStatusResponse::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.jimao.GetJimaoStatusResponse.appkey)
}
#endif
inline void GetJimaoStatusResponse::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.jimao.GetJimaoStatusResponse.appkey)
}
inline void GetJimaoStatusResponse::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.jimao.GetJimaoStatusResponse.appkey)
}
inline ::std::string* GetJimaoStatusResponse::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.jimao.GetJimaoStatusResponse.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetJimaoStatusResponse::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.jimao.GetJimaoStatusResponse.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetJimaoStatusResponse::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.jimao.GetJimaoStatusResponse.appkey)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace jimao
}  // namespace outer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_outer_2fjimao_2eproto__INCLUDED
