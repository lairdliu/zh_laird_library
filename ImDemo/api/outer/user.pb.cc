// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/user.proto

#include "outer/user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace user {
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class UserLoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginRequest>
      _instance;
} _UserLoginRequest_default_instance_;
class UserLoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginResponse>
      _instance;
} _UserLoginResponse_default_instance_;
class UserRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterRequest>
      _instance;
} _UserRegisterRequest_default_instance_;
class UserRegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterResponse>
      _instance;
} _UserRegisterResponse_default_instance_;
class PasswordUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateRequest>
      _instance;
} _PasswordUpdateRequest_default_instance_;
class PasswordUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateResponse>
      _instance;
} _PasswordUpdateResponse_default_instance_;
class NickUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NickUpdateRequest>
      _instance;
} _NickUpdateRequest_default_instance_;
class NickUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NickUpdateResponse>
      _instance;
} _NickUpdateResponse_default_instance_;
class PhoneUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneUpdateRequest>
      _instance;
} _PhoneUpdateRequest_default_instance_;
class PhoneUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneUpdateResponse>
      _instance;
} _PhoneUpdateResponse_default_instance_;
class UserSearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSearchRequest>
      _instance;
} _UserSearchRequest_default_instance_;
class UserSearchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserSearchResponse>
      _instance;
} _UserSearchResponse_default_instance_;
class GetUserInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoRequest>
      _instance;
} _GetUserInfoRequest_default_instance_;
class GetUserInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoResponse>
      _instance;
} _GetUserInfoResponse_default_instance_;
class BatchGetUserInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetUserInfoRequest>
      _instance;
} _BatchGetUserInfoRequest_default_instance_;
class BatchGetUserInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetUserInfoResponse>
      _instance;
} _BatchGetUserInfoResponse_default_instance_;
class CheckUserListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckUserListRequest>
      _instance;
} _CheckUserListRequest_default_instance_;
class CheckUserListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckUserListResponse>
      _instance;
} _CheckUserListResponse_default_instance_;
class SetSilentStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSilentStateRequest>
      _instance;
} _SetSilentStateRequest_default_instance_;
class SetSilentStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetSilentStateResponse>
      _instance;
} _SetSilentStateResponse_default_instance_;
class UploadAvatarRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadAvatarRequest>
      _instance;
} _UploadAvatarRequest_default_instance_;
class UploadAvatarResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadAvatarResponse>
      _instance;
} _UploadAvatarResponse_default_instance_;
class GetMyShieldingListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMyShieldingListRequest>
      _instance;
} _GetMyShieldingListRequest_default_instance_;
class GetMyShieldingListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMyShieldingListResponse>
      _instance;
} _GetMyShieldingListResponse_default_instance_;
class SetShieldingStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetShieldingStateRequest>
      _instance;
} _SetShieldingStateRequest_default_instance_;
class SetShieldingStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetShieldingStateResponse>
      _instance;
} _SetShieldingStateResponse_default_instance_;
class QueryUserOnlineStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryUserOnlineStatusRequest>
      _instance;
} _QueryUserOnlineStatusRequest_default_instance_;
class QueryUserOnlineStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryUserOnlineStatusResponse>
      _instance;
} _QueryUserOnlineStatusResponse_default_instance_;
class KickCarMachineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickCarMachineRequest>
      _instance;
} _KickCarMachineRequest_default_instance_;
class KickCarMachineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickCarMachineResponse>
      _instance;
} _KickCarMachineResponse_default_instance_;
class DisplayUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayUpdateRequest>
      _instance;
} _DisplayUpdateRequest_default_instance_;
class DisplayUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayUpdateResponse>
      _instance;
} _DisplayUpdateResponse_default_instance_;
}  // namespace user
}  // namespace outer
namespace protobuf_outer_2fuser_2eproto {
void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UserInfo_default_instance_;
    new (ptr) ::outer::user::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsUserLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fbase_2eproto::InitDefaultsMobileBase();
  {
    void* ptr = &::outer::user::_UserLoginRequest_default_instance_;
    new (ptr) ::outer::user::UserLoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserLoginRequest::InitAsDefaultInstance();
}

void InitDefaultsUserLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLoginRequestImpl);
}

void InitDefaultsUserLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::outer::user::_UserLoginResponse_default_instance_;
    new (ptr) ::outer::user::UserLoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserLoginResponse::InitAsDefaultInstance();
}

void InitDefaultsUserLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLoginResponseImpl);
}

void InitDefaultsUserRegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UserRegisterRequest_default_instance_;
    new (ptr) ::outer::user::UserRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserRegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsUserRegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRegisterRequestImpl);
}

void InitDefaultsUserRegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UserRegisterResponse_default_instance_;
    new (ptr) ::outer::user::UserRegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserRegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsUserRegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRegisterResponseImpl);
}

void InitDefaultsPasswordUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_PasswordUpdateRequest_default_instance_;
    new (ptr) ::outer::user::PasswordUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::PasswordUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsPasswordUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPasswordUpdateRequestImpl);
}

void InitDefaultsPasswordUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_PasswordUpdateResponse_default_instance_;
    new (ptr) ::outer::user::PasswordUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::PasswordUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsPasswordUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPasswordUpdateResponseImpl);
}

void InitDefaultsNickUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_NickUpdateRequest_default_instance_;
    new (ptr) ::outer::user::NickUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::NickUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsNickUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNickUpdateRequestImpl);
}

void InitDefaultsNickUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_NickUpdateResponse_default_instance_;
    new (ptr) ::outer::user::NickUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::NickUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsNickUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNickUpdateResponseImpl);
}

void InitDefaultsPhoneUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_PhoneUpdateRequest_default_instance_;
    new (ptr) ::outer::user::PhoneUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::PhoneUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsPhoneUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhoneUpdateRequestImpl);
}

void InitDefaultsPhoneUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_PhoneUpdateResponse_default_instance_;
    new (ptr) ::outer::user::PhoneUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::PhoneUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsPhoneUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhoneUpdateResponseImpl);
}

void InitDefaultsUserSearchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UserSearchRequest_default_instance_;
    new (ptr) ::outer::user::UserSearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserSearchRequest::InitAsDefaultInstance();
}

void InitDefaultsUserSearchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserSearchRequestImpl);
}

void InitDefaultsUserSearchResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::outer::user::_UserSearchResponse_default_instance_;
    new (ptr) ::outer::user::UserSearchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UserSearchResponse::InitAsDefaultInstance();
}

void InitDefaultsUserSearchResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserSearchResponseImpl);
}

void InitDefaultsGetUserInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_GetUserInfoRequest_default_instance_;
    new (ptr) ::outer::user::GetUserInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::GetUserInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoRequestImpl);
}

void InitDefaultsGetUserInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::outer::user::_GetUserInfoResponse_default_instance_;
    new (ptr) ::outer::user::GetUserInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::GetUserInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsGetUserInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUserInfoResponseImpl);
}

void InitDefaultsBatchGetUserInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_BatchGetUserInfoRequest_default_instance_;
    new (ptr) ::outer::user::BatchGetUserInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::BatchGetUserInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsBatchGetUserInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchGetUserInfoRequestImpl);
}

void InitDefaultsBatchGetUserInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::outer::user::_BatchGetUserInfoResponse_default_instance_;
    new (ptr) ::outer::user::BatchGetUserInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::BatchGetUserInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsBatchGetUserInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBatchGetUserInfoResponseImpl);
}

void InitDefaultsCheckUserListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_CheckUserListRequest_default_instance_;
    new (ptr) ::outer::user::CheckUserListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::CheckUserListRequest::InitAsDefaultInstance();
}

void InitDefaultsCheckUserListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckUserListRequestImpl);
}

void InitDefaultsCheckUserListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_CheckUserListResponse_default_instance_;
    new (ptr) ::outer::user::CheckUserListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::CheckUserListResponse::InitAsDefaultInstance();
}

void InitDefaultsCheckUserListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckUserListResponseImpl);
}

void InitDefaultsSetSilentStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_SetSilentStateRequest_default_instance_;
    new (ptr) ::outer::user::SetSilentStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::SetSilentStateRequest::InitAsDefaultInstance();
}

void InitDefaultsSetSilentStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetSilentStateRequestImpl);
}

void InitDefaultsSetSilentStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_SetSilentStateResponse_default_instance_;
    new (ptr) ::outer::user::SetSilentStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::SetSilentStateResponse::InitAsDefaultInstance();
}

void InitDefaultsSetSilentStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetSilentStateResponseImpl);
}

void InitDefaultsUploadAvatarRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UploadAvatarRequest_default_instance_;
    new (ptr) ::outer::user::UploadAvatarRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UploadAvatarRequest::InitAsDefaultInstance();
}

void InitDefaultsUploadAvatarRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadAvatarRequestImpl);
}

void InitDefaultsUploadAvatarResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_UploadAvatarResponse_default_instance_;
    new (ptr) ::outer::user::UploadAvatarResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::UploadAvatarResponse::InitAsDefaultInstance();
}

void InitDefaultsUploadAvatarResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadAvatarResponseImpl);
}

void InitDefaultsGetMyShieldingListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_GetMyShieldingListRequest_default_instance_;
    new (ptr) ::outer::user::GetMyShieldingListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::GetMyShieldingListRequest::InitAsDefaultInstance();
}

void InitDefaultsGetMyShieldingListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMyShieldingListRequestImpl);
}

void InitDefaultsGetMyShieldingListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_GetMyShieldingListResponse_default_instance_;
    new (ptr) ::outer::user::GetMyShieldingListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::GetMyShieldingListResponse::InitAsDefaultInstance();
}

void InitDefaultsGetMyShieldingListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetMyShieldingListResponseImpl);
}

void InitDefaultsSetShieldingStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_SetShieldingStateRequest_default_instance_;
    new (ptr) ::outer::user::SetShieldingStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::SetShieldingStateRequest::InitAsDefaultInstance();
}

void InitDefaultsSetShieldingStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetShieldingStateRequestImpl);
}

void InitDefaultsSetShieldingStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_SetShieldingStateResponse_default_instance_;
    new (ptr) ::outer::user::SetShieldingStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::SetShieldingStateResponse::InitAsDefaultInstance();
}

void InitDefaultsSetShieldingStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetShieldingStateResponseImpl);
}

void InitDefaultsQueryUserOnlineStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_QueryUserOnlineStatusRequest_default_instance_;
    new (ptr) ::outer::user::QueryUserOnlineStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::QueryUserOnlineStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsQueryUserOnlineStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryUserOnlineStatusRequestImpl);
}

void InitDefaultsQueryUserOnlineStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_QueryUserOnlineStatusResponse_default_instance_;
    new (ptr) ::outer::user::QueryUserOnlineStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::QueryUserOnlineStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsQueryUserOnlineStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryUserOnlineStatusResponseImpl);
}

void InitDefaultsKickCarMachineRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fbase_2eproto::InitDefaultsMobileBase();
  {
    void* ptr = &::outer::user::_KickCarMachineRequest_default_instance_;
    new (ptr) ::outer::user::KickCarMachineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::KickCarMachineRequest::InitAsDefaultInstance();
}

void InitDefaultsKickCarMachineRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickCarMachineRequestImpl);
}

void InitDefaultsKickCarMachineResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_KickCarMachineResponse_default_instance_;
    new (ptr) ::outer::user::KickCarMachineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::KickCarMachineResponse::InitAsDefaultInstance();
}

void InitDefaultsKickCarMachineResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickCarMachineResponseImpl);
}

void InitDefaultsDisplayUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_DisplayUpdateRequest_default_instance_;
    new (ptr) ::outer::user::DisplayUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::DisplayUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsDisplayUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayUpdateRequestImpl);
}

void InitDefaultsDisplayUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::user::_DisplayUpdateResponse_default_instance_;
    new (ptr) ::outer::user::DisplayUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::user::DisplayUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsDisplayUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayUpdateResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[33];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, thumbnail_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, join_fleet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, fleet_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, nick_pinyin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, display_pinyin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, nick_pinyin_blank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, serial_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, member_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserInfo, enable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, appkey_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, sha256_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, base_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, is_auto_login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginRequest, login_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserLoginResponse, user_infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, appkey_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterRequest, sha256_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserRegisterResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateRequest, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateRequest, sha256_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PasswordUpdateResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateRequest, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateRequest, fromclienttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::NickUpdateResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateRequest, update_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateRequest, fromclienttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::PhoneUpdateResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchRequest, search_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchResponse, user_infos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UserSearchResponse, totalcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoRequest, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetUserInfoResponse, user_infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::BatchGetUserInfoResponse, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListResponse, exist_users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::CheckUserListResponse, unexist_users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetSilentStateResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, thumbnail_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarRequest, fromclienttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::UploadAvatarResponse, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::GetMyShieldingListResponse, usernames_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, other_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, myself_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, is_shielding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateRequest, from_client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::SetShieldingStateResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusRequest, appkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusResponse, mobile_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::QueryUserOnlineStatusResponse, car_machine_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, base_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, kick_client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineRequest, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::KickCarMachineResponse, ret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateRequest, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateRequest, fromclienttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::user::DisplayUpdateResponse, reason_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::user::UserInfo)},
  { 25, -1, sizeof(::outer::user::UserLoginRequest)},
  { 39, -1, sizeof(::outer::user::UserLoginResponse)},
  { 46, -1, sizeof(::outer::user::UserRegisterRequest)},
  { 58, -1, sizeof(::outer::user::UserRegisterResponse)},
  { 65, -1, sizeof(::outer::user::PasswordUpdateRequest)},
  { 74, -1, sizeof(::outer::user::PasswordUpdateResponse)},
  { 81, -1, sizeof(::outer::user::NickUpdateRequest)},
  { 90, -1, sizeof(::outer::user::NickUpdateResponse)},
  { 97, -1, sizeof(::outer::user::PhoneUpdateRequest)},
  { 106, -1, sizeof(::outer::user::PhoneUpdateResponse)},
  { 113, -1, sizeof(::outer::user::UserSearchRequest)},
  { 123, -1, sizeof(::outer::user::UserSearchResponse)},
  { 131, -1, sizeof(::outer::user::GetUserInfoRequest)},
  { 138, -1, sizeof(::outer::user::GetUserInfoResponse)},
  { 145, -1, sizeof(::outer::user::BatchGetUserInfoRequest)},
  { 152, -1, sizeof(::outer::user::BatchGetUserInfoResponse)},
  { 159, -1, sizeof(::outer::user::CheckUserListRequest)},
  { 166, -1, sizeof(::outer::user::CheckUserListResponse)},
  { 174, -1, sizeof(::outer::user::SetSilentStateRequest)},
  { 184, -1, sizeof(::outer::user::SetSilentStateResponse)},
  { 190, -1, sizeof(::outer::user::UploadAvatarRequest)},
  { 200, -1, sizeof(::outer::user::UploadAvatarResponse)},
  { 207, -1, sizeof(::outer::user::GetMyShieldingListRequest)},
  { 214, -1, sizeof(::outer::user::GetMyShieldingListResponse)},
  { 221, -1, sizeof(::outer::user::SetShieldingStateRequest)},
  { 231, -1, sizeof(::outer::user::SetShieldingStateResponse)},
  { 237, -1, sizeof(::outer::user::QueryUserOnlineStatusRequest)},
  { 244, -1, sizeof(::outer::user::QueryUserOnlineStatusResponse)},
  { 252, -1, sizeof(::outer::user::KickCarMachineRequest)},
  { 262, -1, sizeof(::outer::user::KickCarMachineResponse)},
  { 268, -1, sizeof(::outer::user::DisplayUpdateRequest)},
  { 277, -1, sizeof(::outer::user::DisplayUpdateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserRegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_PasswordUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_PasswordUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_NickUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_NickUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_PhoneUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_PhoneUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserSearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UserSearchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_GetUserInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_GetUserInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_BatchGetUserInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_BatchGetUserInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_CheckUserListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_CheckUserListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_SetSilentStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_SetSilentStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UploadAvatarRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_UploadAvatarResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_GetMyShieldingListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_GetMyShieldingListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_SetShieldingStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_SetShieldingStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_QueryUserOnlineStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_QueryUserOnlineStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_KickCarMachineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_KickCarMachineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_DisplayUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::user::_DisplayUpdateResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/user.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 33);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020outer/user.proto\022\nouter.user\032\024common/e"
      "rrcode.proto\032\030common/enumeration.proto\032\021"
      "common/base.proto\"\205\003\n\010UserInfo\022\020\n\010userna"
      "me\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\014\n\004nick\030\003 \001(\t\022\r"
      "\n\005phone\030\004 \001(\t\022\025\n\roriginal_link\030\005 \001(\t\022\026\n\016"
      "thumbnail_link\030\006 \001(\t\022\017\n\007created\030\007 \001(\004\022\020\n"
      "\010modified\030\010 \001(\004\022\020\n\010province\030\t \001(\t\022\017\n\007cou"
      "ntry\030\n \001(\t\022\013\n\003sex\030\013 \001(\t\022\022\n\njoin_fleet\030\014 "
      "\001(\010\022\021\n\tfleet_uri\030\r \001(\t\022\023\n\013nick_pinyin\030\016 "
      "\001(\t\022\017\n\007display\030\017 \001(\t\022\026\n\016display_pinyin\030\020"
      " \001(\t\022\031\n\021nick_pinyin_blank\030\021 \001(\t\022\023\n\013seria"
      "l_name\030\022 \001(\t\022\023\n\013member_type\030\023 \001(\r\022\016\n\006ena"
      "ble\030\024 \001(\r\"\365\001\n\020UserLoginRequest\022\020\n\010userna"
      "me\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\020\n\010password\030\003 \001"
      "(\t\022\027\n\017appkey_password\030\004 \001(\t\022\016\n\006SHA256\030\005 "
      "\001(\010\022*\n\tbase_info\030\006 \001(\0132\027.common.base.Mob"
      "ileBase\022\025\n\ris_auto_login\030\007 \001(\010\022\r\n\005token\030"
      "\010 \001(\t\0222\n\nlogin_mode\030\t \001(\0162\036.common.enume"
      "ration.ELoginMode\"f\n\021UserLoginResponse\022\'"
      "\n\003ret\030\001 \001(\0162\032.common.errcode.EErrorCode\022"
      "(\n\nuser_infos\030\002 \001(\0132\024.outer.user.UserInf"
      "o\"\217\001\n\023UserRegisterRequest\022\020\n\010username\030\001 "
      "\001(\t\022\016\n\006appkey\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\014\n"
      "\004nick\030\004 \001(\t\022\r\n\005phone\030\005 \001(\t\022\027\n\017appkey_pas"
      "sword\030\006 \001(\t\022\016\n\006SHA256\030\007 \001(\010\"O\n\024UserRegis"
      "terResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcod"
      "e.EErrorCode\022\016\n\006reason\030\002 \001(\t\"[\n\025Password"
      "UpdateRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006appke"
      "y\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\016\n\006SHA256\030\004 \001("
      "\010\"Q\n\026PasswordUpdateResponse\022\'\n\003ret\030\001 \001(\016"
      "2\032.common.errcode.EErrorCode\022\016\n\006reason\030\002"
      " \001(\t\"|\n\021NickUpdateRequest\022\020\n\010username\030\001 "
      "\001(\t\022\016\n\006appkey\030\002 \001(\t\022\014\n\004nick\030\003 \001(\t\0227\n\016fro"
      "mClientType\030\004 \001(\0162\037.common.enumeration.E"
      "ClientType\"M\n\022NickUpdateResponse\022\'\n\003ret\030"
      "\001 \001(\0162\032.common.errcode.EErrorCode\022\016\n\006rea"
      "son\030\002 \001(\t\"\205\001\n\022PhoneUpdateRequest\022\020\n\010user"
      "name\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022\024\n\014update_pho"
      "ne\030\003 \001(\t\0227\n\016fromClientType\030\004 \001(\0162\037.commo"
      "n.enumeration.EClientType\"N\n\023PhoneUpdate"
      "Response\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.E"
      "ErrorCode\022\016\n\006reason\030\002 \001(\t\"g\n\021UserSearchR"
      "equest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t"
      "\022\r\n\005start\030\003 \001(\r\022\r\n\005range\030\004 \001(\r\022\022\n\nsearch"
      "_key\030\005 \001(\t\"{\n\022UserSearchResponse\022\'\n\003ret\030"
      "\001 \001(\0162\032.common.errcode.EErrorCode\022(\n\nuse"
      "r_infos\030\002 \003(\0132\024.outer.user.UserInfo\022\022\n\nt"
      "otalcount\030\003 \001(\r\"6\n\022GetUserInfoRequest\022\020\n"
      "\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\"h\n\023GetUs"
      "erInfoResponse\022\'\n\003ret\030\001 \001(\0162\032.common.err"
      "code.EErrorCode\022(\n\nuser_infos\030\002 \001(\0132\024.ou"
      "ter.user.UserInfo\";\n\027BatchGetUserInfoReq"
      "uest\022\016\n\006appkey\030\001 \001(\t\022\020\n\010username\030\002 \003(\t\"l"
      "\n\030BatchGetUserInfoResponse\022\'\n\003ret\030\001 \001(\0162"
      "\032.common.errcode.EErrorCode\022\'\n\tuser_info"
      "\030\002 \003(\0132\024.outer.user.UserInfo\"8\n\024CheckUse"
      "rListRequest\022\016\n\006appkey\030\001 \001(\t\022\020\n\010username"
      "\030\002 \003(\t\"l\n\025CheckUserListResponse\022\'\n\003ret\030\001"
      " \001(\0162\032.common.errcode.EErrorCode\022\023\n\013exis"
      "t_users\030\002 \003(\t\022\025\n\runexist_users\030\003 \003(\t\"\251\001\n"
      "\025SetSilentStateRequest\022\014\n\004from\030\001 \001(\t\022\n\n\002"
      "to\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022+\n\006silent\030\004 \001(\016"
      "2\033.common.enumeration.ESilent\0229\n\020from_cl"
      "ient_type\030\005 \001(\0162\037.common.enumeration.ECl"
      "ientType\"A\n\026SetSilentStateResponse\022\'\n\003re"
      "t\030\001 \001(\0162\032.common.errcode.EErrorCode\"\237\001\n\023"
      "UploadAvatarRequest\022\020\n\010username\030\001 \001(\t\022\016\n"
      "\006appkey\030\002 \001(\t\022\025\n\roriginal_link\030\003 \001(\t\022\026\n\016"
      "thumbnail_link\030\004 \001(\t\0227\n\016fromClientType\030\005"
      " \001(\0162\037.common.enumeration.EClientType\"O\n"
      "\024UploadAvatarResponse\022\'\n\003ret\030\001 \001(\0162\032.com"
      "mon.errcode.EErrorCode\022\016\n\006reason\030\002 \001(\t\"="
      "\n\031GetMyShieldingListRequest\022\016\n\006appkey\030\001 "
      "\001(\t\022\020\n\010username\030\002 \001(\t\"X\n\032GetMyShieldingL"
      "istResponse\022\'\n\003ret\030\001 \001(\0162\032.common.errcod"
      "e.EErrorCode\022\021\n\tusernames\030\002 \003(\t\"\254\001\n\030SetS"
      "hieldingStateRequest\022\026\n\016other_username\030\001"
      " \001(\t\022\027\n\017myself_username\030\002 \001(\t\022\016\n\006appkey\030"
      "\003 \001(\t\022\024\n\014is_shielding\030\004 \001(\010\0229\n\020from_clie"
      "nt_type\030\005 \001(\0162\037.common.enumeration.EClie"
      "ntType\"D\n\031SetShieldingStateResponse\022\'\n\003r"
      "et\030\001 \001(\0162\032.common.errcode.EErrorCode\"@\n\034"
      "QueryUserOnlineStatusRequest\022\020\n\010username"
      "\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\"\301\001\n\035QueryUserOnli"
      "neStatusResponse\022\'\n\003ret\030\001 \001(\0162\032.common.e"
      "rrcode.EErrorCode\022;\n\014mobile_phone\030\002 \001(\0162"
      "%.common.enumeration.EUserOnlineStatus\022:"
      "\n\013car_machine\030\003 \001(\0162%.common.enumeration"
      ".EUserOnlineStatus\"\260\001\n\025KickCarMachineReq"
      "uest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 \001(\t\022*"
      "\n\tbase_info\030\003 \001(\0132\027.common.base.MobileBa"
      "se\0229\n\020Kick_client_type\030\004 \003(\0162\037.common.en"
      "umeration.EClientType\022\016\n\006reason\030\005 \001(\t\"A\n"
      "\026KickCarMachineResponse\022\'\n\003ret\030\001 \001(\0162\032.c"
      "ommon.errcode.EErrorCode\"\202\001\n\024DisplayUpda"
      "teRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002 "
      "\001(\t\022\017\n\007display\030\003 \001(\t\0227\n\016fromClientType\030\004"
      " \001(\0162\037.common.enumeration.EClientType\"P\n"
      "\025DisplayUpdateResponse\022\'\n\003ret\030\001 \001(\0162\032.co"
      "mmon.errcode.EErrorCode\022\016\n\006reason\030\002 \001(\t2"
      "\202\013\n\013UserService\022H\n\tUserLogin\022\034.outer.use"
      "r.UserLoginRequest\032\035.outer.user.UserLogi"
      "nResponse\022Q\n\014UserRegister\022\037.outer.user.U"
      "serRegisterRequest\032 .outer.user.UserRegi"
      "sterResponse\022W\n\016PasswordUpdate\022!.outer.u"
      "ser.PasswordUpdateRequest\032\".outer.user.P"
      "asswordUpdateResponse\022K\n\nNickUpdate\022\035.ou"
      "ter.user.NickUpdateRequest\032\036.outer.user."
      "NickUpdateResponse\022N\n\013PhoneUpdate\022\036.oute"
      "r.user.PhoneUpdateRequest\032\037.outer.user.P"
      "honeUpdateResponse\022K\n\nUserSearch\022\035.outer"
      ".user.UserSearchRequest\032\036.outer.user.Use"
      "rSearchResponse\022T\n\rDisplayUpdate\022 .outer"
      ".user.DisplayUpdateRequest\032!.outer.user."
      "DisplayUpdateResponse\022N\n\013GetUserInfo\022\036.o"
      "uter.user.GetUserInfoRequest\032\037.outer.use"
      "r.GetUserInfoResponse\022l\n\025QueryUserOnline"
      "Status\022(.outer.user.QueryUserOnlineStatu"
      "sRequest\032).outer.user.QueryUserOnlineSta"
      "tusResponse\022W\n\016KickCarMachine\022!.outer.us"
      "er.KickCarMachineRequest\032\".outer.user.Ki"
      "ckCarMachineResponse\022W\n\016SetSilentState\022!"
      ".outer.user.SetSilentStateRequest\032\".oute"
      "r.user.SetSilentStateResponse\022Q\n\014UploadA"
      "vatar\022\037.outer.user.UploadAvatarRequest\032 "
      ".outer.user.UploadAvatarResponse\022]\n\020Batc"
      "hGetUserInfo\022#.outer.user.BatchGetUserIn"
      "foRequest\032$.outer.user.BatchGetUserInfoR"
      "esponse\022T\n\rCheckUserList\022 .outer.user.Ch"
      "eckUserListRequest\032!.outer.user.CheckUse"
      "rListResponse\022c\n\022GetMyShieldingList\022%.ou"
      "ter.user.GetMyShieldingListRequest\032&.out"
      "er.user.GetMyShieldingListResponse\022`\n\021Se"
      "tShieldingState\022$.outer.user.SetShieldin"
      "gStateRequest\032%.outer.user.SetShieldingS"
      "tateResponseB&\n\034com.cmcc.littlec.proto.o"
      "uterB\004UserP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5460);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/user.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
  ::protobuf_common_2fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fuser_2eproto
namespace outer {
namespace user {

// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUsernameFieldNumber;
const int UserInfo::kAppkeyFieldNumber;
const int UserInfo::kNickFieldNumber;
const int UserInfo::kPhoneFieldNumber;
const int UserInfo::kOriginalLinkFieldNumber;
const int UserInfo::kThumbnailLinkFieldNumber;
const int UserInfo::kCreatedFieldNumber;
const int UserInfo::kModifiedFieldNumber;
const int UserInfo::kProvinceFieldNumber;
const int UserInfo::kCountryFieldNumber;
const int UserInfo::kSexFieldNumber;
const int UserInfo::kJoinFleetFieldNumber;
const int UserInfo::kFleetUriFieldNumber;
const int UserInfo::kNickPinyinFieldNumber;
const int UserInfo::kDisplayFieldNumber;
const int UserInfo::kDisplayPinyinFieldNumber;
const int UserInfo::kNickPinyinBlankFieldNumber;
const int UserInfo::kSerialNameFieldNumber;
const int UserInfo::kMemberTypeFieldNumber;
const int UserInfo::kEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.province().size() > 0) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country().size() > 0) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  sex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sex().size() > 0) {
    sex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fleet_uri().size() > 0) {
    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  nick_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_pinyin().size() > 0) {
    nick_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_pinyin_);
  }
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display().size() > 0) {
    display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
  }
  display_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_pinyin().size() > 0) {
    display_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_pinyin_);
  }
  nick_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick_pinyin_blank().size() > 0) {
    nick_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_pinyin_blank_);
  }
  serial_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serial_name().size() > 0) {
    serial_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_name_);
  }
  ::memcpy(&created_, &from.created_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_) -
    reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  // @@protoc_insertion_point(copy_constructor:outer.user.UserInfo)
}

void UserInfo::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_pinyin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_blank_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:outer.user.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_pinyin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_blank_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fleet_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_pinyin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_pinyin_blank_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_) -
      reinterpret_cast<char*>(&created_)) + sizeof(enable_));
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 created = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string province = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->province().data(), static_cast<int>(this->province().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.province"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sex = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sex().data(), static_cast<int>(this->sex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.sex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool join_fleet = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &join_fleet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fleet_uri = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fleet_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.fleet_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_pinyin = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_pinyin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_pinyin().data(), static_cast<int>(this->nick_pinyin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.nick_pinyin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display().data(), static_cast<int>(this->display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_pinyin = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_pinyin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_pinyin().data(), static_cast<int>(this->display_pinyin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.display_pinyin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick_pinyin_blank = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_pinyin_blank()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_pinyin_blank().data(), static_cast<int>(this->nick_pinyin_blank().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.nick_pinyin_blank"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serial_name = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serial_name().data(), static_cast<int>(this->serial_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserInfo.serial_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 member_type = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 enable = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nick(), output);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->original_link(), output);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnail_link(), output);
  }

  // uint64 created = 7;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->created(), output);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->modified(), output);
  }

  // string province = 9;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->province(), output);
  }

  // string country = 10;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->country(), output);
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), static_cast<int>(this->sex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.sex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sex(), output);
  }

  // bool join_fleet = 12;
  if (this->join_fleet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->join_fleet(), output);
  }

  // string fleet_uri = 13;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.fleet_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->fleet_uri(), output);
  }

  // string nick_pinyin = 14;
  if (this->nick_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_pinyin().data(), static_cast<int>(this->nick_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick_pinyin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->nick_pinyin(), output);
  }

  // string display = 15;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), static_cast<int>(this->display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->display(), output);
  }

  // string display_pinyin = 16;
  if (this->display_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_pinyin().data(), static_cast<int>(this->display_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.display_pinyin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->display_pinyin(), output);
  }

  // string nick_pinyin_blank = 17;
  if (this->nick_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_pinyin_blank().data(), static_cast<int>(this->nick_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick_pinyin_blank");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->nick_pinyin_blank(), output);
  }

  // string serial_name = 18;
  if (this->serial_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_name().data(), static_cast<int>(this->serial_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.serial_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->serial_name(), output);
  }

  // uint32 member_type = 19;
  if (this->member_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->member_type(), output);
  }

  // uint32 enable = 20;
  if (this->enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->enable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nick(), target);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone(), target);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->original_link(), target);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnail_link(), target);
  }

  // uint64 created = 7;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->created(), target);
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->modified(), target);
  }

  // string province = 9;
  if (this->province().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->province().data(), static_cast<int>(this->province().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->province(), target);
  }

  // string country = 10;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->country(), target);
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), static_cast<int>(this->sex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.sex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sex(), target);
  }

  // bool join_fleet = 12;
  if (this->join_fleet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->join_fleet(), target);
  }

  // string fleet_uri = 13;
  if (this->fleet_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fleet_uri().data(), static_cast<int>(this->fleet_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.fleet_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->fleet_uri(), target);
  }

  // string nick_pinyin = 14;
  if (this->nick_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_pinyin().data(), static_cast<int>(this->nick_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick_pinyin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nick_pinyin(), target);
  }

  // string display = 15;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), static_cast<int>(this->display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->display(), target);
  }

  // string display_pinyin = 16;
  if (this->display_pinyin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_pinyin().data(), static_cast<int>(this->display_pinyin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.display_pinyin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->display_pinyin(), target);
  }

  // string nick_pinyin_blank = 17;
  if (this->nick_pinyin_blank().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_pinyin_blank().data(), static_cast<int>(this->nick_pinyin_blank().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.nick_pinyin_blank");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->nick_pinyin_blank(), target);
  }

  // string serial_name = 18;
  if (this->serial_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial_name().data(), static_cast<int>(this->serial_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserInfo.serial_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->serial_name(), target);
  }

  // uint32 member_type = 19;
  if (this->member_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->member_type(), target);
  }

  // uint32 enable = 20;
  if (this->enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->enable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // string province = 9;
  if (this->province().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->province());
  }

  // string country = 10;
  if (this->country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  // string sex = 11;
  if (this->sex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sex());
  }

  // string fleet_uri = 13;
  if (this->fleet_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fleet_uri());
  }

  // string nick_pinyin = 14;
  if (this->nick_pinyin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_pinyin());
  }

  // string display = 15;
  if (this->display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display());
  }

  // string display_pinyin = 16;
  if (this->display_pinyin().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_pinyin());
  }

  // string nick_pinyin_blank = 17;
  if (this->nick_pinyin_blank().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_pinyin_blank());
  }

  // string serial_name = 18;
  if (this->serial_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serial_name());
  }

  // uint64 created = 7;
  if (this->created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->created());
  }

  // uint64 modified = 8;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  // bool join_fleet = 12;
  if (this->join_fleet() != 0) {
    total_size += 1 + 1;
  }

  // uint32 member_type = 19;
  if (this->member_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_type());
  }

  // uint32 enable = 20;
  if (this->enable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.province().size() > 0) {

    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  if (from.country().size() > 0) {

    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  if (from.sex().size() > 0) {

    sex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  if (from.fleet_uri().size() > 0) {

    fleet_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fleet_uri_);
  }
  if (from.nick_pinyin().size() > 0) {

    nick_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_pinyin_);
  }
  if (from.display().size() > 0) {

    display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
  }
  if (from.display_pinyin().size() > 0) {

    display_pinyin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_pinyin_);
  }
  if (from.nick_pinyin_blank().size() > 0) {

    nick_pinyin_blank_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_pinyin_blank_);
  }
  if (from.serial_name().size() > 0) {

    serial_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_name_);
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
  if (from.join_fleet() != 0) {
    set_join_fleet(from.join_fleet());
  }
  if (from.member_type() != 0) {
    set_member_type(from.member_type());
  }
  if (from.enable() != 0) {
    set_enable(from.enable());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  nick_.Swap(&other->nick_);
  phone_.Swap(&other->phone_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  province_.Swap(&other->province_);
  country_.Swap(&other->country_);
  sex_.Swap(&other->sex_);
  fleet_uri_.Swap(&other->fleet_uri_);
  nick_pinyin_.Swap(&other->nick_pinyin_);
  display_.Swap(&other->display_);
  display_pinyin_.Swap(&other->display_pinyin_);
  nick_pinyin_blank_.Swap(&other->nick_pinyin_blank_);
  serial_name_.Swap(&other->serial_name_);
  swap(created_, other->created_);
  swap(modified_, other->modified_);
  swap(join_fleet_, other->join_fleet_);
  swap(member_type_, other->member_type_);
  swap(enable_, other->enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginRequest::InitAsDefaultInstance() {
  ::outer::user::_UserLoginRequest_default_instance_._instance.get_mutable()->base_info_ = const_cast< ::common::base::MobileBase*>(
      ::common::base::MobileBase::internal_default_instance());
}
void UserLoginRequest::clear_base_info() {
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginRequest::kUsernameFieldNumber;
const int UserLoginRequest::kAppkeyFieldNumber;
const int UserLoginRequest::kPasswordFieldNumber;
const int UserLoginRequest::kAppkeyPasswordFieldNumber;
const int UserLoginRequest::kSHA256FieldNumber;
const int UserLoginRequest::kBaseInfoFieldNumber;
const int UserLoginRequest::kIsAutoLoginFieldNumber;
const int UserLoginRequest::kTokenFieldNumber;
const int UserLoginRequest::kLoginModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginRequest::UserLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserLoginRequest)
}
UserLoginRequest::UserLoginRequest(const UserLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  appkey_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey_password().size() > 0) {
    appkey_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_password_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_base_info()) {
    base_info_ = new ::common::base::MobileBase(*from.base_info_);
  } else {
    base_info_ = NULL;
  }
  ::memcpy(&sha256_, &from.sha256_,
    static_cast<size_t>(reinterpret_cast<char*>(&login_mode_) -
    reinterpret_cast<char*>(&sha256_)) + sizeof(login_mode_));
  // @@protoc_insertion_point(copy_constructor:outer.user.UserLoginRequest)
}

void UserLoginRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_mode_) -
      reinterpret_cast<char*>(&base_info_)) + sizeof(login_mode_));
  _cached_size_ = 0;
}

UserLoginRequest::~UserLoginRequest() {
  // @@protoc_insertion_point(destructor:outer.user.UserLoginRequest)
  SharedDtor();
}

void UserLoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_info_;
}

void UserLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginRequest& UserLoginRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserLoginRequest();
  return *internal_default_instance();
}

UserLoginRequest* UserLoginRequest::New(::google::protobuf::Arena* arena) const {
  UserLoginRequest* n = new UserLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
  ::memset(&sha256_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_mode_) -
      reinterpret_cast<char*>(&sha256_)) + sizeof(login_mode_));
  _internal_metadata_.Clear();
}

bool UserLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserLoginRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserLoginRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserLoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey_password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserLoginRequest.appkey_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool SHA256 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sha256_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.base.MobileBase base_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_auto_login = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_auto_login_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserLoginRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.ELoginMode login_mode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_login_mode(static_cast< ::common::enumeration::ELoginMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserLoginRequest)
  return false;
#undef DO_
}

void UserLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string appkey_password = 4;
  if (this->appkey_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.appkey_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appkey_password(), output);
  }

  // bool SHA256 = 5;
  if (this->sha256() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->sha256(), output);
  }

  // .common.base.MobileBase base_info = 6;
  if (this->has_base_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->base_info_, output);
  }

  // bool is_auto_login = 7;
  if (this->is_auto_login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_auto_login(), output);
  }

  // string token = 8;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->token(), output);
  }

  // .common.enumeration.ELoginMode login_mode = 9;
  if (this->login_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->login_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserLoginRequest)
}

::google::protobuf::uint8* UserLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string appkey_password = 4;
  if (this->appkey_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.appkey_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appkey_password(), target);
  }

  // bool SHA256 = 5;
  if (this->sha256() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->sha256(), target);
  }

  // .common.base.MobileBase base_info = 6;
  if (this->has_base_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->base_info_, deterministic, target);
  }

  // bool is_auto_login = 7;
  if (this->is_auto_login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_auto_login(), target);
  }

  // string token = 8;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserLoginRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->token(), target);
  }

  // .common.enumeration.ELoginMode login_mode = 9;
  if (this->login_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->login_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserLoginRequest)
  return target;
}

size_t UserLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserLoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string appkey_password = 4;
  if (this->appkey_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey_password());
  }

  // string token = 8;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .common.base.MobileBase base_info = 6;
  if (this->has_base_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_info_);
  }

  // bool SHA256 = 5;
  if (this->sha256() != 0) {
    total_size += 1 + 1;
  }

  // bool is_auto_login = 7;
  if (this->is_auto_login() != 0) {
    total_size += 1 + 1;
  }

  // .common.enumeration.ELoginMode login_mode = 9;
  if (this->login_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->login_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserLoginRequest)
    MergeFrom(*source);
  }
}

void UserLoginRequest::MergeFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.appkey_password().size() > 0) {

    appkey_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_password_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_base_info()) {
    mutable_base_info()->::common::base::MobileBase::MergeFrom(from.base_info());
  }
  if (from.sha256() != 0) {
    set_sha256(from.sha256());
  }
  if (from.is_auto_login() != 0) {
    set_is_auto_login(from.is_auto_login());
  }
  if (from.login_mode() != 0) {
    set_login_mode(from.login_mode());
  }
}

void UserLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginRequest::CopyFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRequest::IsInitialized() const {
  return true;
}

void UserLoginRequest::Swap(UserLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginRequest::InternalSwap(UserLoginRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  password_.Swap(&other->password_);
  appkey_password_.Swap(&other->appkey_password_);
  token_.Swap(&other->token_);
  swap(base_info_, other->base_info_);
  swap(sha256_, other->sha256_);
  swap(is_auto_login_, other->is_auto_login_);
  swap(login_mode_, other->login_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLoginRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginResponse::InitAsDefaultInstance() {
  ::outer::user::_UserLoginResponse_default_instance_._instance.get_mutable()->user_infos_ = const_cast< ::outer::user::UserInfo*>(
      ::outer::user::UserInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginResponse::kRetFieldNumber;
const int UserLoginResponse::kUserInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginResponse::UserLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserLoginResponse)
}
UserLoginResponse::UserLoginResponse(const UserLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_infos()) {
    user_infos_ = new ::outer::user::UserInfo(*from.user_infos_);
  } else {
    user_infos_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.UserLoginResponse)
}

void UserLoginResponse::SharedCtor() {
  ::memset(&user_infos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&user_infos_)) + sizeof(ret_));
  _cached_size_ = 0;
}

UserLoginResponse::~UserLoginResponse() {
  // @@protoc_insertion_point(destructor:outer.user.UserLoginResponse)
  SharedDtor();
}

void UserLoginResponse::SharedDtor() {
  if (this != internal_default_instance()) delete user_infos_;
}

void UserLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginResponse& UserLoginResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserLoginResponse();
  return *internal_default_instance();
}

UserLoginResponse* UserLoginResponse::New(::google::protobuf::Arena* arena) const {
  UserLoginResponse* n = new UserLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_infos_ != NULL) {
    delete user_infos_;
  }
  user_infos_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UserLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.user.UserInfo user_infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserLoginResponse)
  return false;
#undef DO_
}

void UserLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_infos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserLoginResponse)
}

::google::protobuf::uint8* UserLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user_infos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserLoginResponse)
  return target;
}

size_t UserLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserLoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user_infos_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserLoginResponse)
    MergeFrom(*source);
  }
}

void UserLoginResponse::MergeFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_infos()) {
    mutable_user_infos()->::outer::user::UserInfo::MergeFrom(from.user_infos());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UserLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginResponse::CopyFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginResponse::IsInitialized() const {
  return true;
}

void UserLoginResponse::Swap(UserLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginResponse::InternalSwap(UserLoginResponse* other) {
  using std::swap;
  swap(user_infos_, other->user_infos_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLoginResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterRequest::kUsernameFieldNumber;
const int UserRegisterRequest::kAppkeyFieldNumber;
const int UserRegisterRequest::kPasswordFieldNumber;
const int UserRegisterRequest::kNickFieldNumber;
const int UserRegisterRequest::kPhoneFieldNumber;
const int UserRegisterRequest::kAppkeyPasswordFieldNumber;
const int UserRegisterRequest::kSHA256FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterRequest::UserRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserRegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserRegisterRequest)
}
UserRegisterRequest::UserRegisterRequest(const UserRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  appkey_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey_password().size() > 0) {
    appkey_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_password_);
  }
  sha256_ = from.sha256_;
  // @@protoc_insertion_point(copy_constructor:outer.user.UserRegisterRequest)
}

void UserRegisterRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha256_ = false;
  _cached_size_ = 0;
}

UserRegisterRequest::~UserRegisterRequest() {
  // @@protoc_insertion_point(destructor:outer.user.UserRegisterRequest)
  SharedDtor();
}

void UserRegisterRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegisterRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterRequest& UserRegisterRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserRegisterRequest();
  return *internal_default_instance();
}

UserRegisterRequest* UserRegisterRequest::New(::google::protobuf::Arena* arena) const {
  UserRegisterRequest* n = new UserRegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha256_ = false;
  _internal_metadata_.Clear();
}

bool UserRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserRegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey_password = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterRequest.appkey_password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool SHA256 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sha256_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserRegisterRequest)
  return false;
#undef DO_
}

void UserRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nick(), output);
  }

  // string phone = 5;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phone(), output);
  }

  // string appkey_password = 6;
  if (this->appkey_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.appkey_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appkey_password(), output);
  }

  // bool SHA256 = 7;
  if (this->sha256() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->sha256(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserRegisterRequest)
}

::google::protobuf::uint8* UserRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nick(), target);
  }

  // string phone = 5;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phone(), target);
  }

  // string appkey_password = 6;
  if (this->appkey_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey_password().data(), static_cast<int>(this->appkey_password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterRequest.appkey_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appkey_password(), target);
  }

  // bool SHA256 = 7;
  if (this->sha256() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->sha256(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserRegisterRequest)
  return target;
}

size_t UserRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserRegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string nick = 4;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // string phone = 5;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string appkey_password = 6;
  if (this->appkey_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey_password());
  }

  // bool SHA256 = 7;
  if (this->sha256() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserRegisterRequest)
    MergeFrom(*source);
  }
}

void UserRegisterRequest::MergeFrom(const UserRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.appkey_password().size() > 0) {

    appkey_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_password_);
  }
  if (from.sha256() != 0) {
    set_sha256(from.sha256());
  }
}

void UserRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterRequest::CopyFrom(const UserRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterRequest::IsInitialized() const {
  return true;
}

void UserRegisterRequest::Swap(UserRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterRequest::InternalSwap(UserRegisterRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  password_.Swap(&other->password_);
  nick_.Swap(&other->nick_);
  phone_.Swap(&other->phone_);
  appkey_password_.Swap(&other->appkey_password_);
  swap(sha256_, other->sha256_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegisterRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterResponse::kRetFieldNumber;
const int UserRegisterResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterResponse::UserRegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserRegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserRegisterResponse)
}
UserRegisterResponse::UserRegisterResponse(const UserRegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.UserRegisterResponse)
}

void UserRegisterResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

UserRegisterResponse::~UserRegisterResponse() {
  // @@protoc_insertion_point(destructor:outer.user.UserRegisterResponse)
  SharedDtor();
}

void UserRegisterResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegisterResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterResponse& UserRegisterResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserRegisterResponse();
  return *internal_default_instance();
}

UserRegisterResponse* UserRegisterResponse::New(::google::protobuf::Arena* arena) const {
  UserRegisterResponse* n = new UserRegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UserRegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserRegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserRegisterResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserRegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserRegisterResponse)
  return false;
#undef DO_
}

void UserRegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserRegisterResponse)
}

::google::protobuf::uint8* UserRegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserRegisterResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserRegisterResponse)
  return target;
}

size_t UserRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserRegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserRegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserRegisterResponse)
    MergeFrom(*source);
  }
}

void UserRegisterResponse::MergeFrom(const UserRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UserRegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterResponse::CopyFrom(const UserRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterResponse::IsInitialized() const {
  return true;
}

void UserRegisterResponse::Swap(UserRegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterResponse::InternalSwap(UserRegisterResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegisterResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PasswordUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordUpdateRequest::kUsernameFieldNumber;
const int PasswordUpdateRequest::kAppkeyFieldNumber;
const int PasswordUpdateRequest::kPasswordFieldNumber;
const int PasswordUpdateRequest::kSHA256FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordUpdateRequest::PasswordUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsPasswordUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.PasswordUpdateRequest)
}
PasswordUpdateRequest::PasswordUpdateRequest(const PasswordUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sha256_ = from.sha256_;
  // @@protoc_insertion_point(copy_constructor:outer.user.PasswordUpdateRequest)
}

void PasswordUpdateRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha256_ = false;
  _cached_size_ = 0;
}

PasswordUpdateRequest::~PasswordUpdateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.PasswordUpdateRequest)
  SharedDtor();
}

void PasswordUpdateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordUpdateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PasswordUpdateRequest& PasswordUpdateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsPasswordUpdateRequest();
  return *internal_default_instance();
}

PasswordUpdateRequest* PasswordUpdateRequest::New(::google::protobuf::Arena* arena) const {
  PasswordUpdateRequest* n = new PasswordUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.PasswordUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha256_ = false;
  _internal_metadata_.Clear();
}

bool PasswordUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.PasswordUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PasswordUpdateRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PasswordUpdateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PasswordUpdateRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool SHA256 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sha256_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.PasswordUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.PasswordUpdateRequest)
  return false;
#undef DO_
}

void PasswordUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.PasswordUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // bool SHA256 = 4;
  if (this->sha256() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sha256(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.PasswordUpdateRequest)
}

::google::protobuf::uint8* PasswordUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.PasswordUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // bool SHA256 = 4;
  if (this->sha256() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sha256(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.PasswordUpdateRequest)
  return target;
}

size_t PasswordUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.PasswordUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bool SHA256 = 4;
  if (this->sha256() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.PasswordUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PasswordUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.PasswordUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.PasswordUpdateRequest)
    MergeFrom(*source);
  }
}

void PasswordUpdateRequest::MergeFrom(const PasswordUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.PasswordUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.sha256() != 0) {
    set_sha256(from.sha256());
  }
}

void PasswordUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.PasswordUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordUpdateRequest::CopyFrom(const PasswordUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.PasswordUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PasswordUpdateRequest::IsInitialized() const {
  return true;
}

void PasswordUpdateRequest::Swap(PasswordUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordUpdateRequest::InternalSwap(PasswordUpdateRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  password_.Swap(&other->password_);
  swap(sha256_, other->sha256_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordUpdateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PasswordUpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordUpdateResponse::kRetFieldNumber;
const int PasswordUpdateResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordUpdateResponse::PasswordUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsPasswordUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.PasswordUpdateResponse)
}
PasswordUpdateResponse::PasswordUpdateResponse(const PasswordUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.PasswordUpdateResponse)
}

void PasswordUpdateResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

PasswordUpdateResponse::~PasswordUpdateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.PasswordUpdateResponse)
  SharedDtor();
}

void PasswordUpdateResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordUpdateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PasswordUpdateResponse& PasswordUpdateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsPasswordUpdateResponse();
  return *internal_default_instance();
}

PasswordUpdateResponse* PasswordUpdateResponse::New(::google::protobuf::Arena* arena) const {
  PasswordUpdateResponse* n = new PasswordUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.PasswordUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool PasswordUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.PasswordUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PasswordUpdateResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.PasswordUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.PasswordUpdateResponse)
  return false;
#undef DO_
}

void PasswordUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.PasswordUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.PasswordUpdateResponse)
}

::google::protobuf::uint8* PasswordUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.PasswordUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PasswordUpdateResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.PasswordUpdateResponse)
  return target;
}

size_t PasswordUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.PasswordUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.PasswordUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PasswordUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.PasswordUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.PasswordUpdateResponse)
    MergeFrom(*source);
  }
}

void PasswordUpdateResponse::MergeFrom(const PasswordUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.PasswordUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void PasswordUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.PasswordUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordUpdateResponse::CopyFrom(const PasswordUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.PasswordUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PasswordUpdateResponse::IsInitialized() const {
  return true;
}

void PasswordUpdateResponse::Swap(PasswordUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordUpdateResponse::InternalSwap(PasswordUpdateResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordUpdateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NickUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NickUpdateRequest::kUsernameFieldNumber;
const int NickUpdateRequest::kAppkeyFieldNumber;
const int NickUpdateRequest::kNickFieldNumber;
const int NickUpdateRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NickUpdateRequest::NickUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsNickUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.NickUpdateRequest)
}
NickUpdateRequest::NickUpdateRequest(const NickUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  fromclienttype_ = from.fromclienttype_;
  // @@protoc_insertion_point(copy_constructor:outer.user.NickUpdateRequest)
}

void NickUpdateRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _cached_size_ = 0;
}

NickUpdateRequest::~NickUpdateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.NickUpdateRequest)
  SharedDtor();
}

void NickUpdateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NickUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NickUpdateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NickUpdateRequest& NickUpdateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsNickUpdateRequest();
  return *internal_default_instance();
}

NickUpdateRequest* NickUpdateRequest::New(::google::protobuf::Arena* arena) const {
  NickUpdateRequest* n = new NickUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NickUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.NickUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _internal_metadata_.Clear();
}

bool NickUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.NickUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.NickUpdateRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.NickUpdateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.NickUpdateRequest.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType fromClientType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fromclienttype(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.NickUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.NickUpdateRequest)
  return false;
#undef DO_
}

void NickUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.NickUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nick(), output);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fromclienttype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.NickUpdateRequest)
}

::google::protobuf::uint8* NickUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.NickUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateRequest.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nick(), target);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->fromclienttype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.NickUpdateRequest)
  return target;
}

size_t NickUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.NickUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string nick = 3;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fromclienttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NickUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.NickUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NickUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NickUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.NickUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.NickUpdateRequest)
    MergeFrom(*source);
  }
}

void NickUpdateRequest::MergeFrom(const NickUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.NickUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.fromclienttype() != 0) {
    set_fromclienttype(from.fromclienttype());
  }
}

void NickUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.NickUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NickUpdateRequest::CopyFrom(const NickUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.NickUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NickUpdateRequest::IsInitialized() const {
  return true;
}

void NickUpdateRequest::Swap(NickUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NickUpdateRequest::InternalSwap(NickUpdateRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  nick_.Swap(&other->nick_);
  swap(fromclienttype_, other->fromclienttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NickUpdateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NickUpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NickUpdateResponse::kRetFieldNumber;
const int NickUpdateResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NickUpdateResponse::NickUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsNickUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.NickUpdateResponse)
}
NickUpdateResponse::NickUpdateResponse(const NickUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.NickUpdateResponse)
}

void NickUpdateResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

NickUpdateResponse::~NickUpdateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.NickUpdateResponse)
  SharedDtor();
}

void NickUpdateResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NickUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NickUpdateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NickUpdateResponse& NickUpdateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsNickUpdateResponse();
  return *internal_default_instance();
}

NickUpdateResponse* NickUpdateResponse::New(::google::protobuf::Arena* arena) const {
  NickUpdateResponse* n = new NickUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NickUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.NickUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool NickUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.NickUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.NickUpdateResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.NickUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.NickUpdateResponse)
  return false;
#undef DO_
}

void NickUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.NickUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.NickUpdateResponse)
}

::google::protobuf::uint8* NickUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.NickUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.NickUpdateResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.NickUpdateResponse)
  return target;
}

size_t NickUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.NickUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NickUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.NickUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NickUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NickUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.NickUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.NickUpdateResponse)
    MergeFrom(*source);
  }
}

void NickUpdateResponse::MergeFrom(const NickUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.NickUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void NickUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.NickUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NickUpdateResponse::CopyFrom(const NickUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.NickUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NickUpdateResponse::IsInitialized() const {
  return true;
}

void NickUpdateResponse::Swap(NickUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NickUpdateResponse::InternalSwap(NickUpdateResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NickUpdateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneUpdateRequest::kUsernameFieldNumber;
const int PhoneUpdateRequest::kAppkeyFieldNumber;
const int PhoneUpdateRequest::kUpdatePhoneFieldNumber;
const int PhoneUpdateRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneUpdateRequest::PhoneUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsPhoneUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.PhoneUpdateRequest)
}
PhoneUpdateRequest::PhoneUpdateRequest(const PhoneUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  update_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.update_phone().size() > 0) {
    update_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_phone_);
  }
  fromclienttype_ = from.fromclienttype_;
  // @@protoc_insertion_point(copy_constructor:outer.user.PhoneUpdateRequest)
}

void PhoneUpdateRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _cached_size_ = 0;
}

PhoneUpdateRequest::~PhoneUpdateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.PhoneUpdateRequest)
  SharedDtor();
}

void PhoneUpdateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhoneUpdateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneUpdateRequest& PhoneUpdateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsPhoneUpdateRequest();
  return *internal_default_instance();
}

PhoneUpdateRequest* PhoneUpdateRequest::New(::google::protobuf::Arena* arena) const {
  PhoneUpdateRequest* n = new PhoneUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhoneUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.PhoneUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _internal_metadata_.Clear();
}

bool PhoneUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.PhoneUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PhoneUpdateRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PhoneUpdateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string update_phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_update_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->update_phone().data(), static_cast<int>(this->update_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PhoneUpdateRequest.update_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType fromClientType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fromclienttype(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.PhoneUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.PhoneUpdateRequest)
  return false;
#undef DO_
}

void PhoneUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.PhoneUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string update_phone = 3;
  if (this->update_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->update_phone().data(), static_cast<int>(this->update_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.update_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->update_phone(), output);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fromclienttype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.PhoneUpdateRequest)
}

::google::protobuf::uint8* PhoneUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.PhoneUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string update_phone = 3;
  if (this->update_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->update_phone().data(), static_cast<int>(this->update_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateRequest.update_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->update_phone(), target);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->fromclienttype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.PhoneUpdateRequest)
  return target;
}

size_t PhoneUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.PhoneUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string update_phone = 3;
  if (this->update_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->update_phone());
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fromclienttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhoneUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.PhoneUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.PhoneUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.PhoneUpdateRequest)
    MergeFrom(*source);
  }
}

void PhoneUpdateRequest::MergeFrom(const PhoneUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.PhoneUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.update_phone().size() > 0) {

    update_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_phone_);
  }
  if (from.fromclienttype() != 0) {
    set_fromclienttype(from.fromclienttype());
  }
}

void PhoneUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.PhoneUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneUpdateRequest::CopyFrom(const PhoneUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.PhoneUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneUpdateRequest::IsInitialized() const {
  return true;
}

void PhoneUpdateRequest::Swap(PhoneUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneUpdateRequest::InternalSwap(PhoneUpdateRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  update_phone_.Swap(&other->update_phone_);
  swap(fromclienttype_, other->fromclienttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhoneUpdateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneUpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneUpdateResponse::kRetFieldNumber;
const int PhoneUpdateResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneUpdateResponse::PhoneUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsPhoneUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.PhoneUpdateResponse)
}
PhoneUpdateResponse::PhoneUpdateResponse(const PhoneUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.PhoneUpdateResponse)
}

void PhoneUpdateResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

PhoneUpdateResponse::~PhoneUpdateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.PhoneUpdateResponse)
  SharedDtor();
}

void PhoneUpdateResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhoneUpdateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneUpdateResponse& PhoneUpdateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsPhoneUpdateResponse();
  return *internal_default_instance();
}

PhoneUpdateResponse* PhoneUpdateResponse::New(::google::protobuf::Arena* arena) const {
  PhoneUpdateResponse* n = new PhoneUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhoneUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.PhoneUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool PhoneUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.PhoneUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.PhoneUpdateResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.PhoneUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.PhoneUpdateResponse)
  return false;
#undef DO_
}

void PhoneUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.PhoneUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.PhoneUpdateResponse)
}

::google::protobuf::uint8* PhoneUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.PhoneUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.PhoneUpdateResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.PhoneUpdateResponse)
  return target;
}

size_t PhoneUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.PhoneUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhoneUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.PhoneUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.PhoneUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.PhoneUpdateResponse)
    MergeFrom(*source);
  }
}

void PhoneUpdateResponse::MergeFrom(const PhoneUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.PhoneUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void PhoneUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.PhoneUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneUpdateResponse::CopyFrom(const PhoneUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.PhoneUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneUpdateResponse::IsInitialized() const {
  return true;
}

void PhoneUpdateResponse::Swap(PhoneUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneUpdateResponse::InternalSwap(PhoneUpdateResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhoneUpdateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSearchRequest::kUsernameFieldNumber;
const int UserSearchRequest::kAppkeyFieldNumber;
const int UserSearchRequest::kStartFieldNumber;
const int UserSearchRequest::kRangeFieldNumber;
const int UserSearchRequest::kSearchKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSearchRequest::UserSearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserSearchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserSearchRequest)
}
UserSearchRequest::UserSearchRequest(const UserSearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  search_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.search_key().size() > 0) {
    search_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_key_);
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_) -
    reinterpret_cast<char*>(&start_)) + sizeof(range_));
  // @@protoc_insertion_point(copy_constructor:outer.user.UserSearchRequest)
}

void UserSearchRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_) -
      reinterpret_cast<char*>(&start_)) + sizeof(range_));
  _cached_size_ = 0;
}

UserSearchRequest::~UserSearchRequest() {
  // @@protoc_insertion_point(destructor:outer.user.UserSearchRequest)
  SharedDtor();
}

void UserSearchRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserSearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserSearchRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSearchRequest& UserSearchRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserSearchRequest();
  return *internal_default_instance();
}

UserSearchRequest* UserSearchRequest::New(::google::protobuf::Arena* arena) const {
  UserSearchRequest* n = new UserSearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserSearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_) -
      reinterpret_cast<char*>(&start_)) + sizeof(range_));
  _internal_metadata_.Clear();
}

bool UserSearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserSearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserSearchRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserSearchRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string search_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_key().data(), static_cast<int>(this->search_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UserSearchRequest.search_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserSearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserSearchRequest)
  return false;
#undef DO_
}

void UserSearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserSearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start(), output);
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->range(), output);
  }

  // string search_key = 5;
  if (this->search_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_key().data(), static_cast<int>(this->search_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.search_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->search_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserSearchRequest)
}

::google::protobuf::uint8* UserSearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserSearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start(), target);
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->range(), target);
  }

  // string search_key = 5;
  if (this->search_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_key().data(), static_cast<int>(this->search_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UserSearchRequest.search_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->search_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserSearchRequest)
  return target;
}

size_t UserSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserSearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string search_key = 5;
  if (this->search_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_key());
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start());
  }

  // uint32 range = 4;
  if (this->range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserSearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserSearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserSearchRequest)
    MergeFrom(*source);
  }
}

void UserSearchRequest::MergeFrom(const UserSearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.search_key().size() > 0) {

    search_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_key_);
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
}

void UserSearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSearchRequest::CopyFrom(const UserSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSearchRequest::IsInitialized() const {
  return true;
}

void UserSearchRequest::Swap(UserSearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserSearchRequest::InternalSwap(UserSearchRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  search_key_.Swap(&other->search_key_);
  swap(start_, other->start_);
  swap(range_, other->range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserSearchRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserSearchResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserSearchResponse::kRetFieldNumber;
const int UserSearchResponse::kUserInfosFieldNumber;
const int UserSearchResponse::kTotalcountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserSearchResponse::UserSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUserSearchResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UserSearchResponse)
}
UserSearchResponse::UserSearchResponse(const UserSearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_infos_(from.user_infos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalcount_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(totalcount_));
  // @@protoc_insertion_point(copy_constructor:outer.user.UserSearchResponse)
}

void UserSearchResponse::SharedCtor() {
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalcount_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(totalcount_));
  _cached_size_ = 0;
}

UserSearchResponse::~UserSearchResponse() {
  // @@protoc_insertion_point(destructor:outer.user.UserSearchResponse)
  SharedDtor();
}

void UserSearchResponse::SharedDtor() {
}

void UserSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserSearchResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserSearchResponse& UserSearchResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUserSearchResponse();
  return *internal_default_instance();
}

UserSearchResponse* UserSearchResponse::New(::google::protobuf::Arena* arena) const {
  UserSearchResponse* n = new UserSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UserSearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_infos_.Clear();
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalcount_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(totalcount_));
  _internal_metadata_.Clear();
}

bool UserSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UserSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.user.UserInfo user_infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_user_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 totalcount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UserSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UserSearchResponse)
  return false;
#undef DO_
}

void UserSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UserSearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.user.UserInfo user_infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user_infos(static_cast<int>(i)), output);
  }

  // uint32 totalcount = 3;
  if (this->totalcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totalcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UserSearchResponse)
}

::google::protobuf::uint8* UserSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UserSearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.user.UserInfo user_infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->user_infos(static_cast<int>(i)), deterministic, target);
  }

  // uint32 totalcount = 3;
  if (this->totalcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totalcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UserSearchResponse)
  return target;
}

size_t UserSearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UserSearchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.user.UserInfo user_infos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->user_infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_infos(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // uint32 totalcount = 3;
  if (this->totalcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UserSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserSearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UserSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UserSearchResponse)
    MergeFrom(*source);
  }
}

void UserSearchResponse::MergeFrom(const UserSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UserSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_infos_.MergeFrom(from.user_infos_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.totalcount() != 0) {
    set_totalcount(from.totalcount());
  }
}

void UserSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UserSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserSearchResponse::CopyFrom(const UserSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UserSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSearchResponse::IsInitialized() const {
  return true;
}

void UserSearchResponse::Swap(UserSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserSearchResponse::InternalSwap(UserSearchResponse* other) {
  using std::swap;
  user_infos_.InternalSwap(&other->user_infos_);
  swap(ret_, other->ret_);
  swap(totalcount_, other->totalcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserSearchResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoRequest::kUsernameFieldNumber;
const int GetUserInfoRequest::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoRequest::GetUserInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsGetUserInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.GetUserInfoRequest)
}
GetUserInfoRequest::GetUserInfoRequest(const GetUserInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.GetUserInfoRequest)
}

void GetUserInfoRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetUserInfoRequest::~GetUserInfoRequest() {
  // @@protoc_insertion_point(destructor:outer.user.GetUserInfoRequest)
  SharedDtor();
}

void GetUserInfoRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetUserInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoRequest& GetUserInfoRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsGetUserInfoRequest();
  return *internal_default_instance();
}

GetUserInfoRequest* GetUserInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetUserInfoRequest* n = new GetUserInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.GetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetUserInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.GetUserInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.GetUserInfoRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.GetUserInfoRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.GetUserInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.GetUserInfoRequest)
  return false;
#undef DO_
}

void GetUserInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.GetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetUserInfoRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetUserInfoRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.GetUserInfoRequest)
}

::google::protobuf::uint8* GetUserInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.GetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetUserInfoRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetUserInfoRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.GetUserInfoRequest)
  return target;
}

size_t GetUserInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.GetUserInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.GetUserInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.GetUserInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.GetUserInfoRequest)
    MergeFrom(*source);
  }
}

void GetUserInfoRequest::MergeFrom(const GetUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.GetUserInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void GetUserInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.GetUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoRequest::CopyFrom(const GetUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.GetUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoRequest::IsInitialized() const {
  return true;
}

void GetUserInfoRequest::Swap(GetUserInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoRequest::InternalSwap(GetUserInfoRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoResponse::InitAsDefaultInstance() {
  ::outer::user::_GetUserInfoResponse_default_instance_._instance.get_mutable()->user_infos_ = const_cast< ::outer::user::UserInfo*>(
      ::outer::user::UserInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoResponse::kRetFieldNumber;
const int GetUserInfoResponse::kUserInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoResponse::GetUserInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsGetUserInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.GetUserInfoResponse)
}
GetUserInfoResponse::GetUserInfoResponse(const GetUserInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_infos()) {
    user_infos_ = new ::outer::user::UserInfo(*from.user_infos_);
  } else {
    user_infos_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.GetUserInfoResponse)
}

void GetUserInfoResponse::SharedCtor() {
  ::memset(&user_infos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&user_infos_)) + sizeof(ret_));
  _cached_size_ = 0;
}

GetUserInfoResponse::~GetUserInfoResponse() {
  // @@protoc_insertion_point(destructor:outer.user.GetUserInfoResponse)
  SharedDtor();
}

void GetUserInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete user_infos_;
}

void GetUserInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoResponse& GetUserInfoResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsGetUserInfoResponse();
  return *internal_default_instance();
}

GetUserInfoResponse* GetUserInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetUserInfoResponse* n = new GetUserInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.GetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_infos_ != NULL) {
    delete user_infos_;
  }
  user_infos_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetUserInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.GetUserInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .outer.user.UserInfo user_infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.GetUserInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.GetUserInfoResponse)
  return false;
#undef DO_
}

void GetUserInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.GetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_infos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.GetUserInfoResponse)
}

::google::protobuf::uint8* GetUserInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.GetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user_infos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.GetUserInfoResponse)
  return target;
}

size_t GetUserInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.GetUserInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .outer.user.UserInfo user_infos = 2;
  if (this->has_user_infos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user_infos_);
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.GetUserInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.GetUserInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.GetUserInfoResponse)
    MergeFrom(*source);
  }
}

void GetUserInfoResponse::MergeFrom(const GetUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.GetUserInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_infos()) {
    mutable_user_infos()->::outer::user::UserInfo::MergeFrom(from.user_infos());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetUserInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.GetUserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoResponse::CopyFrom(const GetUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.GetUserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoResponse::IsInitialized() const {
  return true;
}

void GetUserInfoResponse::Swap(GetUserInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoResponse::InternalSwap(GetUserInfoResponse* other) {
  using std::swap;
  swap(user_infos_, other->user_infos_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetUserInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetUserInfoRequest::kAppkeyFieldNumber;
const int BatchGetUserInfoRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetUserInfoRequest::BatchGetUserInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsBatchGetUserInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.BatchGetUserInfoRequest)
}
BatchGetUserInfoRequest::BatchGetUserInfoRequest(const BatchGetUserInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      username_(from.username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.BatchGetUserInfoRequest)
}

void BatchGetUserInfoRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BatchGetUserInfoRequest::~BatchGetUserInfoRequest() {
  // @@protoc_insertion_point(destructor:outer.user.BatchGetUserInfoRequest)
  SharedDtor();
}

void BatchGetUserInfoRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BatchGetUserInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchGetUserInfoRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetUserInfoRequest& BatchGetUserInfoRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsBatchGetUserInfoRequest();
  return *internal_default_instance();
}

BatchGetUserInfoRequest* BatchGetUserInfoRequest::New(::google::protobuf::Arena* arena) const {
  BatchGetUserInfoRequest* n = new BatchGetUserInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchGetUserInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.BatchGetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BatchGetUserInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.BatchGetUserInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.BatchGetUserInfoRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username(this->username_size() - 1).data(),
            static_cast<int>(this->username(this->username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.BatchGetUserInfoRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.BatchGetUserInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.BatchGetUserInfoRequest)
  return false;
#undef DO_
}

void BatchGetUserInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.BatchGetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.BatchGetUserInfoRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // repeated string username = 2;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.BatchGetUserInfoRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->username(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.BatchGetUserInfoRequest)
}

::google::protobuf::uint8* BatchGetUserInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.BatchGetUserInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.BatchGetUserInfoRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // repeated string username = 2;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.BatchGetUserInfoRequest.username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->username(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.BatchGetUserInfoRequest)
  return target;
}

size_t BatchGetUserInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.BatchGetUserInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string username = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->username_size());
  for (int i = 0, n = this->username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->username(i));
  }

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchGetUserInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.BatchGetUserInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetUserInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetUserInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.BatchGetUserInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.BatchGetUserInfoRequest)
    MergeFrom(*source);
  }
}

void BatchGetUserInfoRequest::MergeFrom(const BatchGetUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.BatchGetUserInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  username_.MergeFrom(from.username_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void BatchGetUserInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.BatchGetUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetUserInfoRequest::CopyFrom(const BatchGetUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.BatchGetUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetUserInfoRequest::IsInitialized() const {
  return true;
}

void BatchGetUserInfoRequest::Swap(BatchGetUserInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetUserInfoRequest::InternalSwap(BatchGetUserInfoRequest* other) {
  using std::swap;
  username_.InternalSwap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchGetUserInfoRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetUserInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetUserInfoResponse::kRetFieldNumber;
const int BatchGetUserInfoResponse::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetUserInfoResponse::BatchGetUserInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsBatchGetUserInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.BatchGetUserInfoResponse)
}
BatchGetUserInfoResponse::BatchGetUserInfoResponse(const BatchGetUserInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_info_(from.user_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.BatchGetUserInfoResponse)
}

void BatchGetUserInfoResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

BatchGetUserInfoResponse::~BatchGetUserInfoResponse() {
  // @@protoc_insertion_point(destructor:outer.user.BatchGetUserInfoResponse)
  SharedDtor();
}

void BatchGetUserInfoResponse::SharedDtor() {
}

void BatchGetUserInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchGetUserInfoResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetUserInfoResponse& BatchGetUserInfoResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsBatchGetUserInfoResponse();
  return *internal_default_instance();
}

BatchGetUserInfoResponse* BatchGetUserInfoResponse::New(::google::protobuf::Arena* arena) const {
  BatchGetUserInfoResponse* n = new BatchGetUserInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchGetUserInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.BatchGetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_info_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool BatchGetUserInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.BatchGetUserInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.user.UserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.BatchGetUserInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.BatchGetUserInfoResponse)
  return false;
#undef DO_
}

void BatchGetUserInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.BatchGetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated .outer.user.UserInfo user_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.BatchGetUserInfoResponse)
}

::google::protobuf::uint8* BatchGetUserInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.BatchGetUserInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated .outer.user.UserInfo user_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->user_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.BatchGetUserInfoResponse)
  return target;
}

size_t BatchGetUserInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.BatchGetUserInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.user.UserInfo user_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->user_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_info(static_cast<int>(i)));
    }
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchGetUserInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.BatchGetUserInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetUserInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetUserInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.BatchGetUserInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.BatchGetUserInfoResponse)
    MergeFrom(*source);
  }
}

void BatchGetUserInfoResponse::MergeFrom(const BatchGetUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.BatchGetUserInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_info_.MergeFrom(from.user_info_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void BatchGetUserInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.BatchGetUserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetUserInfoResponse::CopyFrom(const BatchGetUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.BatchGetUserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetUserInfoResponse::IsInitialized() const {
  return true;
}

void BatchGetUserInfoResponse::Swap(BatchGetUserInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetUserInfoResponse::InternalSwap(BatchGetUserInfoResponse* other) {
  using std::swap;
  user_info_.InternalSwap(&other->user_info_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchGetUserInfoResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckUserListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUserListRequest::kAppkeyFieldNumber;
const int CheckUserListRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUserListRequest::CheckUserListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsCheckUserListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.CheckUserListRequest)
}
CheckUserListRequest::CheckUserListRequest(const CheckUserListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      username_(from.username_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.CheckUserListRequest)
}

void CheckUserListRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckUserListRequest::~CheckUserListRequest() {
  // @@protoc_insertion_point(destructor:outer.user.CheckUserListRequest)
  SharedDtor();
}

void CheckUserListRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckUserListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUserListRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUserListRequest& CheckUserListRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsCheckUserListRequest();
  return *internal_default_instance();
}

CheckUserListRequest* CheckUserListRequest::New(::google::protobuf::Arena* arena) const {
  CheckUserListRequest* n = new CheckUserListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUserListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.CheckUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.Clear();
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CheckUserListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.CheckUserListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.CheckUserListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username(this->username_size() - 1).data(),
            static_cast<int>(this->username(this->username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.CheckUserListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.CheckUserListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.CheckUserListRequest)
  return false;
#undef DO_
}

void CheckUserListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.CheckUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // repeated string username = 2;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->username(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.CheckUserListRequest)
}

::google::protobuf::uint8* CheckUserListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.CheckUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // repeated string username = 2;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListRequest.username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->username(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.CheckUserListRequest)
  return target;
}

size_t CheckUserListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.CheckUserListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string username = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->username_size());
  for (int i = 0, n = this->username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->username(i));
  }

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUserListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.CheckUserListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUserListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUserListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.CheckUserListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.CheckUserListRequest)
    MergeFrom(*source);
  }
}

void CheckUserListRequest::MergeFrom(const CheckUserListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.CheckUserListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  username_.MergeFrom(from.username_);
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void CheckUserListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.CheckUserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUserListRequest::CopyFrom(const CheckUserListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.CheckUserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUserListRequest::IsInitialized() const {
  return true;
}

void CheckUserListRequest::Swap(CheckUserListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUserListRequest::InternalSwap(CheckUserListRequest* other) {
  using std::swap;
  username_.InternalSwap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUserListRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckUserListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckUserListResponse::kRetFieldNumber;
const int CheckUserListResponse::kExistUsersFieldNumber;
const int CheckUserListResponse::kUnexistUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckUserListResponse::CheckUserListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsCheckUserListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.CheckUserListResponse)
}
CheckUserListResponse::CheckUserListResponse(const CheckUserListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      exist_users_(from.exist_users_),
      unexist_users_(from.unexist_users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.CheckUserListResponse)
}

void CheckUserListResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

CheckUserListResponse::~CheckUserListResponse() {
  // @@protoc_insertion_point(destructor:outer.user.CheckUserListResponse)
  SharedDtor();
}

void CheckUserListResponse::SharedDtor() {
}

void CheckUserListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckUserListResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckUserListResponse& CheckUserListResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsCheckUserListResponse();
  return *internal_default_instance();
}

CheckUserListResponse* CheckUserListResponse::New(::google::protobuf::Arena* arena) const {
  CheckUserListResponse* n = new CheckUserListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckUserListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.CheckUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exist_users_.Clear();
  unexist_users_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool CheckUserListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.CheckUserListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string exist_users = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_exist_users()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exist_users(this->exist_users_size() - 1).data(),
            static_cast<int>(this->exist_users(this->exist_users_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.CheckUserListResponse.exist_users"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string unexist_users = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_unexist_users()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unexist_users(this->unexist_users_size() - 1).data(),
            static_cast<int>(this->unexist_users(this->unexist_users_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.CheckUserListResponse.unexist_users"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.CheckUserListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.CheckUserListResponse)
  return false;
#undef DO_
}

void CheckUserListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.CheckUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated string exist_users = 2;
  for (int i = 0, n = this->exist_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exist_users(i).data(), static_cast<int>(this->exist_users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListResponse.exist_users");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->exist_users(i), output);
  }

  // repeated string unexist_users = 3;
  for (int i = 0, n = this->unexist_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unexist_users(i).data(), static_cast<int>(this->unexist_users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListResponse.unexist_users");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->unexist_users(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.CheckUserListResponse)
}

::google::protobuf::uint8* CheckUserListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.CheckUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated string exist_users = 2;
  for (int i = 0, n = this->exist_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exist_users(i).data(), static_cast<int>(this->exist_users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListResponse.exist_users");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->exist_users(i), target);
  }

  // repeated string unexist_users = 3;
  for (int i = 0, n = this->unexist_users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unexist_users(i).data(), static_cast<int>(this->unexist_users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.CheckUserListResponse.unexist_users");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->unexist_users(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.CheckUserListResponse)
  return target;
}

size_t CheckUserListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.CheckUserListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string exist_users = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->exist_users_size());
  for (int i = 0, n = this->exist_users_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exist_users(i));
  }

  // repeated string unexist_users = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->unexist_users_size());
  for (int i = 0, n = this->unexist_users_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->unexist_users(i));
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckUserListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.CheckUserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckUserListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckUserListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.CheckUserListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.CheckUserListResponse)
    MergeFrom(*source);
  }
}

void CheckUserListResponse::MergeFrom(const CheckUserListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.CheckUserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exist_users_.MergeFrom(from.exist_users_);
  unexist_users_.MergeFrom(from.unexist_users_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void CheckUserListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.CheckUserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckUserListResponse::CopyFrom(const CheckUserListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.CheckUserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckUserListResponse::IsInitialized() const {
  return true;
}

void CheckUserListResponse::Swap(CheckUserListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckUserListResponse::InternalSwap(CheckUserListResponse* other) {
  using std::swap;
  exist_users_.InternalSwap(&other->exist_users_);
  unexist_users_.InternalSwap(&other->unexist_users_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckUserListResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetSilentStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSilentStateRequest::kFromFieldNumber;
const int SetSilentStateRequest::kToFieldNumber;
const int SetSilentStateRequest::kAppkeyFieldNumber;
const int SetSilentStateRequest::kSilentFieldNumber;
const int SetSilentStateRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSilentStateRequest::SetSilentStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsSetSilentStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.SetSilentStateRequest)
}
SetSilentStateRequest::SetSilentStateRequest(const SetSilentStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_client_type_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(from_client_type_));
  // @@protoc_insertion_point(copy_constructor:outer.user.SetSilentStateRequest)
}

void SetSilentStateRequest::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&silent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&silent_)) + sizeof(from_client_type_));
  _cached_size_ = 0;
}

SetSilentStateRequest::~SetSilentStateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.SetSilentStateRequest)
  SharedDtor();
}

void SetSilentStateRequest::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetSilentStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSilentStateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSilentStateRequest& SetSilentStateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsSetSilentStateRequest();
  return *internal_default_instance();
}

SetSilentStateRequest* SetSilentStateRequest::New(::google::protobuf::Arena* arena) const {
  SetSilentStateRequest* n = new SetSilentStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSilentStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.SetSilentStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&silent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&silent_)) + sizeof(from_client_type_));
  _internal_metadata_.Clear();
}

bool SetSilentStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.SetSilentStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetSilentStateRequest.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetSilentStateRequest.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetSilentStateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.ESilent silent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_silent(static_cast< ::common::enumeration::ESilent >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.SetSilentStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.SetSilentStateRequest)
  return false;
#undef DO_
}

void SetSilentStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.SetSilentStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // .common.enumeration.ESilent silent = 4;
  if (this->silent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->silent(), output);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.SetSilentStateRequest)
}

::google::protobuf::uint8* SetSilentStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.SetSilentStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetSilentStateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // .common.enumeration.ESilent silent = 4;
  if (this->silent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->silent(), target);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.SetSilentStateRequest)
  return target;
}

size_t SetSilentStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.SetSilentStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // .common.enumeration.ESilent silent = 4;
  if (this->silent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->silent());
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSilentStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.SetSilentStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSilentStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSilentStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.SetSilentStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.SetSilentStateRequest)
    MergeFrom(*source);
  }
}

void SetSilentStateRequest::MergeFrom(const SetSilentStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.SetSilentStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.silent() != 0) {
    set_silent(from.silent());
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void SetSilentStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.SetSilentStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSilentStateRequest::CopyFrom(const SetSilentStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.SetSilentStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSilentStateRequest::IsInitialized() const {
  return true;
}

void SetSilentStateRequest::Swap(SetSilentStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSilentStateRequest::InternalSwap(SetSilentStateRequest* other) {
  using std::swap;
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  appkey_.Swap(&other->appkey_);
  swap(silent_, other->silent_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSilentStateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetSilentStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSilentStateResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSilentStateResponse::SetSilentStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsSetSilentStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.SetSilentStateResponse)
}
SetSilentStateResponse::SetSilentStateResponse(const SetSilentStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.SetSilentStateResponse)
}

void SetSilentStateResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

SetSilentStateResponse::~SetSilentStateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.SetSilentStateResponse)
  SharedDtor();
}

void SetSilentStateResponse::SharedDtor() {
}

void SetSilentStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSilentStateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSilentStateResponse& SetSilentStateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsSetSilentStateResponse();
  return *internal_default_instance();
}

SetSilentStateResponse* SetSilentStateResponse::New(::google::protobuf::Arena* arena) const {
  SetSilentStateResponse* n = new SetSilentStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSilentStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.SetSilentStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SetSilentStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.SetSilentStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.SetSilentStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.SetSilentStateResponse)
  return false;
#undef DO_
}

void SetSilentStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.SetSilentStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.SetSilentStateResponse)
}

::google::protobuf::uint8* SetSilentStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.SetSilentStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.SetSilentStateResponse)
  return target;
}

size_t SetSilentStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.SetSilentStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSilentStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.SetSilentStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSilentStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSilentStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.SetSilentStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.SetSilentStateResponse)
    MergeFrom(*source);
  }
}

void SetSilentStateResponse::MergeFrom(const SetSilentStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.SetSilentStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SetSilentStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.SetSilentStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSilentStateResponse::CopyFrom(const SetSilentStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.SetSilentStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSilentStateResponse::IsInitialized() const {
  return true;
}

void SetSilentStateResponse::Swap(SetSilentStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSilentStateResponse::InternalSwap(SetSilentStateResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSilentStateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadAvatarRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadAvatarRequest::kUsernameFieldNumber;
const int UploadAvatarRequest::kAppkeyFieldNumber;
const int UploadAvatarRequest::kOriginalLinkFieldNumber;
const int UploadAvatarRequest::kThumbnailLinkFieldNumber;
const int UploadAvatarRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadAvatarRequest::UploadAvatarRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUploadAvatarRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UploadAvatarRequest)
}
UploadAvatarRequest::UploadAvatarRequest(const UploadAvatarRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  fromclienttype_ = from.fromclienttype_;
  // @@protoc_insertion_point(copy_constructor:outer.user.UploadAvatarRequest)
}

void UploadAvatarRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _cached_size_ = 0;
}

UploadAvatarRequest::~UploadAvatarRequest() {
  // @@protoc_insertion_point(destructor:outer.user.UploadAvatarRequest)
  SharedDtor();
}

void UploadAvatarRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadAvatarRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadAvatarRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadAvatarRequest& UploadAvatarRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUploadAvatarRequest();
  return *internal_default_instance();
}

UploadAvatarRequest* UploadAvatarRequest::New(::google::protobuf::Arena* arena) const {
  UploadAvatarRequest* n = new UploadAvatarRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadAvatarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UploadAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _internal_metadata_.Clear();
}

bool UploadAvatarRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UploadAvatarRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UploadAvatarRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UploadAvatarRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UploadAvatarRequest.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UploadAvatarRequest.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType fromClientType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fromclienttype(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UploadAvatarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UploadAvatarRequest)
  return false;
#undef DO_
}

void UploadAvatarRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UploadAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string original_link = 3;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->original_link(), output);
  }

  // string thumbnail_link = 4;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->thumbnail_link(), output);
  }

  // .common.enumeration.EClientType fromClientType = 5;
  if (this->fromclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->fromclienttype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UploadAvatarRequest)
}

::google::protobuf::uint8* UploadAvatarRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UploadAvatarRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string original_link = 3;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->original_link(), target);
  }

  // string thumbnail_link = 4;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarRequest.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->thumbnail_link(), target);
  }

  // .common.enumeration.EClientType fromClientType = 5;
  if (this->fromclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->fromclienttype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UploadAvatarRequest)
  return target;
}

size_t UploadAvatarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UploadAvatarRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string original_link = 3;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 4;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // .common.enumeration.EClientType fromClientType = 5;
  if (this->fromclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fromclienttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadAvatarRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UploadAvatarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadAvatarRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadAvatarRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UploadAvatarRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UploadAvatarRequest)
    MergeFrom(*source);
  }
}

void UploadAvatarRequest::MergeFrom(const UploadAvatarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UploadAvatarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.fromclienttype() != 0) {
    set_fromclienttype(from.fromclienttype());
  }
}

void UploadAvatarRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UploadAvatarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadAvatarRequest::CopyFrom(const UploadAvatarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UploadAvatarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadAvatarRequest::IsInitialized() const {
  return true;
}

void UploadAvatarRequest::Swap(UploadAvatarRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadAvatarRequest::InternalSwap(UploadAvatarRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  swap(fromclienttype_, other->fromclienttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadAvatarRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadAvatarResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadAvatarResponse::kRetFieldNumber;
const int UploadAvatarResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadAvatarResponse::UploadAvatarResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsUploadAvatarResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.UploadAvatarResponse)
}
UploadAvatarResponse::UploadAvatarResponse(const UploadAvatarResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.UploadAvatarResponse)
}

void UploadAvatarResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

UploadAvatarResponse::~UploadAvatarResponse() {
  // @@protoc_insertion_point(destructor:outer.user.UploadAvatarResponse)
  SharedDtor();
}

void UploadAvatarResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadAvatarResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadAvatarResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadAvatarResponse& UploadAvatarResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsUploadAvatarResponse();
  return *internal_default_instance();
}

UploadAvatarResponse* UploadAvatarResponse::New(::google::protobuf::Arena* arena) const {
  UploadAvatarResponse* n = new UploadAvatarResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadAvatarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.UploadAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UploadAvatarResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.UploadAvatarResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.UploadAvatarResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.UploadAvatarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.UploadAvatarResponse)
  return false;
#undef DO_
}

void UploadAvatarResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.UploadAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.UploadAvatarResponse)
}

::google::protobuf::uint8* UploadAvatarResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.UploadAvatarResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.UploadAvatarResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.UploadAvatarResponse)
  return target;
}

size_t UploadAvatarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.UploadAvatarResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadAvatarResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.UploadAvatarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadAvatarResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadAvatarResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.UploadAvatarResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.UploadAvatarResponse)
    MergeFrom(*source);
  }
}

void UploadAvatarResponse::MergeFrom(const UploadAvatarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.UploadAvatarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UploadAvatarResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.UploadAvatarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadAvatarResponse::CopyFrom(const UploadAvatarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.UploadAvatarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadAvatarResponse::IsInitialized() const {
  return true;
}

void UploadAvatarResponse::Swap(UploadAvatarResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadAvatarResponse::InternalSwap(UploadAvatarResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadAvatarResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMyShieldingListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMyShieldingListRequest::kAppkeyFieldNumber;
const int GetMyShieldingListRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMyShieldingListRequest::GetMyShieldingListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsGetMyShieldingListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.GetMyShieldingListRequest)
}
GetMyShieldingListRequest::GetMyShieldingListRequest(const GetMyShieldingListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.GetMyShieldingListRequest)
}

void GetMyShieldingListRequest::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetMyShieldingListRequest::~GetMyShieldingListRequest() {
  // @@protoc_insertion_point(destructor:outer.user.GetMyShieldingListRequest)
  SharedDtor();
}

void GetMyShieldingListRequest::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMyShieldingListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMyShieldingListRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMyShieldingListRequest& GetMyShieldingListRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsGetMyShieldingListRequest();
  return *internal_default_instance();
}

GetMyShieldingListRequest* GetMyShieldingListRequest::New(::google::protobuf::Arena* arena) const {
  GetMyShieldingListRequest* n = new GetMyShieldingListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMyShieldingListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.GetMyShieldingListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetMyShieldingListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.GetMyShieldingListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.GetMyShieldingListRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.GetMyShieldingListRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.GetMyShieldingListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.GetMyShieldingListRequest)
  return false;
#undef DO_
}

void GetMyShieldingListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.GetMyShieldingListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.GetMyShieldingListRequest)
}

::google::protobuf::uint8* GetMyShieldingListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.GetMyShieldingListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.GetMyShieldingListRequest)
  return target;
}

size_t GetMyShieldingListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.GetMyShieldingListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMyShieldingListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.GetMyShieldingListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMyShieldingListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMyShieldingListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.GetMyShieldingListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.GetMyShieldingListRequest)
    MergeFrom(*source);
  }
}

void GetMyShieldingListRequest::MergeFrom(const GetMyShieldingListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.GetMyShieldingListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void GetMyShieldingListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.GetMyShieldingListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMyShieldingListRequest::CopyFrom(const GetMyShieldingListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.GetMyShieldingListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMyShieldingListRequest::IsInitialized() const {
  return true;
}

void GetMyShieldingListRequest::Swap(GetMyShieldingListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMyShieldingListRequest::InternalSwap(GetMyShieldingListRequest* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMyShieldingListRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMyShieldingListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMyShieldingListResponse::kRetFieldNumber;
const int GetMyShieldingListResponse::kUsernamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMyShieldingListResponse::GetMyShieldingListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsGetMyShieldingListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.GetMyShieldingListResponse)
}
GetMyShieldingListResponse::GetMyShieldingListResponse(const GetMyShieldingListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      usernames_(from.usernames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.GetMyShieldingListResponse)
}

void GetMyShieldingListResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

GetMyShieldingListResponse::~GetMyShieldingListResponse() {
  // @@protoc_insertion_point(destructor:outer.user.GetMyShieldingListResponse)
  SharedDtor();
}

void GetMyShieldingListResponse::SharedDtor() {
}

void GetMyShieldingListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMyShieldingListResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMyShieldingListResponse& GetMyShieldingListResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsGetMyShieldingListResponse();
  return *internal_default_instance();
}

GetMyShieldingListResponse* GetMyShieldingListResponse::New(::google::protobuf::Arena* arena) const {
  GetMyShieldingListResponse* n = new GetMyShieldingListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMyShieldingListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.GetMyShieldingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  usernames_.Clear();
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool GetMyShieldingListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.GetMyShieldingListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string usernames = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_usernames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usernames(this->usernames_size() - 1).data(),
            static_cast<int>(this->usernames(this->usernames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.GetMyShieldingListResponse.usernames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.GetMyShieldingListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.GetMyShieldingListResponse)
  return false;
#undef DO_
}

void GetMyShieldingListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.GetMyShieldingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // repeated string usernames = 2;
  for (int i = 0, n = this->usernames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernames(i).data(), static_cast<int>(this->usernames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListResponse.usernames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->usernames(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.GetMyShieldingListResponse)
}

::google::protobuf::uint8* GetMyShieldingListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.GetMyShieldingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // repeated string usernames = 2;
  for (int i = 0, n = this->usernames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernames(i).data(), static_cast<int>(this->usernames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.GetMyShieldingListResponse.usernames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->usernames(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.GetMyShieldingListResponse)
  return target;
}

size_t GetMyShieldingListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.GetMyShieldingListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string usernames = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->usernames_size());
  for (int i = 0, n = this->usernames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->usernames(i));
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMyShieldingListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.GetMyShieldingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMyShieldingListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMyShieldingListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.GetMyShieldingListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.GetMyShieldingListResponse)
    MergeFrom(*source);
  }
}

void GetMyShieldingListResponse::MergeFrom(const GetMyShieldingListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.GetMyShieldingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usernames_.MergeFrom(from.usernames_);
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void GetMyShieldingListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.GetMyShieldingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMyShieldingListResponse::CopyFrom(const GetMyShieldingListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.GetMyShieldingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMyShieldingListResponse::IsInitialized() const {
  return true;
}

void GetMyShieldingListResponse::Swap(GetMyShieldingListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMyShieldingListResponse::InternalSwap(GetMyShieldingListResponse* other) {
  using std::swap;
  usernames_.InternalSwap(&other->usernames_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMyShieldingListResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetShieldingStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShieldingStateRequest::kOtherUsernameFieldNumber;
const int SetShieldingStateRequest::kMyselfUsernameFieldNumber;
const int SetShieldingStateRequest::kAppkeyFieldNumber;
const int SetShieldingStateRequest::kIsShieldingFieldNumber;
const int SetShieldingStateRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShieldingStateRequest::SetShieldingStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsSetShieldingStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.SetShieldingStateRequest)
}
SetShieldingStateRequest::SetShieldingStateRequest(const SetShieldingStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other_username().size() > 0) {
    other_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_username_);
  }
  myself_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.myself_username().size() > 0) {
    myself_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.myself_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  ::memcpy(&is_shielding_, &from.is_shielding_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_client_type_) -
    reinterpret_cast<char*>(&is_shielding_)) + sizeof(from_client_type_));
  // @@protoc_insertion_point(copy_constructor:outer.user.SetShieldingStateRequest)
}

void SetShieldingStateRequest::SharedCtor() {
  other_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myself_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_shielding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&is_shielding_)) + sizeof(from_client_type_));
  _cached_size_ = 0;
}

SetShieldingStateRequest::~SetShieldingStateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.SetShieldingStateRequest)
  SharedDtor();
}

void SetShieldingStateRequest::SharedDtor() {
  other_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myself_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetShieldingStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetShieldingStateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetShieldingStateRequest& SetShieldingStateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsSetShieldingStateRequest();
  return *internal_default_instance();
}

SetShieldingStateRequest* SetShieldingStateRequest::New(::google::protobuf::Arena* arena) const {
  SetShieldingStateRequest* n = new SetShieldingStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShieldingStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.SetShieldingStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myself_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_shielding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_client_type_) -
      reinterpret_cast<char*>(&is_shielding_)) + sizeof(from_client_type_));
  _internal_metadata_.Clear();
}

bool SetShieldingStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.SetShieldingStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string other_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other_username().data(), static_cast<int>(this->other_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetShieldingStateRequest.other_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string myself_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_myself_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->myself_username().data(), static_cast<int>(this->myself_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetShieldingStateRequest.myself_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.SetShieldingStateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_shielding = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_shielding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType from_client_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.SetShieldingStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.SetShieldingStateRequest)
  return false;
#undef DO_
}

void SetShieldingStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.SetShieldingStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string other_username = 1;
  if (this->other_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_username().data(), static_cast<int>(this->other_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.other_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->other_username(), output);
  }

  // string myself_username = 2;
  if (this->myself_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myself_username().data(), static_cast<int>(this->myself_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.myself_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->myself_username(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // bool is_shielding = 4;
  if (this->is_shielding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_shielding(), output);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->from_client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.SetShieldingStateRequest)
}

::google::protobuf::uint8* SetShieldingStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.SetShieldingStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string other_username = 1;
  if (this->other_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_username().data(), static_cast<int>(this->other_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.other_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->other_username(), target);
  }

  // string myself_username = 2;
  if (this->myself_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myself_username().data(), static_cast<int>(this->myself_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.myself_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->myself_username(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.SetShieldingStateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // bool is_shielding = 4;
  if (this->is_shielding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_shielding(), target);
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->from_client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.SetShieldingStateRequest)
  return target;
}

size_t SetShieldingStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.SetShieldingStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string other_username = 1;
  if (this->other_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other_username());
  }

  // string myself_username = 2;
  if (this->myself_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->myself_username());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // bool is_shielding = 4;
  if (this->is_shielding() != 0) {
    total_size += 1 + 1;
  }

  // .common.enumeration.EClientType from_client_type = 5;
  if (this->from_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShieldingStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.SetShieldingStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetShieldingStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetShieldingStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.SetShieldingStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.SetShieldingStateRequest)
    MergeFrom(*source);
  }
}

void SetShieldingStateRequest::MergeFrom(const SetShieldingStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.SetShieldingStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.other_username().size() > 0) {

    other_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_username_);
  }
  if (from.myself_username().size() > 0) {

    myself_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.myself_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.is_shielding() != 0) {
    set_is_shielding(from.is_shielding());
  }
  if (from.from_client_type() != 0) {
    set_from_client_type(from.from_client_type());
  }
}

void SetShieldingStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.SetShieldingStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetShieldingStateRequest::CopyFrom(const SetShieldingStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.SetShieldingStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShieldingStateRequest::IsInitialized() const {
  return true;
}

void SetShieldingStateRequest::Swap(SetShieldingStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShieldingStateRequest::InternalSwap(SetShieldingStateRequest* other) {
  using std::swap;
  other_username_.Swap(&other->other_username_);
  myself_username_.Swap(&other->myself_username_);
  appkey_.Swap(&other->appkey_);
  swap(is_shielding_, other->is_shielding_);
  swap(from_client_type_, other->from_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetShieldingStateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetShieldingStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetShieldingStateResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetShieldingStateResponse::SetShieldingStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsSetShieldingStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.SetShieldingStateResponse)
}
SetShieldingStateResponse::SetShieldingStateResponse(const SetShieldingStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.SetShieldingStateResponse)
}

void SetShieldingStateResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

SetShieldingStateResponse::~SetShieldingStateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.SetShieldingStateResponse)
  SharedDtor();
}

void SetShieldingStateResponse::SharedDtor() {
}

void SetShieldingStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetShieldingStateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetShieldingStateResponse& SetShieldingStateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsSetShieldingStateResponse();
  return *internal_default_instance();
}

SetShieldingStateResponse* SetShieldingStateResponse::New(::google::protobuf::Arena* arena) const {
  SetShieldingStateResponse* n = new SetShieldingStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetShieldingStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.SetShieldingStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SetShieldingStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.SetShieldingStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.SetShieldingStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.SetShieldingStateResponse)
  return false;
#undef DO_
}

void SetShieldingStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.SetShieldingStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.SetShieldingStateResponse)
}

::google::protobuf::uint8* SetShieldingStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.SetShieldingStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.SetShieldingStateResponse)
  return target;
}

size_t SetShieldingStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.SetShieldingStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetShieldingStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.SetShieldingStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetShieldingStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetShieldingStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.SetShieldingStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.SetShieldingStateResponse)
    MergeFrom(*source);
  }
}

void SetShieldingStateResponse::MergeFrom(const SetShieldingStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.SetShieldingStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SetShieldingStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.SetShieldingStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetShieldingStateResponse::CopyFrom(const SetShieldingStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.SetShieldingStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShieldingStateResponse::IsInitialized() const {
  return true;
}

void SetShieldingStateResponse::Swap(SetShieldingStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetShieldingStateResponse::InternalSwap(SetShieldingStateResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetShieldingStateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryUserOnlineStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserOnlineStatusRequest::kUsernameFieldNumber;
const int QueryUserOnlineStatusRequest::kAppkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserOnlineStatusRequest::QueryUserOnlineStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsQueryUserOnlineStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.QueryUserOnlineStatusRequest)
}
QueryUserOnlineStatusRequest::QueryUserOnlineStatusRequest(const QueryUserOnlineStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.QueryUserOnlineStatusRequest)
}

void QueryUserOnlineStatusRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QueryUserOnlineStatusRequest::~QueryUserOnlineStatusRequest() {
  // @@protoc_insertion_point(destructor:outer.user.QueryUserOnlineStatusRequest)
  SharedDtor();
}

void QueryUserOnlineStatusRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryUserOnlineStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserOnlineStatusRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryUserOnlineStatusRequest& QueryUserOnlineStatusRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsQueryUserOnlineStatusRequest();
  return *internal_default_instance();
}

QueryUserOnlineStatusRequest* QueryUserOnlineStatusRequest::New(::google::protobuf::Arena* arena) const {
  QueryUserOnlineStatusRequest* n = new QueryUserOnlineStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserOnlineStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.QueryUserOnlineStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool QueryUserOnlineStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.QueryUserOnlineStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.QueryUserOnlineStatusRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.QueryUserOnlineStatusRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.QueryUserOnlineStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.QueryUserOnlineStatusRequest)
  return false;
#undef DO_
}

void QueryUserOnlineStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.QueryUserOnlineStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.QueryUserOnlineStatusRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.QueryUserOnlineStatusRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.QueryUserOnlineStatusRequest)
}

::google::protobuf::uint8* QueryUserOnlineStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.QueryUserOnlineStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.QueryUserOnlineStatusRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.QueryUserOnlineStatusRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.QueryUserOnlineStatusRequest)
  return target;
}

size_t QueryUserOnlineStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.QueryUserOnlineStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserOnlineStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.QueryUserOnlineStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserOnlineStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserOnlineStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.QueryUserOnlineStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.QueryUserOnlineStatusRequest)
    MergeFrom(*source);
  }
}

void QueryUserOnlineStatusRequest::MergeFrom(const QueryUserOnlineStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.QueryUserOnlineStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
}

void QueryUserOnlineStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.QueryUserOnlineStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserOnlineStatusRequest::CopyFrom(const QueryUserOnlineStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.QueryUserOnlineStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserOnlineStatusRequest::IsInitialized() const {
  return true;
}

void QueryUserOnlineStatusRequest::Swap(QueryUserOnlineStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserOnlineStatusRequest::InternalSwap(QueryUserOnlineStatusRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserOnlineStatusRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryUserOnlineStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryUserOnlineStatusResponse::kRetFieldNumber;
const int QueryUserOnlineStatusResponse::kMobilePhoneFieldNumber;
const int QueryUserOnlineStatusResponse::kCarMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryUserOnlineStatusResponse::QueryUserOnlineStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsQueryUserOnlineStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.QueryUserOnlineStatusResponse)
}
QueryUserOnlineStatusResponse::QueryUserOnlineStatusResponse(const QueryUserOnlineStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&car_machine_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(car_machine_));
  // @@protoc_insertion_point(copy_constructor:outer.user.QueryUserOnlineStatusResponse)
}

void QueryUserOnlineStatusResponse::SharedCtor() {
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_machine_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(car_machine_));
  _cached_size_ = 0;
}

QueryUserOnlineStatusResponse::~QueryUserOnlineStatusResponse() {
  // @@protoc_insertion_point(destructor:outer.user.QueryUserOnlineStatusResponse)
  SharedDtor();
}

void QueryUserOnlineStatusResponse::SharedDtor() {
}

void QueryUserOnlineStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryUserOnlineStatusResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryUserOnlineStatusResponse& QueryUserOnlineStatusResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsQueryUserOnlineStatusResponse();
  return *internal_default_instance();
}

QueryUserOnlineStatusResponse* QueryUserOnlineStatusResponse::New(::google::protobuf::Arena* arena) const {
  QueryUserOnlineStatusResponse* n = new QueryUserOnlineStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryUserOnlineStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.QueryUserOnlineStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_machine_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(car_machine_));
  _internal_metadata_.Clear();
}

bool QueryUserOnlineStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.QueryUserOnlineStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EUserOnlineStatus mobile_phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mobile_phone(static_cast< ::common::enumeration::EUserOnlineStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EUserOnlineStatus car_machine = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_car_machine(static_cast< ::common::enumeration::EUserOnlineStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.QueryUserOnlineStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.QueryUserOnlineStatusResponse)
  return false;
#undef DO_
}

void QueryUserOnlineStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.QueryUserOnlineStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // .common.enumeration.EUserOnlineStatus mobile_phone = 2;
  if (this->mobile_phone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mobile_phone(), output);
  }

  // .common.enumeration.EUserOnlineStatus car_machine = 3;
  if (this->car_machine() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->car_machine(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.QueryUserOnlineStatusResponse)
}

::google::protobuf::uint8* QueryUserOnlineStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.QueryUserOnlineStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // .common.enumeration.EUserOnlineStatus mobile_phone = 2;
  if (this->mobile_phone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mobile_phone(), target);
  }

  // .common.enumeration.EUserOnlineStatus car_machine = 3;
  if (this->car_machine() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->car_machine(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.QueryUserOnlineStatusResponse)
  return target;
}

size_t QueryUserOnlineStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.QueryUserOnlineStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  // .common.enumeration.EUserOnlineStatus mobile_phone = 2;
  if (this->mobile_phone() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mobile_phone());
  }

  // .common.enumeration.EUserOnlineStatus car_machine = 3;
  if (this->car_machine() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->car_machine());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryUserOnlineStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.QueryUserOnlineStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryUserOnlineStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryUserOnlineStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.QueryUserOnlineStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.QueryUserOnlineStatusResponse)
    MergeFrom(*source);
  }
}

void QueryUserOnlineStatusResponse::MergeFrom(const QueryUserOnlineStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.QueryUserOnlineStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.mobile_phone() != 0) {
    set_mobile_phone(from.mobile_phone());
  }
  if (from.car_machine() != 0) {
    set_car_machine(from.car_machine());
  }
}

void QueryUserOnlineStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.QueryUserOnlineStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryUserOnlineStatusResponse::CopyFrom(const QueryUserOnlineStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.QueryUserOnlineStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserOnlineStatusResponse::IsInitialized() const {
  return true;
}

void QueryUserOnlineStatusResponse::Swap(QueryUserOnlineStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryUserOnlineStatusResponse::InternalSwap(QueryUserOnlineStatusResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  swap(mobile_phone_, other->mobile_phone_);
  swap(car_machine_, other->car_machine_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryUserOnlineStatusResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickCarMachineRequest::InitAsDefaultInstance() {
  ::outer::user::_KickCarMachineRequest_default_instance_._instance.get_mutable()->base_info_ = const_cast< ::common::base::MobileBase*>(
      ::common::base::MobileBase::internal_default_instance());
}
void KickCarMachineRequest::clear_base_info() {
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickCarMachineRequest::kUsernameFieldNumber;
const int KickCarMachineRequest::kAppkeyFieldNumber;
const int KickCarMachineRequest::kBaseInfoFieldNumber;
const int KickCarMachineRequest::kKickClientTypeFieldNumber;
const int KickCarMachineRequest::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickCarMachineRequest::KickCarMachineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsKickCarMachineRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.KickCarMachineRequest)
}
KickCarMachineRequest::KickCarMachineRequest(const KickCarMachineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kick_client_type_(from.kick_client_type_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_base_info()) {
    base_info_ = new ::common::base::MobileBase(*from.base_info_);
  } else {
    base_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:outer.user.KickCarMachineRequest)
}

void KickCarMachineRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  base_info_ = NULL;
  _cached_size_ = 0;
}

KickCarMachineRequest::~KickCarMachineRequest() {
  // @@protoc_insertion_point(destructor:outer.user.KickCarMachineRequest)
  SharedDtor();
}

void KickCarMachineRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_info_;
}

void KickCarMachineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickCarMachineRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickCarMachineRequest& KickCarMachineRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsKickCarMachineRequest();
  return *internal_default_instance();
}

KickCarMachineRequest* KickCarMachineRequest::New(::google::protobuf::Arena* arena) const {
  KickCarMachineRequest* n = new KickCarMachineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickCarMachineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.KickCarMachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kick_client_type_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
  _internal_metadata_.Clear();
}

bool KickCarMachineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.KickCarMachineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.KickCarMachineRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.KickCarMachineRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.base.MobileBase base_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.enumeration.EClientType Kick_client_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_kick_client_type(static_cast< ::common::enumeration::EClientType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_kick_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.KickCarMachineRequest.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.KickCarMachineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.KickCarMachineRequest)
  return false;
#undef DO_
}

void KickCarMachineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.KickCarMachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // .common.base.MobileBase base_info = 3;
  if (this->has_base_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_info_, output);
  }

  // repeated .common.enumeration.EClientType Kick_client_type = 4;
  if (this->kick_client_type_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_kick_client_type_cached_byte_size_));
  }
  for (int i = 0, n = this->kick_client_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->kick_client_type(i), output);
  }

  // string reason = 5;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.KickCarMachineRequest)
}

::google::protobuf::uint8* KickCarMachineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.KickCarMachineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // .common.base.MobileBase base_info = 3;
  if (this->has_base_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->base_info_, deterministic, target);
  }

  // repeated .common.enumeration.EClientType Kick_client_type = 4;
  if (this->kick_client_type_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _kick_client_type_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->kick_client_type_, target);
  }

  // string reason = 5;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.KickCarMachineRequest.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.KickCarMachineRequest)
  return target;
}

size_t KickCarMachineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.KickCarMachineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.enumeration.EClientType Kick_client_type = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->kick_client_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->kick_client_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _kick_client_type_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string reason = 5;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.base.MobileBase base_info = 3;
  if (this->has_base_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickCarMachineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.KickCarMachineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KickCarMachineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickCarMachineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.KickCarMachineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.KickCarMachineRequest)
    MergeFrom(*source);
  }
}

void KickCarMachineRequest::MergeFrom(const KickCarMachineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.KickCarMachineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kick_client_type_.MergeFrom(from.kick_client_type_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_base_info()) {
    mutable_base_info()->::common::base::MobileBase::MergeFrom(from.base_info());
  }
}

void KickCarMachineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.KickCarMachineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickCarMachineRequest::CopyFrom(const KickCarMachineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.KickCarMachineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickCarMachineRequest::IsInitialized() const {
  return true;
}

void KickCarMachineRequest::Swap(KickCarMachineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickCarMachineRequest::InternalSwap(KickCarMachineRequest* other) {
  using std::swap;
  kick_client_type_.InternalSwap(&other->kick_client_type_);
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  reason_.Swap(&other->reason_);
  swap(base_info_, other->base_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickCarMachineRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickCarMachineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickCarMachineResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickCarMachineResponse::KickCarMachineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsKickCarMachineResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.KickCarMachineResponse)
}
KickCarMachineResponse::KickCarMachineResponse(const KickCarMachineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.KickCarMachineResponse)
}

void KickCarMachineResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

KickCarMachineResponse::~KickCarMachineResponse() {
  // @@protoc_insertion_point(destructor:outer.user.KickCarMachineResponse)
  SharedDtor();
}

void KickCarMachineResponse::SharedDtor() {
}

void KickCarMachineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickCarMachineResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickCarMachineResponse& KickCarMachineResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsKickCarMachineResponse();
  return *internal_default_instance();
}

KickCarMachineResponse* KickCarMachineResponse::New(::google::protobuf::Arena* arena) const {
  KickCarMachineResponse* n = new KickCarMachineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickCarMachineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.KickCarMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool KickCarMachineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.KickCarMachineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.KickCarMachineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.KickCarMachineResponse)
  return false;
#undef DO_
}

void KickCarMachineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.KickCarMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.KickCarMachineResponse)
}

::google::protobuf::uint8* KickCarMachineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.KickCarMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.KickCarMachineResponse)
  return target;
}

size_t KickCarMachineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.KickCarMachineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickCarMachineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.KickCarMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KickCarMachineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickCarMachineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.KickCarMachineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.KickCarMachineResponse)
    MergeFrom(*source);
  }
}

void KickCarMachineResponse::MergeFrom(const KickCarMachineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.KickCarMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void KickCarMachineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.KickCarMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickCarMachineResponse::CopyFrom(const KickCarMachineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.KickCarMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickCarMachineResponse::IsInitialized() const {
  return true;
}

void KickCarMachineResponse::Swap(KickCarMachineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickCarMachineResponse::InternalSwap(KickCarMachineResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickCarMachineResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayUpdateRequest::kUsernameFieldNumber;
const int DisplayUpdateRequest::kAppkeyFieldNumber;
const int DisplayUpdateRequest::kDisplayFieldNumber;
const int DisplayUpdateRequest::kFromClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayUpdateRequest::DisplayUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsDisplayUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.DisplayUpdateRequest)
}
DisplayUpdateRequest::DisplayUpdateRequest(const DisplayUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display().size() > 0) {
    display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
  }
  fromclienttype_ = from.fromclienttype_;
  // @@protoc_insertion_point(copy_constructor:outer.user.DisplayUpdateRequest)
}

void DisplayUpdateRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _cached_size_ = 0;
}

DisplayUpdateRequest::~DisplayUpdateRequest() {
  // @@protoc_insertion_point(destructor:outer.user.DisplayUpdateRequest)
  SharedDtor();
}

void DisplayUpdateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisplayUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayUpdateRequest::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayUpdateRequest& DisplayUpdateRequest::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsDisplayUpdateRequest();
  return *internal_default_instance();
}

DisplayUpdateRequest* DisplayUpdateRequest::New(::google::protobuf::Arena* arena) const {
  DisplayUpdateRequest* n = new DisplayUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.DisplayUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromclienttype_ = 0;
  _internal_metadata_.Clear();
}

bool DisplayUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.DisplayUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.DisplayUpdateRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.DisplayUpdateRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display().data(), static_cast<int>(this->display().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.DisplayUpdateRequest.display"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType fromClientType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fromclienttype(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.DisplayUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.DisplayUpdateRequest)
  return false;
#undef DO_
}

void DisplayUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.DisplayUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string display = 3;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), static_cast<int>(this->display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.display");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display(), output);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->fromclienttype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.DisplayUpdateRequest)
}

::google::protobuf::uint8* DisplayUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.DisplayUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string display = 3;
  if (this->display().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display().data(), static_cast<int>(this->display().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateRequest.display");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display(), target);
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->fromclienttype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.DisplayUpdateRequest)
  return target;
}

size_t DisplayUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.DisplayUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string display = 3;
  if (this->display().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display());
  }

  // .common.enumeration.EClientType fromClientType = 4;
  if (this->fromclienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fromclienttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.DisplayUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.DisplayUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.DisplayUpdateRequest)
    MergeFrom(*source);
  }
}

void DisplayUpdateRequest::MergeFrom(const DisplayUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.DisplayUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.display().size() > 0) {

    display_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_);
  }
  if (from.fromclienttype() != 0) {
    set_fromclienttype(from.fromclienttype());
  }
}

void DisplayUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.DisplayUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayUpdateRequest::CopyFrom(const DisplayUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.DisplayUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayUpdateRequest::IsInitialized() const {
  return true;
}

void DisplayUpdateRequest::Swap(DisplayUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayUpdateRequest::InternalSwap(DisplayUpdateRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  display_.Swap(&other->display_);
  swap(fromclienttype_, other->fromclienttype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayUpdateRequest::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayUpdateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayUpdateResponse::kRetFieldNumber;
const int DisplayUpdateResponse::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayUpdateResponse::DisplayUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fuser_2eproto::InitDefaultsDisplayUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.user.DisplayUpdateResponse)
}
DisplayUpdateResponse::DisplayUpdateResponse(const DisplayUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.user.DisplayUpdateResponse)
}

void DisplayUpdateResponse::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

DisplayUpdateResponse::~DisplayUpdateResponse() {
  // @@protoc_insertion_point(destructor:outer.user.DisplayUpdateResponse)
  SharedDtor();
}

void DisplayUpdateResponse::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisplayUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayUpdateResponse::descriptor() {
  ::protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayUpdateResponse& DisplayUpdateResponse::default_instance() {
  ::protobuf_outer_2fuser_2eproto::InitDefaultsDisplayUpdateResponse();
  return *internal_default_instance();
}

DisplayUpdateResponse* DisplayUpdateResponse::New(::google::protobuf::Arena* arena) const {
  DisplayUpdateResponse* n = new DisplayUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.user.DisplayUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool DisplayUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.user.DisplayUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.user.DisplayUpdateResponse.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.user.DisplayUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.user.DisplayUpdateResponse)
  return false;
#undef DO_
}

void DisplayUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.user.DisplayUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateResponse.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.user.DisplayUpdateResponse)
}

::google::protobuf::uint8* DisplayUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.user.DisplayUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.user.DisplayUpdateResponse.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.user.DisplayUpdateResponse)
  return target;
}

size_t DisplayUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.user.DisplayUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.user.DisplayUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.user.DisplayUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.user.DisplayUpdateResponse)
    MergeFrom(*source);
  }
}

void DisplayUpdateResponse::MergeFrom(const DisplayUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.user.DisplayUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void DisplayUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.user.DisplayUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayUpdateResponse::CopyFrom(const DisplayUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.user.DisplayUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayUpdateResponse::IsInitialized() const {
  return true;
}

void DisplayUpdateResponse::Swap(DisplayUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayUpdateResponse::InternalSwap(DisplayUpdateResponse* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayUpdateResponse::GetMetadata() const {
  protobuf_outer_2fuser_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fuser_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace user
}  // namespace outer

// @@protoc_insertion_point(global_scope)
