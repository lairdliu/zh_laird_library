// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/group.proto

#ifndef PROTOBUF_outer_2fgroup_2eproto__INCLUDED
#define PROTOBUF_outer_2fgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/msg.pb.h"
#include "common/errcode.pb.h"
#include "common/enumeration.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_outer_2fgroup_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[79];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGroupInfoImpl();
void InitDefaultsGroupInfo();
void InitDefaultsGroupTagImpl();
void InitDefaultsGroupTag();
void InitDefaultsCrewImpl();
void InitDefaultsCrew();
void InitDefaultsCrewDetailImpl();
void InitDefaultsCrewDetail();
void InitDefaultsCrewInGroupImpl();
void InitDefaultsCrewInGroup();
void InitDefaultsGroupSignalImpl();
void InitDefaultsGroupSignal();
void InitDefaultsGroupMessageRequestImpl();
void InitDefaultsGroupMessageRequest();
void InitDefaultsGroupMessageResponseImpl();
void InitDefaultsGroupMessageResponse();
void InitDefaultsCreateGroupRequestImpl();
void InitDefaultsCreateGroupRequest();
void InitDefaultsCreateGroupResponseImpl();
void InitDefaultsCreateGroupResponse();
void InitDefaultsGroupCreatedSignalImpl();
void InitDefaultsGroupCreatedSignal();
void InitDefaultsInvitingSignalImpl();
void InitDefaultsInvitingSignal();
void InitDefaultsAcceptInvitationRequestImpl();
void InitDefaultsAcceptInvitationRequest();
void InitDefaultsAcceptInvitationResponseImpl();
void InitDefaultsAcceptInvitationResponse();
void InitDefaultsInvitationAcceptedSignalImpl();
void InitDefaultsInvitationAcceptedSignal();
void InitDefaultsInviteeJoinGroupSignalImpl();
void InitDefaultsInviteeJoinGroupSignal();
void InitDefaultsDeclineInvitationRequestImpl();
void InitDefaultsDeclineInvitationRequest();
void InitDefaultsDeclineInvitationResponseImpl();
void InitDefaultsDeclineInvitationResponse();
void InitDefaultsInvitationDeclinedSignalImpl();
void InitDefaultsInvitationDeclinedSignal();
void InitDefaultsAddMemberRequestImpl();
void InitDefaultsAddMemberRequest();
void InitDefaultsAddMemberResponseImpl();
void InitDefaultsAddMemberResponse();
void InitDefaultsJoinGroupSignalImpl();
void InitDefaultsJoinGroupSignal();
void InitDefaultsKickRequestImpl();
void InitDefaultsKickRequest();
void InitDefaultsKickResponseImpl();
void InitDefaultsKickResponse();
void InitDefaultsBeKickedSignalImpl();
void InitDefaultsBeKickedSignal();
void InitDefaultsExitRequestImpl();
void InitDefaultsExitRequest();
void InitDefaultsExitResponseImpl();
void InitDefaultsExitResponse();
void InitDefaultsExitedSignalImpl();
void InitDefaultsExitedSignal();
void InitDefaultsDestroyRequestImpl();
void InitDefaultsDestroyRequest();
void InitDefaultsDestroyResponseImpl();
void InitDefaultsDestroyResponse();
void InitDefaultsGroupDestroyedSignalImpl();
void InitDefaultsGroupDestroyedSignal();
void InitDefaultsHandoverOwnerRequestImpl();
void InitDefaultsHandoverOwnerRequest();
void InitDefaultsHandoverOwnerResponseImpl();
void InitDefaultsHandoverOwnerResponse();
void InitDefaultsOwnerChangedSignalImpl();
void InitDefaultsOwnerChangedSignal();
void InitDefaultsSetGroupNameRequestImpl();
void InitDefaultsSetGroupNameRequest();
void InitDefaultsSetGroupNameResponseImpl();
void InitDefaultsSetGroupNameResponse();
void InitDefaultsGroupNameChangedSignalImpl();
void InitDefaultsGroupNameChangedSignal();
void InitDefaultsSetDescRequestImpl();
void InitDefaultsSetDescRequest();
void InitDefaultsSetDescResponseImpl();
void InitDefaultsSetDescResponse();
void InitDefaultsDescChangedSignalImpl();
void InitDefaultsDescChangedSignal();
void InitDefaultsChangeNickRequestImpl();
void InitDefaultsChangeNickRequest();
void InitDefaultsChangeNickResponseImpl();
void InitDefaultsChangeNickResponse();
void InitDefaultsNickChangedSignalImpl();
void InitDefaultsNickChangedSignal();
void InitDefaultsGetMyGroupListRequestImpl();
void InitDefaultsGetMyGroupListRequest();
void InitDefaultsGetMyGroupListResponseImpl();
void InitDefaultsGetMyGroupListResponse();
void InitDefaultsGetGroupInfoRequestImpl();
void InitDefaultsGetGroupInfoRequest();
void InitDefaultsGetGroupInfoResponseImpl();
void InitDefaultsGetGroupInfoResponse();
void InitDefaultsGetCrewListRequestImpl();
void InitDefaultsGetCrewListRequest();
void InitDefaultsGetCrewListResponseImpl();
void InitDefaultsGetCrewListResponse();
void InitDefaultsSetAdminRequestImpl();
void InitDefaultsSetAdminRequest();
void InitDefaultsSetAdminResponseImpl();
void InitDefaultsSetAdminResponse();
void InitDefaultsBeAdminSignal_NewAdminImpl();
void InitDefaultsBeAdminSignal_NewAdmin();
void InitDefaultsBeAdminSignalImpl();
void InitDefaultsBeAdminSignal();
void InitDefaultsAbolishAdminRequestImpl();
void InitDefaultsAbolishAdminRequest();
void InitDefaultsAbolishAdminResponseImpl();
void InitDefaultsAbolishAdminResponse();
void InitDefaultsAbolishedAdminSignal_AbolishedAdminImpl();
void InitDefaultsAbolishedAdminSignal_AbolishedAdmin();
void InitDefaultsAbolishedAdminSignalImpl();
void InitDefaultsAbolishedAdminSignal();
void InitDefaultsJoinGroupRequestImpl();
void InitDefaultsJoinGroupRequest();
void InitDefaultsJoinGroupResponseImpl();
void InitDefaultsJoinGroupResponse();
void InitDefaultsApplyJoinSignalImpl();
void InitDefaultsApplyJoinSignal();
void InitDefaultsApproveJoinRequestImpl();
void InitDefaultsApproveJoinRequest();
void InitDefaultsDirectlyJoinSignalImpl();
void InitDefaultsDirectlyJoinSignal();
void InitDefaultsApproveJoinResponseImpl();
void InitDefaultsApproveJoinResponse();
void InitDefaultsBeApprovedJoinSignalImpl();
void InitDefaultsBeApprovedJoinSignal();
void InitDefaultsRefuseJoinRequestImpl();
void InitDefaultsRefuseJoinRequest();
void InitDefaultsRefuseJoinResponseImpl();
void InitDefaultsRefuseJoinResponse();
void InitDefaultsBeRefuseJoinSignalImpl();
void InitDefaultsBeRefuseJoinSignal();
void InitDefaultsSetSilentRequestImpl();
void InitDefaultsSetSilentRequest();
void InitDefaultsSetSilentResponseImpl();
void InitDefaultsSetSilentResponse();
void InitDefaultsGetGroupTagListRequestImpl();
void InitDefaultsGetGroupTagListRequest();
void InitDefaultsGetGroupTagListResponseImpl();
void InitDefaultsGetGroupTagListResponse();
void InitDefaultsSetGroupTagRequestImpl();
void InitDefaultsSetGroupTagRequest();
void InitDefaultsSetGroupTagResponseImpl();
void InitDefaultsSetGroupTagResponse();
void InitDefaultsGroupTagChangedSignalImpl();
void InitDefaultsGroupTagChangedSignal();
void InitDefaultsSetGroupAssemblyPointRequestImpl();
void InitDefaultsSetGroupAssemblyPointRequest();
void InitDefaultsSetGroupAssemblyPointResponseImpl();
void InitDefaultsSetGroupAssemblyPointResponse();
void InitDefaultsAssemblyPointChangedSignalImpl();
void InitDefaultsAssemblyPointChangedSignal();
void InitDefaultsGetGroupAssemblyPointRequestImpl();
void InitDefaultsGetGroupAssemblyPointRequest();
void InitDefaultsGetGroupAssemblyPointResponseImpl();
void InitDefaultsGetGroupAssemblyPointResponse();
inline void InitDefaults() {
  InitDefaultsGroupInfo();
  InitDefaultsGroupTag();
  InitDefaultsCrew();
  InitDefaultsCrewDetail();
  InitDefaultsCrewInGroup();
  InitDefaultsGroupSignal();
  InitDefaultsGroupMessageRequest();
  InitDefaultsGroupMessageResponse();
  InitDefaultsCreateGroupRequest();
  InitDefaultsCreateGroupResponse();
  InitDefaultsGroupCreatedSignal();
  InitDefaultsInvitingSignal();
  InitDefaultsAcceptInvitationRequest();
  InitDefaultsAcceptInvitationResponse();
  InitDefaultsInvitationAcceptedSignal();
  InitDefaultsInviteeJoinGroupSignal();
  InitDefaultsDeclineInvitationRequest();
  InitDefaultsDeclineInvitationResponse();
  InitDefaultsInvitationDeclinedSignal();
  InitDefaultsAddMemberRequest();
  InitDefaultsAddMemberResponse();
  InitDefaultsJoinGroupSignal();
  InitDefaultsKickRequest();
  InitDefaultsKickResponse();
  InitDefaultsBeKickedSignal();
  InitDefaultsExitRequest();
  InitDefaultsExitResponse();
  InitDefaultsExitedSignal();
  InitDefaultsDestroyRequest();
  InitDefaultsDestroyResponse();
  InitDefaultsGroupDestroyedSignal();
  InitDefaultsHandoverOwnerRequest();
  InitDefaultsHandoverOwnerResponse();
  InitDefaultsOwnerChangedSignal();
  InitDefaultsSetGroupNameRequest();
  InitDefaultsSetGroupNameResponse();
  InitDefaultsGroupNameChangedSignal();
  InitDefaultsSetDescRequest();
  InitDefaultsSetDescResponse();
  InitDefaultsDescChangedSignal();
  InitDefaultsChangeNickRequest();
  InitDefaultsChangeNickResponse();
  InitDefaultsNickChangedSignal();
  InitDefaultsGetMyGroupListRequest();
  InitDefaultsGetMyGroupListResponse();
  InitDefaultsGetGroupInfoRequest();
  InitDefaultsGetGroupInfoResponse();
  InitDefaultsGetCrewListRequest();
  InitDefaultsGetCrewListResponse();
  InitDefaultsSetAdminRequest();
  InitDefaultsSetAdminResponse();
  InitDefaultsBeAdminSignal_NewAdmin();
  InitDefaultsBeAdminSignal();
  InitDefaultsAbolishAdminRequest();
  InitDefaultsAbolishAdminResponse();
  InitDefaultsAbolishedAdminSignal_AbolishedAdmin();
  InitDefaultsAbolishedAdminSignal();
  InitDefaultsJoinGroupRequest();
  InitDefaultsJoinGroupResponse();
  InitDefaultsApplyJoinSignal();
  InitDefaultsApproveJoinRequest();
  InitDefaultsDirectlyJoinSignal();
  InitDefaultsApproveJoinResponse();
  InitDefaultsBeApprovedJoinSignal();
  InitDefaultsRefuseJoinRequest();
  InitDefaultsRefuseJoinResponse();
  InitDefaultsBeRefuseJoinSignal();
  InitDefaultsSetSilentRequest();
  InitDefaultsSetSilentResponse();
  InitDefaultsGetGroupTagListRequest();
  InitDefaultsGetGroupTagListResponse();
  InitDefaultsSetGroupTagRequest();
  InitDefaultsSetGroupTagResponse();
  InitDefaultsGroupTagChangedSignal();
  InitDefaultsSetGroupAssemblyPointRequest();
  InitDefaultsSetGroupAssemblyPointResponse();
  InitDefaultsAssemblyPointChangedSignal();
  InitDefaultsGetGroupAssemblyPointRequest();
  InitDefaultsGetGroupAssemblyPointResponse();
}
}  // namespace protobuf_outer_2fgroup_2eproto
namespace outer {
namespace group {
class AbolishAdminRequest;
class AbolishAdminRequestDefaultTypeInternal;
extern AbolishAdminRequestDefaultTypeInternal _AbolishAdminRequest_default_instance_;
class AbolishAdminResponse;
class AbolishAdminResponseDefaultTypeInternal;
extern AbolishAdminResponseDefaultTypeInternal _AbolishAdminResponse_default_instance_;
class AbolishedAdminSignal;
class AbolishedAdminSignalDefaultTypeInternal;
extern AbolishedAdminSignalDefaultTypeInternal _AbolishedAdminSignal_default_instance_;
class AbolishedAdminSignal_AbolishedAdmin;
class AbolishedAdminSignal_AbolishedAdminDefaultTypeInternal;
extern AbolishedAdminSignal_AbolishedAdminDefaultTypeInternal _AbolishedAdminSignal_AbolishedAdmin_default_instance_;
class AcceptInvitationRequest;
class AcceptInvitationRequestDefaultTypeInternal;
extern AcceptInvitationRequestDefaultTypeInternal _AcceptInvitationRequest_default_instance_;
class AcceptInvitationResponse;
class AcceptInvitationResponseDefaultTypeInternal;
extern AcceptInvitationResponseDefaultTypeInternal _AcceptInvitationResponse_default_instance_;
class AddMemberRequest;
class AddMemberRequestDefaultTypeInternal;
extern AddMemberRequestDefaultTypeInternal _AddMemberRequest_default_instance_;
class AddMemberResponse;
class AddMemberResponseDefaultTypeInternal;
extern AddMemberResponseDefaultTypeInternal _AddMemberResponse_default_instance_;
class ApplyJoinSignal;
class ApplyJoinSignalDefaultTypeInternal;
extern ApplyJoinSignalDefaultTypeInternal _ApplyJoinSignal_default_instance_;
class ApproveJoinRequest;
class ApproveJoinRequestDefaultTypeInternal;
extern ApproveJoinRequestDefaultTypeInternal _ApproveJoinRequest_default_instance_;
class ApproveJoinResponse;
class ApproveJoinResponseDefaultTypeInternal;
extern ApproveJoinResponseDefaultTypeInternal _ApproveJoinResponse_default_instance_;
class AssemblyPointChangedSignal;
class AssemblyPointChangedSignalDefaultTypeInternal;
extern AssemblyPointChangedSignalDefaultTypeInternal _AssemblyPointChangedSignal_default_instance_;
class BeAdminSignal;
class BeAdminSignalDefaultTypeInternal;
extern BeAdminSignalDefaultTypeInternal _BeAdminSignal_default_instance_;
class BeAdminSignal_NewAdmin;
class BeAdminSignal_NewAdminDefaultTypeInternal;
extern BeAdminSignal_NewAdminDefaultTypeInternal _BeAdminSignal_NewAdmin_default_instance_;
class BeApprovedJoinSignal;
class BeApprovedJoinSignalDefaultTypeInternal;
extern BeApprovedJoinSignalDefaultTypeInternal _BeApprovedJoinSignal_default_instance_;
class BeKickedSignal;
class BeKickedSignalDefaultTypeInternal;
extern BeKickedSignalDefaultTypeInternal _BeKickedSignal_default_instance_;
class BeRefuseJoinSignal;
class BeRefuseJoinSignalDefaultTypeInternal;
extern BeRefuseJoinSignalDefaultTypeInternal _BeRefuseJoinSignal_default_instance_;
class ChangeNickRequest;
class ChangeNickRequestDefaultTypeInternal;
extern ChangeNickRequestDefaultTypeInternal _ChangeNickRequest_default_instance_;
class ChangeNickResponse;
class ChangeNickResponseDefaultTypeInternal;
extern ChangeNickResponseDefaultTypeInternal _ChangeNickResponse_default_instance_;
class CreateGroupRequest;
class CreateGroupRequestDefaultTypeInternal;
extern CreateGroupRequestDefaultTypeInternal _CreateGroupRequest_default_instance_;
class CreateGroupResponse;
class CreateGroupResponseDefaultTypeInternal;
extern CreateGroupResponseDefaultTypeInternal _CreateGroupResponse_default_instance_;
class Crew;
class CrewDefaultTypeInternal;
extern CrewDefaultTypeInternal _Crew_default_instance_;
class CrewDetail;
class CrewDetailDefaultTypeInternal;
extern CrewDetailDefaultTypeInternal _CrewDetail_default_instance_;
class CrewInGroup;
class CrewInGroupDefaultTypeInternal;
extern CrewInGroupDefaultTypeInternal _CrewInGroup_default_instance_;
class DeclineInvitationRequest;
class DeclineInvitationRequestDefaultTypeInternal;
extern DeclineInvitationRequestDefaultTypeInternal _DeclineInvitationRequest_default_instance_;
class DeclineInvitationResponse;
class DeclineInvitationResponseDefaultTypeInternal;
extern DeclineInvitationResponseDefaultTypeInternal _DeclineInvitationResponse_default_instance_;
class DescChangedSignal;
class DescChangedSignalDefaultTypeInternal;
extern DescChangedSignalDefaultTypeInternal _DescChangedSignal_default_instance_;
class DestroyRequest;
class DestroyRequestDefaultTypeInternal;
extern DestroyRequestDefaultTypeInternal _DestroyRequest_default_instance_;
class DestroyResponse;
class DestroyResponseDefaultTypeInternal;
extern DestroyResponseDefaultTypeInternal _DestroyResponse_default_instance_;
class DirectlyJoinSignal;
class DirectlyJoinSignalDefaultTypeInternal;
extern DirectlyJoinSignalDefaultTypeInternal _DirectlyJoinSignal_default_instance_;
class ExitRequest;
class ExitRequestDefaultTypeInternal;
extern ExitRequestDefaultTypeInternal _ExitRequest_default_instance_;
class ExitResponse;
class ExitResponseDefaultTypeInternal;
extern ExitResponseDefaultTypeInternal _ExitResponse_default_instance_;
class ExitedSignal;
class ExitedSignalDefaultTypeInternal;
extern ExitedSignalDefaultTypeInternal _ExitedSignal_default_instance_;
class GetCrewListRequest;
class GetCrewListRequestDefaultTypeInternal;
extern GetCrewListRequestDefaultTypeInternal _GetCrewListRequest_default_instance_;
class GetCrewListResponse;
class GetCrewListResponseDefaultTypeInternal;
extern GetCrewListResponseDefaultTypeInternal _GetCrewListResponse_default_instance_;
class GetGroupAssemblyPointRequest;
class GetGroupAssemblyPointRequestDefaultTypeInternal;
extern GetGroupAssemblyPointRequestDefaultTypeInternal _GetGroupAssemblyPointRequest_default_instance_;
class GetGroupAssemblyPointResponse;
class GetGroupAssemblyPointResponseDefaultTypeInternal;
extern GetGroupAssemblyPointResponseDefaultTypeInternal _GetGroupAssemblyPointResponse_default_instance_;
class GetGroupInfoRequest;
class GetGroupInfoRequestDefaultTypeInternal;
extern GetGroupInfoRequestDefaultTypeInternal _GetGroupInfoRequest_default_instance_;
class GetGroupInfoResponse;
class GetGroupInfoResponseDefaultTypeInternal;
extern GetGroupInfoResponseDefaultTypeInternal _GetGroupInfoResponse_default_instance_;
class GetGroupTagListRequest;
class GetGroupTagListRequestDefaultTypeInternal;
extern GetGroupTagListRequestDefaultTypeInternal _GetGroupTagListRequest_default_instance_;
class GetGroupTagListResponse;
class GetGroupTagListResponseDefaultTypeInternal;
extern GetGroupTagListResponseDefaultTypeInternal _GetGroupTagListResponse_default_instance_;
class GetMyGroupListRequest;
class GetMyGroupListRequestDefaultTypeInternal;
extern GetMyGroupListRequestDefaultTypeInternal _GetMyGroupListRequest_default_instance_;
class GetMyGroupListResponse;
class GetMyGroupListResponseDefaultTypeInternal;
extern GetMyGroupListResponseDefaultTypeInternal _GetMyGroupListResponse_default_instance_;
class GroupCreatedSignal;
class GroupCreatedSignalDefaultTypeInternal;
extern GroupCreatedSignalDefaultTypeInternal _GroupCreatedSignal_default_instance_;
class GroupDestroyedSignal;
class GroupDestroyedSignalDefaultTypeInternal;
extern GroupDestroyedSignalDefaultTypeInternal _GroupDestroyedSignal_default_instance_;
class GroupInfo;
class GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class GroupMessageRequest;
class GroupMessageRequestDefaultTypeInternal;
extern GroupMessageRequestDefaultTypeInternal _GroupMessageRequest_default_instance_;
class GroupMessageResponse;
class GroupMessageResponseDefaultTypeInternal;
extern GroupMessageResponseDefaultTypeInternal _GroupMessageResponse_default_instance_;
class GroupNameChangedSignal;
class GroupNameChangedSignalDefaultTypeInternal;
extern GroupNameChangedSignalDefaultTypeInternal _GroupNameChangedSignal_default_instance_;
class GroupSignal;
class GroupSignalDefaultTypeInternal;
extern GroupSignalDefaultTypeInternal _GroupSignal_default_instance_;
class GroupTag;
class GroupTagDefaultTypeInternal;
extern GroupTagDefaultTypeInternal _GroupTag_default_instance_;
class GroupTagChangedSignal;
class GroupTagChangedSignalDefaultTypeInternal;
extern GroupTagChangedSignalDefaultTypeInternal _GroupTagChangedSignal_default_instance_;
class HandoverOwnerRequest;
class HandoverOwnerRequestDefaultTypeInternal;
extern HandoverOwnerRequestDefaultTypeInternal _HandoverOwnerRequest_default_instance_;
class HandoverOwnerResponse;
class HandoverOwnerResponseDefaultTypeInternal;
extern HandoverOwnerResponseDefaultTypeInternal _HandoverOwnerResponse_default_instance_;
class InvitationAcceptedSignal;
class InvitationAcceptedSignalDefaultTypeInternal;
extern InvitationAcceptedSignalDefaultTypeInternal _InvitationAcceptedSignal_default_instance_;
class InvitationDeclinedSignal;
class InvitationDeclinedSignalDefaultTypeInternal;
extern InvitationDeclinedSignalDefaultTypeInternal _InvitationDeclinedSignal_default_instance_;
class InviteeJoinGroupSignal;
class InviteeJoinGroupSignalDefaultTypeInternal;
extern InviteeJoinGroupSignalDefaultTypeInternal _InviteeJoinGroupSignal_default_instance_;
class InvitingSignal;
class InvitingSignalDefaultTypeInternal;
extern InvitingSignalDefaultTypeInternal _InvitingSignal_default_instance_;
class JoinGroupRequest;
class JoinGroupRequestDefaultTypeInternal;
extern JoinGroupRequestDefaultTypeInternal _JoinGroupRequest_default_instance_;
class JoinGroupResponse;
class JoinGroupResponseDefaultTypeInternal;
extern JoinGroupResponseDefaultTypeInternal _JoinGroupResponse_default_instance_;
class JoinGroupSignal;
class JoinGroupSignalDefaultTypeInternal;
extern JoinGroupSignalDefaultTypeInternal _JoinGroupSignal_default_instance_;
class KickRequest;
class KickRequestDefaultTypeInternal;
extern KickRequestDefaultTypeInternal _KickRequest_default_instance_;
class KickResponse;
class KickResponseDefaultTypeInternal;
extern KickResponseDefaultTypeInternal _KickResponse_default_instance_;
class NickChangedSignal;
class NickChangedSignalDefaultTypeInternal;
extern NickChangedSignalDefaultTypeInternal _NickChangedSignal_default_instance_;
class OwnerChangedSignal;
class OwnerChangedSignalDefaultTypeInternal;
extern OwnerChangedSignalDefaultTypeInternal _OwnerChangedSignal_default_instance_;
class RefuseJoinRequest;
class RefuseJoinRequestDefaultTypeInternal;
extern RefuseJoinRequestDefaultTypeInternal _RefuseJoinRequest_default_instance_;
class RefuseJoinResponse;
class RefuseJoinResponseDefaultTypeInternal;
extern RefuseJoinResponseDefaultTypeInternal _RefuseJoinResponse_default_instance_;
class SetAdminRequest;
class SetAdminRequestDefaultTypeInternal;
extern SetAdminRequestDefaultTypeInternal _SetAdminRequest_default_instance_;
class SetAdminResponse;
class SetAdminResponseDefaultTypeInternal;
extern SetAdminResponseDefaultTypeInternal _SetAdminResponse_default_instance_;
class SetDescRequest;
class SetDescRequestDefaultTypeInternal;
extern SetDescRequestDefaultTypeInternal _SetDescRequest_default_instance_;
class SetDescResponse;
class SetDescResponseDefaultTypeInternal;
extern SetDescResponseDefaultTypeInternal _SetDescResponse_default_instance_;
class SetGroupAssemblyPointRequest;
class SetGroupAssemblyPointRequestDefaultTypeInternal;
extern SetGroupAssemblyPointRequestDefaultTypeInternal _SetGroupAssemblyPointRequest_default_instance_;
class SetGroupAssemblyPointResponse;
class SetGroupAssemblyPointResponseDefaultTypeInternal;
extern SetGroupAssemblyPointResponseDefaultTypeInternal _SetGroupAssemblyPointResponse_default_instance_;
class SetGroupNameRequest;
class SetGroupNameRequestDefaultTypeInternal;
extern SetGroupNameRequestDefaultTypeInternal _SetGroupNameRequest_default_instance_;
class SetGroupNameResponse;
class SetGroupNameResponseDefaultTypeInternal;
extern SetGroupNameResponseDefaultTypeInternal _SetGroupNameResponse_default_instance_;
class SetGroupTagRequest;
class SetGroupTagRequestDefaultTypeInternal;
extern SetGroupTagRequestDefaultTypeInternal _SetGroupTagRequest_default_instance_;
class SetGroupTagResponse;
class SetGroupTagResponseDefaultTypeInternal;
extern SetGroupTagResponseDefaultTypeInternal _SetGroupTagResponse_default_instance_;
class SetSilentRequest;
class SetSilentRequestDefaultTypeInternal;
extern SetSilentRequestDefaultTypeInternal _SetSilentRequest_default_instance_;
class SetSilentResponse;
class SetSilentResponseDefaultTypeInternal;
extern SetSilentResponseDefaultTypeInternal _SetSilentResponse_default_instance_;
}  // namespace group
}  // namespace outer
namespace outer {
namespace group {

enum ERole {
  UNKNOWNEROLE = 0,
  OWNER = 3,
  ADMIN = 1,
  MEMBER = 2,
  ERole_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ERole_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ERole_IsValid(int value);
const ERole ERole_MIN = UNKNOWNEROLE;
const ERole ERole_MAX = OWNER;
const int ERole_ARRAYSIZE = ERole_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERole_descriptor();
inline const ::std::string& ERole_Name(ERole value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERole_descriptor(), value);
}
inline bool ERole_Parse(
    const ::std::string& name, ERole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERole>(
    ERole_descriptor(), name, value);
}
enum ESignalType {
  UNKNOWNESIGNALTYPE = 0,
  GROUP_CREATED_SIGNAL = 22,
  INVITING_SIGNAL = 1,
  INVITATION_ACCEPTED_SIGNAL = 2,
  INVITEE_JOIN_GROUP_SIGNAL = 3,
  INVITATION_DECLINED_SIGNAL = 4,
  JOIN_GROUP_SIGNAL = 5,
  BE_KICKED_SIGNAL = 6,
  EXITED_SIGNAL = 7,
  GROUP_DESTROYED_SIGNAL = 8,
  OWNER_CHANGED_SIGNAL = 9,
  GROUP_NAME_CHANGED_SIGNAL = 10,
  NICK_CHANGED_SIGNAL = 11,
  BE_ADMIN_SIGNAL = 12,
  APPLY_JOIN_SIGNAL = 13,
  BE_APPROVED_JOIN_SIGNAL = 14,
  BE_REFUSE_JOIN_SIGNAL = 15,
  ABOLISHED_ADMIN_SIGNAL = 16,
  DESC_CHANGED_SIGNAL = 17,
  DIRECTLY_JOIN_SIGNAL = 18,
  JIMAO_READED_SIGNAL = 19,
  JIMAO_SENDED_SIGNAL = 20,
  GROUP_TAG_CHANGED_SIGNAL = 21,
  AGGREGATION_POINT_CHANGE = 23,
  ESignalType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ESignalType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ESignalType_IsValid(int value);
const ESignalType ESignalType_MIN = UNKNOWNESIGNALTYPE;
const ESignalType ESignalType_MAX = AGGREGATION_POINT_CHANGE;
const int ESignalType_ARRAYSIZE = ESignalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESignalType_descriptor();
inline const ::std::string& ESignalType_Name(ESignalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESignalType_descriptor(), value);
}
inline bool ESignalType_Parse(
    const ::std::string& name, ESignalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESignalType>(
    ESignalType_descriptor(), name, value);
}
// ===================================================================

class GroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupInfo) */ {
 public:
  GroupInfo();
  virtual ~GroupInfo();

  GroupInfo(const GroupInfo& from);

  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupInfo(GroupInfo&& from) noexcept
    : GroupInfo() {
    *this = ::std::move(from);
  }

  inline GroupInfo& operator=(GroupInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupInfo* internal_default_instance() {
    return reinterpret_cast<const GroupInfo*>(
               &_GroupInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GroupInfo* other);
  friend void swap(GroupInfo& a, GroupInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupInfo& from);
  void MergeFrom(const GroupInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string group_name = 3;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // .outer.group.GroupTag group_tag = 10;
  bool has_group_tag() const;
  void clear_group_tag();
  static const int kGroupTagFieldNumber = 10;
  const ::outer::group::GroupTag& group_tag() const;
  ::outer::group::GroupTag* release_group_tag();
  ::outer::group::GroupTag* mutable_group_tag();
  void set_allocated_group_tag(::outer::group::GroupTag* group_tag);

  // .common.msg.LocationMessage assembly_point = 11;
  bool has_assembly_point() const;
  void clear_assembly_point();
  static const int kAssemblyPointFieldNumber = 11;
  const ::common::msg::LocationMessage& assembly_point() const;
  ::common::msg::LocationMessage* release_assembly_point();
  ::common::msg::LocationMessage* mutable_assembly_point();
  void set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point);

  // uint64 created = 5;
  void clear_created();
  static const int kCreatedFieldNumber = 5;
  ::google::protobuf::uint64 created() const;
  void set_created(::google::protobuf::uint64 value);

  // uint32 crew_count = 4;
  void clear_crew_count();
  static const int kCrewCountFieldNumber = 4;
  ::google::protobuf::uint32 crew_count() const;
  void set_crew_count(::google::protobuf::uint32 value);

  // .common.enumeration.EEnable enable = 6;
  void clear_enable();
  static const int kEnableFieldNumber = 6;
  ::common::enumeration::EEnable enable() const;
  void set_enable(::common::enumeration::EEnable value);

  // bool is_family_group = 8;
  void clear_is_family_group();
  static const int kIsFamilyGroupFieldNumber = 8;
  bool is_family_group() const;
  void set_is_family_group(bool value);

  // .common.enumeration.EGroupType group_type = 9;
  void clear_group_type();
  static const int kGroupTypeFieldNumber = 9;
  ::common::enumeration::EGroupType group_type() const;
  void set_group_type(::common::enumeration::EGroupType value);

  // @@protoc_insertion_point(class_scope:outer.group.GroupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::outer::group::GroupTag* group_tag_;
  ::common::msg::LocationMessage* assembly_point_;
  ::google::protobuf::uint64 created_;
  ::google::protobuf::uint32 crew_count_;
  int enable_;
  bool is_family_group_;
  int group_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupInfoImpl();
};
// -------------------------------------------------------------------

class GroupTag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupTag) */ {
 public:
  GroupTag();
  virtual ~GroupTag();

  GroupTag(const GroupTag& from);

  inline GroupTag& operator=(const GroupTag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupTag(GroupTag&& from) noexcept
    : GroupTag() {
    *this = ::std::move(from);
  }

  inline GroupTag& operator=(GroupTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupTag* internal_default_instance() {
    return reinterpret_cast<const GroupTag*>(
               &_GroupTag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GroupTag* other);
  friend void swap(GroupTag& a, GroupTag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupTag* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupTag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupTag& from);
  void MergeFrom(const GroupTag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupTag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tag_name = 2;
  void clear_tag_name();
  static const int kTagNameFieldNumber = 2;
  const ::std::string& tag_name() const;
  void set_tag_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tag_name(::std::string&& value);
  #endif
  void set_tag_name(const char* value);
  void set_tag_name(const char* value, size_t size);
  ::std::string* mutable_tag_name();
  ::std::string* release_tag_name();
  void set_allocated_tag_name(::std::string* tag_name);

  // string tag_img = 3;
  void clear_tag_img();
  static const int kTagImgFieldNumber = 3;
  const ::std::string& tag_img() const;
  void set_tag_img(const ::std::string& value);
  #if LANG_CXX11
  void set_tag_img(::std::string&& value);
  #endif
  void set_tag_img(const char* value);
  void set_tag_img(const char* value, size_t size);
  ::std::string* mutable_tag_img();
  ::std::string* release_tag_img();
  void set_allocated_tag_img(::std::string* tag_img);

  // string tag_desc = 4;
  void clear_tag_desc();
  static const int kTagDescFieldNumber = 4;
  const ::std::string& tag_desc() const;
  void set_tag_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_tag_desc(::std::string&& value);
  #endif
  void set_tag_desc(const char* value);
  void set_tag_desc(const char* value, size_t size);
  ::std::string* mutable_tag_desc();
  ::std::string* release_tag_desc();
  void set_allocated_tag_desc(::std::string* tag_desc);

  // uint64 tag_id = 1;
  void clear_tag_id();
  static const int kTagIdFieldNumber = 1;
  ::google::protobuf::uint64 tag_id() const;
  void set_tag_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.group.GroupTag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tag_name_;
  ::google::protobuf::internal::ArenaStringPtr tag_img_;
  ::google::protobuf::internal::ArenaStringPtr tag_desc_;
  ::google::protobuf::uint64 tag_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupTagImpl();
};
// -------------------------------------------------------------------

class Crew : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.Crew) */ {
 public:
  Crew();
  virtual ~Crew();

  Crew(const Crew& from);

  inline Crew& operator=(const Crew& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Crew(Crew&& from) noexcept
    : Crew() {
    *this = ::std::move(from);
  }

  inline Crew& operator=(Crew&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Crew& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Crew* internal_default_instance() {
    return reinterpret_cast<const Crew*>(
               &_Crew_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Crew* other);
  friend void swap(Crew& a, Crew& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Crew* New() const PROTOBUF_FINAL { return New(NULL); }

  Crew* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Crew& from);
  void MergeFrom(const Crew& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Crew* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string nick = 3;
  void clear_nick();
  static const int kNickFieldNumber = 3;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_nick(::std::string&& value);
  #endif
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // @@protoc_insertion_point(class_scope:outer.group.Crew)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsCrewImpl();
};
// -------------------------------------------------------------------

class CrewDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.CrewDetail) */ {
 public:
  CrewDetail();
  virtual ~CrewDetail();

  CrewDetail(const CrewDetail& from);

  inline CrewDetail& operator=(const CrewDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrewDetail(CrewDetail&& from) noexcept
    : CrewDetail() {
    *this = ::std::move(from);
  }

  inline CrewDetail& operator=(CrewDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrewDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrewDetail* internal_default_instance() {
    return reinterpret_cast<const CrewDetail*>(
               &_CrewDetail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CrewDetail* other);
  friend void swap(CrewDetail& a, CrewDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrewDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  CrewDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CrewDetail& from);
  void MergeFrom(const CrewDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CrewDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string nick = 3;
  void clear_nick();
  static const int kNickFieldNumber = 3;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_nick(::std::string&& value);
  #endif
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // string group_uri = 9;
  void clear_group_uri();
  static const int kGroupUriFieldNumber = 9;
  const ::std::string& group_uri() const;
  void set_group_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_group_uri(::std::string&& value);
  #endif
  void set_group_uri(const char* value);
  void set_group_uri(const char* value, size_t size);
  ::std::string* mutable_group_uri();
  ::std::string* release_group_uri();
  void set_allocated_group_uri(::std::string* group_uri);

  // .outer.group.ERole role = 4;
  void clear_role();
  static const int kRoleFieldNumber = 4;
  ::outer::group::ERole role() const;
  void set_role(::outer::group::ERole value);

  // .common.enumeration.ESilent silent = 5;
  void clear_silent();
  static const int kSilentFieldNumber = 5;
  ::common::enumeration::ESilent silent() const;
  void set_silent(::common::enumeration::ESilent value);

  // uint64 created = 6;
  void clear_created();
  static const int kCreatedFieldNumber = 6;
  ::google::protobuf::uint64 created() const;
  void set_created(::google::protobuf::uint64 value);

  // uint64 modified = 7;
  void clear_modified();
  static const int kModifiedFieldNumber = 7;
  ::google::protobuf::uint64 modified() const;
  void set_modified(::google::protobuf::uint64 value);

  // .common.enumeration.EEnable enable = 8;
  void clear_enable();
  static const int kEnableFieldNumber = 8;
  ::common::enumeration::EEnable enable() const;
  void set_enable(::common::enumeration::EEnable value);

  // @@protoc_insertion_point(class_scope:outer.group.CrewDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::internal::ArenaStringPtr group_uri_;
  int role_;
  int silent_;
  ::google::protobuf::uint64 created_;
  ::google::protobuf::uint64 modified_;
  int enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsCrewDetailImpl();
};
// -------------------------------------------------------------------

class CrewInGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.CrewInGroup) */ {
 public:
  CrewInGroup();
  virtual ~CrewInGroup();

  CrewInGroup(const CrewInGroup& from);

  inline CrewInGroup& operator=(const CrewInGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrewInGroup(CrewInGroup&& from) noexcept
    : CrewInGroup() {
    *this = ::std::move(from);
  }

  inline CrewInGroup& operator=(CrewInGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrewInGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrewInGroup* internal_default_instance() {
    return reinterpret_cast<const CrewInGroup*>(
               &_CrewInGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CrewInGroup* other);
  friend void swap(CrewInGroup& a, CrewInGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrewInGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CrewInGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CrewInGroup& from);
  void MergeFrom(const CrewInGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CrewInGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.GroupInfo group_info = 1;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 1;
  const ::outer::group::GroupInfo& group_info() const;
  ::outer::group::GroupInfo* release_group_info();
  ::outer::group::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::outer::group::GroupInfo* group_info);

  // .outer.group.Crew crew = 2;
  bool has_crew() const;
  void clear_crew();
  static const int kCrewFieldNumber = 2;
  const ::outer::group::Crew& crew() const;
  ::outer::group::Crew* release_crew();
  ::outer::group::Crew* mutable_crew();
  void set_allocated_crew(::outer::group::Crew* crew);

  // .outer.group.ERole role = 3;
  void clear_role();
  static const int kRoleFieldNumber = 3;
  ::outer::group::ERole role() const;
  void set_role(::outer::group::ERole value);

  // .common.enumeration.ESilent silent = 4;
  void clear_silent();
  static const int kSilentFieldNumber = 4;
  ::common::enumeration::ESilent silent() const;
  void set_silent(::common::enumeration::ESilent value);

  // uint64 modified = 6;
  void clear_modified();
  static const int kModifiedFieldNumber = 6;
  ::google::protobuf::uint64 modified() const;
  void set_modified(::google::protobuf::uint64 value);

  // .common.enumeration.EEnable enable = 5;
  void clear_enable();
  static const int kEnableFieldNumber = 5;
  ::common::enumeration::EEnable enable() const;
  void set_enable(::common::enumeration::EEnable value);

  // @@protoc_insertion_point(class_scope:outer.group.CrewInGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::GroupInfo* group_info_;
  ::outer::group::Crew* crew_;
  int role_;
  int silent_;
  ::google::protobuf::uint64 modified_;
  int enable_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsCrewInGroupImpl();
};
// -------------------------------------------------------------------

class GroupSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupSignal) */ {
 public:
  GroupSignal();
  virtual ~GroupSignal();

  GroupSignal(const GroupSignal& from);

  inline GroupSignal& operator=(const GroupSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupSignal(GroupSignal&& from) noexcept
    : GroupSignal() {
    *this = ::std::move(from);
  }

  inline GroupSignal& operator=(GroupSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupSignal* internal_default_instance() {
    return reinterpret_cast<const GroupSignal*>(
               &_GroupSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GroupSignal* other);
  friend void swap(GroupSignal& a, GroupSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupSignal& from);
  void MergeFrom(const GroupSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string receiver = 5;
  int receiver_size() const;
  void clear_receiver();
  static const int kReceiverFieldNumber = 5;
  const ::std::string& receiver(int index) const;
  ::std::string* mutable_receiver(int index);
  void set_receiver(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(int index, ::std::string&& value);
  #endif
  void set_receiver(int index, const char* value);
  void set_receiver(int index, const char* value, size_t size);
  ::std::string* add_receiver();
  void add_receiver(const ::std::string& value);
  #if LANG_CXX11
  void add_receiver(::std::string&& value);
  #endif
  void add_receiver(const char* value);
  void add_receiver(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& receiver() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_receiver();

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .outer.group.GroupInfo group_info = 3;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 3;
  const ::outer::group::GroupInfo& group_info() const;
  ::outer::group::GroupInfo* release_group_info();
  ::outer::group::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::outer::group::GroupInfo* group_info);

  // uint64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // .outer.group.ESignalType signal_type = 1;
  void clear_signal_type();
  static const int kSignalTypeFieldNumber = 1;
  ::outer::group::ESignalType signal_type() const;
  void set_signal_type(::outer::group::ESignalType value);

  // @@protoc_insertion_point(class_scope:outer.group.GroupSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> receiver_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::outer::group::GroupInfo* group_info_;
  ::google::protobuf::uint64 guid_;
  int signal_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupSignalImpl();
};
// -------------------------------------------------------------------

class GroupMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupMessageRequest) */ {
 public:
  GroupMessageRequest();
  virtual ~GroupMessageRequest();

  GroupMessageRequest(const GroupMessageRequest& from);

  inline GroupMessageRequest& operator=(const GroupMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupMessageRequest(GroupMessageRequest&& from) noexcept
    : GroupMessageRequest() {
    *this = ::std::move(from);
  }

  inline GroupMessageRequest& operator=(GroupMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupMessageRequest* internal_default_instance() {
    return reinterpret_cast<const GroupMessageRequest*>(
               &_GroupMessageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GroupMessageRequest* other);
  friend void swap(GroupMessageRequest& a, GroupMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupMessageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupMessageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupMessageRequest& from);
  void MergeFrom(const GroupMessageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_username = 1;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 1;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string uri = 3;
  void clear_uri();
  static const int kUriFieldNumber = 3;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // bytes data = 5;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string msg_id = 6;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 6;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.msg.EMsgContentType msg_content_type = 4;
  void clear_msg_content_type();
  static const int kMsgContentTypeFieldNumber = 4;
  ::common::msg::EMsgContentType msg_content_type() const;
  void set_msg_content_type(::common::msg::EMsgContentType value);

  // bool is_jimao = 7;
  void clear_is_jimao();
  static const int kIsJimaoFieldNumber = 7;
  bool is_jimao() const;
  void set_is_jimao(bool value);

  // .common.enumeration.EClientType from_client_type = 8;
  void clear_from_client_type();
  static const int kFromClientTypeFieldNumber = 8;
  ::common::enumeration::EClientType from_client_type() const;
  void set_from_client_type(::common::enumeration::EClientType value);

  // @@protoc_insertion_point(class_scope:outer.group.GroupMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int msg_content_type_;
  bool is_jimao_;
  int from_client_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupMessageRequestImpl();
};
// -------------------------------------------------------------------

class GroupMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupMessageResponse) */ {
 public:
  GroupMessageResponse();
  virtual ~GroupMessageResponse();

  GroupMessageResponse(const GroupMessageResponse& from);

  inline GroupMessageResponse& operator=(const GroupMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupMessageResponse(GroupMessageResponse&& from) noexcept
    : GroupMessageResponse() {
    *this = ::std::move(from);
  }

  inline GroupMessageResponse& operator=(GroupMessageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupMessageResponse* internal_default_instance() {
    return reinterpret_cast<const GroupMessageResponse*>(
               &_GroupMessageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GroupMessageResponse* other);
  friend void swap(GroupMessageResponse& a, GroupMessageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupMessageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupMessageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupMessageResponse& from);
  void MergeFrom(const GroupMessageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // string jimao_left_num = 4;
  void clear_jimao_left_num();
  static const int kJimaoLeftNumFieldNumber = 4;
  const ::std::string& jimao_left_num() const;
  void set_jimao_left_num(const ::std::string& value);
  #if LANG_CXX11
  void set_jimao_left_num(::std::string&& value);
  #endif
  void set_jimao_left_num(const char* value);
  void set_jimao_left_num(const char* value, size_t size);
  ::std::string* mutable_jimao_left_num();
  ::std::string* release_jimao_left_num();
  void set_allocated_jimao_left_num(::std::string* jimao_left_num);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.GroupMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::internal::ArenaStringPtr jimao_left_num_;
  ::google::protobuf::uint64 guid_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupMessageResponseImpl();
};
// -------------------------------------------------------------------

class CreateGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.CreateGroupRequest) */ {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGroupRequest(CreateGroupRequest&& from) noexcept
    : CreateGroupRequest() {
    *this = ::std::move(from);
  }

  inline CreateGroupRequest& operator=(CreateGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupRequest*>(
               &_CreateGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CreateGroupRequest* other);
  friend void swap(CreateGroupRequest& a, CreateGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string member_username = 4;
  int member_username_size() const;
  void clear_member_username();
  static const int kMemberUsernameFieldNumber = 4;
  const ::std::string& member_username(int index) const;
  ::std::string* mutable_member_username(int index);
  void set_member_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_member_username(int index, ::std::string&& value);
  #endif
  void set_member_username(int index, const char* value);
  void set_member_username(int index, const char* value, size_t size);
  ::std::string* add_member_username();
  void add_member_username(const ::std::string& value);
  #if LANG_CXX11
  void add_member_username(::std::string&& value);
  #endif
  void add_member_username(const char* value);
  void add_member_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& member_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_member_username();

  // repeated string invitee_username = 5;
  int invitee_username_size() const;
  void clear_invitee_username();
  static const int kInviteeUsernameFieldNumber = 5;
  const ::std::string& invitee_username(int index) const;
  ::std::string* mutable_invitee_username(int index);
  void set_invitee_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_invitee_username(int index, ::std::string&& value);
  #endif
  void set_invitee_username(int index, const char* value);
  void set_invitee_username(int index, const char* value, size_t size);
  ::std::string* add_invitee_username();
  void add_invitee_username(const ::std::string& value);
  #if LANG_CXX11
  void add_invitee_username(::std::string&& value);
  #endif
  void add_invitee_username(const char* value);
  void add_invitee_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& invitee_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_invitee_username();

  // string group_name = 1;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 1;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string owner_username = 3;
  void clear_owner_username();
  static const int kOwnerUsernameFieldNumber = 3;
  const ::std::string& owner_username() const;
  void set_owner_username(const ::std::string& value);
  #if LANG_CXX11
  void set_owner_username(::std::string&& value);
  #endif
  void set_owner_username(const char* value);
  void set_owner_username(const char* value, size_t size);
  ::std::string* mutable_owner_username();
  ::std::string* release_owner_username();
  void set_allocated_owner_username(::std::string* owner_username);

  // string invite_reason = 6;
  void clear_invite_reason();
  static const int kInviteReasonFieldNumber = 6;
  const ::std::string& invite_reason() const;
  void set_invite_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_reason(::std::string&& value);
  #endif
  void set_invite_reason(const char* value);
  void set_invite_reason(const char* value, size_t size);
  ::std::string* mutable_invite_reason();
  ::std::string* release_invite_reason();
  void set_allocated_invite_reason(::std::string* invite_reason);

  // string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string msg_id = 8;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 8;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // bool is_family_group = 9;
  void clear_is_family_group();
  static const int kIsFamilyGroupFieldNumber = 9;
  bool is_family_group() const;
  void set_is_family_group(bool value);

  // .common.enumeration.EGroupType group_type = 10;
  void clear_group_type();
  static const int kGroupTypeFieldNumber = 10;
  ::common::enumeration::EGroupType group_type() const;
  void set_group_type(::common::enumeration::EGroupType value);

  // uint64 tag_id = 11;
  void clear_tag_id();
  static const int kTagIdFieldNumber = 11;
  ::google::protobuf::uint64 tag_id() const;
  void set_tag_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.group.CreateGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> member_username_;
  ::google::protobuf::RepeatedPtrField< ::std::string> invitee_username_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr owner_username_;
  ::google::protobuf::internal::ArenaStringPtr invite_reason_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  bool is_family_group_;
  int group_type_;
  ::google::protobuf::uint64 tag_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsCreateGroupRequestImpl();
};
// -------------------------------------------------------------------

class CreateGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.CreateGroupResponse) */ {
 public:
  CreateGroupResponse();
  virtual ~CreateGroupResponse();

  CreateGroupResponse(const CreateGroupResponse& from);

  inline CreateGroupResponse& operator=(const CreateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGroupResponse(CreateGroupResponse&& from) noexcept
    : CreateGroupResponse() {
    *this = ::std::move(from);
  }

  inline CreateGroupResponse& operator=(CreateGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CreateGroupResponse*>(
               &_CreateGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CreateGroupResponse* other);
  friend void swap(CreateGroupResponse& a, CreateGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGroupResponse& from);
  void MergeFrom(const CreateGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .outer.group.GroupInfo group_info = 2;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 2;
  const ::outer::group::GroupInfo& group_info() const;
  ::outer::group::GroupInfo* release_group_info();
  ::outer::group::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::outer::group::GroupInfo* group_info);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.CreateGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::outer::group::GroupInfo* group_info_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsCreateGroupResponseImpl();
};
// -------------------------------------------------------------------

class GroupCreatedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupCreatedSignal) */ {
 public:
  GroupCreatedSignal();
  virtual ~GroupCreatedSignal();

  GroupCreatedSignal(const GroupCreatedSignal& from);

  inline GroupCreatedSignal& operator=(const GroupCreatedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupCreatedSignal(GroupCreatedSignal&& from) noexcept
    : GroupCreatedSignal() {
    *this = ::std::move(from);
  }

  inline GroupCreatedSignal& operator=(GroupCreatedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupCreatedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupCreatedSignal* internal_default_instance() {
    return reinterpret_cast<const GroupCreatedSignal*>(
               &_GroupCreatedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GroupCreatedSignal* other);
  friend void swap(GroupCreatedSignal& a, GroupCreatedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupCreatedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupCreatedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupCreatedSignal& from);
  void MergeFrom(const GroupCreatedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupCreatedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.Crew member = 2;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 2;
  const ::outer::group::Crew& member(int index) const;
  ::outer::group::Crew* mutable_member(int index);
  ::outer::group::Crew* add_member();
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
      member() const;

  // .outer.group.Crew owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  const ::outer::group::Crew& owner() const;
  ::outer::group::Crew* release_owner();
  ::outer::group::Crew* mutable_owner();
  void set_allocated_owner(::outer::group::Crew* owner);

  // @@protoc_insertion_point(class_scope:outer.group.GroupCreatedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew > member_;
  ::outer::group::Crew* owner_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupCreatedSignalImpl();
};
// -------------------------------------------------------------------

class InvitingSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.InvitingSignal) */ {
 public:
  InvitingSignal();
  virtual ~InvitingSignal();

  InvitingSignal(const InvitingSignal& from);

  inline InvitingSignal& operator=(const InvitingSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvitingSignal(InvitingSignal&& from) noexcept
    : InvitingSignal() {
    *this = ::std::move(from);
  }

  inline InvitingSignal& operator=(InvitingSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitingSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvitingSignal* internal_default_instance() {
    return reinterpret_cast<const InvitingSignal*>(
               &_InvitingSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(InvitingSignal* other);
  friend void swap(InvitingSignal& a, InvitingSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvitingSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitingSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitingSignal& from);
  void MergeFrom(const InvitingSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitingSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .outer.group.Crew from_crew = 1;
  bool has_from_crew() const;
  void clear_from_crew();
  static const int kFromCrewFieldNumber = 1;
  const ::outer::group::Crew& from_crew() const;
  ::outer::group::Crew* release_from_crew();
  ::outer::group::Crew* mutable_from_crew();
  void set_allocated_from_crew(::outer::group::Crew* from_crew);

  // @@protoc_insertion_point(class_scope:outer.group.InvitingSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::outer::group::Crew* from_crew_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsInvitingSignalImpl();
};
// -------------------------------------------------------------------

class AcceptInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AcceptInvitationRequest) */ {
 public:
  AcceptInvitationRequest();
  virtual ~AcceptInvitationRequest();

  AcceptInvitationRequest(const AcceptInvitationRequest& from);

  inline AcceptInvitationRequest& operator=(const AcceptInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationRequest(AcceptInvitationRequest&& from) noexcept
    : AcceptInvitationRequest() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationRequest& operator=(AcceptInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationRequest*>(
               &_AcceptInvitationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AcceptInvitationRequest* other);
  friend void swap(AcceptInvitationRequest& a, AcceptInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptInvitationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptInvitationRequest& from);
  void MergeFrom(const AcceptInvitationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string accept_to_username = 3;
  void clear_accept_to_username();
  static const int kAcceptToUsernameFieldNumber = 3;
  const ::std::string& accept_to_username() const;
  void set_accept_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_accept_to_username(::std::string&& value);
  #endif
  void set_accept_to_username(const char* value);
  void set_accept_to_username(const char* value, size_t size);
  ::std::string* mutable_accept_to_username();
  ::std::string* release_accept_to_username();
  void set_allocated_accept_to_username(::std::string* accept_to_username);

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.AcceptInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr accept_to_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAcceptInvitationRequestImpl();
};
// -------------------------------------------------------------------

class AcceptInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AcceptInvitationResponse) */ {
 public:
  AcceptInvitationResponse();
  virtual ~AcceptInvitationResponse();

  AcceptInvitationResponse(const AcceptInvitationResponse& from);

  inline AcceptInvitationResponse& operator=(const AcceptInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AcceptInvitationResponse(AcceptInvitationResponse&& from) noexcept
    : AcceptInvitationResponse() {
    *this = ::std::move(from);
  }

  inline AcceptInvitationResponse& operator=(AcceptInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptInvitationResponse*>(
               &_AcceptInvitationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AcceptInvitationResponse* other);
  friend void swap(AcceptInvitationResponse& a, AcceptInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AcceptInvitationResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptInvitationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptInvitationResponse& from);
  void MergeFrom(const AcceptInvitationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.AcceptInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAcceptInvitationResponseImpl();
};
// -------------------------------------------------------------------

class InvitationAcceptedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.InvitationAcceptedSignal) */ {
 public:
  InvitationAcceptedSignal();
  virtual ~InvitationAcceptedSignal();

  InvitationAcceptedSignal(const InvitationAcceptedSignal& from);

  inline InvitationAcceptedSignal& operator=(const InvitationAcceptedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvitationAcceptedSignal(InvitationAcceptedSignal&& from) noexcept
    : InvitationAcceptedSignal() {
    *this = ::std::move(from);
  }

  inline InvitationAcceptedSignal& operator=(InvitationAcceptedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationAcceptedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvitationAcceptedSignal* internal_default_instance() {
    return reinterpret_cast<const InvitationAcceptedSignal*>(
               &_InvitationAcceptedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(InvitationAcceptedSignal* other);
  friend void swap(InvitationAcceptedSignal& a, InvitationAcceptedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvitationAcceptedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationAcceptedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationAcceptedSignal& from);
  void MergeFrom(const InvitationAcceptedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationAcceptedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew accept_from = 1;
  bool has_accept_from() const;
  void clear_accept_from();
  static const int kAcceptFromFieldNumber = 1;
  const ::outer::group::Crew& accept_from() const;
  ::outer::group::Crew* release_accept_from();
  ::outer::group::Crew* mutable_accept_from();
  void set_allocated_accept_from(::outer::group::Crew* accept_from);

  // @@protoc_insertion_point(class_scope:outer.group.InvitationAcceptedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* accept_from_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsInvitationAcceptedSignalImpl();
};
// -------------------------------------------------------------------

class InviteeJoinGroupSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.InviteeJoinGroupSignal) */ {
 public:
  InviteeJoinGroupSignal();
  virtual ~InviteeJoinGroupSignal();

  InviteeJoinGroupSignal(const InviteeJoinGroupSignal& from);

  inline InviteeJoinGroupSignal& operator=(const InviteeJoinGroupSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InviteeJoinGroupSignal(InviteeJoinGroupSignal&& from) noexcept
    : InviteeJoinGroupSignal() {
    *this = ::std::move(from);
  }

  inline InviteeJoinGroupSignal& operator=(InviteeJoinGroupSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteeJoinGroupSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InviteeJoinGroupSignal* internal_default_instance() {
    return reinterpret_cast<const InviteeJoinGroupSignal*>(
               &_InviteeJoinGroupSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(InviteeJoinGroupSignal* other);
  friend void swap(InviteeJoinGroupSignal& a, InviteeJoinGroupSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InviteeJoinGroupSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  InviteeJoinGroupSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InviteeJoinGroupSignal& from);
  void MergeFrom(const InviteeJoinGroupSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InviteeJoinGroupSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew invitee = 2;
  bool has_invitee() const;
  void clear_invitee();
  static const int kInviteeFieldNumber = 2;
  const ::outer::group::Crew& invitee() const;
  ::outer::group::Crew* release_invitee();
  ::outer::group::Crew* mutable_invitee();
  void set_allocated_invitee(::outer::group::Crew* invitee);

  // .outer.group.Crew inviter = 3;
  bool has_inviter() const;
  void clear_inviter();
  static const int kInviterFieldNumber = 3;
  const ::outer::group::Crew& inviter() const;
  ::outer::group::Crew* release_inviter();
  ::outer::group::Crew* mutable_inviter();
  void set_allocated_inviter(::outer::group::Crew* inviter);

  // @@protoc_insertion_point(class_scope:outer.group.InviteeJoinGroupSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* invitee_;
  ::outer::group::Crew* inviter_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsInviteeJoinGroupSignalImpl();
};
// -------------------------------------------------------------------

class DeclineInvitationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DeclineInvitationRequest) */ {
 public:
  DeclineInvitationRequest();
  virtual ~DeclineInvitationRequest();

  DeclineInvitationRequest(const DeclineInvitationRequest& from);

  inline DeclineInvitationRequest& operator=(const DeclineInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeclineInvitationRequest(DeclineInvitationRequest&& from) noexcept
    : DeclineInvitationRequest() {
    *this = ::std::move(from);
  }

  inline DeclineInvitationRequest& operator=(DeclineInvitationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclineInvitationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeclineInvitationRequest* internal_default_instance() {
    return reinterpret_cast<const DeclineInvitationRequest*>(
               &_DeclineInvitationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(DeclineInvitationRequest* other);
  friend void swap(DeclineInvitationRequest& a, DeclineInvitationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeclineInvitationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeclineInvitationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeclineInvitationRequest& from);
  void MergeFrom(const DeclineInvitationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeclineInvitationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string decline_to_username = 3;
  void clear_decline_to_username();
  static const int kDeclineToUsernameFieldNumber = 3;
  const ::std::string& decline_to_username() const;
  void set_decline_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_decline_to_username(::std::string&& value);
  #endif
  void set_decline_to_username(const char* value);
  void set_decline_to_username(const char* value, size_t size);
  ::std::string* mutable_decline_to_username();
  ::std::string* release_decline_to_username();
  void set_allocated_decline_to_username(::std::string* decline_to_username);

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string decline_reason = 5;
  void clear_decline_reason();
  static const int kDeclineReasonFieldNumber = 5;
  const ::std::string& decline_reason() const;
  void set_decline_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_decline_reason(::std::string&& value);
  #endif
  void set_decline_reason(const char* value);
  void set_decline_reason(const char* value, size_t size);
  ::std::string* mutable_decline_reason();
  ::std::string* release_decline_reason();
  void set_allocated_decline_reason(::std::string* decline_reason);

  // string msg_id = 6;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 6;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.DeclineInvitationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr decline_to_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr decline_reason_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDeclineInvitationRequestImpl();
};
// -------------------------------------------------------------------

class DeclineInvitationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DeclineInvitationResponse) */ {
 public:
  DeclineInvitationResponse();
  virtual ~DeclineInvitationResponse();

  DeclineInvitationResponse(const DeclineInvitationResponse& from);

  inline DeclineInvitationResponse& operator=(const DeclineInvitationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeclineInvitationResponse(DeclineInvitationResponse&& from) noexcept
    : DeclineInvitationResponse() {
    *this = ::std::move(from);
  }

  inline DeclineInvitationResponse& operator=(DeclineInvitationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclineInvitationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeclineInvitationResponse* internal_default_instance() {
    return reinterpret_cast<const DeclineInvitationResponse*>(
               &_DeclineInvitationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DeclineInvitationResponse* other);
  friend void swap(DeclineInvitationResponse& a, DeclineInvitationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeclineInvitationResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DeclineInvitationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeclineInvitationResponse& from);
  void MergeFrom(const DeclineInvitationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeclineInvitationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.DeclineInvitationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDeclineInvitationResponseImpl();
};
// -------------------------------------------------------------------

class InvitationDeclinedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.InvitationDeclinedSignal) */ {
 public:
  InvitationDeclinedSignal();
  virtual ~InvitationDeclinedSignal();

  InvitationDeclinedSignal(const InvitationDeclinedSignal& from);

  inline InvitationDeclinedSignal& operator=(const InvitationDeclinedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvitationDeclinedSignal(InvitationDeclinedSignal&& from) noexcept
    : InvitationDeclinedSignal() {
    *this = ::std::move(from);
  }

  inline InvitationDeclinedSignal& operator=(InvitationDeclinedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationDeclinedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvitationDeclinedSignal* internal_default_instance() {
    return reinterpret_cast<const InvitationDeclinedSignal*>(
               &_InvitationDeclinedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(InvitationDeclinedSignal* other);
  friend void swap(InvitationDeclinedSignal& a, InvitationDeclinedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvitationDeclinedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationDeclinedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationDeclinedSignal& from);
  void MergeFrom(const InvitationDeclinedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationDeclinedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string decline_reason = 3;
  void clear_decline_reason();
  static const int kDeclineReasonFieldNumber = 3;
  const ::std::string& decline_reason() const;
  void set_decline_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_decline_reason(::std::string&& value);
  #endif
  void set_decline_reason(const char* value);
  void set_decline_reason(const char* value, size_t size);
  ::std::string* mutable_decline_reason();
  ::std::string* release_decline_reason();
  void set_allocated_decline_reason(::std::string* decline_reason);

  // .outer.group.Crew decline_from = 2;
  bool has_decline_from() const;
  void clear_decline_from();
  static const int kDeclineFromFieldNumber = 2;
  const ::outer::group::Crew& decline_from() const;
  ::outer::group::Crew* release_decline_from();
  ::outer::group::Crew* mutable_decline_from();
  void set_allocated_decline_from(::outer::group::Crew* decline_from);

  // @@protoc_insertion_point(class_scope:outer.group.InvitationDeclinedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr decline_reason_;
  ::outer::group::Crew* decline_from_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsInvitationDeclinedSignalImpl();
};
// -------------------------------------------------------------------

class AddMemberRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AddMemberRequest) */ {
 public:
  AddMemberRequest();
  virtual ~AddMemberRequest();

  AddMemberRequest(const AddMemberRequest& from);

  inline AddMemberRequest& operator=(const AddMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddMemberRequest(AddMemberRequest&& from) noexcept
    : AddMemberRequest() {
    *this = ::std::move(from);
  }

  inline AddMemberRequest& operator=(AddMemberRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMemberRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddMemberRequest* internal_default_instance() {
    return reinterpret_cast<const AddMemberRequest*>(
               &_AddMemberRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(AddMemberRequest* other);
  friend void swap(AddMemberRequest& a, AddMemberRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddMemberRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMemberRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMemberRequest& from);
  void MergeFrom(const AddMemberRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMemberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string member_username = 4;
  int member_username_size() const;
  void clear_member_username();
  static const int kMemberUsernameFieldNumber = 4;
  const ::std::string& member_username(int index) const;
  ::std::string* mutable_member_username(int index);
  void set_member_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_member_username(int index, ::std::string&& value);
  #endif
  void set_member_username(int index, const char* value);
  void set_member_username(int index, const char* value, size_t size);
  ::std::string* add_member_username();
  void add_member_username(const ::std::string& value);
  #if LANG_CXX11
  void add_member_username(::std::string&& value);
  #endif
  void add_member_username(const char* value);
  void add_member_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& member_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_member_username();

  // repeated string invitee_username = 5;
  int invitee_username_size() const;
  void clear_invitee_username();
  static const int kInviteeUsernameFieldNumber = 5;
  const ::std::string& invitee_username(int index) const;
  ::std::string* mutable_invitee_username(int index);
  void set_invitee_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_invitee_username(int index, ::std::string&& value);
  #endif
  void set_invitee_username(int index, const char* value);
  void set_invitee_username(int index, const char* value, size_t size);
  ::std::string* add_invitee_username();
  void add_invitee_username(const ::std::string& value);
  #if LANG_CXX11
  void add_invitee_username(::std::string&& value);
  #endif
  void add_invitee_username(const char* value);
  void add_invitee_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& invitee_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_invitee_username();

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string from_username = 2;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string invite_reason = 6;
  void clear_invite_reason();
  static const int kInviteReasonFieldNumber = 6;
  const ::std::string& invite_reason() const;
  void set_invite_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_reason(::std::string&& value);
  #endif
  void set_invite_reason(const char* value);
  void set_invite_reason(const char* value, size_t size);
  ::std::string* mutable_invite_reason();
  ::std::string* release_invite_reason();
  void set_allocated_invite_reason(::std::string* invite_reason);

  // string msg_id = 7;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 7;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.AddMemberRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> member_username_;
  ::google::protobuf::RepeatedPtrField< ::std::string> invitee_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr invite_reason_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAddMemberRequestImpl();
};
// -------------------------------------------------------------------

class AddMemberResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AddMemberResponse) */ {
 public:
  AddMemberResponse();
  virtual ~AddMemberResponse();

  AddMemberResponse(const AddMemberResponse& from);

  inline AddMemberResponse& operator=(const AddMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddMemberResponse(AddMemberResponse&& from) noexcept
    : AddMemberResponse() {
    *this = ::std::move(from);
  }

  inline AddMemberResponse& operator=(AddMemberResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMemberResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddMemberResponse* internal_default_instance() {
    return reinterpret_cast<const AddMemberResponse*>(
               &_AddMemberResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AddMemberResponse* other);
  friend void swap(AddMemberResponse& a, AddMemberResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddMemberResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMemberResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMemberResponse& from);
  void MergeFrom(const AddMemberResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMemberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.AddMemberResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAddMemberResponseImpl();
};
// -------------------------------------------------------------------

class JoinGroupSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.JoinGroupSignal) */ {
 public:
  JoinGroupSignal();
  virtual ~JoinGroupSignal();

  JoinGroupSignal(const JoinGroupSignal& from);

  inline JoinGroupSignal& operator=(const JoinGroupSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinGroupSignal(JoinGroupSignal&& from) noexcept
    : JoinGroupSignal() {
    *this = ::std::move(from);
  }

  inline JoinGroupSignal& operator=(JoinGroupSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinGroupSignal* internal_default_instance() {
    return reinterpret_cast<const JoinGroupSignal*>(
               &_JoinGroupSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(JoinGroupSignal* other);
  friend void swap(JoinGroupSignal& a, JoinGroupSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinGroupSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinGroupSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinGroupSignal& from);
  void MergeFrom(const JoinGroupSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinGroupSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.Crew new_member = 1;
  int new_member_size() const;
  void clear_new_member();
  static const int kNewMemberFieldNumber = 1;
  const ::outer::group::Crew& new_member(int index) const;
  ::outer::group::Crew* mutable_new_member(int index);
  ::outer::group::Crew* add_new_member();
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
      mutable_new_member();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
      new_member() const;

  // .outer.group.Crew actor = 2;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 2;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.JoinGroupSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew > new_member_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsJoinGroupSignalImpl();
};
// -------------------------------------------------------------------

class KickRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.KickRequest) */ {
 public:
  KickRequest();
  virtual ~KickRequest();

  KickRequest(const KickRequest& from);

  inline KickRequest& operator=(const KickRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KickRequest(KickRequest&& from) noexcept
    : KickRequest() {
    *this = ::std::move(from);
  }

  inline KickRequest& operator=(KickRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KickRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KickRequest* internal_default_instance() {
    return reinterpret_cast<const KickRequest*>(
               &_KickRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(KickRequest* other);
  friend void swap(KickRequest& a, KickRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KickRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  KickRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KickRequest& from);
  void MergeFrom(const KickRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KickRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string bekicked_username = 4;
  int bekicked_username_size() const;
  void clear_bekicked_username();
  static const int kBekickedUsernameFieldNumber = 4;
  const ::std::string& bekicked_username(int index) const;
  ::std::string* mutable_bekicked_username(int index);
  void set_bekicked_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_bekicked_username(int index, ::std::string&& value);
  #endif
  void set_bekicked_username(int index, const char* value);
  void set_bekicked_username(int index, const char* value, size_t size);
  ::std::string* add_bekicked_username();
  void add_bekicked_username(const ::std::string& value);
  #if LANG_CXX11
  void add_bekicked_username(::std::string&& value);
  #endif
  void add_bekicked_username(const char* value);
  void add_bekicked_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& bekicked_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_bekicked_username();

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string kicker_username = 2;
  void clear_kicker_username();
  static const int kKickerUsernameFieldNumber = 2;
  const ::std::string& kicker_username() const;
  void set_kicker_username(const ::std::string& value);
  #if LANG_CXX11
  void set_kicker_username(::std::string&& value);
  #endif
  void set_kicker_username(const char* value);
  void set_kicker_username(const char* value, size_t size);
  ::std::string* mutable_kicker_username();
  ::std::string* release_kicker_username();
  void set_allocated_kicker_username(::std::string* kicker_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.KickRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> bekicked_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr kicker_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsKickRequestImpl();
};
// -------------------------------------------------------------------

class KickResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.KickResponse) */ {
 public:
  KickResponse();
  virtual ~KickResponse();

  KickResponse(const KickResponse& from);

  inline KickResponse& operator=(const KickResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KickResponse(KickResponse&& from) noexcept
    : KickResponse() {
    *this = ::std::move(from);
  }

  inline KickResponse& operator=(KickResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KickResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KickResponse* internal_default_instance() {
    return reinterpret_cast<const KickResponse*>(
               &_KickResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(KickResponse* other);
  friend void swap(KickResponse& a, KickResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KickResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  KickResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KickResponse& from);
  void MergeFrom(const KickResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KickResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.KickResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsKickResponseImpl();
};
// -------------------------------------------------------------------

class BeKickedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.BeKickedSignal) */ {
 public:
  BeKickedSignal();
  virtual ~BeKickedSignal();

  BeKickedSignal(const BeKickedSignal& from);

  inline BeKickedSignal& operator=(const BeKickedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeKickedSignal(BeKickedSignal&& from) noexcept
    : BeKickedSignal() {
    *this = ::std::move(from);
  }

  inline BeKickedSignal& operator=(BeKickedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeKickedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeKickedSignal* internal_default_instance() {
    return reinterpret_cast<const BeKickedSignal*>(
               &_BeKickedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(BeKickedSignal* other);
  friend void swap(BeKickedSignal& a, BeKickedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeKickedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  BeKickedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeKickedSignal& from);
  void MergeFrom(const BeKickedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeKickedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.Crew be_kicked = 1;
  int be_kicked_size() const;
  void clear_be_kicked();
  static const int kBeKickedFieldNumber = 1;
  const ::outer::group::Crew& be_kicked(int index) const;
  ::outer::group::Crew* mutable_be_kicked(int index);
  ::outer::group::Crew* add_be_kicked();
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
      mutable_be_kicked();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
      be_kicked() const;

  // .outer.group.Crew kicker = 2;
  bool has_kicker() const;
  void clear_kicker();
  static const int kKickerFieldNumber = 2;
  const ::outer::group::Crew& kicker() const;
  ::outer::group::Crew* release_kicker();
  ::outer::group::Crew* mutable_kicker();
  void set_allocated_kicker(::outer::group::Crew* kicker);

  // @@protoc_insertion_point(class_scope:outer.group.BeKickedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::Crew > be_kicked_;
  ::outer::group::Crew* kicker_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsBeKickedSignalImpl();
};
// -------------------------------------------------------------------

class ExitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ExitRequest) */ {
 public:
  ExitRequest();
  virtual ~ExitRequest();

  ExitRequest(const ExitRequest& from);

  inline ExitRequest& operator=(const ExitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitRequest(ExitRequest&& from) noexcept
    : ExitRequest() {
    *this = ::std::move(from);
  }

  inline ExitRequest& operator=(ExitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitRequest* internal_default_instance() {
    return reinterpret_cast<const ExitRequest*>(
               &_ExitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ExitRequest* other);
  friend void swap(ExitRequest& a, ExitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitRequest& from);
  void MergeFrom(const ExitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string exiter_username = 2;
  void clear_exiter_username();
  static const int kExiterUsernameFieldNumber = 2;
  const ::std::string& exiter_username() const;
  void set_exiter_username(const ::std::string& value);
  #if LANG_CXX11
  void set_exiter_username(::std::string&& value);
  #endif
  void set_exiter_username(const char* value);
  void set_exiter_username(const char* value, size_t size);
  ::std::string* mutable_exiter_username();
  ::std::string* release_exiter_username();
  void set_allocated_exiter_username(::std::string* exiter_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 4;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.ExitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr exiter_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsExitRequestImpl();
};
// -------------------------------------------------------------------

class ExitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ExitResponse) */ {
 public:
  ExitResponse();
  virtual ~ExitResponse();

  ExitResponse(const ExitResponse& from);

  inline ExitResponse& operator=(const ExitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitResponse(ExitResponse&& from) noexcept
    : ExitResponse() {
    *this = ::std::move(from);
  }

  inline ExitResponse& operator=(ExitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitResponse* internal_default_instance() {
    return reinterpret_cast<const ExitResponse*>(
               &_ExitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ExitResponse* other);
  friend void swap(ExitResponse& a, ExitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitResponse& from);
  void MergeFrom(const ExitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.ExitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsExitResponseImpl();
};
// -------------------------------------------------------------------

class ExitedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ExitedSignal) */ {
 public:
  ExitedSignal();
  virtual ~ExitedSignal();

  ExitedSignal(const ExitedSignal& from);

  inline ExitedSignal& operator=(const ExitedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitedSignal(ExitedSignal&& from) noexcept
    : ExitedSignal() {
    *this = ::std::move(from);
  }

  inline ExitedSignal& operator=(ExitedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitedSignal* internal_default_instance() {
    return reinterpret_cast<const ExitedSignal*>(
               &_ExitedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ExitedSignal* other);
  friend void swap(ExitedSignal& a, ExitedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitedSignal& from);
  void MergeFrom(const ExitedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew exiter = 1;
  bool has_exiter() const;
  void clear_exiter();
  static const int kExiterFieldNumber = 1;
  const ::outer::group::Crew& exiter() const;
  ::outer::group::Crew* release_exiter();
  ::outer::group::Crew* mutable_exiter();
  void set_allocated_exiter(::outer::group::Crew* exiter);

  // @@protoc_insertion_point(class_scope:outer.group.ExitedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* exiter_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsExitedSignalImpl();
};
// -------------------------------------------------------------------

class DestroyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DestroyRequest) */ {
 public:
  DestroyRequest();
  virtual ~DestroyRequest();

  DestroyRequest(const DestroyRequest& from);

  inline DestroyRequest& operator=(const DestroyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyRequest(DestroyRequest&& from) noexcept
    : DestroyRequest() {
    *this = ::std::move(from);
  }

  inline DestroyRequest& operator=(DestroyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DestroyRequest* internal_default_instance() {
    return reinterpret_cast<const DestroyRequest*>(
               &_DestroyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(DestroyRequest* other);
  friend void swap(DestroyRequest& a, DestroyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DestroyRequest& from);
  void MergeFrom(const DestroyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string destroy_username = 2;
  void clear_destroy_username();
  static const int kDestroyUsernameFieldNumber = 2;
  const ::std::string& destroy_username() const;
  void set_destroy_username(const ::std::string& value);
  #if LANG_CXX11
  void set_destroy_username(::std::string&& value);
  #endif
  void set_destroy_username(const char* value);
  void set_destroy_username(const char* value, size_t size);
  ::std::string* mutable_destroy_username();
  ::std::string* release_destroy_username();
  void set_allocated_destroy_username(::std::string* destroy_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 4;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.DestroyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr destroy_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDestroyRequestImpl();
};
// -------------------------------------------------------------------

class DestroyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DestroyResponse) */ {
 public:
  DestroyResponse();
  virtual ~DestroyResponse();

  DestroyResponse(const DestroyResponse& from);

  inline DestroyResponse& operator=(const DestroyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyResponse(DestroyResponse&& from) noexcept
    : DestroyResponse() {
    *this = ::std::move(from);
  }

  inline DestroyResponse& operator=(DestroyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DestroyResponse* internal_default_instance() {
    return reinterpret_cast<const DestroyResponse*>(
               &_DestroyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(DestroyResponse* other);
  friend void swap(DestroyResponse& a, DestroyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DestroyResponse& from);
  void MergeFrom(const DestroyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.DestroyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDestroyResponseImpl();
};
// -------------------------------------------------------------------

class GroupDestroyedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupDestroyedSignal) */ {
 public:
  GroupDestroyedSignal();
  virtual ~GroupDestroyedSignal();

  GroupDestroyedSignal(const GroupDestroyedSignal& from);

  inline GroupDestroyedSignal& operator=(const GroupDestroyedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupDestroyedSignal(GroupDestroyedSignal&& from) noexcept
    : GroupDestroyedSignal() {
    *this = ::std::move(from);
  }

  inline GroupDestroyedSignal& operator=(GroupDestroyedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupDestroyedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupDestroyedSignal* internal_default_instance() {
    return reinterpret_cast<const GroupDestroyedSignal*>(
               &_GroupDestroyedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(GroupDestroyedSignal* other);
  friend void swap(GroupDestroyedSignal& a, GroupDestroyedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupDestroyedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupDestroyedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupDestroyedSignal& from);
  void MergeFrom(const GroupDestroyedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupDestroyedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew destroyer = 1;
  bool has_destroyer() const;
  void clear_destroyer();
  static const int kDestroyerFieldNumber = 1;
  const ::outer::group::Crew& destroyer() const;
  ::outer::group::Crew* release_destroyer();
  ::outer::group::Crew* mutable_destroyer();
  void set_allocated_destroyer(::outer::group::Crew* destroyer);

  // @@protoc_insertion_point(class_scope:outer.group.GroupDestroyedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* destroyer_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupDestroyedSignalImpl();
};
// -------------------------------------------------------------------

class HandoverOwnerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.HandoverOwnerRequest) */ {
 public:
  HandoverOwnerRequest();
  virtual ~HandoverOwnerRequest();

  HandoverOwnerRequest(const HandoverOwnerRequest& from);

  inline HandoverOwnerRequest& operator=(const HandoverOwnerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandoverOwnerRequest(HandoverOwnerRequest&& from) noexcept
    : HandoverOwnerRequest() {
    *this = ::std::move(from);
  }

  inline HandoverOwnerRequest& operator=(HandoverOwnerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HandoverOwnerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandoverOwnerRequest* internal_default_instance() {
    return reinterpret_cast<const HandoverOwnerRequest*>(
               &_HandoverOwnerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(HandoverOwnerRequest* other);
  friend void swap(HandoverOwnerRequest& a, HandoverOwnerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandoverOwnerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HandoverOwnerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HandoverOwnerRequest& from);
  void MergeFrom(const HandoverOwnerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HandoverOwnerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 2;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 2;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string new_owner_username = 3;
  void clear_new_owner_username();
  static const int kNewOwnerUsernameFieldNumber = 3;
  const ::std::string& new_owner_username() const;
  void set_new_owner_username(const ::std::string& value);
  #if LANG_CXX11
  void set_new_owner_username(::std::string&& value);
  #endif
  void set_new_owner_username(const char* value);
  void set_new_owner_username(const char* value, size_t size);
  ::std::string* mutable_new_owner_username();
  ::std::string* release_new_owner_username();
  void set_allocated_new_owner_username(::std::string* new_owner_username);

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.HandoverOwnerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr new_owner_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsHandoverOwnerRequestImpl();
};
// -------------------------------------------------------------------

class HandoverOwnerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.HandoverOwnerResponse) */ {
 public:
  HandoverOwnerResponse();
  virtual ~HandoverOwnerResponse();

  HandoverOwnerResponse(const HandoverOwnerResponse& from);

  inline HandoverOwnerResponse& operator=(const HandoverOwnerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HandoverOwnerResponse(HandoverOwnerResponse&& from) noexcept
    : HandoverOwnerResponse() {
    *this = ::std::move(from);
  }

  inline HandoverOwnerResponse& operator=(HandoverOwnerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HandoverOwnerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HandoverOwnerResponse* internal_default_instance() {
    return reinterpret_cast<const HandoverOwnerResponse*>(
               &_HandoverOwnerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(HandoverOwnerResponse* other);
  friend void swap(HandoverOwnerResponse& a, HandoverOwnerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HandoverOwnerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HandoverOwnerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HandoverOwnerResponse& from);
  void MergeFrom(const HandoverOwnerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HandoverOwnerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.HandoverOwnerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsHandoverOwnerResponseImpl();
};
// -------------------------------------------------------------------

class OwnerChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.OwnerChangedSignal) */ {
 public:
  OwnerChangedSignal();
  virtual ~OwnerChangedSignal();

  OwnerChangedSignal(const OwnerChangedSignal& from);

  inline OwnerChangedSignal& operator=(const OwnerChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OwnerChangedSignal(OwnerChangedSignal&& from) noexcept
    : OwnerChangedSignal() {
    *this = ::std::move(from);
  }

  inline OwnerChangedSignal& operator=(OwnerChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OwnerChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OwnerChangedSignal* internal_default_instance() {
    return reinterpret_cast<const OwnerChangedSignal*>(
               &_OwnerChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(OwnerChangedSignal* other);
  friend void swap(OwnerChangedSignal& a, OwnerChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OwnerChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  OwnerChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OwnerChangedSignal& from);
  void MergeFrom(const OwnerChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OwnerChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew new_owner = 1;
  bool has_new_owner() const;
  void clear_new_owner();
  static const int kNewOwnerFieldNumber = 1;
  const ::outer::group::Crew& new_owner() const;
  ::outer::group::Crew* release_new_owner();
  ::outer::group::Crew* mutable_new_owner();
  void set_allocated_new_owner(::outer::group::Crew* new_owner);

  // @@protoc_insertion_point(class_scope:outer.group.OwnerChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* new_owner_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsOwnerChangedSignalImpl();
};
// -------------------------------------------------------------------

class SetGroupNameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupNameRequest) */ {
 public:
  SetGroupNameRequest();
  virtual ~SetGroupNameRequest();

  SetGroupNameRequest(const SetGroupNameRequest& from);

  inline SetGroupNameRequest& operator=(const SetGroupNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupNameRequest(SetGroupNameRequest&& from) noexcept
    : SetGroupNameRequest() {
    *this = ::std::move(from);
  }

  inline SetGroupNameRequest& operator=(SetGroupNameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupNameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupNameRequest* internal_default_instance() {
    return reinterpret_cast<const SetGroupNameRequest*>(
               &_SetGroupNameRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SetGroupNameRequest* other);
  friend void swap(SetGroupNameRequest& a, SetGroupNameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupNameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupNameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupNameRequest& from);
  void MergeFrom(const SetGroupNameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupNameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 2;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 2;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string group_name = 4;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 4;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupNameRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupNameRequestImpl();
};
// -------------------------------------------------------------------

class SetGroupNameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupNameResponse) */ {
 public:
  SetGroupNameResponse();
  virtual ~SetGroupNameResponse();

  SetGroupNameResponse(const SetGroupNameResponse& from);

  inline SetGroupNameResponse& operator=(const SetGroupNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupNameResponse(SetGroupNameResponse&& from) noexcept
    : SetGroupNameResponse() {
    *this = ::std::move(from);
  }

  inline SetGroupNameResponse& operator=(SetGroupNameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupNameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupNameResponse* internal_default_instance() {
    return reinterpret_cast<const SetGroupNameResponse*>(
               &_SetGroupNameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SetGroupNameResponse* other);
  friend void swap(SetGroupNameResponse& a, SetGroupNameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupNameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupNameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupNameResponse& from);
  void MergeFrom(const SetGroupNameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupNameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupNameResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupNameResponseImpl();
};
// -------------------------------------------------------------------

class GroupNameChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupNameChangedSignal) */ {
 public:
  GroupNameChangedSignal();
  virtual ~GroupNameChangedSignal();

  GroupNameChangedSignal(const GroupNameChangedSignal& from);

  inline GroupNameChangedSignal& operator=(const GroupNameChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupNameChangedSignal(GroupNameChangedSignal&& from) noexcept
    : GroupNameChangedSignal() {
    *this = ::std::move(from);
  }

  inline GroupNameChangedSignal& operator=(GroupNameChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupNameChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupNameChangedSignal* internal_default_instance() {
    return reinterpret_cast<const GroupNameChangedSignal*>(
               &_GroupNameChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(GroupNameChangedSignal* other);
  friend void swap(GroupNameChangedSignal& a, GroupNameChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupNameChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupNameChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupNameChangedSignal& from);
  void MergeFrom(const GroupNameChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupNameChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_name = 1;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 1;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // .outer.group.Crew actor = 2;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 2;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.GroupNameChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupNameChangedSignalImpl();
};
// -------------------------------------------------------------------

class SetDescRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetDescRequest) */ {
 public:
  SetDescRequest();
  virtual ~SetDescRequest();

  SetDescRequest(const SetDescRequest& from);

  inline SetDescRequest& operator=(const SetDescRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDescRequest(SetDescRequest&& from) noexcept
    : SetDescRequest() {
    *this = ::std::move(from);
  }

  inline SetDescRequest& operator=(SetDescRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDescRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetDescRequest* internal_default_instance() {
    return reinterpret_cast<const SetDescRequest*>(
               &_SetDescRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SetDescRequest* other);
  friend void swap(SetDescRequest& a, SetDescRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDescRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDescRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDescRequest& from);
  void MergeFrom(const SetDescRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDescRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 2;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 2;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string desc = 4;
  void clear_desc();
  static const int kDescFieldNumber = 4;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.SetDescRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetDescRequestImpl();
};
// -------------------------------------------------------------------

class SetDescResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetDescResponse) */ {
 public:
  SetDescResponse();
  virtual ~SetDescResponse();

  SetDescResponse(const SetDescResponse& from);

  inline SetDescResponse& operator=(const SetDescResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDescResponse(SetDescResponse&& from) noexcept
    : SetDescResponse() {
    *this = ::std::move(from);
  }

  inline SetDescResponse& operator=(SetDescResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDescResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetDescResponse* internal_default_instance() {
    return reinterpret_cast<const SetDescResponse*>(
               &_SetDescResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SetDescResponse* other);
  friend void swap(SetDescResponse& a, SetDescResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDescResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDescResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDescResponse& from);
  void MergeFrom(const SetDescResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDescResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetDescResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetDescResponseImpl();
};
// -------------------------------------------------------------------

class DescChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DescChangedSignal) */ {
 public:
  DescChangedSignal();
  virtual ~DescChangedSignal();

  DescChangedSignal(const DescChangedSignal& from);

  inline DescChangedSignal& operator=(const DescChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DescChangedSignal(DescChangedSignal&& from) noexcept
    : DescChangedSignal() {
    *this = ::std::move(from);
  }

  inline DescChangedSignal& operator=(DescChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DescChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DescChangedSignal* internal_default_instance() {
    return reinterpret_cast<const DescChangedSignal*>(
               &_DescChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(DescChangedSignal* other);
  friend void swap(DescChangedSignal& a, DescChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DescChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  DescChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DescChangedSignal& from);
  void MergeFrom(const DescChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DescChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string desc = 1;
  void clear_desc();
  static const int kDescFieldNumber = 1;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // .outer.group.Crew actor = 2;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 2;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.DescChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDescChangedSignalImpl();
};
// -------------------------------------------------------------------

class ChangeNickRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ChangeNickRequest) */ {
 public:
  ChangeNickRequest();
  virtual ~ChangeNickRequest();

  ChangeNickRequest(const ChangeNickRequest& from);

  inline ChangeNickRequest& operator=(const ChangeNickRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeNickRequest(ChangeNickRequest&& from) noexcept
    : ChangeNickRequest() {
    *this = ::std::move(from);
  }

  inline ChangeNickRequest& operator=(ChangeNickRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNickRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeNickRequest* internal_default_instance() {
    return reinterpret_cast<const ChangeNickRequest*>(
               &_ChangeNickRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ChangeNickRequest* other);
  friend void swap(ChangeNickRequest& a, ChangeNickRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeNickRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeNickRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeNickRequest& from);
  void MergeFrom(const ChangeNickRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeNickRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 2;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 2;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string nick = 4;
  void clear_nick();
  static const int kNickFieldNumber = 4;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_nick(::std::string&& value);
  #endif
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.ChangeNickRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsChangeNickRequestImpl();
};
// -------------------------------------------------------------------

class ChangeNickResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ChangeNickResponse) */ {
 public:
  ChangeNickResponse();
  virtual ~ChangeNickResponse();

  ChangeNickResponse(const ChangeNickResponse& from);

  inline ChangeNickResponse& operator=(const ChangeNickResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeNickResponse(ChangeNickResponse&& from) noexcept
    : ChangeNickResponse() {
    *this = ::std::move(from);
  }

  inline ChangeNickResponse& operator=(ChangeNickResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNickResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeNickResponse* internal_default_instance() {
    return reinterpret_cast<const ChangeNickResponse*>(
               &_ChangeNickResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ChangeNickResponse* other);
  friend void swap(ChangeNickResponse& a, ChangeNickResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeNickResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeNickResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeNickResponse& from);
  void MergeFrom(const ChangeNickResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeNickResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.ChangeNickResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsChangeNickResponseImpl();
};
// -------------------------------------------------------------------

class NickChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.NickChangedSignal) */ {
 public:
  NickChangedSignal();
  virtual ~NickChangedSignal();

  NickChangedSignal(const NickChangedSignal& from);

  inline NickChangedSignal& operator=(const NickChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NickChangedSignal(NickChangedSignal&& from) noexcept
    : NickChangedSignal() {
    *this = ::std::move(from);
  }

  inline NickChangedSignal& operator=(NickChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NickChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NickChangedSignal* internal_default_instance() {
    return reinterpret_cast<const NickChangedSignal*>(
               &_NickChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(NickChangedSignal* other);
  friend void swap(NickChangedSignal& a, NickChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NickChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  NickChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NickChangedSignal& from);
  void MergeFrom(const NickChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NickChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew nick_changed_crew = 1;
  bool has_nick_changed_crew() const;
  void clear_nick_changed_crew();
  static const int kNickChangedCrewFieldNumber = 1;
  const ::outer::group::Crew& nick_changed_crew() const;
  ::outer::group::Crew* release_nick_changed_crew();
  ::outer::group::Crew* mutable_nick_changed_crew();
  void set_allocated_nick_changed_crew(::outer::group::Crew* nick_changed_crew);

  // @@protoc_insertion_point(class_scope:outer.group.NickChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* nick_changed_crew_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsNickChangedSignalImpl();
};
// -------------------------------------------------------------------

class GetMyGroupListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetMyGroupListRequest) */ {
 public:
  GetMyGroupListRequest();
  virtual ~GetMyGroupListRequest();

  GetMyGroupListRequest(const GetMyGroupListRequest& from);

  inline GetMyGroupListRequest& operator=(const GetMyGroupListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMyGroupListRequest(GetMyGroupListRequest&& from) noexcept
    : GetMyGroupListRequest() {
    *this = ::std::move(from);
  }

  inline GetMyGroupListRequest& operator=(GetMyGroupListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMyGroupListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMyGroupListRequest* internal_default_instance() {
    return reinterpret_cast<const GetMyGroupListRequest*>(
               &_GetMyGroupListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(GetMyGroupListRequest* other);
  friend void swap(GetMyGroupListRequest& a, GetMyGroupListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMyGroupListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMyGroupListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMyGroupListRequest& from);
  void MergeFrom(const GetMyGroupListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMyGroupListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 4;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // uint64 modified = 3;
  void clear_modified();
  static const int kModifiedFieldNumber = 3;
  ::google::protobuf::uint64 modified() const;
  void set_modified(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.group.GetMyGroupListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::uint64 modified_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetMyGroupListRequestImpl();
};
// -------------------------------------------------------------------

class GetMyGroupListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetMyGroupListResponse) */ {
 public:
  GetMyGroupListResponse();
  virtual ~GetMyGroupListResponse();

  GetMyGroupListResponse(const GetMyGroupListResponse& from);

  inline GetMyGroupListResponse& operator=(const GetMyGroupListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMyGroupListResponse(GetMyGroupListResponse&& from) noexcept
    : GetMyGroupListResponse() {
    *this = ::std::move(from);
  }

  inline GetMyGroupListResponse& operator=(GetMyGroupListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMyGroupListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMyGroupListResponse* internal_default_instance() {
    return reinterpret_cast<const GetMyGroupListResponse*>(
               &_GetMyGroupListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(GetMyGroupListResponse* other);
  friend void swap(GetMyGroupListResponse& a, GetMyGroupListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMyGroupListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMyGroupListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMyGroupListResponse& from);
  void MergeFrom(const GetMyGroupListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMyGroupListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.CrewInGroup crew_in_group = 2;
  int crew_in_group_size() const;
  void clear_crew_in_group();
  static const int kCrewInGroupFieldNumber = 2;
  const ::outer::group::CrewInGroup& crew_in_group(int index) const;
  ::outer::group::CrewInGroup* mutable_crew_in_group(int index);
  ::outer::group::CrewInGroup* add_crew_in_group();
  ::google::protobuf::RepeatedPtrField< ::outer::group::CrewInGroup >*
      mutable_crew_in_group();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::CrewInGroup >&
      crew_in_group() const;

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // bool finish_sync = 4;
  void clear_finish_sync();
  static const int kFinishSyncFieldNumber = 4;
  bool finish_sync() const;
  void set_finish_sync(bool value);

  // @@protoc_insertion_point(class_scope:outer.group.GetMyGroupListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::CrewInGroup > crew_in_group_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  bool finish_sync_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetMyGroupListResponseImpl();
};
// -------------------------------------------------------------------

class GetGroupInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupInfoRequest) */ {
 public:
  GetGroupInfoRequest();
  virtual ~GetGroupInfoRequest();

  GetGroupInfoRequest(const GetGroupInfoRequest& from);

  inline GetGroupInfoRequest& operator=(const GetGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupInfoRequest(GetGroupInfoRequest&& from) noexcept
    : GetGroupInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupInfoRequest& operator=(GetGroupInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupInfoRequest*>(
               &_GetGroupInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GetGroupInfoRequest* other);
  friend void swap(GetGroupInfoRequest& a, GetGroupInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupInfoRequest& from);
  void MergeFrom(const GetGroupInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupInfoRequestImpl();
};
// -------------------------------------------------------------------

class GetGroupInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupInfoResponse) */ {
 public:
  GetGroupInfoResponse();
  virtual ~GetGroupInfoResponse();

  GetGroupInfoResponse(const GetGroupInfoResponse& from);

  inline GetGroupInfoResponse& operator=(const GetGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupInfoResponse(GetGroupInfoResponse&& from) noexcept
    : GetGroupInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetGroupInfoResponse& operator=(GetGroupInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupInfoResponse*>(
               &_GetGroupInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(GetGroupInfoResponse* other);
  friend void swap(GetGroupInfoResponse& a, GetGroupInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupInfoResponse& from);
  void MergeFrom(const GetGroupInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .outer.group.GroupInfo group_info = 2;
  bool has_group_info() const;
  void clear_group_info();
  static const int kGroupInfoFieldNumber = 2;
  const ::outer::group::GroupInfo& group_info() const;
  ::outer::group::GroupInfo* release_group_info();
  ::outer::group::GroupInfo* mutable_group_info();
  void set_allocated_group_info(::outer::group::GroupInfo* group_info);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::outer::group::GroupInfo* group_info_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupInfoResponseImpl();
};
// -------------------------------------------------------------------

class GetCrewListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetCrewListRequest) */ {
 public:
  GetCrewListRequest();
  virtual ~GetCrewListRequest();

  GetCrewListRequest(const GetCrewListRequest& from);

  inline GetCrewListRequest& operator=(const GetCrewListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCrewListRequest(GetCrewListRequest&& from) noexcept
    : GetCrewListRequest() {
    *this = ::std::move(from);
  }

  inline GetCrewListRequest& operator=(GetCrewListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCrewListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCrewListRequest* internal_default_instance() {
    return reinterpret_cast<const GetCrewListRequest*>(
               &_GetCrewListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(GetCrewListRequest* other);
  friend void swap(GetCrewListRequest& a, GetCrewListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCrewListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCrewListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCrewListRequest& from);
  void MergeFrom(const GetCrewListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCrewListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string username = 3;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // uint64 modified = 4;
  void clear_modified();
  static const int kModifiedFieldNumber = 4;
  ::google::protobuf::uint64 modified() const;
  void set_modified(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.group.GetCrewListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::uint64 modified_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetCrewListRequestImpl();
};
// -------------------------------------------------------------------

class GetCrewListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetCrewListResponse) */ {
 public:
  GetCrewListResponse();
  virtual ~GetCrewListResponse();

  GetCrewListResponse(const GetCrewListResponse& from);

  inline GetCrewListResponse& operator=(const GetCrewListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCrewListResponse(GetCrewListResponse&& from) noexcept
    : GetCrewListResponse() {
    *this = ::std::move(from);
  }

  inline GetCrewListResponse& operator=(GetCrewListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCrewListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCrewListResponse* internal_default_instance() {
    return reinterpret_cast<const GetCrewListResponse*>(
               &_GetCrewListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(GetCrewListResponse* other);
  friend void swap(GetCrewListResponse& a, GetCrewListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCrewListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCrewListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCrewListResponse& from);
  void MergeFrom(const GetCrewListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCrewListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.CrewDetail crew_detail = 2;
  int crew_detail_size() const;
  void clear_crew_detail();
  static const int kCrewDetailFieldNumber = 2;
  const ::outer::group::CrewDetail& crew_detail(int index) const;
  ::outer::group::CrewDetail* mutable_crew_detail(int index);
  ::outer::group::CrewDetail* add_crew_detail();
  ::google::protobuf::RepeatedPtrField< ::outer::group::CrewDetail >*
      mutable_crew_detail();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::CrewDetail >&
      crew_detail() const;

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.GetCrewListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::CrewDetail > crew_detail_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetCrewListResponseImpl();
};
// -------------------------------------------------------------------

class SetAdminRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetAdminRequest) */ {
 public:
  SetAdminRequest();
  virtual ~SetAdminRequest();

  SetAdminRequest(const SetAdminRequest& from);

  inline SetAdminRequest& operator=(const SetAdminRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAdminRequest(SetAdminRequest&& from) noexcept
    : SetAdminRequest() {
    *this = ::std::move(from);
  }

  inline SetAdminRequest& operator=(SetAdminRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAdminRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetAdminRequest* internal_default_instance() {
    return reinterpret_cast<const SetAdminRequest*>(
               &_SetAdminRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SetAdminRequest* other);
  friend void swap(SetAdminRequest& a, SetAdminRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAdminRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAdminRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAdminRequest& from);
  void MergeFrom(const SetAdminRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAdminRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string admin_username = 2;
  int admin_username_size() const;
  void clear_admin_username();
  static const int kAdminUsernameFieldNumber = 2;
  const ::std::string& admin_username(int index) const;
  ::std::string* mutable_admin_username(int index);
  void set_admin_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_admin_username(int index, ::std::string&& value);
  #endif
  void set_admin_username(int index, const char* value);
  void set_admin_username(int index, const char* value, size_t size);
  ::std::string* add_admin_username();
  void add_admin_username(const ::std::string& value);
  #if LANG_CXX11
  void add_admin_username(::std::string&& value);
  #endif
  void add_admin_username(const char* value);
  void add_admin_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& admin_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_admin_username();

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 3;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 3;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.SetAdminRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> admin_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetAdminRequestImpl();
};
// -------------------------------------------------------------------

class SetAdminResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetAdminResponse) */ {
 public:
  SetAdminResponse();
  virtual ~SetAdminResponse();

  SetAdminResponse(const SetAdminResponse& from);

  inline SetAdminResponse& operator=(const SetAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAdminResponse(SetAdminResponse&& from) noexcept
    : SetAdminResponse() {
    *this = ::std::move(from);
  }

  inline SetAdminResponse& operator=(SetAdminResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAdminResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetAdminResponse* internal_default_instance() {
    return reinterpret_cast<const SetAdminResponse*>(
               &_SetAdminResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(SetAdminResponse* other);
  friend void swap(SetAdminResponse& a, SetAdminResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAdminResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAdminResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAdminResponse& from);
  void MergeFrom(const SetAdminResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAdminResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetAdminResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetAdminResponseImpl();
};
// -------------------------------------------------------------------

class BeAdminSignal_NewAdmin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.BeAdminSignal.NewAdmin) */ {
 public:
  BeAdminSignal_NewAdmin();
  virtual ~BeAdminSignal_NewAdmin();

  BeAdminSignal_NewAdmin(const BeAdminSignal_NewAdmin& from);

  inline BeAdminSignal_NewAdmin& operator=(const BeAdminSignal_NewAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeAdminSignal_NewAdmin(BeAdminSignal_NewAdmin&& from) noexcept
    : BeAdminSignal_NewAdmin() {
    *this = ::std::move(from);
  }

  inline BeAdminSignal_NewAdmin& operator=(BeAdminSignal_NewAdmin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeAdminSignal_NewAdmin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeAdminSignal_NewAdmin* internal_default_instance() {
    return reinterpret_cast<const BeAdminSignal_NewAdmin*>(
               &_BeAdminSignal_NewAdmin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(BeAdminSignal_NewAdmin* other);
  friend void swap(BeAdminSignal_NewAdmin& a, BeAdminSignal_NewAdmin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeAdminSignal_NewAdmin* New() const PROTOBUF_FINAL { return New(NULL); }

  BeAdminSignal_NewAdmin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeAdminSignal_NewAdmin& from);
  void MergeFrom(const BeAdminSignal_NewAdmin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeAdminSignal_NewAdmin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew admin = 1;
  bool has_admin() const;
  void clear_admin();
  static const int kAdminFieldNumber = 1;
  const ::outer::group::Crew& admin() const;
  ::outer::group::Crew* release_admin();
  ::outer::group::Crew* mutable_admin();
  void set_allocated_admin(::outer::group::Crew* admin);

  // .outer.group.ERole old_role = 2;
  void clear_old_role();
  static const int kOldRoleFieldNumber = 2;
  ::outer::group::ERole old_role() const;
  void set_old_role(::outer::group::ERole value);

  // @@protoc_insertion_point(class_scope:outer.group.BeAdminSignal.NewAdmin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* admin_;
  int old_role_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsBeAdminSignal_NewAdminImpl();
};
// -------------------------------------------------------------------

class BeAdminSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.BeAdminSignal) */ {
 public:
  BeAdminSignal();
  virtual ~BeAdminSignal();

  BeAdminSignal(const BeAdminSignal& from);

  inline BeAdminSignal& operator=(const BeAdminSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeAdminSignal(BeAdminSignal&& from) noexcept
    : BeAdminSignal() {
    *this = ::std::move(from);
  }

  inline BeAdminSignal& operator=(BeAdminSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeAdminSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeAdminSignal* internal_default_instance() {
    return reinterpret_cast<const BeAdminSignal*>(
               &_BeAdminSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(BeAdminSignal* other);
  friend void swap(BeAdminSignal& a, BeAdminSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeAdminSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  BeAdminSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeAdminSignal& from);
  void MergeFrom(const BeAdminSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeAdminSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BeAdminSignal_NewAdmin NewAdmin;

  // accessors -------------------------------------------------------

  // repeated .outer.group.BeAdminSignal.NewAdmin admins = 2;
  int admins_size() const;
  void clear_admins();
  static const int kAdminsFieldNumber = 2;
  const ::outer::group::BeAdminSignal_NewAdmin& admins(int index) const;
  ::outer::group::BeAdminSignal_NewAdmin* mutable_admins(int index);
  ::outer::group::BeAdminSignal_NewAdmin* add_admins();
  ::google::protobuf::RepeatedPtrField< ::outer::group::BeAdminSignal_NewAdmin >*
      mutable_admins();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::BeAdminSignal_NewAdmin >&
      admins() const;

  // .outer.group.Crew actor = 1;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 1;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.BeAdminSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::BeAdminSignal_NewAdmin > admins_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsBeAdminSignalImpl();
};
// -------------------------------------------------------------------

class AbolishAdminRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AbolishAdminRequest) */ {
 public:
  AbolishAdminRequest();
  virtual ~AbolishAdminRequest();

  AbolishAdminRequest(const AbolishAdminRequest& from);

  inline AbolishAdminRequest& operator=(const AbolishAdminRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbolishAdminRequest(AbolishAdminRequest&& from) noexcept
    : AbolishAdminRequest() {
    *this = ::std::move(from);
  }

  inline AbolishAdminRequest& operator=(AbolishAdminRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbolishAdminRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbolishAdminRequest* internal_default_instance() {
    return reinterpret_cast<const AbolishAdminRequest*>(
               &_AbolishAdminRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(AbolishAdminRequest* other);
  friend void swap(AbolishAdminRequest& a, AbolishAdminRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbolishAdminRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AbolishAdminRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbolishAdminRequest& from);
  void MergeFrom(const AbolishAdminRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbolishAdminRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string admin_username = 2;
  int admin_username_size() const;
  void clear_admin_username();
  static const int kAdminUsernameFieldNumber = 2;
  const ::std::string& admin_username(int index) const;
  ::std::string* mutable_admin_username(int index);
  void set_admin_username(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_admin_username(int index, ::std::string&& value);
  #endif
  void set_admin_username(int index, const char* value);
  void set_admin_username(int index, const char* value, size_t size);
  ::std::string* add_admin_username();
  void add_admin_username(const ::std::string& value);
  #if LANG_CXX11
  void add_admin_username(::std::string&& value);
  #endif
  void add_admin_username(const char* value);
  void add_admin_username(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& admin_username() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_admin_username();

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 3;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 3;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 4;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 4;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.AbolishAdminRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> admin_username_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAbolishAdminRequestImpl();
};
// -------------------------------------------------------------------

class AbolishAdminResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AbolishAdminResponse) */ {
 public:
  AbolishAdminResponse();
  virtual ~AbolishAdminResponse();

  AbolishAdminResponse(const AbolishAdminResponse& from);

  inline AbolishAdminResponse& operator=(const AbolishAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbolishAdminResponse(AbolishAdminResponse&& from) noexcept
    : AbolishAdminResponse() {
    *this = ::std::move(from);
  }

  inline AbolishAdminResponse& operator=(AbolishAdminResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbolishAdminResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbolishAdminResponse* internal_default_instance() {
    return reinterpret_cast<const AbolishAdminResponse*>(
               &_AbolishAdminResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(AbolishAdminResponse* other);
  friend void swap(AbolishAdminResponse& a, AbolishAdminResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbolishAdminResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AbolishAdminResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbolishAdminResponse& from);
  void MergeFrom(const AbolishAdminResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbolishAdminResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.AbolishAdminResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAbolishAdminResponseImpl();
};
// -------------------------------------------------------------------

class AbolishedAdminSignal_AbolishedAdmin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AbolishedAdminSignal.AbolishedAdmin) */ {
 public:
  AbolishedAdminSignal_AbolishedAdmin();
  virtual ~AbolishedAdminSignal_AbolishedAdmin();

  AbolishedAdminSignal_AbolishedAdmin(const AbolishedAdminSignal_AbolishedAdmin& from);

  inline AbolishedAdminSignal_AbolishedAdmin& operator=(const AbolishedAdminSignal_AbolishedAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbolishedAdminSignal_AbolishedAdmin(AbolishedAdminSignal_AbolishedAdmin&& from) noexcept
    : AbolishedAdminSignal_AbolishedAdmin() {
    *this = ::std::move(from);
  }

  inline AbolishedAdminSignal_AbolishedAdmin& operator=(AbolishedAdminSignal_AbolishedAdmin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbolishedAdminSignal_AbolishedAdmin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbolishedAdminSignal_AbolishedAdmin* internal_default_instance() {
    return reinterpret_cast<const AbolishedAdminSignal_AbolishedAdmin*>(
               &_AbolishedAdminSignal_AbolishedAdmin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(AbolishedAdminSignal_AbolishedAdmin* other);
  friend void swap(AbolishedAdminSignal_AbolishedAdmin& a, AbolishedAdminSignal_AbolishedAdmin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbolishedAdminSignal_AbolishedAdmin* New() const PROTOBUF_FINAL { return New(NULL); }

  AbolishedAdminSignal_AbolishedAdmin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbolishedAdminSignal_AbolishedAdmin& from);
  void MergeFrom(const AbolishedAdminSignal_AbolishedAdmin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbolishedAdminSignal_AbolishedAdmin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew admin = 1;
  bool has_admin() const;
  void clear_admin();
  static const int kAdminFieldNumber = 1;
  const ::outer::group::Crew& admin() const;
  ::outer::group::Crew* release_admin();
  ::outer::group::Crew* mutable_admin();
  void set_allocated_admin(::outer::group::Crew* admin);

  // .outer.group.ERole new_role = 2;
  void clear_new_role();
  static const int kNewRoleFieldNumber = 2;
  ::outer::group::ERole new_role() const;
  void set_new_role(::outer::group::ERole value);

  // @@protoc_insertion_point(class_scope:outer.group.AbolishedAdminSignal.AbolishedAdmin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* admin_;
  int new_role_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAbolishedAdminSignal_AbolishedAdminImpl();
};
// -------------------------------------------------------------------

class AbolishedAdminSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AbolishedAdminSignal) */ {
 public:
  AbolishedAdminSignal();
  virtual ~AbolishedAdminSignal();

  AbolishedAdminSignal(const AbolishedAdminSignal& from);

  inline AbolishedAdminSignal& operator=(const AbolishedAdminSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbolishedAdminSignal(AbolishedAdminSignal&& from) noexcept
    : AbolishedAdminSignal() {
    *this = ::std::move(from);
  }

  inline AbolishedAdminSignal& operator=(AbolishedAdminSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbolishedAdminSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbolishedAdminSignal* internal_default_instance() {
    return reinterpret_cast<const AbolishedAdminSignal*>(
               &_AbolishedAdminSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(AbolishedAdminSignal* other);
  friend void swap(AbolishedAdminSignal& a, AbolishedAdminSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbolishedAdminSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  AbolishedAdminSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbolishedAdminSignal& from);
  void MergeFrom(const AbolishedAdminSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbolishedAdminSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AbolishedAdminSignal_AbolishedAdmin AbolishedAdmin;

  // accessors -------------------------------------------------------

  // repeated .outer.group.AbolishedAdminSignal.AbolishedAdmin abolished_admins = 2;
  int abolished_admins_size() const;
  void clear_abolished_admins();
  static const int kAbolishedAdminsFieldNumber = 2;
  const ::outer::group::AbolishedAdminSignal_AbolishedAdmin& abolished_admins(int index) const;
  ::outer::group::AbolishedAdminSignal_AbolishedAdmin* mutable_abolished_admins(int index);
  ::outer::group::AbolishedAdminSignal_AbolishedAdmin* add_abolished_admins();
  ::google::protobuf::RepeatedPtrField< ::outer::group::AbolishedAdminSignal_AbolishedAdmin >*
      mutable_abolished_admins();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::AbolishedAdminSignal_AbolishedAdmin >&
      abolished_admins() const;

  // .outer.group.Crew actor = 1;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 1;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.AbolishedAdminSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::AbolishedAdminSignal_AbolishedAdmin > abolished_admins_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAbolishedAdminSignalImpl();
};
// -------------------------------------------------------------------

class JoinGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.JoinGroupRequest) */ {
 public:
  JoinGroupRequest();
  virtual ~JoinGroupRequest();

  JoinGroupRequest(const JoinGroupRequest& from);

  inline JoinGroupRequest& operator=(const JoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinGroupRequest(JoinGroupRequest&& from) noexcept
    : JoinGroupRequest() {
    *this = ::std::move(from);
  }

  inline JoinGroupRequest& operator=(JoinGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinGroupRequest* internal_default_instance() {
    return reinterpret_cast<const JoinGroupRequest*>(
               &_JoinGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(JoinGroupRequest* other);
  friend void swap(JoinGroupRequest& a, JoinGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinGroupRequest& from);
  void MergeFrom(const JoinGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string username = 3;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string reason = 4;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // bool require_approve = 6;
  void clear_require_approve();
  static const int kRequireApproveFieldNumber = 6;
  bool require_approve() const;
  void set_require_approve(bool value);

  // @@protoc_insertion_point(class_scope:outer.group.JoinGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  bool require_approve_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsJoinGroupRequestImpl();
};
// -------------------------------------------------------------------

class JoinGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.JoinGroupResponse) */ {
 public:
  JoinGroupResponse();
  virtual ~JoinGroupResponse();

  JoinGroupResponse(const JoinGroupResponse& from);

  inline JoinGroupResponse& operator=(const JoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinGroupResponse(JoinGroupResponse&& from) noexcept
    : JoinGroupResponse() {
    *this = ::std::move(from);
  }

  inline JoinGroupResponse& operator=(JoinGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinGroupResponse* internal_default_instance() {
    return reinterpret_cast<const JoinGroupResponse*>(
               &_JoinGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(JoinGroupResponse* other);
  friend void swap(JoinGroupResponse& a, JoinGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinGroupResponse& from);
  void MergeFrom(const JoinGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.JoinGroupResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsJoinGroupResponseImpl();
};
// -------------------------------------------------------------------

class ApplyJoinSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ApplyJoinSignal) */ {
 public:
  ApplyJoinSignal();
  virtual ~ApplyJoinSignal();

  ApplyJoinSignal(const ApplyJoinSignal& from);

  inline ApplyJoinSignal& operator=(const ApplyJoinSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyJoinSignal(ApplyJoinSignal&& from) noexcept
    : ApplyJoinSignal() {
    *this = ::std::move(from);
  }

  inline ApplyJoinSignal& operator=(ApplyJoinSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyJoinSignal* internal_default_instance() {
    return reinterpret_cast<const ApplyJoinSignal*>(
               &_ApplyJoinSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(ApplyJoinSignal* other);
  friend void swap(ApplyJoinSignal& a, ApplyJoinSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyJoinSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  ApplyJoinSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApplyJoinSignal& from);
  void MergeFrom(const ApplyJoinSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApplyJoinSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // .outer.group.Crew asker = 1;
  bool has_asker() const;
  void clear_asker();
  static const int kAskerFieldNumber = 1;
  const ::outer::group::Crew& asker() const;
  ::outer::group::Crew* release_asker();
  ::outer::group::Crew* mutable_asker();
  void set_allocated_asker(::outer::group::Crew* asker);

  // @@protoc_insertion_point(class_scope:outer.group.ApplyJoinSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::outer::group::Crew* asker_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsApplyJoinSignalImpl();
};
// -------------------------------------------------------------------

class ApproveJoinRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ApproveJoinRequest) */ {
 public:
  ApproveJoinRequest();
  virtual ~ApproveJoinRequest();

  ApproveJoinRequest(const ApproveJoinRequest& from);

  inline ApproveJoinRequest& operator=(const ApproveJoinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApproveJoinRequest(ApproveJoinRequest&& from) noexcept
    : ApproveJoinRequest() {
    *this = ::std::move(from);
  }

  inline ApproveJoinRequest& operator=(ApproveJoinRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApproveJoinRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApproveJoinRequest* internal_default_instance() {
    return reinterpret_cast<const ApproveJoinRequest*>(
               &_ApproveJoinRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(ApproveJoinRequest* other);
  friend void swap(ApproveJoinRequest& a, ApproveJoinRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApproveJoinRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ApproveJoinRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApproveJoinRequest& from);
  void MergeFrom(const ApproveJoinRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApproveJoinRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string asker_username = 3;
  void clear_asker_username();
  static const int kAskerUsernameFieldNumber = 3;
  const ::std::string& asker_username() const;
  void set_asker_username(const ::std::string& value);
  #if LANG_CXX11
  void set_asker_username(::std::string&& value);
  #endif
  void set_asker_username(const char* value);
  void set_asker_username(const char* value, size_t size);
  ::std::string* mutable_asker_username();
  ::std::string* release_asker_username();
  void set_allocated_asker_username(::std::string* asker_username);

  // string actor_username = 4;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 4;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.ApproveJoinRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr asker_username_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsApproveJoinRequestImpl();
};
// -------------------------------------------------------------------

class DirectlyJoinSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.DirectlyJoinSignal) */ {
 public:
  DirectlyJoinSignal();
  virtual ~DirectlyJoinSignal();

  DirectlyJoinSignal(const DirectlyJoinSignal& from);

  inline DirectlyJoinSignal& operator=(const DirectlyJoinSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DirectlyJoinSignal(DirectlyJoinSignal&& from) noexcept
    : DirectlyJoinSignal() {
    *this = ::std::move(from);
  }

  inline DirectlyJoinSignal& operator=(DirectlyJoinSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectlyJoinSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DirectlyJoinSignal* internal_default_instance() {
    return reinterpret_cast<const DirectlyJoinSignal*>(
               &_DirectlyJoinSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(DirectlyJoinSignal* other);
  friend void swap(DirectlyJoinSignal& a, DirectlyJoinSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DirectlyJoinSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectlyJoinSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DirectlyJoinSignal& from);
  void MergeFrom(const DirectlyJoinSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DirectlyJoinSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew join = 1;
  bool has_join() const;
  void clear_join();
  static const int kJoinFieldNumber = 1;
  const ::outer::group::Crew& join() const;
  ::outer::group::Crew* release_join();
  ::outer::group::Crew* mutable_join();
  void set_allocated_join(::outer::group::Crew* join);

  // @@protoc_insertion_point(class_scope:outer.group.DirectlyJoinSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* join_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsDirectlyJoinSignalImpl();
};
// -------------------------------------------------------------------

class ApproveJoinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.ApproveJoinResponse) */ {
 public:
  ApproveJoinResponse();
  virtual ~ApproveJoinResponse();

  ApproveJoinResponse(const ApproveJoinResponse& from);

  inline ApproveJoinResponse& operator=(const ApproveJoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApproveJoinResponse(ApproveJoinResponse&& from) noexcept
    : ApproveJoinResponse() {
    *this = ::std::move(from);
  }

  inline ApproveJoinResponse& operator=(ApproveJoinResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApproveJoinResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApproveJoinResponse* internal_default_instance() {
    return reinterpret_cast<const ApproveJoinResponse*>(
               &_ApproveJoinResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(ApproveJoinResponse* other);
  friend void swap(ApproveJoinResponse& a, ApproveJoinResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApproveJoinResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ApproveJoinResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApproveJoinResponse& from);
  void MergeFrom(const ApproveJoinResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApproveJoinResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.ApproveJoinResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsApproveJoinResponseImpl();
};
// -------------------------------------------------------------------

class BeApprovedJoinSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.BeApprovedJoinSignal) */ {
 public:
  BeApprovedJoinSignal();
  virtual ~BeApprovedJoinSignal();

  BeApprovedJoinSignal(const BeApprovedJoinSignal& from);

  inline BeApprovedJoinSignal& operator=(const BeApprovedJoinSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeApprovedJoinSignal(BeApprovedJoinSignal&& from) noexcept
    : BeApprovedJoinSignal() {
    *this = ::std::move(from);
  }

  inline BeApprovedJoinSignal& operator=(BeApprovedJoinSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeApprovedJoinSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeApprovedJoinSignal* internal_default_instance() {
    return reinterpret_cast<const BeApprovedJoinSignal*>(
               &_BeApprovedJoinSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(BeApprovedJoinSignal* other);
  friend void swap(BeApprovedJoinSignal& a, BeApprovedJoinSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeApprovedJoinSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  BeApprovedJoinSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeApprovedJoinSignal& from);
  void MergeFrom(const BeApprovedJoinSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeApprovedJoinSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .outer.group.Crew asker = 1;
  bool has_asker() const;
  void clear_asker();
  static const int kAskerFieldNumber = 1;
  const ::outer::group::Crew& asker() const;
  ::outer::group::Crew* release_asker();
  ::outer::group::Crew* mutable_asker();
  void set_allocated_asker(::outer::group::Crew* asker);

  // .outer.group.Crew approve_actor = 2;
  bool has_approve_actor() const;
  void clear_approve_actor();
  static const int kApproveActorFieldNumber = 2;
  const ::outer::group::Crew& approve_actor() const;
  ::outer::group::Crew* release_approve_actor();
  ::outer::group::Crew* mutable_approve_actor();
  void set_allocated_approve_actor(::outer::group::Crew* approve_actor);

  // @@protoc_insertion_point(class_scope:outer.group.BeApprovedJoinSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::outer::group::Crew* asker_;
  ::outer::group::Crew* approve_actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsBeApprovedJoinSignalImpl();
};
// -------------------------------------------------------------------

class RefuseJoinRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.RefuseJoinRequest) */ {
 public:
  RefuseJoinRequest();
  virtual ~RefuseJoinRequest();

  RefuseJoinRequest(const RefuseJoinRequest& from);

  inline RefuseJoinRequest& operator=(const RefuseJoinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefuseJoinRequest(RefuseJoinRequest&& from) noexcept
    : RefuseJoinRequest() {
    *this = ::std::move(from);
  }

  inline RefuseJoinRequest& operator=(RefuseJoinRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseJoinRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RefuseJoinRequest* internal_default_instance() {
    return reinterpret_cast<const RefuseJoinRequest*>(
               &_RefuseJoinRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(RefuseJoinRequest* other);
  friend void swap(RefuseJoinRequest& a, RefuseJoinRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefuseJoinRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RefuseJoinRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefuseJoinRequest& from);
  void MergeFrom(const RefuseJoinRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefuseJoinRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string asker_username = 3;
  void clear_asker_username();
  static const int kAskerUsernameFieldNumber = 3;
  const ::std::string& asker_username() const;
  void set_asker_username(const ::std::string& value);
  #if LANG_CXX11
  void set_asker_username(::std::string&& value);
  #endif
  void set_asker_username(const char* value);
  void set_asker_username(const char* value, size_t size);
  ::std::string* mutable_asker_username();
  ::std::string* release_asker_username();
  void set_allocated_asker_username(::std::string* asker_username);

  // string actor_username = 4;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 4;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string refuse_reason = 5;
  void clear_refuse_reason();
  static const int kRefuseReasonFieldNumber = 5;
  const ::std::string& refuse_reason() const;
  void set_refuse_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_refuse_reason(::std::string&& value);
  #endif
  void set_refuse_reason(const char* value);
  void set_refuse_reason(const char* value, size_t size);
  ::std::string* mutable_refuse_reason();
  ::std::string* release_refuse_reason();
  void set_allocated_refuse_reason(::std::string* refuse_reason);

  // string msg_id = 6;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 6;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.RefuseJoinRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr asker_username_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr refuse_reason_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsRefuseJoinRequestImpl();
};
// -------------------------------------------------------------------

class RefuseJoinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.RefuseJoinResponse) */ {
 public:
  RefuseJoinResponse();
  virtual ~RefuseJoinResponse();

  RefuseJoinResponse(const RefuseJoinResponse& from);

  inline RefuseJoinResponse& operator=(const RefuseJoinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefuseJoinResponse(RefuseJoinResponse&& from) noexcept
    : RefuseJoinResponse() {
    *this = ::std::move(from);
  }

  inline RefuseJoinResponse& operator=(RefuseJoinResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefuseJoinResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RefuseJoinResponse* internal_default_instance() {
    return reinterpret_cast<const RefuseJoinResponse*>(
               &_RefuseJoinResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(RefuseJoinResponse* other);
  friend void swap(RefuseJoinResponse& a, RefuseJoinResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefuseJoinResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RefuseJoinResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefuseJoinResponse& from);
  void MergeFrom(const RefuseJoinResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefuseJoinResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.RefuseJoinResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsRefuseJoinResponseImpl();
};
// -------------------------------------------------------------------

class BeRefuseJoinSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.BeRefuseJoinSignal) */ {
 public:
  BeRefuseJoinSignal();
  virtual ~BeRefuseJoinSignal();

  BeRefuseJoinSignal(const BeRefuseJoinSignal& from);

  inline BeRefuseJoinSignal& operator=(const BeRefuseJoinSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeRefuseJoinSignal(BeRefuseJoinSignal&& from) noexcept
    : BeRefuseJoinSignal() {
    *this = ::std::move(from);
  }

  inline BeRefuseJoinSignal& operator=(BeRefuseJoinSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeRefuseJoinSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BeRefuseJoinSignal* internal_default_instance() {
    return reinterpret_cast<const BeRefuseJoinSignal*>(
               &_BeRefuseJoinSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(BeRefuseJoinSignal* other);
  friend void swap(BeRefuseJoinSignal& a, BeRefuseJoinSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeRefuseJoinSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  BeRefuseJoinSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeRefuseJoinSignal& from);
  void MergeFrom(const BeRefuseJoinSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeRefuseJoinSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string refuse_reason = 2;
  void clear_refuse_reason();
  static const int kRefuseReasonFieldNumber = 2;
  const ::std::string& refuse_reason() const;
  void set_refuse_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_refuse_reason(::std::string&& value);
  #endif
  void set_refuse_reason(const char* value);
  void set_refuse_reason(const char* value, size_t size);
  ::std::string* mutable_refuse_reason();
  ::std::string* release_refuse_reason();
  void set_allocated_refuse_reason(::std::string* refuse_reason);

  // .outer.group.Crew refuse_actor = 1;
  bool has_refuse_actor() const;
  void clear_refuse_actor();
  static const int kRefuseActorFieldNumber = 1;
  const ::outer::group::Crew& refuse_actor() const;
  ::outer::group::Crew* release_refuse_actor();
  ::outer::group::Crew* mutable_refuse_actor();
  void set_allocated_refuse_actor(::outer::group::Crew* refuse_actor);

  // @@protoc_insertion_point(class_scope:outer.group.BeRefuseJoinSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr refuse_reason_;
  ::outer::group::Crew* refuse_actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsBeRefuseJoinSignalImpl();
};
// -------------------------------------------------------------------

class SetSilentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetSilentRequest) */ {
 public:
  SetSilentRequest();
  virtual ~SetSilentRequest();

  SetSilentRequest(const SetSilentRequest& from);

  inline SetSilentRequest& operator=(const SetSilentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSilentRequest(SetSilentRequest&& from) noexcept
    : SetSilentRequest() {
    *this = ::std::move(from);
  }

  inline SetSilentRequest& operator=(SetSilentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSilentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetSilentRequest* internal_default_instance() {
    return reinterpret_cast<const SetSilentRequest*>(
               &_SetSilentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(SetSilentRequest* other);
  friend void swap(SetSilentRequest& a, SetSilentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSilentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSilentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSilentRequest& from);
  void MergeFrom(const SetSilentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSilentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string username = 3;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // bool is_silent = 4;
  void clear_is_silent();
  static const int kIsSilentFieldNumber = 4;
  bool is_silent() const;
  void set_is_silent(bool value);

  // .common.enumeration.EClientType from_client_type = 6;
  void clear_from_client_type();
  static const int kFromClientTypeFieldNumber = 6;
  ::common::enumeration::EClientType from_client_type() const;
  void set_from_client_type(::common::enumeration::EClientType value);

  // @@protoc_insertion_point(class_scope:outer.group.SetSilentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  bool is_silent_;
  int from_client_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetSilentRequestImpl();
};
// -------------------------------------------------------------------

class SetSilentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetSilentResponse) */ {
 public:
  SetSilentResponse();
  virtual ~SetSilentResponse();

  SetSilentResponse(const SetSilentResponse& from);

  inline SetSilentResponse& operator=(const SetSilentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSilentResponse(SetSilentResponse&& from) noexcept
    : SetSilentResponse() {
    *this = ::std::move(from);
  }

  inline SetSilentResponse& operator=(SetSilentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSilentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetSilentResponse* internal_default_instance() {
    return reinterpret_cast<const SetSilentResponse*>(
               &_SetSilentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(SetSilentResponse* other);
  friend void swap(SetSilentResponse& a, SetSilentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSilentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSilentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSilentResponse& from);
  void MergeFrom(const SetSilentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSilentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetSilentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetSilentResponseImpl();
};
// -------------------------------------------------------------------

class GetGroupTagListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupTagListRequest) */ {
 public:
  GetGroupTagListRequest();
  virtual ~GetGroupTagListRequest();

  GetGroupTagListRequest(const GetGroupTagListRequest& from);

  inline GetGroupTagListRequest& operator=(const GetGroupTagListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupTagListRequest(GetGroupTagListRequest&& from) noexcept
    : GetGroupTagListRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupTagListRequest& operator=(GetGroupTagListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupTagListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupTagListRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupTagListRequest*>(
               &_GetGroupTagListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(GetGroupTagListRequest* other);
  friend void swap(GetGroupTagListRequest& a, GetGroupTagListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupTagListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupTagListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupTagListRequest& from);
  void MergeFrom(const GetGroupTagListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupTagListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 1;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 1;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupTagListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupTagListRequestImpl();
};
// -------------------------------------------------------------------

class GetGroupTagListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupTagListResponse) */ {
 public:
  GetGroupTagListResponse();
  virtual ~GetGroupTagListResponse();

  GetGroupTagListResponse(const GetGroupTagListResponse& from);

  inline GetGroupTagListResponse& operator=(const GetGroupTagListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupTagListResponse(GetGroupTagListResponse&& from) noexcept
    : GetGroupTagListResponse() {
    *this = ::std::move(from);
  }

  inline GetGroupTagListResponse& operator=(GetGroupTagListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupTagListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupTagListResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupTagListResponse*>(
               &_GetGroupTagListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(GetGroupTagListResponse* other);
  friend void swap(GetGroupTagListResponse& a, GetGroupTagListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupTagListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupTagListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupTagListResponse& from);
  void MergeFrom(const GetGroupTagListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupTagListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .outer.group.GroupTag group_tag = 2;
  int group_tag_size() const;
  void clear_group_tag();
  static const int kGroupTagFieldNumber = 2;
  const ::outer::group::GroupTag& group_tag(int index) const;
  ::outer::group::GroupTag* mutable_group_tag(int index);
  ::outer::group::GroupTag* add_group_tag();
  ::google::protobuf::RepeatedPtrField< ::outer::group::GroupTag >*
      mutable_group_tag();
  const ::google::protobuf::RepeatedPtrField< ::outer::group::GroupTag >&
      group_tag() const;

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupTagListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::outer::group::GroupTag > group_tag_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupTagListResponseImpl();
};
// -------------------------------------------------------------------

class SetGroupTagRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupTagRequest) */ {
 public:
  SetGroupTagRequest();
  virtual ~SetGroupTagRequest();

  SetGroupTagRequest(const SetGroupTagRequest& from);

  inline SetGroupTagRequest& operator=(const SetGroupTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupTagRequest(SetGroupTagRequest&& from) noexcept
    : SetGroupTagRequest() {
    *this = ::std::move(from);
  }

  inline SetGroupTagRequest& operator=(SetGroupTagRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupTagRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupTagRequest* internal_default_instance() {
    return reinterpret_cast<const SetGroupTagRequest*>(
               &_SetGroupTagRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(SetGroupTagRequest* other);
  friend void swap(SetGroupTagRequest& a, SetGroupTagRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupTagRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupTagRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupTagRequest& from);
  void MergeFrom(const SetGroupTagRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupTagRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string actor_username = 2;
  void clear_actor_username();
  static const int kActorUsernameFieldNumber = 2;
  const ::std::string& actor_username() const;
  void set_actor_username(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_username(::std::string&& value);
  #endif
  void set_actor_username(const char* value);
  void set_actor_username(const char* value, size_t size);
  ::std::string* mutable_actor_username();
  ::std::string* release_actor_username();
  void set_allocated_actor_username(::std::string* actor_username);

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // uint64 group_tag_id = 4;
  void clear_group_tag_id();
  static const int kGroupTagIdFieldNumber = 4;
  ::google::protobuf::uint64 group_tag_id() const;
  void set_group_tag_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupTagRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr actor_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::google::protobuf::uint64 group_tag_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupTagRequestImpl();
};
// -------------------------------------------------------------------

class SetGroupTagResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupTagResponse) */ {
 public:
  SetGroupTagResponse();
  virtual ~SetGroupTagResponse();

  SetGroupTagResponse(const SetGroupTagResponse& from);

  inline SetGroupTagResponse& operator=(const SetGroupTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupTagResponse(SetGroupTagResponse&& from) noexcept
    : SetGroupTagResponse() {
    *this = ::std::move(from);
  }

  inline SetGroupTagResponse& operator=(SetGroupTagResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupTagResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupTagResponse* internal_default_instance() {
    return reinterpret_cast<const SetGroupTagResponse*>(
               &_SetGroupTagResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(SetGroupTagResponse* other);
  friend void swap(SetGroupTagResponse& a, SetGroupTagResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupTagResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupTagResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupTagResponse& from);
  void MergeFrom(const SetGroupTagResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupTagResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupTagResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupTagResponseImpl();
};
// -------------------------------------------------------------------

class GroupTagChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GroupTagChangedSignal) */ {
 public:
  GroupTagChangedSignal();
  virtual ~GroupTagChangedSignal();

  GroupTagChangedSignal(const GroupTagChangedSignal& from);

  inline GroupTagChangedSignal& operator=(const GroupTagChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupTagChangedSignal(GroupTagChangedSignal&& from) noexcept
    : GroupTagChangedSignal() {
    *this = ::std::move(from);
  }

  inline GroupTagChangedSignal& operator=(GroupTagChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupTagChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupTagChangedSignal* internal_default_instance() {
    return reinterpret_cast<const GroupTagChangedSignal*>(
               &_GroupTagChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(GroupTagChangedSignal* other);
  friend void swap(GroupTagChangedSignal& a, GroupTagChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupTagChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupTagChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupTagChangedSignal& from);
  void MergeFrom(const GroupTagChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupTagChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appkey = 3;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 3;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // .outer.group.GroupTag group_tag = 1;
  bool has_group_tag() const;
  void clear_group_tag();
  static const int kGroupTagFieldNumber = 1;
  const ::outer::group::GroupTag& group_tag() const;
  ::outer::group::GroupTag* release_group_tag();
  ::outer::group::GroupTag* mutable_group_tag();
  void set_allocated_group_tag(::outer::group::GroupTag* group_tag);

  // .outer.group.Crew actor = 2;
  bool has_actor() const;
  void clear_actor();
  static const int kActorFieldNumber = 2;
  const ::outer::group::Crew& actor() const;
  ::outer::group::Crew* release_actor();
  ::outer::group::Crew* mutable_actor();
  void set_allocated_actor(::outer::group::Crew* actor);

  // @@protoc_insertion_point(class_scope:outer.group.GroupTagChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::outer::group::GroupTag* group_tag_;
  ::outer::group::Crew* actor_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGroupTagChangedSignalImpl();
};
// -------------------------------------------------------------------

class SetGroupAssemblyPointRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupAssemblyPointRequest) */ {
 public:
  SetGroupAssemblyPointRequest();
  virtual ~SetGroupAssemblyPointRequest();

  SetGroupAssemblyPointRequest(const SetGroupAssemblyPointRequest& from);

  inline SetGroupAssemblyPointRequest& operator=(const SetGroupAssemblyPointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupAssemblyPointRequest(SetGroupAssemblyPointRequest&& from) noexcept
    : SetGroupAssemblyPointRequest() {
    *this = ::std::move(from);
  }

  inline SetGroupAssemblyPointRequest& operator=(SetGroupAssemblyPointRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupAssemblyPointRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupAssemblyPointRequest* internal_default_instance() {
    return reinterpret_cast<const SetGroupAssemblyPointRequest*>(
               &_SetGroupAssemblyPointRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(SetGroupAssemblyPointRequest* other);
  friend void swap(SetGroupAssemblyPointRequest& a, SetGroupAssemblyPointRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupAssemblyPointRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupAssemblyPointRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupAssemblyPointRequest& from);
  void MergeFrom(const SetGroupAssemblyPointRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupAssemblyPointRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string setter_username = 1;
  void clear_setter_username();
  static const int kSetterUsernameFieldNumber = 1;
  const ::std::string& setter_username() const;
  void set_setter_username(const ::std::string& value);
  #if LANG_CXX11
  void set_setter_username(::std::string&& value);
  #endif
  void set_setter_username(const char* value);
  void set_setter_username(const char* value, size_t size);
  ::std::string* mutable_setter_username();
  ::std::string* release_setter_username();
  void set_allocated_setter_username(::std::string* setter_username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string group_uri = 3;
  void clear_group_uri();
  static const int kGroupUriFieldNumber = 3;
  const ::std::string& group_uri() const;
  void set_group_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_group_uri(::std::string&& value);
  #endif
  void set_group_uri(const char* value);
  void set_group_uri(const char* value, size_t size);
  ::std::string* mutable_group_uri();
  ::std::string* release_group_uri();
  void set_allocated_group_uri(::std::string* group_uri);

  // string msg_id = 5;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.msg.LocationMessage assembly_point = 4;
  bool has_assembly_point() const;
  void clear_assembly_point();
  static const int kAssemblyPointFieldNumber = 4;
  const ::common::msg::LocationMessage& assembly_point() const;
  ::common::msg::LocationMessage* release_assembly_point();
  ::common::msg::LocationMessage* mutable_assembly_point();
  void set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupAssemblyPointRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr setter_username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr group_uri_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::common::msg::LocationMessage* assembly_point_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupAssemblyPointRequestImpl();
};
// -------------------------------------------------------------------

class SetGroupAssemblyPointResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.SetGroupAssemblyPointResponse) */ {
 public:
  SetGroupAssemblyPointResponse();
  virtual ~SetGroupAssemblyPointResponse();

  SetGroupAssemblyPointResponse(const SetGroupAssemblyPointResponse& from);

  inline SetGroupAssemblyPointResponse& operator=(const SetGroupAssemblyPointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGroupAssemblyPointResponse(SetGroupAssemblyPointResponse&& from) noexcept
    : SetGroupAssemblyPointResponse() {
    *this = ::std::move(from);
  }

  inline SetGroupAssemblyPointResponse& operator=(SetGroupAssemblyPointResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupAssemblyPointResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGroupAssemblyPointResponse* internal_default_instance() {
    return reinterpret_cast<const SetGroupAssemblyPointResponse*>(
               &_SetGroupAssemblyPointResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(SetGroupAssemblyPointResponse* other);
  friend void swap(SetGroupAssemblyPointResponse& a, SetGroupAssemblyPointResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGroupAssemblyPointResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGroupAssemblyPointResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGroupAssemblyPointResponse& from);
  void MergeFrom(const SetGroupAssemblyPointResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGroupAssemblyPointResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.SetGroupAssemblyPointResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsSetGroupAssemblyPointResponseImpl();
};
// -------------------------------------------------------------------

class AssemblyPointChangedSignal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.AssemblyPointChangedSignal) */ {
 public:
  AssemblyPointChangedSignal();
  virtual ~AssemblyPointChangedSignal();

  AssemblyPointChangedSignal(const AssemblyPointChangedSignal& from);

  inline AssemblyPointChangedSignal& operator=(const AssemblyPointChangedSignal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AssemblyPointChangedSignal(AssemblyPointChangedSignal&& from) noexcept
    : AssemblyPointChangedSignal() {
    *this = ::std::move(from);
  }

  inline AssemblyPointChangedSignal& operator=(AssemblyPointChangedSignal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AssemblyPointChangedSignal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AssemblyPointChangedSignal* internal_default_instance() {
    return reinterpret_cast<const AssemblyPointChangedSignal*>(
               &_AssemblyPointChangedSignal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(AssemblyPointChangedSignal* other);
  friend void swap(AssemblyPointChangedSignal& a, AssemblyPointChangedSignal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AssemblyPointChangedSignal* New() const PROTOBUF_FINAL { return New(NULL); }

  AssemblyPointChangedSignal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AssemblyPointChangedSignal& from);
  void MergeFrom(const AssemblyPointChangedSignal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AssemblyPointChangedSignal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common.msg.LocationMessage assembly_point = 1;
  bool has_assembly_point() const;
  void clear_assembly_point();
  static const int kAssemblyPointFieldNumber = 1;
  const ::common::msg::LocationMessage& assembly_point() const;
  ::common::msg::LocationMessage* release_assembly_point();
  ::common::msg::LocationMessage* mutable_assembly_point();
  void set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point);

  // .outer.group.CrewDetail setter = 2;
  bool has_setter() const;
  void clear_setter();
  static const int kSetterFieldNumber = 2;
  const ::outer::group::CrewDetail& setter() const;
  ::outer::group::CrewDetail* release_setter();
  ::outer::group::CrewDetail* mutable_setter();
  void set_allocated_setter(::outer::group::CrewDetail* setter);

  // @@protoc_insertion_point(class_scope:outer.group.AssemblyPointChangedSignal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common::msg::LocationMessage* assembly_point_;
  ::outer::group::CrewDetail* setter_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsAssemblyPointChangedSignalImpl();
};
// -------------------------------------------------------------------

class GetGroupAssemblyPointRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupAssemblyPointRequest) */ {
 public:
  GetGroupAssemblyPointRequest();
  virtual ~GetGroupAssemblyPointRequest();

  GetGroupAssemblyPointRequest(const GetGroupAssemblyPointRequest& from);

  inline GetGroupAssemblyPointRequest& operator=(const GetGroupAssemblyPointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupAssemblyPointRequest(GetGroupAssemblyPointRequest&& from) noexcept
    : GetGroupAssemblyPointRequest() {
    *this = ::std::move(from);
  }

  inline GetGroupAssemblyPointRequest& operator=(GetGroupAssemblyPointRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupAssemblyPointRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupAssemblyPointRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupAssemblyPointRequest*>(
               &_GetGroupAssemblyPointRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(GetGroupAssemblyPointRequest* other);
  friend void swap(GetGroupAssemblyPointRequest& a, GetGroupAssemblyPointRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupAssemblyPointRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupAssemblyPointRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupAssemblyPointRequest& from);
  void MergeFrom(const GetGroupAssemblyPointRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupAssemblyPointRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string appkey = 2;
  void clear_appkey();
  static const int kAppkeyFieldNumber = 2;
  const ::std::string& appkey() const;
  void set_appkey(const ::std::string& value);
  #if LANG_CXX11
  void set_appkey(::std::string&& value);
  #endif
  void set_appkey(const char* value);
  void set_appkey(const char* value, size_t size);
  ::std::string* mutable_appkey();
  ::std::string* release_appkey();
  void set_allocated_appkey(::std::string* appkey);

  // string group_uri = 3;
  void clear_group_uri();
  static const int kGroupUriFieldNumber = 3;
  const ::std::string& group_uri() const;
  void set_group_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_group_uri(::std::string&& value);
  #endif
  void set_group_uri(const char* value);
  void set_group_uri(const char* value, size_t size);
  ::std::string* mutable_group_uri();
  ::std::string* release_group_uri();
  void set_allocated_group_uri(::std::string* group_uri);

  // string msg_id = 4;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupAssemblyPointRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr appkey_;
  ::google::protobuf::internal::ArenaStringPtr group_uri_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupAssemblyPointRequestImpl();
};
// -------------------------------------------------------------------

class GetGroupAssemblyPointResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:outer.group.GetGroupAssemblyPointResponse) */ {
 public:
  GetGroupAssemblyPointResponse();
  virtual ~GetGroupAssemblyPointResponse();

  GetGroupAssemblyPointResponse(const GetGroupAssemblyPointResponse& from);

  inline GetGroupAssemblyPointResponse& operator=(const GetGroupAssemblyPointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetGroupAssemblyPointResponse(GetGroupAssemblyPointResponse&& from) noexcept
    : GetGroupAssemblyPointResponse() {
    *this = ::std::move(from);
  }

  inline GetGroupAssemblyPointResponse& operator=(GetGroupAssemblyPointResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupAssemblyPointResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetGroupAssemblyPointResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupAssemblyPointResponse*>(
               &_GetGroupAssemblyPointResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(GetGroupAssemblyPointResponse* other);
  friend void swap(GetGroupAssemblyPointResponse& a, GetGroupAssemblyPointResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetGroupAssemblyPointResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGroupAssemblyPointResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGroupAssemblyPointResponse& from);
  void MergeFrom(const GetGroupAssemblyPointResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGroupAssemblyPointResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  const ::std::string& msg_id() const;
  void set_msg_id(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_id(::std::string&& value);
  #endif
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  ::std::string* mutable_msg_id();
  ::std::string* release_msg_id();
  void set_allocated_msg_id(::std::string* msg_id);

  // .common.msg.LocationMessage assembly_point = 2;
  bool has_assembly_point() const;
  void clear_assembly_point();
  static const int kAssemblyPointFieldNumber = 2;
  const ::common::msg::LocationMessage& assembly_point() const;
  ::common::msg::LocationMessage* release_assembly_point();
  ::common::msg::LocationMessage* mutable_assembly_point();
  void set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point);

  // .common.errcode.EErrorCode ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::common::errcode::EErrorCode ret() const;
  void set_ret(::common::errcode::EErrorCode value);

  // @@protoc_insertion_point(class_scope:outer.group.GetGroupAssemblyPointResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_id_;
  ::common::msg::LocationMessage* assembly_point_;
  int ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_outer_2fgroup_2eproto::TableStruct;
  friend void ::protobuf_outer_2fgroup_2eproto::InitDefaultsGetGroupAssemblyPointResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GroupInfo

// string uri = 1;
inline void GroupInfo::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.uri)
  return uri_.GetNoArena();
}
inline void GroupInfo::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.uri)
}
#if LANG_CXX11
inline void GroupInfo::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupInfo.uri)
}
#endif
inline void GroupInfo::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupInfo.uri)
}
inline void GroupInfo::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupInfo.uri)
}
inline ::std::string* GroupInfo::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.uri)
}

// string appkey = 2;
inline void GroupInfo::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.appkey)
  return appkey_.GetNoArena();
}
inline void GroupInfo::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.appkey)
}
#if LANG_CXX11
inline void GroupInfo::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupInfo.appkey)
}
#endif
inline void GroupInfo::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupInfo.appkey)
}
inline void GroupInfo::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupInfo.appkey)
}
inline ::std::string* GroupInfo::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.appkey)
}

// string group_name = 3;
inline void GroupInfo::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::group_name() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.group_name)
  return group_name_.GetNoArena();
}
inline void GroupInfo::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.group_name)
}
#if LANG_CXX11
inline void GroupInfo::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupInfo.group_name)
}
#endif
inline void GroupInfo::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupInfo.group_name)
}
inline void GroupInfo::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupInfo.group_name)
}
inline ::std::string* GroupInfo::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_group_name() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.group_name)
}

// uint32 crew_count = 4;
inline void GroupInfo::clear_crew_count() {
  crew_count_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::crew_count() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.crew_count)
  return crew_count_;
}
inline void GroupInfo::set_crew_count(::google::protobuf::uint32 value) {
  
  crew_count_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.crew_count)
}

// uint64 created = 5;
inline void GroupInfo::clear_created() {
  created_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupInfo::created() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.created)
  return created_;
}
inline void GroupInfo::set_created(::google::protobuf::uint64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.created)
}

// .common.enumeration.EEnable enable = 6;
inline void GroupInfo::clear_enable() {
  enable_ = 0;
}
inline ::common::enumeration::EEnable GroupInfo::enable() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.enable)
  return static_cast< ::common::enumeration::EEnable >(enable_);
}
inline void GroupInfo::set_enable(::common::enumeration::EEnable value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.enable)
}

// string desc = 7;
inline void GroupInfo::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::desc() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.desc)
  return desc_.GetNoArena();
}
inline void GroupInfo::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.desc)
}
#if LANG_CXX11
inline void GroupInfo::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupInfo.desc)
}
#endif
inline void GroupInfo::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupInfo.desc)
}
inline void GroupInfo::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupInfo.desc)
}
inline ::std::string* GroupInfo::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_desc() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.desc)
}

// bool is_family_group = 8;
inline void GroupInfo::clear_is_family_group() {
  is_family_group_ = false;
}
inline bool GroupInfo::is_family_group() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.is_family_group)
  return is_family_group_;
}
inline void GroupInfo::set_is_family_group(bool value) {
  
  is_family_group_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.is_family_group)
}

// .common.enumeration.EGroupType group_type = 9;
inline void GroupInfo::clear_group_type() {
  group_type_ = 0;
}
inline ::common::enumeration::EGroupType GroupInfo::group_type() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.group_type)
  return static_cast< ::common::enumeration::EGroupType >(group_type_);
}
inline void GroupInfo::set_group_type(::common::enumeration::EGroupType value) {
  
  group_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupInfo.group_type)
}

// .outer.group.GroupTag group_tag = 10;
inline bool GroupInfo::has_group_tag() const {
  return this != internal_default_instance() && group_tag_ != NULL;
}
inline void GroupInfo::clear_group_tag() {
  if (GetArenaNoVirtual() == NULL && group_tag_ != NULL) {
    delete group_tag_;
  }
  group_tag_ = NULL;
}
inline const ::outer::group::GroupTag& GroupInfo::group_tag() const {
  const ::outer::group::GroupTag* p = group_tag_;
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.group_tag)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupTag*>(
      &::outer::group::_GroupTag_default_instance_);
}
inline ::outer::group::GroupTag* GroupInfo::release_group_tag() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.group_tag)
  
  ::outer::group::GroupTag* temp = group_tag_;
  group_tag_ = NULL;
  return temp;
}
inline ::outer::group::GroupTag* GroupInfo::mutable_group_tag() {
  
  if (group_tag_ == NULL) {
    group_tag_ = new ::outer::group::GroupTag;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.group_tag)
  return group_tag_;
}
inline void GroupInfo::set_allocated_group_tag(::outer::group::GroupTag* group_tag) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_tag_;
  }
  if (group_tag) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_tag = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_tag, submessage_arena);
    }
    
  } else {
    
  }
  group_tag_ = group_tag;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.group_tag)
}

// .common.msg.LocationMessage assembly_point = 11;
inline bool GroupInfo::has_assembly_point() const {
  return this != internal_default_instance() && assembly_point_ != NULL;
}
inline const ::common::msg::LocationMessage& GroupInfo::assembly_point() const {
  const ::common::msg::LocationMessage* p = assembly_point_;
  // @@protoc_insertion_point(field_get:outer.group.GroupInfo.assembly_point)
  return p != NULL ? *p : *reinterpret_cast<const ::common::msg::LocationMessage*>(
      &::common::msg::_LocationMessage_default_instance_);
}
inline ::common::msg::LocationMessage* GroupInfo::release_assembly_point() {
  // @@protoc_insertion_point(field_release:outer.group.GroupInfo.assembly_point)
  
  ::common::msg::LocationMessage* temp = assembly_point_;
  assembly_point_ = NULL;
  return temp;
}
inline ::common::msg::LocationMessage* GroupInfo::mutable_assembly_point() {
  
  if (assembly_point_ == NULL) {
    assembly_point_ = new ::common::msg::LocationMessage;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupInfo.assembly_point)
  return assembly_point_;
}
inline void GroupInfo::set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(assembly_point_);
  }
  if (assembly_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assembly_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assembly_point, submessage_arena);
    }
    
  } else {
    
  }
  assembly_point_ = assembly_point;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupInfo.assembly_point)
}

// -------------------------------------------------------------------

// GroupTag

// uint64 tag_id = 1;
inline void GroupTag::clear_tag_id() {
  tag_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupTag::tag_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupTag.tag_id)
  return tag_id_;
}
inline void GroupTag::set_tag_id(::google::protobuf::uint64 value) {
  
  tag_id_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupTag.tag_id)
}

// string tag_name = 2;
inline void GroupTag::clear_tag_name() {
  tag_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupTag::tag_name() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupTag.tag_name)
  return tag_name_.GetNoArena();
}
inline void GroupTag::set_tag_name(const ::std::string& value) {
  
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupTag.tag_name)
}
#if LANG_CXX11
inline void GroupTag::set_tag_name(::std::string&& value) {
  
  tag_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupTag.tag_name)
}
#endif
inline void GroupTag::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupTag.tag_name)
}
inline void GroupTag::set_tag_name(const char* value, size_t size) {
  
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupTag.tag_name)
}
inline ::std::string* GroupTag::mutable_tag_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTag.tag_name)
  return tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTag::release_tag_name() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTag.tag_name)
  
  return tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupTag::set_allocated_tag_name(::std::string* tag_name) {
  if (tag_name != NULL) {
    
  } else {
    
  }
  tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_name);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTag.tag_name)
}

// string tag_img = 3;
inline void GroupTag::clear_tag_img() {
  tag_img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupTag::tag_img() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupTag.tag_img)
  return tag_img_.GetNoArena();
}
inline void GroupTag::set_tag_img(const ::std::string& value) {
  
  tag_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupTag.tag_img)
}
#if LANG_CXX11
inline void GroupTag::set_tag_img(::std::string&& value) {
  
  tag_img_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupTag.tag_img)
}
#endif
inline void GroupTag::set_tag_img(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupTag.tag_img)
}
inline void GroupTag::set_tag_img(const char* value, size_t size) {
  
  tag_img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupTag.tag_img)
}
inline ::std::string* GroupTag::mutable_tag_img() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTag.tag_img)
  return tag_img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTag::release_tag_img() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTag.tag_img)
  
  return tag_img_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupTag::set_allocated_tag_img(::std::string* tag_img) {
  if (tag_img != NULL) {
    
  } else {
    
  }
  tag_img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_img);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTag.tag_img)
}

// string tag_desc = 4;
inline void GroupTag::clear_tag_desc() {
  tag_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupTag::tag_desc() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupTag.tag_desc)
  return tag_desc_.GetNoArena();
}
inline void GroupTag::set_tag_desc(const ::std::string& value) {
  
  tag_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupTag.tag_desc)
}
#if LANG_CXX11
inline void GroupTag::set_tag_desc(::std::string&& value) {
  
  tag_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupTag.tag_desc)
}
#endif
inline void GroupTag::set_tag_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupTag.tag_desc)
}
inline void GroupTag::set_tag_desc(const char* value, size_t size) {
  
  tag_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupTag.tag_desc)
}
inline ::std::string* GroupTag::mutable_tag_desc() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTag.tag_desc)
  return tag_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTag::release_tag_desc() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTag.tag_desc)
  
  return tag_desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupTag::set_allocated_tag_desc(::std::string* tag_desc) {
  if (tag_desc != NULL) {
    
  } else {
    
  }
  tag_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_desc);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTag.tag_desc)
}

// -------------------------------------------------------------------

// Crew

// string username = 1;
inline void Crew::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Crew::username() const {
  // @@protoc_insertion_point(field_get:outer.group.Crew.username)
  return username_.GetNoArena();
}
inline void Crew::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.Crew.username)
}
#if LANG_CXX11
inline void Crew::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.Crew.username)
}
#endif
inline void Crew::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.Crew.username)
}
inline void Crew::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.Crew.username)
}
inline ::std::string* Crew::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.Crew.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Crew::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.Crew.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Crew::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.Crew.username)
}

// string appkey = 2;
inline void Crew::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Crew::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.Crew.appkey)
  return appkey_.GetNoArena();
}
inline void Crew::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.Crew.appkey)
}
#if LANG_CXX11
inline void Crew::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.Crew.appkey)
}
#endif
inline void Crew::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.Crew.appkey)
}
inline void Crew::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.Crew.appkey)
}
inline ::std::string* Crew::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.Crew.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Crew::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.Crew.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Crew::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.Crew.appkey)
}

// string nick = 3;
inline void Crew::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Crew::nick() const {
  // @@protoc_insertion_point(field_get:outer.group.Crew.nick)
  return nick_.GetNoArena();
}
inline void Crew::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.Crew.nick)
}
#if LANG_CXX11
inline void Crew::set_nick(::std::string&& value) {
  
  nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.Crew.nick)
}
#endif
inline void Crew::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.Crew.nick)
}
inline void Crew::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.Crew.nick)
}
inline ::std::string* Crew::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.Crew.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Crew::release_nick() {
  // @@protoc_insertion_point(field_release:outer.group.Crew.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Crew::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:outer.group.Crew.nick)
}

// -------------------------------------------------------------------

// CrewDetail

// string username = 1;
inline void CrewDetail::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CrewDetail::username() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.username)
  return username_.GetNoArena();
}
inline void CrewDetail::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.username)
}
#if LANG_CXX11
inline void CrewDetail::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CrewDetail.username)
}
#endif
inline void CrewDetail::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CrewDetail.username)
}
inline void CrewDetail::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CrewDetail.username)
}
inline ::std::string* CrewDetail::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CrewDetail.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrewDetail::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.CrewDetail.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrewDetail::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewDetail.username)
}

// string appkey = 2;
inline void CrewDetail::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CrewDetail::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.appkey)
  return appkey_.GetNoArena();
}
inline void CrewDetail::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.appkey)
}
#if LANG_CXX11
inline void CrewDetail::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CrewDetail.appkey)
}
#endif
inline void CrewDetail::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CrewDetail.appkey)
}
inline void CrewDetail::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CrewDetail.appkey)
}
inline ::std::string* CrewDetail::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CrewDetail.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrewDetail::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.CrewDetail.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrewDetail::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewDetail.appkey)
}

// string nick = 3;
inline void CrewDetail::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CrewDetail::nick() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.nick)
  return nick_.GetNoArena();
}
inline void CrewDetail::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.nick)
}
#if LANG_CXX11
inline void CrewDetail::set_nick(::std::string&& value) {
  
  nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CrewDetail.nick)
}
#endif
inline void CrewDetail::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CrewDetail.nick)
}
inline void CrewDetail::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CrewDetail.nick)
}
inline ::std::string* CrewDetail::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CrewDetail.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrewDetail::release_nick() {
  // @@protoc_insertion_point(field_release:outer.group.CrewDetail.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrewDetail::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewDetail.nick)
}

// .outer.group.ERole role = 4;
inline void CrewDetail::clear_role() {
  role_ = 0;
}
inline ::outer::group::ERole CrewDetail::role() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.role)
  return static_cast< ::outer::group::ERole >(role_);
}
inline void CrewDetail::set_role(::outer::group::ERole value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.role)
}

// .common.enumeration.ESilent silent = 5;
inline void CrewDetail::clear_silent() {
  silent_ = 0;
}
inline ::common::enumeration::ESilent CrewDetail::silent() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.silent)
  return static_cast< ::common::enumeration::ESilent >(silent_);
}
inline void CrewDetail::set_silent(::common::enumeration::ESilent value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.silent)
}

// uint64 created = 6;
inline void CrewDetail::clear_created() {
  created_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CrewDetail::created() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.created)
  return created_;
}
inline void CrewDetail::set_created(::google::protobuf::uint64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.created)
}

// uint64 modified = 7;
inline void CrewDetail::clear_modified() {
  modified_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CrewDetail::modified() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.modified)
  return modified_;
}
inline void CrewDetail::set_modified(::google::protobuf::uint64 value) {
  
  modified_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.modified)
}

// .common.enumeration.EEnable enable = 8;
inline void CrewDetail::clear_enable() {
  enable_ = 0;
}
inline ::common::enumeration::EEnable CrewDetail::enable() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.enable)
  return static_cast< ::common::enumeration::EEnable >(enable_);
}
inline void CrewDetail::set_enable(::common::enumeration::EEnable value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.enable)
}

// string group_uri = 9;
inline void CrewDetail::clear_group_uri() {
  group_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CrewDetail::group_uri() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewDetail.group_uri)
  return group_uri_.GetNoArena();
}
inline void CrewDetail::set_group_uri(const ::std::string& value) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CrewDetail.group_uri)
}
#if LANG_CXX11
inline void CrewDetail::set_group_uri(::std::string&& value) {
  
  group_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CrewDetail.group_uri)
}
#endif
inline void CrewDetail::set_group_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CrewDetail.group_uri)
}
inline void CrewDetail::set_group_uri(const char* value, size_t size) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CrewDetail.group_uri)
}
inline ::std::string* CrewDetail::mutable_group_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CrewDetail.group_uri)
  return group_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CrewDetail::release_group_uri() {
  // @@protoc_insertion_point(field_release:outer.group.CrewDetail.group_uri)
  
  return group_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CrewDetail::set_allocated_group_uri(::std::string* group_uri) {
  if (group_uri != NULL) {
    
  } else {
    
  }
  group_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewDetail.group_uri)
}

// -------------------------------------------------------------------

// CrewInGroup

// .outer.group.GroupInfo group_info = 1;
inline bool CrewInGroup::has_group_info() const {
  return this != internal_default_instance() && group_info_ != NULL;
}
inline void CrewInGroup::clear_group_info() {
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) {
    delete group_info_;
  }
  group_info_ = NULL;
}
inline const ::outer::group::GroupInfo& CrewInGroup::group_info() const {
  const ::outer::group::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.group_info)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupInfo*>(
      &::outer::group::_GroupInfo_default_instance_);
}
inline ::outer::group::GroupInfo* CrewInGroup::release_group_info() {
  // @@protoc_insertion_point(field_release:outer.group.CrewInGroup.group_info)
  
  ::outer::group::GroupInfo* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
inline ::outer::group::GroupInfo* CrewInGroup::mutable_group_info() {
  
  if (group_info_ == NULL) {
    group_info_ = new ::outer::group::GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.CrewInGroup.group_info)
  return group_info_;
}
inline void CrewInGroup::set_allocated_group_info(::outer::group::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewInGroup.group_info)
}

// .outer.group.Crew crew = 2;
inline bool CrewInGroup::has_crew() const {
  return this != internal_default_instance() && crew_ != NULL;
}
inline void CrewInGroup::clear_crew() {
  if (GetArenaNoVirtual() == NULL && crew_ != NULL) {
    delete crew_;
  }
  crew_ = NULL;
}
inline const ::outer::group::Crew& CrewInGroup::crew() const {
  const ::outer::group::Crew* p = crew_;
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.crew)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* CrewInGroup::release_crew() {
  // @@protoc_insertion_point(field_release:outer.group.CrewInGroup.crew)
  
  ::outer::group::Crew* temp = crew_;
  crew_ = NULL;
  return temp;
}
inline ::outer::group::Crew* CrewInGroup::mutable_crew() {
  
  if (crew_ == NULL) {
    crew_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.CrewInGroup.crew)
  return crew_;
}
inline void CrewInGroup::set_allocated_crew(::outer::group::Crew* crew) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete crew_;
  }
  if (crew) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      crew = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, crew, submessage_arena);
    }
    
  } else {
    
  }
  crew_ = crew;
  // @@protoc_insertion_point(field_set_allocated:outer.group.CrewInGroup.crew)
}

// .outer.group.ERole role = 3;
inline void CrewInGroup::clear_role() {
  role_ = 0;
}
inline ::outer::group::ERole CrewInGroup::role() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.role)
  return static_cast< ::outer::group::ERole >(role_);
}
inline void CrewInGroup::set_role(::outer::group::ERole value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewInGroup.role)
}

// .common.enumeration.ESilent silent = 4;
inline void CrewInGroup::clear_silent() {
  silent_ = 0;
}
inline ::common::enumeration::ESilent CrewInGroup::silent() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.silent)
  return static_cast< ::common::enumeration::ESilent >(silent_);
}
inline void CrewInGroup::set_silent(::common::enumeration::ESilent value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewInGroup.silent)
}

// .common.enumeration.EEnable enable = 5;
inline void CrewInGroup::clear_enable() {
  enable_ = 0;
}
inline ::common::enumeration::EEnable CrewInGroup::enable() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.enable)
  return static_cast< ::common::enumeration::EEnable >(enable_);
}
inline void CrewInGroup::set_enable(::common::enumeration::EEnable value) {
  
  enable_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewInGroup.enable)
}

// uint64 modified = 6;
inline void CrewInGroup::clear_modified() {
  modified_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CrewInGroup::modified() const {
  // @@protoc_insertion_point(field_get:outer.group.CrewInGroup.modified)
  return modified_;
}
inline void CrewInGroup::set_modified(::google::protobuf::uint64 value) {
  
  modified_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CrewInGroup.modified)
}

// -------------------------------------------------------------------

// GroupSignal

// .outer.group.ESignalType signal_type = 1;
inline void GroupSignal::clear_signal_type() {
  signal_type_ = 0;
}
inline ::outer::group::ESignalType GroupSignal::signal_type() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupSignal.signal_type)
  return static_cast< ::outer::group::ESignalType >(signal_type_);
}
inline void GroupSignal::set_signal_type(::outer::group::ESignalType value) {
  
  signal_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupSignal.signal_type)
}

// bytes data = 2;
inline void GroupSignal::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupSignal::data() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupSignal.data)
  return data_.GetNoArena();
}
inline void GroupSignal::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupSignal.data)
}
#if LANG_CXX11
inline void GroupSignal::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupSignal.data)
}
#endif
inline void GroupSignal::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupSignal.data)
}
inline void GroupSignal::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupSignal.data)
}
inline ::std::string* GroupSignal::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupSignal.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupSignal::release_data() {
  // @@protoc_insertion_point(field_release:outer.group.GroupSignal.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupSignal::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupSignal.data)
}

// .outer.group.GroupInfo group_info = 3;
inline bool GroupSignal::has_group_info() const {
  return this != internal_default_instance() && group_info_ != NULL;
}
inline void GroupSignal::clear_group_info() {
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) {
    delete group_info_;
  }
  group_info_ = NULL;
}
inline const ::outer::group::GroupInfo& GroupSignal::group_info() const {
  const ::outer::group::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:outer.group.GroupSignal.group_info)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupInfo*>(
      &::outer::group::_GroupInfo_default_instance_);
}
inline ::outer::group::GroupInfo* GroupSignal::release_group_info() {
  // @@protoc_insertion_point(field_release:outer.group.GroupSignal.group_info)
  
  ::outer::group::GroupInfo* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
inline ::outer::group::GroupInfo* GroupSignal::mutable_group_info() {
  
  if (group_info_ == NULL) {
    group_info_ = new ::outer::group::GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupSignal.group_info)
  return group_info_;
}
inline void GroupSignal::set_allocated_group_info(::outer::group::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupSignal.group_info)
}

// uint64 guid = 4;
inline void GroupSignal::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupSignal::guid() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupSignal.guid)
  return guid_;
}
inline void GroupSignal::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupSignal.guid)
}

// repeated string receiver = 5;
inline int GroupSignal::receiver_size() const {
  return receiver_.size();
}
inline void GroupSignal::clear_receiver() {
  receiver_.Clear();
}
inline const ::std::string& GroupSignal::receiver(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.GroupSignal.receiver)
  return receiver_.Get(index);
}
inline ::std::string* GroupSignal::mutable_receiver(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.GroupSignal.receiver)
  return receiver_.Mutable(index);
}
inline void GroupSignal::set_receiver(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.GroupSignal.receiver)
  receiver_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GroupSignal::set_receiver(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.GroupSignal.receiver)
  receiver_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GroupSignal::set_receiver(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  receiver_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.GroupSignal.receiver)
}
inline void GroupSignal::set_receiver(int index, const char* value, size_t size) {
  receiver_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupSignal.receiver)
}
inline ::std::string* GroupSignal::add_receiver() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.GroupSignal.receiver)
  return receiver_.Add();
}
inline void GroupSignal::add_receiver(const ::std::string& value) {
  receiver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.GroupSignal.receiver)
}
#if LANG_CXX11
inline void GroupSignal::add_receiver(::std::string&& value) {
  receiver_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.GroupSignal.receiver)
}
#endif
inline void GroupSignal::add_receiver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  receiver_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.GroupSignal.receiver)
}
inline void GroupSignal::add_receiver(const char* value, size_t size) {
  receiver_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.GroupSignal.receiver)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GroupSignal::receiver() const {
  // @@protoc_insertion_point(field_list:outer.group.GroupSignal.receiver)
  return receiver_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GroupSignal::mutable_receiver() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.GroupSignal.receiver)
  return &receiver_;
}

// -------------------------------------------------------------------

// GroupMessageRequest

// string from_username = 1;
inline void GroupMessageRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.from_username)
  return from_username_.GetNoArena();
}
inline void GroupMessageRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.from_username)
}
#if LANG_CXX11
inline void GroupMessageRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageRequest.from_username)
}
#endif
inline void GroupMessageRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageRequest.from_username)
}
inline void GroupMessageRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageRequest.from_username)
}
inline ::std::string* GroupMessageRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageRequest.from_username)
}

// string appkey = 2;
inline void GroupMessageRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GroupMessageRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.appkey)
}
#if LANG_CXX11
inline void GroupMessageRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageRequest.appkey)
}
#endif
inline void GroupMessageRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageRequest.appkey)
}
inline void GroupMessageRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageRequest.appkey)
}
inline ::std::string* GroupMessageRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageRequest.appkey)
}

// string uri = 3;
inline void GroupMessageRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.uri)
  return uri_.GetNoArena();
}
inline void GroupMessageRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.uri)
}
#if LANG_CXX11
inline void GroupMessageRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageRequest.uri)
}
#endif
inline void GroupMessageRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageRequest.uri)
}
inline void GroupMessageRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageRequest.uri)
}
inline ::std::string* GroupMessageRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageRequest.uri)
}

// .common.msg.EMsgContentType msg_content_type = 4;
inline void GroupMessageRequest::clear_msg_content_type() {
  msg_content_type_ = 0;
}
inline ::common::msg::EMsgContentType GroupMessageRequest::msg_content_type() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.msg_content_type)
  return static_cast< ::common::msg::EMsgContentType >(msg_content_type_);
}
inline void GroupMessageRequest::set_msg_content_type(::common::msg::EMsgContentType value) {
  
  msg_content_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.msg_content_type)
}

// bytes data = 5;
inline void GroupMessageRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRequest::data() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.data)
  return data_.GetNoArena();
}
inline void GroupMessageRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.data)
}
#if LANG_CXX11
inline void GroupMessageRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageRequest.data)
}
#endif
inline void GroupMessageRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageRequest.data)
}
inline void GroupMessageRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageRequest.data)
}
inline ::std::string* GroupMessageRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRequest::release_data() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageRequest.data)
}

// string msg_id = 6;
inline void GroupMessageRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void GroupMessageRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.msg_id)
}
#if LANG_CXX11
inline void GroupMessageRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageRequest.msg_id)
}
#endif
inline void GroupMessageRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageRequest.msg_id)
}
inline void GroupMessageRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageRequest.msg_id)
}
inline ::std::string* GroupMessageRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageRequest.msg_id)
}

// bool is_jimao = 7;
inline void GroupMessageRequest::clear_is_jimao() {
  is_jimao_ = false;
}
inline bool GroupMessageRequest::is_jimao() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.is_jimao)
  return is_jimao_;
}
inline void GroupMessageRequest::set_is_jimao(bool value) {
  
  is_jimao_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.is_jimao)
}

// .common.enumeration.EClientType from_client_type = 8;
inline void GroupMessageRequest::clear_from_client_type() {
  from_client_type_ = 0;
}
inline ::common::enumeration::EClientType GroupMessageRequest::from_client_type() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageRequest.from_client_type)
  return static_cast< ::common::enumeration::EClientType >(from_client_type_);
}
inline void GroupMessageRequest::set_from_client_type(::common::enumeration::EClientType value) {
  
  from_client_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageRequest.from_client_type)
}

// -------------------------------------------------------------------

// GroupMessageResponse

// .common.errcode.EErrorCode ret = 1;
inline void GroupMessageResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GroupMessageResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GroupMessageResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageResponse.ret)
}

// uint64 guid = 2;
inline void GroupMessageResponse::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GroupMessageResponse::guid() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageResponse.guid)
  return guid_;
}
inline void GroupMessageResponse::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageResponse.guid)
}

// string msg_id = 3;
inline void GroupMessageResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void GroupMessageResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageResponse.msg_id)
}
#if LANG_CXX11
inline void GroupMessageResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageResponse.msg_id)
}
#endif
inline void GroupMessageResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageResponse.msg_id)
}
inline void GroupMessageResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageResponse.msg_id)
}
inline ::std::string* GroupMessageResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageResponse.msg_id)
}

// string jimao_left_num = 4;
inline void GroupMessageResponse::clear_jimao_left_num() {
  jimao_left_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupMessageResponse::jimao_left_num() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupMessageResponse.jimao_left_num)
  return jimao_left_num_.GetNoArena();
}
inline void GroupMessageResponse::set_jimao_left_num(const ::std::string& value) {
  
  jimao_left_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupMessageResponse.jimao_left_num)
}
#if LANG_CXX11
inline void GroupMessageResponse::set_jimao_left_num(::std::string&& value) {
  
  jimao_left_num_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupMessageResponse.jimao_left_num)
}
#endif
inline void GroupMessageResponse::set_jimao_left_num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jimao_left_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupMessageResponse.jimao_left_num)
}
inline void GroupMessageResponse::set_jimao_left_num(const char* value, size_t size) {
  
  jimao_left_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupMessageResponse.jimao_left_num)
}
inline ::std::string* GroupMessageResponse::mutable_jimao_left_num() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupMessageResponse.jimao_left_num)
  return jimao_left_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupMessageResponse::release_jimao_left_num() {
  // @@protoc_insertion_point(field_release:outer.group.GroupMessageResponse.jimao_left_num)
  
  return jimao_left_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupMessageResponse::set_allocated_jimao_left_num(::std::string* jimao_left_num) {
  if (jimao_left_num != NULL) {
    
  } else {
    
  }
  jimao_left_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jimao_left_num);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupMessageResponse.jimao_left_num)
}

// -------------------------------------------------------------------

// CreateGroupRequest

// string group_name = 1;
inline void CreateGroupRequest::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::group_name() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.group_name)
  return group_name_.GetNoArena();
}
inline void CreateGroupRequest::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.group_name)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.group_name)
}
#endif
inline void CreateGroupRequest::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.group_name)
}
inline void CreateGroupRequest::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.group_name)
}
inline ::std::string* CreateGroupRequest::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_group_name() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.group_name)
}

// string appkey = 2;
inline void CreateGroupRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.appkey)
  return appkey_.GetNoArena();
}
inline void CreateGroupRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.appkey)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.appkey)
}
#endif
inline void CreateGroupRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.appkey)
}
inline void CreateGroupRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.appkey)
}
inline ::std::string* CreateGroupRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.appkey)
}

// string owner_username = 3;
inline void CreateGroupRequest::clear_owner_username() {
  owner_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::owner_username() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.owner_username)
  return owner_username_.GetNoArena();
}
inline void CreateGroupRequest::set_owner_username(const ::std::string& value) {
  
  owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.owner_username)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_owner_username(::std::string&& value) {
  
  owner_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.owner_username)
}
#endif
inline void CreateGroupRequest::set_owner_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.owner_username)
}
inline void CreateGroupRequest::set_owner_username(const char* value, size_t size) {
  
  owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.owner_username)
}
inline ::std::string* CreateGroupRequest::mutable_owner_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.owner_username)
  return owner_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_owner_username() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.owner_username)
  
  return owner_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_owner_username(::std::string* owner_username) {
  if (owner_username != NULL) {
    
  } else {
    
  }
  owner_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.owner_username)
}

// repeated string member_username = 4;
inline int CreateGroupRequest::member_username_size() const {
  return member_username_.size();
}
inline void CreateGroupRequest::clear_member_username() {
  member_username_.Clear();
}
inline const ::std::string& CreateGroupRequest::member_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.member_username)
  return member_username_.Get(index);
}
inline ::std::string* CreateGroupRequest::mutable_member_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.member_username)
  return member_username_.Mutable(index);
}
inline void CreateGroupRequest::set_member_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.member_username)
  member_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CreateGroupRequest::set_member_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.member_username)
  member_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CreateGroupRequest::set_member_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  member_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.member_username)
}
inline void CreateGroupRequest::set_member_username(int index, const char* value, size_t size) {
  member_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.member_username)
}
inline ::std::string* CreateGroupRequest::add_member_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.CreateGroupRequest.member_username)
  return member_username_.Add();
}
inline void CreateGroupRequest::add_member_username(const ::std::string& value) {
  member_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.CreateGroupRequest.member_username)
}
#if LANG_CXX11
inline void CreateGroupRequest::add_member_username(::std::string&& value) {
  member_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.CreateGroupRequest.member_username)
}
#endif
inline void CreateGroupRequest::add_member_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  member_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.CreateGroupRequest.member_username)
}
inline void CreateGroupRequest::add_member_username(const char* value, size_t size) {
  member_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.CreateGroupRequest.member_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateGroupRequest::member_username() const {
  // @@protoc_insertion_point(field_list:outer.group.CreateGroupRequest.member_username)
  return member_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateGroupRequest::mutable_member_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.CreateGroupRequest.member_username)
  return &member_username_;
}

// repeated string invitee_username = 5;
inline int CreateGroupRequest::invitee_username_size() const {
  return invitee_username_.size();
}
inline void CreateGroupRequest::clear_invitee_username() {
  invitee_username_.Clear();
}
inline const ::std::string& CreateGroupRequest::invitee_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.invitee_username)
  return invitee_username_.Get(index);
}
inline ::std::string* CreateGroupRequest::mutable_invitee_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.invitee_username)
  return invitee_username_.Mutable(index);
}
inline void CreateGroupRequest::set_invitee_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.invitee_username)
  invitee_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CreateGroupRequest::set_invitee_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.invitee_username)
  invitee_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CreateGroupRequest::set_invitee_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invitee_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.invitee_username)
}
inline void CreateGroupRequest::set_invitee_username(int index, const char* value, size_t size) {
  invitee_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.invitee_username)
}
inline ::std::string* CreateGroupRequest::add_invitee_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.CreateGroupRequest.invitee_username)
  return invitee_username_.Add();
}
inline void CreateGroupRequest::add_invitee_username(const ::std::string& value) {
  invitee_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.CreateGroupRequest.invitee_username)
}
#if LANG_CXX11
inline void CreateGroupRequest::add_invitee_username(::std::string&& value) {
  invitee_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.CreateGroupRequest.invitee_username)
}
#endif
inline void CreateGroupRequest::add_invitee_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invitee_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.CreateGroupRequest.invitee_username)
}
inline void CreateGroupRequest::add_invitee_username(const char* value, size_t size) {
  invitee_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.CreateGroupRequest.invitee_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateGroupRequest::invitee_username() const {
  // @@protoc_insertion_point(field_list:outer.group.CreateGroupRequest.invitee_username)
  return invitee_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateGroupRequest::mutable_invitee_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.CreateGroupRequest.invitee_username)
  return &invitee_username_;
}

// string invite_reason = 6;
inline void CreateGroupRequest::clear_invite_reason() {
  invite_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::invite_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.invite_reason)
  return invite_reason_.GetNoArena();
}
inline void CreateGroupRequest::set_invite_reason(const ::std::string& value) {
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.invite_reason)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_invite_reason(::std::string&& value) {
  
  invite_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.invite_reason)
}
#endif
inline void CreateGroupRequest::set_invite_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.invite_reason)
}
inline void CreateGroupRequest::set_invite_reason(const char* value, size_t size) {
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.invite_reason)
}
inline ::std::string* CreateGroupRequest::mutable_invite_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.invite_reason)
  return invite_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_invite_reason() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.invite_reason)
  
  return invite_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_invite_reason(::std::string* invite_reason) {
  if (invite_reason != NULL) {
    
  } else {
    
  }
  invite_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.invite_reason)
}

// string desc = 7;
inline void CreateGroupRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::desc() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.desc)
  return desc_.GetNoArena();
}
inline void CreateGroupRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.desc)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.desc)
}
#endif
inline void CreateGroupRequest::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.desc)
}
inline void CreateGroupRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.desc)
}
inline ::std::string* CreateGroupRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_desc() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.desc)
}

// string msg_id = 8;
inline void CreateGroupRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void CreateGroupRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.msg_id)
}
#if LANG_CXX11
inline void CreateGroupRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupRequest.msg_id)
}
#endif
inline void CreateGroupRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupRequest.msg_id)
}
inline void CreateGroupRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupRequest.msg_id)
}
inline ::std::string* CreateGroupRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupRequest.msg_id)
}

// bool is_family_group = 9;
inline void CreateGroupRequest::clear_is_family_group() {
  is_family_group_ = false;
}
inline bool CreateGroupRequest::is_family_group() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.is_family_group)
  return is_family_group_;
}
inline void CreateGroupRequest::set_is_family_group(bool value) {
  
  is_family_group_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.is_family_group)
}

// .common.enumeration.EGroupType group_type = 10;
inline void CreateGroupRequest::clear_group_type() {
  group_type_ = 0;
}
inline ::common::enumeration::EGroupType CreateGroupRequest::group_type() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.group_type)
  return static_cast< ::common::enumeration::EGroupType >(group_type_);
}
inline void CreateGroupRequest::set_group_type(::common::enumeration::EGroupType value) {
  
  group_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.group_type)
}

// uint64 tag_id = 11;
inline void CreateGroupRequest::clear_tag_id() {
  tag_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateGroupRequest::tag_id() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupRequest.tag_id)
  return tag_id_;
}
inline void CreateGroupRequest::set_tag_id(::google::protobuf::uint64 value) {
  
  tag_id_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupRequest.tag_id)
}

// -------------------------------------------------------------------

// CreateGroupResponse

// .common.errcode.EErrorCode ret = 1;
inline void CreateGroupResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode CreateGroupResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void CreateGroupResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupResponse.ret)
}

// .outer.group.GroupInfo group_info = 2;
inline bool CreateGroupResponse::has_group_info() const {
  return this != internal_default_instance() && group_info_ != NULL;
}
inline void CreateGroupResponse::clear_group_info() {
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) {
    delete group_info_;
  }
  group_info_ = NULL;
}
inline const ::outer::group::GroupInfo& CreateGroupResponse::group_info() const {
  const ::outer::group::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupResponse.group_info)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupInfo*>(
      &::outer::group::_GroupInfo_default_instance_);
}
inline ::outer::group::GroupInfo* CreateGroupResponse::release_group_info() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupResponse.group_info)
  
  ::outer::group::GroupInfo* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
inline ::outer::group::GroupInfo* CreateGroupResponse::mutable_group_info() {
  
  if (group_info_ == NULL) {
    group_info_ = new ::outer::group::GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupResponse.group_info)
  return group_info_;
}
inline void CreateGroupResponse::set_allocated_group_info(::outer::group::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupResponse.group_info)
}

// string msg_id = 3;
inline void CreateGroupResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateGroupResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.CreateGroupResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void CreateGroupResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.CreateGroupResponse.msg_id)
}
#if LANG_CXX11
inline void CreateGroupResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.CreateGroupResponse.msg_id)
}
#endif
inline void CreateGroupResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.CreateGroupResponse.msg_id)
}
inline void CreateGroupResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.CreateGroupResponse.msg_id)
}
inline ::std::string* CreateGroupResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.CreateGroupResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateGroupResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.CreateGroupResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateGroupResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.CreateGroupResponse.msg_id)
}

// -------------------------------------------------------------------

// GroupCreatedSignal

// .outer.group.Crew owner = 1;
inline bool GroupCreatedSignal::has_owner() const {
  return this != internal_default_instance() && owner_ != NULL;
}
inline void GroupCreatedSignal::clear_owner() {
  if (GetArenaNoVirtual() == NULL && owner_ != NULL) {
    delete owner_;
  }
  owner_ = NULL;
}
inline const ::outer::group::Crew& GroupCreatedSignal::owner() const {
  const ::outer::group::Crew* p = owner_;
  // @@protoc_insertion_point(field_get:outer.group.GroupCreatedSignal.owner)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* GroupCreatedSignal::release_owner() {
  // @@protoc_insertion_point(field_release:outer.group.GroupCreatedSignal.owner)
  
  ::outer::group::Crew* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline ::outer::group::Crew* GroupCreatedSignal::mutable_owner() {
  
  if (owner_ == NULL) {
    owner_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupCreatedSignal.owner)
  return owner_;
}
inline void GroupCreatedSignal::set_allocated_owner(::outer::group::Crew* owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_;
  }
  if (owner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    
  } else {
    
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupCreatedSignal.owner)
}

// repeated .outer.group.Crew member = 2;
inline int GroupCreatedSignal::member_size() const {
  return member_.size();
}
inline void GroupCreatedSignal::clear_member() {
  member_.Clear();
}
inline const ::outer::group::Crew& GroupCreatedSignal::member(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.GroupCreatedSignal.member)
  return member_.Get(index);
}
inline ::outer::group::Crew* GroupCreatedSignal::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.GroupCreatedSignal.member)
  return member_.Mutable(index);
}
inline ::outer::group::Crew* GroupCreatedSignal::add_member() {
  // @@protoc_insertion_point(field_add:outer.group.GroupCreatedSignal.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
GroupCreatedSignal::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.GroupCreatedSignal.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
GroupCreatedSignal::member() const {
  // @@protoc_insertion_point(field_list:outer.group.GroupCreatedSignal.member)
  return member_;
}

// -------------------------------------------------------------------

// InvitingSignal

// .outer.group.Crew from_crew = 1;
inline bool InvitingSignal::has_from_crew() const {
  return this != internal_default_instance() && from_crew_ != NULL;
}
inline void InvitingSignal::clear_from_crew() {
  if (GetArenaNoVirtual() == NULL && from_crew_ != NULL) {
    delete from_crew_;
  }
  from_crew_ = NULL;
}
inline const ::outer::group::Crew& InvitingSignal::from_crew() const {
  const ::outer::group::Crew* p = from_crew_;
  // @@protoc_insertion_point(field_get:outer.group.InvitingSignal.from_crew)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* InvitingSignal::release_from_crew() {
  // @@protoc_insertion_point(field_release:outer.group.InvitingSignal.from_crew)
  
  ::outer::group::Crew* temp = from_crew_;
  from_crew_ = NULL;
  return temp;
}
inline ::outer::group::Crew* InvitingSignal::mutable_from_crew() {
  
  if (from_crew_ == NULL) {
    from_crew_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.InvitingSignal.from_crew)
  return from_crew_;
}
inline void InvitingSignal::set_allocated_from_crew(::outer::group::Crew* from_crew) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete from_crew_;
  }
  if (from_crew) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      from_crew = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, from_crew, submessage_arena);
    }
    
  } else {
    
  }
  from_crew_ = from_crew;
  // @@protoc_insertion_point(field_set_allocated:outer.group.InvitingSignal.from_crew)
}

// string reason = 2;
inline void InvitingSignal::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvitingSignal::reason() const {
  // @@protoc_insertion_point(field_get:outer.group.InvitingSignal.reason)
  return reason_.GetNoArena();
}
inline void InvitingSignal::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.InvitingSignal.reason)
}
#if LANG_CXX11
inline void InvitingSignal::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.InvitingSignal.reason)
}
#endif
inline void InvitingSignal::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.InvitingSignal.reason)
}
inline void InvitingSignal::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.InvitingSignal.reason)
}
inline ::std::string* InvitingSignal::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.InvitingSignal.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvitingSignal::release_reason() {
  // @@protoc_insertion_point(field_release:outer.group.InvitingSignal.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvitingSignal::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.InvitingSignal.reason)
}

// -------------------------------------------------------------------

// AcceptInvitationRequest

// string uri = 1;
inline void AcceptInvitationRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationRequest.uri)
  return uri_.GetNoArena();
}
inline void AcceptInvitationRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationRequest.uri)
}
#if LANG_CXX11
inline void AcceptInvitationRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationRequest.uri)
}
#endif
inline void AcceptInvitationRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationRequest.uri)
}
inline void AcceptInvitationRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationRequest.uri)
}
inline ::std::string* AcceptInvitationRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationRequest.uri)
}

// string username = 2;
inline void AcceptInvitationRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationRequest.username)
  return username_.GetNoArena();
}
inline void AcceptInvitationRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationRequest.username)
}
#if LANG_CXX11
inline void AcceptInvitationRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationRequest.username)
}
#endif
inline void AcceptInvitationRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationRequest.username)
}
inline void AcceptInvitationRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationRequest.username)
}
inline ::std::string* AcceptInvitationRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationRequest.username)
}

// string accept_to_username = 3;
inline void AcceptInvitationRequest::clear_accept_to_username() {
  accept_to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationRequest::accept_to_username() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationRequest.accept_to_username)
  return accept_to_username_.GetNoArena();
}
inline void AcceptInvitationRequest::set_accept_to_username(const ::std::string& value) {
  
  accept_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationRequest.accept_to_username)
}
#if LANG_CXX11
inline void AcceptInvitationRequest::set_accept_to_username(::std::string&& value) {
  
  accept_to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationRequest.accept_to_username)
}
#endif
inline void AcceptInvitationRequest::set_accept_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accept_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationRequest.accept_to_username)
}
inline void AcceptInvitationRequest::set_accept_to_username(const char* value, size_t size) {
  
  accept_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationRequest.accept_to_username)
}
inline ::std::string* AcceptInvitationRequest::mutable_accept_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationRequest.accept_to_username)
  return accept_to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationRequest::release_accept_to_username() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationRequest.accept_to_username)
  
  return accept_to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationRequest::set_allocated_accept_to_username(::std::string* accept_to_username) {
  if (accept_to_username != NULL) {
    
  } else {
    
  }
  accept_to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accept_to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationRequest.accept_to_username)
}

// string appkey = 4;
inline void AcceptInvitationRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationRequest.appkey)
  return appkey_.GetNoArena();
}
inline void AcceptInvitationRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationRequest.appkey)
}
#if LANG_CXX11
inline void AcceptInvitationRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationRequest.appkey)
}
#endif
inline void AcceptInvitationRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationRequest.appkey)
}
inline void AcceptInvitationRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationRequest.appkey)
}
inline ::std::string* AcceptInvitationRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationRequest.appkey)
}

// string msg_id = 5;
inline void AcceptInvitationRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void AcceptInvitationRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationRequest.msg_id)
}
#if LANG_CXX11
inline void AcceptInvitationRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationRequest.msg_id)
}
#endif
inline void AcceptInvitationRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationRequest.msg_id)
}
inline void AcceptInvitationRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationRequest.msg_id)
}
inline ::std::string* AcceptInvitationRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationRequest.msg_id)
}

// -------------------------------------------------------------------

// AcceptInvitationResponse

// .common.errcode.EErrorCode ret = 1;
inline void AcceptInvitationResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode AcceptInvitationResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void AcceptInvitationResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationResponse.ret)
}

// string msg_id = 2;
inline void AcceptInvitationResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AcceptInvitationResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AcceptInvitationResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void AcceptInvitationResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AcceptInvitationResponse.msg_id)
}
#if LANG_CXX11
inline void AcceptInvitationResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AcceptInvitationResponse.msg_id)
}
#endif
inline void AcceptInvitationResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AcceptInvitationResponse.msg_id)
}
inline void AcceptInvitationResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AcceptInvitationResponse.msg_id)
}
inline ::std::string* AcceptInvitationResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AcceptInvitationResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptInvitationResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AcceptInvitationResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptInvitationResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AcceptInvitationResponse.msg_id)
}

// -------------------------------------------------------------------

// InvitationAcceptedSignal

// .outer.group.Crew accept_from = 1;
inline bool InvitationAcceptedSignal::has_accept_from() const {
  return this != internal_default_instance() && accept_from_ != NULL;
}
inline void InvitationAcceptedSignal::clear_accept_from() {
  if (GetArenaNoVirtual() == NULL && accept_from_ != NULL) {
    delete accept_from_;
  }
  accept_from_ = NULL;
}
inline const ::outer::group::Crew& InvitationAcceptedSignal::accept_from() const {
  const ::outer::group::Crew* p = accept_from_;
  // @@protoc_insertion_point(field_get:outer.group.InvitationAcceptedSignal.accept_from)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* InvitationAcceptedSignal::release_accept_from() {
  // @@protoc_insertion_point(field_release:outer.group.InvitationAcceptedSignal.accept_from)
  
  ::outer::group::Crew* temp = accept_from_;
  accept_from_ = NULL;
  return temp;
}
inline ::outer::group::Crew* InvitationAcceptedSignal::mutable_accept_from() {
  
  if (accept_from_ == NULL) {
    accept_from_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.InvitationAcceptedSignal.accept_from)
  return accept_from_;
}
inline void InvitationAcceptedSignal::set_allocated_accept_from(::outer::group::Crew* accept_from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete accept_from_;
  }
  if (accept_from) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      accept_from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accept_from, submessage_arena);
    }
    
  } else {
    
  }
  accept_from_ = accept_from;
  // @@protoc_insertion_point(field_set_allocated:outer.group.InvitationAcceptedSignal.accept_from)
}

// -------------------------------------------------------------------

// InviteeJoinGroupSignal

// .outer.group.Crew invitee = 2;
inline bool InviteeJoinGroupSignal::has_invitee() const {
  return this != internal_default_instance() && invitee_ != NULL;
}
inline void InviteeJoinGroupSignal::clear_invitee() {
  if (GetArenaNoVirtual() == NULL && invitee_ != NULL) {
    delete invitee_;
  }
  invitee_ = NULL;
}
inline const ::outer::group::Crew& InviteeJoinGroupSignal::invitee() const {
  const ::outer::group::Crew* p = invitee_;
  // @@protoc_insertion_point(field_get:outer.group.InviteeJoinGroupSignal.invitee)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* InviteeJoinGroupSignal::release_invitee() {
  // @@protoc_insertion_point(field_release:outer.group.InviteeJoinGroupSignal.invitee)
  
  ::outer::group::Crew* temp = invitee_;
  invitee_ = NULL;
  return temp;
}
inline ::outer::group::Crew* InviteeJoinGroupSignal::mutable_invitee() {
  
  if (invitee_ == NULL) {
    invitee_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.InviteeJoinGroupSignal.invitee)
  return invitee_;
}
inline void InviteeJoinGroupSignal::set_allocated_invitee(::outer::group::Crew* invitee) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete invitee_;
  }
  if (invitee) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invitee = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invitee, submessage_arena);
    }
    
  } else {
    
  }
  invitee_ = invitee;
  // @@protoc_insertion_point(field_set_allocated:outer.group.InviteeJoinGroupSignal.invitee)
}

// .outer.group.Crew inviter = 3;
inline bool InviteeJoinGroupSignal::has_inviter() const {
  return this != internal_default_instance() && inviter_ != NULL;
}
inline void InviteeJoinGroupSignal::clear_inviter() {
  if (GetArenaNoVirtual() == NULL && inviter_ != NULL) {
    delete inviter_;
  }
  inviter_ = NULL;
}
inline const ::outer::group::Crew& InviteeJoinGroupSignal::inviter() const {
  const ::outer::group::Crew* p = inviter_;
  // @@protoc_insertion_point(field_get:outer.group.InviteeJoinGroupSignal.inviter)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* InviteeJoinGroupSignal::release_inviter() {
  // @@protoc_insertion_point(field_release:outer.group.InviteeJoinGroupSignal.inviter)
  
  ::outer::group::Crew* temp = inviter_;
  inviter_ = NULL;
  return temp;
}
inline ::outer::group::Crew* InviteeJoinGroupSignal::mutable_inviter() {
  
  if (inviter_ == NULL) {
    inviter_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.InviteeJoinGroupSignal.inviter)
  return inviter_;
}
inline void InviteeJoinGroupSignal::set_allocated_inviter(::outer::group::Crew* inviter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete inviter_;
  }
  if (inviter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inviter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inviter, submessage_arena);
    }
    
  } else {
    
  }
  inviter_ = inviter;
  // @@protoc_insertion_point(field_set_allocated:outer.group.InviteeJoinGroupSignal.inviter)
}

// -------------------------------------------------------------------

// DeclineInvitationRequest

// string uri = 1;
inline void DeclineInvitationRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.uri)
  return uri_.GetNoArena();
}
inline void DeclineInvitationRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.uri)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.uri)
}
#endif
inline void DeclineInvitationRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.uri)
}
inline void DeclineInvitationRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.uri)
}
inline ::std::string* DeclineInvitationRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.uri)
}

// string username = 2;
inline void DeclineInvitationRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.username)
  return username_.GetNoArena();
}
inline void DeclineInvitationRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.username)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.username)
}
#endif
inline void DeclineInvitationRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.username)
}
inline void DeclineInvitationRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.username)
}
inline ::std::string* DeclineInvitationRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.username)
}

// string decline_to_username = 3;
inline void DeclineInvitationRequest::clear_decline_to_username() {
  decline_to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::decline_to_username() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.decline_to_username)
  return decline_to_username_.GetNoArena();
}
inline void DeclineInvitationRequest::set_decline_to_username(const ::std::string& value) {
  
  decline_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.decline_to_username)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_decline_to_username(::std::string&& value) {
  
  decline_to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.decline_to_username)
}
#endif
inline void DeclineInvitationRequest::set_decline_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  decline_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.decline_to_username)
}
inline void DeclineInvitationRequest::set_decline_to_username(const char* value, size_t size) {
  
  decline_to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.decline_to_username)
}
inline ::std::string* DeclineInvitationRequest::mutable_decline_to_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.decline_to_username)
  return decline_to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_decline_to_username() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.decline_to_username)
  
  return decline_to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_decline_to_username(::std::string* decline_to_username) {
  if (decline_to_username != NULL) {
    
  } else {
    
  }
  decline_to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decline_to_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.decline_to_username)
}

// string appkey = 4;
inline void DeclineInvitationRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.appkey)
  return appkey_.GetNoArena();
}
inline void DeclineInvitationRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.appkey)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.appkey)
}
#endif
inline void DeclineInvitationRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.appkey)
}
inline void DeclineInvitationRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.appkey)
}
inline ::std::string* DeclineInvitationRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.appkey)
}

// string decline_reason = 5;
inline void DeclineInvitationRequest::clear_decline_reason() {
  decline_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::decline_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.decline_reason)
  return decline_reason_.GetNoArena();
}
inline void DeclineInvitationRequest::set_decline_reason(const ::std::string& value) {
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.decline_reason)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_decline_reason(::std::string&& value) {
  
  decline_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.decline_reason)
}
#endif
inline void DeclineInvitationRequest::set_decline_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.decline_reason)
}
inline void DeclineInvitationRequest::set_decline_reason(const char* value, size_t size) {
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.decline_reason)
}
inline ::std::string* DeclineInvitationRequest::mutable_decline_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.decline_reason)
  return decline_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_decline_reason() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.decline_reason)
  
  return decline_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_decline_reason(::std::string* decline_reason) {
  if (decline_reason != NULL) {
    
  } else {
    
  }
  decline_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decline_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.decline_reason)
}

// string msg_id = 6;
inline void DeclineInvitationRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void DeclineInvitationRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationRequest.msg_id)
}
#if LANG_CXX11
inline void DeclineInvitationRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationRequest.msg_id)
}
#endif
inline void DeclineInvitationRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationRequest.msg_id)
}
inline void DeclineInvitationRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationRequest.msg_id)
}
inline ::std::string* DeclineInvitationRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationRequest.msg_id)
}

// -------------------------------------------------------------------

// DeclineInvitationResponse

// .common.errcode.EErrorCode ret = 1;
inline void DeclineInvitationResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode DeclineInvitationResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void DeclineInvitationResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationResponse.ret)
}

// string msg_id = 2;
inline void DeclineInvitationResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeclineInvitationResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.DeclineInvitationResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void DeclineInvitationResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DeclineInvitationResponse.msg_id)
}
#if LANG_CXX11
inline void DeclineInvitationResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DeclineInvitationResponse.msg_id)
}
#endif
inline void DeclineInvitationResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DeclineInvitationResponse.msg_id)
}
inline void DeclineInvitationResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DeclineInvitationResponse.msg_id)
}
inline ::std::string* DeclineInvitationResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DeclineInvitationResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeclineInvitationResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.DeclineInvitationResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeclineInvitationResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DeclineInvitationResponse.msg_id)
}

// -------------------------------------------------------------------

// InvitationDeclinedSignal

// .outer.group.Crew decline_from = 2;
inline bool InvitationDeclinedSignal::has_decline_from() const {
  return this != internal_default_instance() && decline_from_ != NULL;
}
inline void InvitationDeclinedSignal::clear_decline_from() {
  if (GetArenaNoVirtual() == NULL && decline_from_ != NULL) {
    delete decline_from_;
  }
  decline_from_ = NULL;
}
inline const ::outer::group::Crew& InvitationDeclinedSignal::decline_from() const {
  const ::outer::group::Crew* p = decline_from_;
  // @@protoc_insertion_point(field_get:outer.group.InvitationDeclinedSignal.decline_from)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* InvitationDeclinedSignal::release_decline_from() {
  // @@protoc_insertion_point(field_release:outer.group.InvitationDeclinedSignal.decline_from)
  
  ::outer::group::Crew* temp = decline_from_;
  decline_from_ = NULL;
  return temp;
}
inline ::outer::group::Crew* InvitationDeclinedSignal::mutable_decline_from() {
  
  if (decline_from_ == NULL) {
    decline_from_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.InvitationDeclinedSignal.decline_from)
  return decline_from_;
}
inline void InvitationDeclinedSignal::set_allocated_decline_from(::outer::group::Crew* decline_from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete decline_from_;
  }
  if (decline_from) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decline_from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decline_from, submessage_arena);
    }
    
  } else {
    
  }
  decline_from_ = decline_from;
  // @@protoc_insertion_point(field_set_allocated:outer.group.InvitationDeclinedSignal.decline_from)
}

// string decline_reason = 3;
inline void InvitationDeclinedSignal::clear_decline_reason() {
  decline_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvitationDeclinedSignal::decline_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.InvitationDeclinedSignal.decline_reason)
  return decline_reason_.GetNoArena();
}
inline void InvitationDeclinedSignal::set_decline_reason(const ::std::string& value) {
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.InvitationDeclinedSignal.decline_reason)
}
#if LANG_CXX11
inline void InvitationDeclinedSignal::set_decline_reason(::std::string&& value) {
  
  decline_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.InvitationDeclinedSignal.decline_reason)
}
#endif
inline void InvitationDeclinedSignal::set_decline_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.InvitationDeclinedSignal.decline_reason)
}
inline void InvitationDeclinedSignal::set_decline_reason(const char* value, size_t size) {
  
  decline_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.InvitationDeclinedSignal.decline_reason)
}
inline ::std::string* InvitationDeclinedSignal::mutable_decline_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.InvitationDeclinedSignal.decline_reason)
  return decline_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvitationDeclinedSignal::release_decline_reason() {
  // @@protoc_insertion_point(field_release:outer.group.InvitationDeclinedSignal.decline_reason)
  
  return decline_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvitationDeclinedSignal::set_allocated_decline_reason(::std::string* decline_reason) {
  if (decline_reason != NULL) {
    
  } else {
    
  }
  decline_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decline_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.InvitationDeclinedSignal.decline_reason)
}

// -------------------------------------------------------------------

// AddMemberRequest

// string uri = 1;
inline void AddMemberRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.uri)
  return uri_.GetNoArena();
}
inline void AddMemberRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.uri)
}
#if LANG_CXX11
inline void AddMemberRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberRequest.uri)
}
#endif
inline void AddMemberRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.uri)
}
inline void AddMemberRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.uri)
}
inline ::std::string* AddMemberRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberRequest.uri)
}

// string from_username = 2;
inline void AddMemberRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberRequest::from_username() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.from_username)
  return from_username_.GetNoArena();
}
inline void AddMemberRequest::set_from_username(const ::std::string& value) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.from_username)
}
#if LANG_CXX11
inline void AddMemberRequest::set_from_username(::std::string&& value) {
  
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberRequest.from_username)
}
#endif
inline void AddMemberRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.from_username)
}
inline void AddMemberRequest::set_from_username(const char* value, size_t size) {
  
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.from_username)
}
inline ::std::string* AddMemberRequest::mutable_from_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberRequest.from_username)
  
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    
  } else {
    
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberRequest.from_username)
}

// string appkey = 3;
inline void AddMemberRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.appkey)
  return appkey_.GetNoArena();
}
inline void AddMemberRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.appkey)
}
#if LANG_CXX11
inline void AddMemberRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberRequest.appkey)
}
#endif
inline void AddMemberRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.appkey)
}
inline void AddMemberRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.appkey)
}
inline ::std::string* AddMemberRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberRequest.appkey)
}

// repeated string member_username = 4;
inline int AddMemberRequest::member_username_size() const {
  return member_username_.size();
}
inline void AddMemberRequest::clear_member_username() {
  member_username_.Clear();
}
inline const ::std::string& AddMemberRequest::member_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.member_username)
  return member_username_.Get(index);
}
inline ::std::string* AddMemberRequest::mutable_member_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.member_username)
  return member_username_.Mutable(index);
}
inline void AddMemberRequest::set_member_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.member_username)
  member_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AddMemberRequest::set_member_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.member_username)
  member_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AddMemberRequest::set_member_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  member_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.member_username)
}
inline void AddMemberRequest::set_member_username(int index, const char* value, size_t size) {
  member_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.member_username)
}
inline ::std::string* AddMemberRequest::add_member_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.AddMemberRequest.member_username)
  return member_username_.Add();
}
inline void AddMemberRequest::add_member_username(const ::std::string& value) {
  member_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.AddMemberRequest.member_username)
}
#if LANG_CXX11
inline void AddMemberRequest::add_member_username(::std::string&& value) {
  member_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.AddMemberRequest.member_username)
}
#endif
inline void AddMemberRequest::add_member_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  member_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.AddMemberRequest.member_username)
}
inline void AddMemberRequest::add_member_username(const char* value, size_t size) {
  member_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.AddMemberRequest.member_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddMemberRequest::member_username() const {
  // @@protoc_insertion_point(field_list:outer.group.AddMemberRequest.member_username)
  return member_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AddMemberRequest::mutable_member_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.AddMemberRequest.member_username)
  return &member_username_;
}

// repeated string invitee_username = 5;
inline int AddMemberRequest::invitee_username_size() const {
  return invitee_username_.size();
}
inline void AddMemberRequest::clear_invitee_username() {
  invitee_username_.Clear();
}
inline const ::std::string& AddMemberRequest::invitee_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.invitee_username)
  return invitee_username_.Get(index);
}
inline ::std::string* AddMemberRequest::mutable_invitee_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.invitee_username)
  return invitee_username_.Mutable(index);
}
inline void AddMemberRequest::set_invitee_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.invitee_username)
  invitee_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AddMemberRequest::set_invitee_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.invitee_username)
  invitee_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AddMemberRequest::set_invitee_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invitee_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.invitee_username)
}
inline void AddMemberRequest::set_invitee_username(int index, const char* value, size_t size) {
  invitee_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.invitee_username)
}
inline ::std::string* AddMemberRequest::add_invitee_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.AddMemberRequest.invitee_username)
  return invitee_username_.Add();
}
inline void AddMemberRequest::add_invitee_username(const ::std::string& value) {
  invitee_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.AddMemberRequest.invitee_username)
}
#if LANG_CXX11
inline void AddMemberRequest::add_invitee_username(::std::string&& value) {
  invitee_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.AddMemberRequest.invitee_username)
}
#endif
inline void AddMemberRequest::add_invitee_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  invitee_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.AddMemberRequest.invitee_username)
}
inline void AddMemberRequest::add_invitee_username(const char* value, size_t size) {
  invitee_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.AddMemberRequest.invitee_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddMemberRequest::invitee_username() const {
  // @@protoc_insertion_point(field_list:outer.group.AddMemberRequest.invitee_username)
  return invitee_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AddMemberRequest::mutable_invitee_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.AddMemberRequest.invitee_username)
  return &invitee_username_;
}

// string invite_reason = 6;
inline void AddMemberRequest::clear_invite_reason() {
  invite_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberRequest::invite_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.invite_reason)
  return invite_reason_.GetNoArena();
}
inline void AddMemberRequest::set_invite_reason(const ::std::string& value) {
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.invite_reason)
}
#if LANG_CXX11
inline void AddMemberRequest::set_invite_reason(::std::string&& value) {
  
  invite_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberRequest.invite_reason)
}
#endif
inline void AddMemberRequest::set_invite_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.invite_reason)
}
inline void AddMemberRequest::set_invite_reason(const char* value, size_t size) {
  
  invite_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.invite_reason)
}
inline ::std::string* AddMemberRequest::mutable_invite_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.invite_reason)
  return invite_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberRequest::release_invite_reason() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberRequest.invite_reason)
  
  return invite_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberRequest::set_allocated_invite_reason(::std::string* invite_reason) {
  if (invite_reason != NULL) {
    
  } else {
    
  }
  invite_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberRequest.invite_reason)
}

// string msg_id = 7;
inline void AddMemberRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void AddMemberRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberRequest.msg_id)
}
#if LANG_CXX11
inline void AddMemberRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberRequest.msg_id)
}
#endif
inline void AddMemberRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberRequest.msg_id)
}
inline void AddMemberRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberRequest.msg_id)
}
inline ::std::string* AddMemberRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberRequest.msg_id)
}

// -------------------------------------------------------------------

// AddMemberResponse

// .common.errcode.EErrorCode ret = 1;
inline void AddMemberResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode AddMemberResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void AddMemberResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.AddMemberResponse.ret)
}

// string msg_id = 2;
inline void AddMemberResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddMemberResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AddMemberResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void AddMemberResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AddMemberResponse.msg_id)
}
#if LANG_CXX11
inline void AddMemberResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AddMemberResponse.msg_id)
}
#endif
inline void AddMemberResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AddMemberResponse.msg_id)
}
inline void AddMemberResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AddMemberResponse.msg_id)
}
inline ::std::string* AddMemberResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AddMemberResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMemberResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AddMemberResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMemberResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AddMemberResponse.msg_id)
}

// -------------------------------------------------------------------

// JoinGroupSignal

// repeated .outer.group.Crew new_member = 1;
inline int JoinGroupSignal::new_member_size() const {
  return new_member_.size();
}
inline void JoinGroupSignal::clear_new_member() {
  new_member_.Clear();
}
inline const ::outer::group::Crew& JoinGroupSignal::new_member(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupSignal.new_member)
  return new_member_.Get(index);
}
inline ::outer::group::Crew* JoinGroupSignal::mutable_new_member(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupSignal.new_member)
  return new_member_.Mutable(index);
}
inline ::outer::group::Crew* JoinGroupSignal::add_new_member() {
  // @@protoc_insertion_point(field_add:outer.group.JoinGroupSignal.new_member)
  return new_member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
JoinGroupSignal::mutable_new_member() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.JoinGroupSignal.new_member)
  return &new_member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
JoinGroupSignal::new_member() const {
  // @@protoc_insertion_point(field_list:outer.group.JoinGroupSignal.new_member)
  return new_member_;
}

// .outer.group.Crew actor = 2;
inline bool JoinGroupSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void JoinGroupSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& JoinGroupSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* JoinGroupSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* JoinGroupSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupSignal.actor)
  return actor_;
}
inline void JoinGroupSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupSignal.actor)
}

// -------------------------------------------------------------------

// KickRequest

// string uri = 1;
inline void KickRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KickRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.KickRequest.uri)
  return uri_.GetNoArena();
}
inline void KickRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.uri)
}
#if LANG_CXX11
inline void KickRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.KickRequest.uri)
}
#endif
inline void KickRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.KickRequest.uri)
}
inline void KickRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickRequest.uri)
}
inline ::std::string* KickRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.KickRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KickRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.KickRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KickRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.KickRequest.uri)
}

// string kicker_username = 2;
inline void KickRequest::clear_kicker_username() {
  kicker_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KickRequest::kicker_username() const {
  // @@protoc_insertion_point(field_get:outer.group.KickRequest.kicker_username)
  return kicker_username_.GetNoArena();
}
inline void KickRequest::set_kicker_username(const ::std::string& value) {
  
  kicker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.kicker_username)
}
#if LANG_CXX11
inline void KickRequest::set_kicker_username(::std::string&& value) {
  
  kicker_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.KickRequest.kicker_username)
}
#endif
inline void KickRequest::set_kicker_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  kicker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.KickRequest.kicker_username)
}
inline void KickRequest::set_kicker_username(const char* value, size_t size) {
  
  kicker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickRequest.kicker_username)
}
inline ::std::string* KickRequest::mutable_kicker_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.KickRequest.kicker_username)
  return kicker_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KickRequest::release_kicker_username() {
  // @@protoc_insertion_point(field_release:outer.group.KickRequest.kicker_username)
  
  return kicker_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KickRequest::set_allocated_kicker_username(::std::string* kicker_username) {
  if (kicker_username != NULL) {
    
  } else {
    
  }
  kicker_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kicker_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.KickRequest.kicker_username)
}

// string appkey = 3;
inline void KickRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KickRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.KickRequest.appkey)
  return appkey_.GetNoArena();
}
inline void KickRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.appkey)
}
#if LANG_CXX11
inline void KickRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.KickRequest.appkey)
}
#endif
inline void KickRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.KickRequest.appkey)
}
inline void KickRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickRequest.appkey)
}
inline ::std::string* KickRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.KickRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KickRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.KickRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KickRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.KickRequest.appkey)
}

// repeated string bekicked_username = 4;
inline int KickRequest::bekicked_username_size() const {
  return bekicked_username_.size();
}
inline void KickRequest::clear_bekicked_username() {
  bekicked_username_.Clear();
}
inline const ::std::string& KickRequest::bekicked_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.KickRequest.bekicked_username)
  return bekicked_username_.Get(index);
}
inline ::std::string* KickRequest::mutable_bekicked_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.KickRequest.bekicked_username)
  return bekicked_username_.Mutable(index);
}
inline void KickRequest::set_bekicked_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.bekicked_username)
  bekicked_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void KickRequest::set_bekicked_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.bekicked_username)
  bekicked_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void KickRequest::set_bekicked_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bekicked_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.KickRequest.bekicked_username)
}
inline void KickRequest::set_bekicked_username(int index, const char* value, size_t size) {
  bekicked_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickRequest.bekicked_username)
}
inline ::std::string* KickRequest::add_bekicked_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.KickRequest.bekicked_username)
  return bekicked_username_.Add();
}
inline void KickRequest::add_bekicked_username(const ::std::string& value) {
  bekicked_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.KickRequest.bekicked_username)
}
#if LANG_CXX11
inline void KickRequest::add_bekicked_username(::std::string&& value) {
  bekicked_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.KickRequest.bekicked_username)
}
#endif
inline void KickRequest::add_bekicked_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bekicked_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.KickRequest.bekicked_username)
}
inline void KickRequest::add_bekicked_username(const char* value, size_t size) {
  bekicked_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.KickRequest.bekicked_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
KickRequest::bekicked_username() const {
  // @@protoc_insertion_point(field_list:outer.group.KickRequest.bekicked_username)
  return bekicked_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
KickRequest::mutable_bekicked_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.KickRequest.bekicked_username)
  return &bekicked_username_;
}

// string msg_id = 5;
inline void KickRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KickRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.KickRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void KickRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.KickRequest.msg_id)
}
#if LANG_CXX11
inline void KickRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.KickRequest.msg_id)
}
#endif
inline void KickRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.KickRequest.msg_id)
}
inline void KickRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickRequest.msg_id)
}
inline ::std::string* KickRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.KickRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KickRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.KickRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KickRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.KickRequest.msg_id)
}

// -------------------------------------------------------------------

// KickResponse

// .common.errcode.EErrorCode ret = 1;
inline void KickResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode KickResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.KickResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void KickResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.KickResponse.ret)
}

// string msg_id = 2;
inline void KickResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KickResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.KickResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void KickResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.KickResponse.msg_id)
}
#if LANG_CXX11
inline void KickResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.KickResponse.msg_id)
}
#endif
inline void KickResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.KickResponse.msg_id)
}
inline void KickResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.KickResponse.msg_id)
}
inline ::std::string* KickResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.KickResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KickResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.KickResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KickResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.KickResponse.msg_id)
}

// -------------------------------------------------------------------

// BeKickedSignal

// repeated .outer.group.Crew be_kicked = 1;
inline int BeKickedSignal::be_kicked_size() const {
  return be_kicked_.size();
}
inline void BeKickedSignal::clear_be_kicked() {
  be_kicked_.Clear();
}
inline const ::outer::group::Crew& BeKickedSignal::be_kicked(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.BeKickedSignal.be_kicked)
  return be_kicked_.Get(index);
}
inline ::outer::group::Crew* BeKickedSignal::mutable_be_kicked(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.BeKickedSignal.be_kicked)
  return be_kicked_.Mutable(index);
}
inline ::outer::group::Crew* BeKickedSignal::add_be_kicked() {
  // @@protoc_insertion_point(field_add:outer.group.BeKickedSignal.be_kicked)
  return be_kicked_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >*
BeKickedSignal::mutable_be_kicked() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.BeKickedSignal.be_kicked)
  return &be_kicked_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::Crew >&
BeKickedSignal::be_kicked() const {
  // @@protoc_insertion_point(field_list:outer.group.BeKickedSignal.be_kicked)
  return be_kicked_;
}

// .outer.group.Crew kicker = 2;
inline bool BeKickedSignal::has_kicker() const {
  return this != internal_default_instance() && kicker_ != NULL;
}
inline void BeKickedSignal::clear_kicker() {
  if (GetArenaNoVirtual() == NULL && kicker_ != NULL) {
    delete kicker_;
  }
  kicker_ = NULL;
}
inline const ::outer::group::Crew& BeKickedSignal::kicker() const {
  const ::outer::group::Crew* p = kicker_;
  // @@protoc_insertion_point(field_get:outer.group.BeKickedSignal.kicker)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeKickedSignal::release_kicker() {
  // @@protoc_insertion_point(field_release:outer.group.BeKickedSignal.kicker)
  
  ::outer::group::Crew* temp = kicker_;
  kicker_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeKickedSignal::mutable_kicker() {
  
  if (kicker_ == NULL) {
    kicker_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeKickedSignal.kicker)
  return kicker_;
}
inline void BeKickedSignal::set_allocated_kicker(::outer::group::Crew* kicker) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete kicker_;
  }
  if (kicker) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kicker = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kicker, submessage_arena);
    }
    
  } else {
    
  }
  kicker_ = kicker;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeKickedSignal.kicker)
}

// -------------------------------------------------------------------

// ExitRequest

// string uri = 1;
inline void ExitRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitRequest.uri)
  return uri_.GetNoArena();
}
inline void ExitRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ExitRequest.uri)
}
#if LANG_CXX11
inline void ExitRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ExitRequest.uri)
}
#endif
inline void ExitRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ExitRequest.uri)
}
inline void ExitRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ExitRequest.uri)
}
inline ::std::string* ExitRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ExitRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.ExitRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitRequest.uri)
}

// string exiter_username = 2;
inline void ExitRequest::clear_exiter_username() {
  exiter_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitRequest::exiter_username() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitRequest.exiter_username)
  return exiter_username_.GetNoArena();
}
inline void ExitRequest::set_exiter_username(const ::std::string& value) {
  
  exiter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ExitRequest.exiter_username)
}
#if LANG_CXX11
inline void ExitRequest::set_exiter_username(::std::string&& value) {
  
  exiter_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ExitRequest.exiter_username)
}
#endif
inline void ExitRequest::set_exiter_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exiter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ExitRequest.exiter_username)
}
inline void ExitRequest::set_exiter_username(const char* value, size_t size) {
  
  exiter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ExitRequest.exiter_username)
}
inline ::std::string* ExitRequest::mutable_exiter_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ExitRequest.exiter_username)
  return exiter_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitRequest::release_exiter_username() {
  // @@protoc_insertion_point(field_release:outer.group.ExitRequest.exiter_username)
  
  return exiter_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitRequest::set_allocated_exiter_username(::std::string* exiter_username) {
  if (exiter_username != NULL) {
    
  } else {
    
  }
  exiter_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exiter_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitRequest.exiter_username)
}

// string appkey = 3;
inline void ExitRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ExitRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ExitRequest.appkey)
}
#if LANG_CXX11
inline void ExitRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ExitRequest.appkey)
}
#endif
inline void ExitRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ExitRequest.appkey)
}
inline void ExitRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ExitRequest.appkey)
}
inline ::std::string* ExitRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ExitRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.ExitRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitRequest.appkey)
}

// string msg_id = 4;
inline void ExitRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void ExitRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ExitRequest.msg_id)
}
#if LANG_CXX11
inline void ExitRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ExitRequest.msg_id)
}
#endif
inline void ExitRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ExitRequest.msg_id)
}
inline void ExitRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ExitRequest.msg_id)
}
inline ::std::string* ExitRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ExitRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ExitRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitRequest.msg_id)
}

// -------------------------------------------------------------------

// ExitResponse

// .common.errcode.EErrorCode ret = 1;
inline void ExitResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode ExitResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void ExitResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.ExitResponse.ret)
}

// string msg_id = 2;
inline void ExitResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ExitResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void ExitResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ExitResponse.msg_id)
}
#if LANG_CXX11
inline void ExitResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ExitResponse.msg_id)
}
#endif
inline void ExitResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ExitResponse.msg_id)
}
inline void ExitResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ExitResponse.msg_id)
}
inline ::std::string* ExitResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ExitResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ExitResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitResponse.msg_id)
}

// -------------------------------------------------------------------

// ExitedSignal

// .outer.group.Crew exiter = 1;
inline bool ExitedSignal::has_exiter() const {
  return this != internal_default_instance() && exiter_ != NULL;
}
inline void ExitedSignal::clear_exiter() {
  if (GetArenaNoVirtual() == NULL && exiter_ != NULL) {
    delete exiter_;
  }
  exiter_ = NULL;
}
inline const ::outer::group::Crew& ExitedSignal::exiter() const {
  const ::outer::group::Crew* p = exiter_;
  // @@protoc_insertion_point(field_get:outer.group.ExitedSignal.exiter)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* ExitedSignal::release_exiter() {
  // @@protoc_insertion_point(field_release:outer.group.ExitedSignal.exiter)
  
  ::outer::group::Crew* temp = exiter_;
  exiter_ = NULL;
  return temp;
}
inline ::outer::group::Crew* ExitedSignal::mutable_exiter() {
  
  if (exiter_ == NULL) {
    exiter_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.ExitedSignal.exiter)
  return exiter_;
}
inline void ExitedSignal::set_allocated_exiter(::outer::group::Crew* exiter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exiter_;
  }
  if (exiter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exiter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exiter, submessage_arena);
    }
    
  } else {
    
  }
  exiter_ = exiter;
  // @@protoc_insertion_point(field_set_allocated:outer.group.ExitedSignal.exiter)
}

// -------------------------------------------------------------------

// DestroyRequest

// string uri = 1;
inline void DestroyRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyRequest.uri)
  return uri_.GetNoArena();
}
inline void DestroyRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DestroyRequest.uri)
}
#if LANG_CXX11
inline void DestroyRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DestroyRequest.uri)
}
#endif
inline void DestroyRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DestroyRequest.uri)
}
inline void DestroyRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DestroyRequest.uri)
}
inline ::std::string* DestroyRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DestroyRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.DestroyRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DestroyRequest.uri)
}

// string destroy_username = 2;
inline void DestroyRequest::clear_destroy_username() {
  destroy_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyRequest::destroy_username() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyRequest.destroy_username)
  return destroy_username_.GetNoArena();
}
inline void DestroyRequest::set_destroy_username(const ::std::string& value) {
  
  destroy_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DestroyRequest.destroy_username)
}
#if LANG_CXX11
inline void DestroyRequest::set_destroy_username(::std::string&& value) {
  
  destroy_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DestroyRequest.destroy_username)
}
#endif
inline void DestroyRequest::set_destroy_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destroy_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DestroyRequest.destroy_username)
}
inline void DestroyRequest::set_destroy_username(const char* value, size_t size) {
  
  destroy_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DestroyRequest.destroy_username)
}
inline ::std::string* DestroyRequest::mutable_destroy_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DestroyRequest.destroy_username)
  return destroy_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyRequest::release_destroy_username() {
  // @@protoc_insertion_point(field_release:outer.group.DestroyRequest.destroy_username)
  
  return destroy_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyRequest::set_allocated_destroy_username(::std::string* destroy_username) {
  if (destroy_username != NULL) {
    
  } else {
    
  }
  destroy_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destroy_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DestroyRequest.destroy_username)
}

// string appkey = 3;
inline void DestroyRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyRequest.appkey)
  return appkey_.GetNoArena();
}
inline void DestroyRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DestroyRequest.appkey)
}
#if LANG_CXX11
inline void DestroyRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DestroyRequest.appkey)
}
#endif
inline void DestroyRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DestroyRequest.appkey)
}
inline void DestroyRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DestroyRequest.appkey)
}
inline ::std::string* DestroyRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DestroyRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.DestroyRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DestroyRequest.appkey)
}

// string msg_id = 4;
inline void DestroyRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void DestroyRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DestroyRequest.msg_id)
}
#if LANG_CXX11
inline void DestroyRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DestroyRequest.msg_id)
}
#endif
inline void DestroyRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DestroyRequest.msg_id)
}
inline void DestroyRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DestroyRequest.msg_id)
}
inline ::std::string* DestroyRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DestroyRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.DestroyRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DestroyRequest.msg_id)
}

// -------------------------------------------------------------------

// DestroyResponse

// .common.errcode.EErrorCode ret = 1;
inline void DestroyResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode DestroyResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void DestroyResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.DestroyResponse.ret)
}

// string msg_id = 2;
inline void DestroyResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DestroyResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.DestroyResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void DestroyResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DestroyResponse.msg_id)
}
#if LANG_CXX11
inline void DestroyResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DestroyResponse.msg_id)
}
#endif
inline void DestroyResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DestroyResponse.msg_id)
}
inline void DestroyResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DestroyResponse.msg_id)
}
inline ::std::string* DestroyResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DestroyResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DestroyResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.DestroyResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DestroyResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DestroyResponse.msg_id)
}

// -------------------------------------------------------------------

// GroupDestroyedSignal

// .outer.group.Crew destroyer = 1;
inline bool GroupDestroyedSignal::has_destroyer() const {
  return this != internal_default_instance() && destroyer_ != NULL;
}
inline void GroupDestroyedSignal::clear_destroyer() {
  if (GetArenaNoVirtual() == NULL && destroyer_ != NULL) {
    delete destroyer_;
  }
  destroyer_ = NULL;
}
inline const ::outer::group::Crew& GroupDestroyedSignal::destroyer() const {
  const ::outer::group::Crew* p = destroyer_;
  // @@protoc_insertion_point(field_get:outer.group.GroupDestroyedSignal.destroyer)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* GroupDestroyedSignal::release_destroyer() {
  // @@protoc_insertion_point(field_release:outer.group.GroupDestroyedSignal.destroyer)
  
  ::outer::group::Crew* temp = destroyer_;
  destroyer_ = NULL;
  return temp;
}
inline ::outer::group::Crew* GroupDestroyedSignal::mutable_destroyer() {
  
  if (destroyer_ == NULL) {
    destroyer_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupDestroyedSignal.destroyer)
  return destroyer_;
}
inline void GroupDestroyedSignal::set_allocated_destroyer(::outer::group::Crew* destroyer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete destroyer_;
  }
  if (destroyer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      destroyer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destroyer, submessage_arena);
    }
    
  } else {
    
  }
  destroyer_ = destroyer;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupDestroyedSignal.destroyer)
}

// -------------------------------------------------------------------

// HandoverOwnerRequest

// string uri = 1;
inline void HandoverOwnerRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerRequest.uri)
  return uri_.GetNoArena();
}
inline void HandoverOwnerRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerRequest.uri)
}
#if LANG_CXX11
inline void HandoverOwnerRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerRequest.uri)
}
#endif
inline void HandoverOwnerRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerRequest.uri)
}
inline void HandoverOwnerRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerRequest.uri)
}
inline ::std::string* HandoverOwnerRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerRequest.uri)
}

// string actor_username = 2;
inline void HandoverOwnerRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void HandoverOwnerRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerRequest.actor_username)
}
#if LANG_CXX11
inline void HandoverOwnerRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerRequest.actor_username)
}
#endif
inline void HandoverOwnerRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerRequest.actor_username)
}
inline void HandoverOwnerRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerRequest.actor_username)
}
inline ::std::string* HandoverOwnerRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerRequest.actor_username)
}

// string new_owner_username = 3;
inline void HandoverOwnerRequest::clear_new_owner_username() {
  new_owner_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerRequest::new_owner_username() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerRequest.new_owner_username)
  return new_owner_username_.GetNoArena();
}
inline void HandoverOwnerRequest::set_new_owner_username(const ::std::string& value) {
  
  new_owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerRequest.new_owner_username)
}
#if LANG_CXX11
inline void HandoverOwnerRequest::set_new_owner_username(::std::string&& value) {
  
  new_owner_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerRequest.new_owner_username)
}
#endif
inline void HandoverOwnerRequest::set_new_owner_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerRequest.new_owner_username)
}
inline void HandoverOwnerRequest::set_new_owner_username(const char* value, size_t size) {
  
  new_owner_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerRequest.new_owner_username)
}
inline ::std::string* HandoverOwnerRequest::mutable_new_owner_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerRequest.new_owner_username)
  return new_owner_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerRequest::release_new_owner_username() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerRequest.new_owner_username)
  
  return new_owner_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerRequest::set_allocated_new_owner_username(::std::string* new_owner_username) {
  if (new_owner_username != NULL) {
    
  } else {
    
  }
  new_owner_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_owner_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerRequest.new_owner_username)
}

// string appkey = 4;
inline void HandoverOwnerRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerRequest.appkey)
  return appkey_.GetNoArena();
}
inline void HandoverOwnerRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerRequest.appkey)
}
#if LANG_CXX11
inline void HandoverOwnerRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerRequest.appkey)
}
#endif
inline void HandoverOwnerRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerRequest.appkey)
}
inline void HandoverOwnerRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerRequest.appkey)
}
inline ::std::string* HandoverOwnerRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerRequest.appkey)
}

// string msg_id = 5;
inline void HandoverOwnerRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void HandoverOwnerRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerRequest.msg_id)
}
#if LANG_CXX11
inline void HandoverOwnerRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerRequest.msg_id)
}
#endif
inline void HandoverOwnerRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerRequest.msg_id)
}
inline void HandoverOwnerRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerRequest.msg_id)
}
inline ::std::string* HandoverOwnerRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerRequest.msg_id)
}

// -------------------------------------------------------------------

// HandoverOwnerResponse

// .common.errcode.EErrorCode ret = 1;
inline void HandoverOwnerResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode HandoverOwnerResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void HandoverOwnerResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerResponse.ret)
}

// string msg_id = 2;
inline void HandoverOwnerResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HandoverOwnerResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.HandoverOwnerResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void HandoverOwnerResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.HandoverOwnerResponse.msg_id)
}
#if LANG_CXX11
inline void HandoverOwnerResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.HandoverOwnerResponse.msg_id)
}
#endif
inline void HandoverOwnerResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.HandoverOwnerResponse.msg_id)
}
inline void HandoverOwnerResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.HandoverOwnerResponse.msg_id)
}
inline ::std::string* HandoverOwnerResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.HandoverOwnerResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandoverOwnerResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.HandoverOwnerResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandoverOwnerResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.HandoverOwnerResponse.msg_id)
}

// -------------------------------------------------------------------

// OwnerChangedSignal

// .outer.group.Crew new_owner = 1;
inline bool OwnerChangedSignal::has_new_owner() const {
  return this != internal_default_instance() && new_owner_ != NULL;
}
inline void OwnerChangedSignal::clear_new_owner() {
  if (GetArenaNoVirtual() == NULL && new_owner_ != NULL) {
    delete new_owner_;
  }
  new_owner_ = NULL;
}
inline const ::outer::group::Crew& OwnerChangedSignal::new_owner() const {
  const ::outer::group::Crew* p = new_owner_;
  // @@protoc_insertion_point(field_get:outer.group.OwnerChangedSignal.new_owner)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* OwnerChangedSignal::release_new_owner() {
  // @@protoc_insertion_point(field_release:outer.group.OwnerChangedSignal.new_owner)
  
  ::outer::group::Crew* temp = new_owner_;
  new_owner_ = NULL;
  return temp;
}
inline ::outer::group::Crew* OwnerChangedSignal::mutable_new_owner() {
  
  if (new_owner_ == NULL) {
    new_owner_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.OwnerChangedSignal.new_owner)
  return new_owner_;
}
inline void OwnerChangedSignal::set_allocated_new_owner(::outer::group::Crew* new_owner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete new_owner_;
  }
  if (new_owner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      new_owner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, new_owner, submessage_arena);
    }
    
  } else {
    
  }
  new_owner_ = new_owner;
  // @@protoc_insertion_point(field_set_allocated:outer.group.OwnerChangedSignal.new_owner)
}

// -------------------------------------------------------------------

// SetGroupNameRequest

// string uri = 1;
inline void SetGroupNameRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameRequest.uri)
  return uri_.GetNoArena();
}
inline void SetGroupNameRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameRequest.uri)
}
#if LANG_CXX11
inline void SetGroupNameRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameRequest.uri)
}
#endif
inline void SetGroupNameRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameRequest.uri)
}
inline void SetGroupNameRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameRequest.uri)
}
inline ::std::string* SetGroupNameRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameRequest.uri)
}

// string actor_username = 2;
inline void SetGroupNameRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void SetGroupNameRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameRequest.actor_username)
}
#if LANG_CXX11
inline void SetGroupNameRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameRequest.actor_username)
}
#endif
inline void SetGroupNameRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameRequest.actor_username)
}
inline void SetGroupNameRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameRequest.actor_username)
}
inline ::std::string* SetGroupNameRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameRequest.actor_username)
}

// string appkey = 3;
inline void SetGroupNameRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetGroupNameRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameRequest.appkey)
}
#if LANG_CXX11
inline void SetGroupNameRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameRequest.appkey)
}
#endif
inline void SetGroupNameRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameRequest.appkey)
}
inline void SetGroupNameRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameRequest.appkey)
}
inline ::std::string* SetGroupNameRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameRequest.appkey)
}

// string group_name = 4;
inline void SetGroupNameRequest::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameRequest::group_name() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameRequest.group_name)
  return group_name_.GetNoArena();
}
inline void SetGroupNameRequest::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameRequest.group_name)
}
#if LANG_CXX11
inline void SetGroupNameRequest::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameRequest.group_name)
}
#endif
inline void SetGroupNameRequest::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameRequest.group_name)
}
inline void SetGroupNameRequest::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameRequest.group_name)
}
inline ::std::string* SetGroupNameRequest::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameRequest.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameRequest::release_group_name() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameRequest.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameRequest.group_name)
}

// string msg_id = 5;
inline void SetGroupNameRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupNameRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameRequest.msg_id)
}
#if LANG_CXX11
inline void SetGroupNameRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameRequest.msg_id)
}
#endif
inline void SetGroupNameRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameRequest.msg_id)
}
inline void SetGroupNameRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameRequest.msg_id)
}
inline ::std::string* SetGroupNameRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameRequest.msg_id)
}

// -------------------------------------------------------------------

// SetGroupNameResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetGroupNameResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetGroupNameResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetGroupNameResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameResponse.ret)
}

// string msg_id = 2;
inline void SetGroupNameResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupNameResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupNameResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupNameResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupNameResponse.msg_id)
}
#if LANG_CXX11
inline void SetGroupNameResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupNameResponse.msg_id)
}
#endif
inline void SetGroupNameResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupNameResponse.msg_id)
}
inline void SetGroupNameResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupNameResponse.msg_id)
}
inline ::std::string* SetGroupNameResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupNameResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupNameResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupNameResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupNameResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupNameResponse.msg_id)
}

// -------------------------------------------------------------------

// GroupNameChangedSignal

// string group_name = 1;
inline void GroupNameChangedSignal::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupNameChangedSignal::group_name() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupNameChangedSignal.group_name)
  return group_name_.GetNoArena();
}
inline void GroupNameChangedSignal::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupNameChangedSignal.group_name)
}
#if LANG_CXX11
inline void GroupNameChangedSignal::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupNameChangedSignal.group_name)
}
#endif
inline void GroupNameChangedSignal::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupNameChangedSignal.group_name)
}
inline void GroupNameChangedSignal::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupNameChangedSignal.group_name)
}
inline ::std::string* GroupNameChangedSignal::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupNameChangedSignal.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupNameChangedSignal::release_group_name() {
  // @@protoc_insertion_point(field_release:outer.group.GroupNameChangedSignal.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupNameChangedSignal::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupNameChangedSignal.group_name)
}

// .outer.group.Crew actor = 2;
inline bool GroupNameChangedSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void GroupNameChangedSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& GroupNameChangedSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.GroupNameChangedSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* GroupNameChangedSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.GroupNameChangedSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* GroupNameChangedSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupNameChangedSignal.actor)
  return actor_;
}
inline void GroupNameChangedSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupNameChangedSignal.actor)
}

// string appkey = 3;
inline void GroupNameChangedSignal::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupNameChangedSignal::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupNameChangedSignal.appkey)
  return appkey_.GetNoArena();
}
inline void GroupNameChangedSignal::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupNameChangedSignal.appkey)
}
#if LANG_CXX11
inline void GroupNameChangedSignal::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupNameChangedSignal.appkey)
}
#endif
inline void GroupNameChangedSignal::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupNameChangedSignal.appkey)
}
inline void GroupNameChangedSignal::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupNameChangedSignal.appkey)
}
inline ::std::string* GroupNameChangedSignal::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupNameChangedSignal.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupNameChangedSignal::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GroupNameChangedSignal.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupNameChangedSignal::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupNameChangedSignal.appkey)
}

// -------------------------------------------------------------------

// SetDescRequest

// string uri = 1;
inline void SetDescRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescRequest.uri)
  return uri_.GetNoArena();
}
inline void SetDescRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescRequest.uri)
}
#if LANG_CXX11
inline void SetDescRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescRequest.uri)
}
#endif
inline void SetDescRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescRequest.uri)
}
inline void SetDescRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescRequest.uri)
}
inline ::std::string* SetDescRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescRequest.uri)
}

// string actor_username = 2;
inline void SetDescRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void SetDescRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescRequest.actor_username)
}
#if LANG_CXX11
inline void SetDescRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescRequest.actor_username)
}
#endif
inline void SetDescRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescRequest.actor_username)
}
inline void SetDescRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescRequest.actor_username)
}
inline ::std::string* SetDescRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescRequest.actor_username)
}

// string appkey = 3;
inline void SetDescRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetDescRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescRequest.appkey)
}
#if LANG_CXX11
inline void SetDescRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescRequest.appkey)
}
#endif
inline void SetDescRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescRequest.appkey)
}
inline void SetDescRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescRequest.appkey)
}
inline ::std::string* SetDescRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescRequest.appkey)
}

// string desc = 4;
inline void SetDescRequest::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescRequest::desc() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescRequest.desc)
  return desc_.GetNoArena();
}
inline void SetDescRequest::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescRequest.desc)
}
#if LANG_CXX11
inline void SetDescRequest::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescRequest.desc)
}
#endif
inline void SetDescRequest::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescRequest.desc)
}
inline void SetDescRequest::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescRequest.desc)
}
inline ::std::string* SetDescRequest::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescRequest.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescRequest::release_desc() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescRequest.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescRequest::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescRequest.desc)
}

// string msg_id = 5;
inline void SetDescRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetDescRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescRequest.msg_id)
}
#if LANG_CXX11
inline void SetDescRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescRequest.msg_id)
}
#endif
inline void SetDescRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescRequest.msg_id)
}
inline void SetDescRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescRequest.msg_id)
}
inline ::std::string* SetDescRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescRequest.msg_id)
}

// -------------------------------------------------------------------

// SetDescResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetDescResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetDescResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetDescResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetDescResponse.ret)
}

// string msg_id = 2;
inline void SetDescResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetDescResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetDescResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetDescResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetDescResponse.msg_id)
}
#if LANG_CXX11
inline void SetDescResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetDescResponse.msg_id)
}
#endif
inline void SetDescResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetDescResponse.msg_id)
}
inline void SetDescResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetDescResponse.msg_id)
}
inline ::std::string* SetDescResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetDescResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetDescResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetDescResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetDescResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetDescResponse.msg_id)
}

// -------------------------------------------------------------------

// DescChangedSignal

// string desc = 1;
inline void DescChangedSignal::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DescChangedSignal::desc() const {
  // @@protoc_insertion_point(field_get:outer.group.DescChangedSignal.desc)
  return desc_.GetNoArena();
}
inline void DescChangedSignal::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DescChangedSignal.desc)
}
#if LANG_CXX11
inline void DescChangedSignal::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DescChangedSignal.desc)
}
#endif
inline void DescChangedSignal::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DescChangedSignal.desc)
}
inline void DescChangedSignal::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DescChangedSignal.desc)
}
inline ::std::string* DescChangedSignal::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DescChangedSignal.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DescChangedSignal::release_desc() {
  // @@protoc_insertion_point(field_release:outer.group.DescChangedSignal.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DescChangedSignal::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DescChangedSignal.desc)
}

// .outer.group.Crew actor = 2;
inline bool DescChangedSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void DescChangedSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& DescChangedSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.DescChangedSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* DescChangedSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.DescChangedSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* DescChangedSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.DescChangedSignal.actor)
  return actor_;
}
inline void DescChangedSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.DescChangedSignal.actor)
}

// string appkey = 3;
inline void DescChangedSignal::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DescChangedSignal::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.DescChangedSignal.appkey)
  return appkey_.GetNoArena();
}
inline void DescChangedSignal::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.DescChangedSignal.appkey)
}
#if LANG_CXX11
inline void DescChangedSignal::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.DescChangedSignal.appkey)
}
#endif
inline void DescChangedSignal::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.DescChangedSignal.appkey)
}
inline void DescChangedSignal::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.DescChangedSignal.appkey)
}
inline ::std::string* DescChangedSignal::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.DescChangedSignal.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DescChangedSignal::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.DescChangedSignal.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DescChangedSignal::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.DescChangedSignal.appkey)
}

// -------------------------------------------------------------------

// ChangeNickRequest

// string uri = 1;
inline void ChangeNickRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickRequest.uri)
  return uri_.GetNoArena();
}
inline void ChangeNickRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickRequest.uri)
}
#if LANG_CXX11
inline void ChangeNickRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickRequest.uri)
}
#endif
inline void ChangeNickRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickRequest.uri)
}
inline void ChangeNickRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickRequest.uri)
}
inline ::std::string* ChangeNickRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickRequest.uri)
}

// string actor_username = 2;
inline void ChangeNickRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void ChangeNickRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickRequest.actor_username)
}
#if LANG_CXX11
inline void ChangeNickRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickRequest.actor_username)
}
#endif
inline void ChangeNickRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickRequest.actor_username)
}
inline void ChangeNickRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickRequest.actor_username)
}
inline ::std::string* ChangeNickRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickRequest.actor_username)
}

// string appkey = 3;
inline void ChangeNickRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ChangeNickRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickRequest.appkey)
}
#if LANG_CXX11
inline void ChangeNickRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickRequest.appkey)
}
#endif
inline void ChangeNickRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickRequest.appkey)
}
inline void ChangeNickRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickRequest.appkey)
}
inline ::std::string* ChangeNickRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickRequest.appkey)
}

// string nick = 4;
inline void ChangeNickRequest::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickRequest::nick() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickRequest.nick)
  return nick_.GetNoArena();
}
inline void ChangeNickRequest::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickRequest.nick)
}
#if LANG_CXX11
inline void ChangeNickRequest::set_nick(::std::string&& value) {
  
  nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickRequest.nick)
}
#endif
inline void ChangeNickRequest::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickRequest.nick)
}
inline void ChangeNickRequest::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickRequest.nick)
}
inline ::std::string* ChangeNickRequest::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickRequest.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickRequest::release_nick() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickRequest.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickRequest::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickRequest.nick)
}

// string msg_id = 5;
inline void ChangeNickRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void ChangeNickRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickRequest.msg_id)
}
#if LANG_CXX11
inline void ChangeNickRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickRequest.msg_id)
}
#endif
inline void ChangeNickRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickRequest.msg_id)
}
inline void ChangeNickRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickRequest.msg_id)
}
inline ::std::string* ChangeNickRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickRequest.msg_id)
}

// -------------------------------------------------------------------

// ChangeNickResponse

// .common.errcode.EErrorCode ret = 1;
inline void ChangeNickResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode ChangeNickResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void ChangeNickResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickResponse.ret)
}

// string msg_id = 2;
inline void ChangeNickResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeNickResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ChangeNickResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void ChangeNickResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ChangeNickResponse.msg_id)
}
#if LANG_CXX11
inline void ChangeNickResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ChangeNickResponse.msg_id)
}
#endif
inline void ChangeNickResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ChangeNickResponse.msg_id)
}
inline void ChangeNickResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ChangeNickResponse.msg_id)
}
inline ::std::string* ChangeNickResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ChangeNickResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNickResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ChangeNickResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNickResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ChangeNickResponse.msg_id)
}

// -------------------------------------------------------------------

// NickChangedSignal

// .outer.group.Crew nick_changed_crew = 1;
inline bool NickChangedSignal::has_nick_changed_crew() const {
  return this != internal_default_instance() && nick_changed_crew_ != NULL;
}
inline void NickChangedSignal::clear_nick_changed_crew() {
  if (GetArenaNoVirtual() == NULL && nick_changed_crew_ != NULL) {
    delete nick_changed_crew_;
  }
  nick_changed_crew_ = NULL;
}
inline const ::outer::group::Crew& NickChangedSignal::nick_changed_crew() const {
  const ::outer::group::Crew* p = nick_changed_crew_;
  // @@protoc_insertion_point(field_get:outer.group.NickChangedSignal.nick_changed_crew)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* NickChangedSignal::release_nick_changed_crew() {
  // @@protoc_insertion_point(field_release:outer.group.NickChangedSignal.nick_changed_crew)
  
  ::outer::group::Crew* temp = nick_changed_crew_;
  nick_changed_crew_ = NULL;
  return temp;
}
inline ::outer::group::Crew* NickChangedSignal::mutable_nick_changed_crew() {
  
  if (nick_changed_crew_ == NULL) {
    nick_changed_crew_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.NickChangedSignal.nick_changed_crew)
  return nick_changed_crew_;
}
inline void NickChangedSignal::set_allocated_nick_changed_crew(::outer::group::Crew* nick_changed_crew) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nick_changed_crew_;
  }
  if (nick_changed_crew) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nick_changed_crew = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nick_changed_crew, submessage_arena);
    }
    
  } else {
    
  }
  nick_changed_crew_ = nick_changed_crew;
  // @@protoc_insertion_point(field_set_allocated:outer.group.NickChangedSignal.nick_changed_crew)
}

// -------------------------------------------------------------------

// GetMyGroupListRequest

// string username = 1;
inline void GetMyGroupListRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMyGroupListRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListRequest.username)
  return username_.GetNoArena();
}
inline void GetMyGroupListRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListRequest.username)
}
#if LANG_CXX11
inline void GetMyGroupListRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetMyGroupListRequest.username)
}
#endif
inline void GetMyGroupListRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetMyGroupListRequest.username)
}
inline void GetMyGroupListRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetMyGroupListRequest.username)
}
inline ::std::string* GetMyGroupListRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetMyGroupListRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMyGroupListRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.GetMyGroupListRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMyGroupListRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetMyGroupListRequest.username)
}

// string appkey = 2;
inline void GetMyGroupListRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMyGroupListRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetMyGroupListRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListRequest.appkey)
}
#if LANG_CXX11
inline void GetMyGroupListRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetMyGroupListRequest.appkey)
}
#endif
inline void GetMyGroupListRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetMyGroupListRequest.appkey)
}
inline void GetMyGroupListRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetMyGroupListRequest.appkey)
}
inline ::std::string* GetMyGroupListRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetMyGroupListRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMyGroupListRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GetMyGroupListRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMyGroupListRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetMyGroupListRequest.appkey)
}

// uint64 modified = 3;
inline void GetMyGroupListRequest::clear_modified() {
  modified_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetMyGroupListRequest::modified() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListRequest.modified)
  return modified_;
}
inline void GetMyGroupListRequest::set_modified(::google::protobuf::uint64 value) {
  
  modified_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListRequest.modified)
}

// string msg_id = 4;
inline void GetMyGroupListRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMyGroupListRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetMyGroupListRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListRequest.msg_id)
}
#if LANG_CXX11
inline void GetMyGroupListRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetMyGroupListRequest.msg_id)
}
#endif
inline void GetMyGroupListRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetMyGroupListRequest.msg_id)
}
inline void GetMyGroupListRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetMyGroupListRequest.msg_id)
}
inline ::std::string* GetMyGroupListRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetMyGroupListRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMyGroupListRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetMyGroupListRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMyGroupListRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetMyGroupListRequest.msg_id)
}

// -------------------------------------------------------------------

// GetMyGroupListResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetMyGroupListResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetMyGroupListResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetMyGroupListResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListResponse.ret)
}

// repeated .outer.group.CrewInGroup crew_in_group = 2;
inline int GetMyGroupListResponse::crew_in_group_size() const {
  return crew_in_group_.size();
}
inline void GetMyGroupListResponse::clear_crew_in_group() {
  crew_in_group_.Clear();
}
inline const ::outer::group::CrewInGroup& GetMyGroupListResponse::crew_in_group(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListResponse.crew_in_group)
  return crew_in_group_.Get(index);
}
inline ::outer::group::CrewInGroup* GetMyGroupListResponse::mutable_crew_in_group(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.GetMyGroupListResponse.crew_in_group)
  return crew_in_group_.Mutable(index);
}
inline ::outer::group::CrewInGroup* GetMyGroupListResponse::add_crew_in_group() {
  // @@protoc_insertion_point(field_add:outer.group.GetMyGroupListResponse.crew_in_group)
  return crew_in_group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::CrewInGroup >*
GetMyGroupListResponse::mutable_crew_in_group() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.GetMyGroupListResponse.crew_in_group)
  return &crew_in_group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::CrewInGroup >&
GetMyGroupListResponse::crew_in_group() const {
  // @@protoc_insertion_point(field_list:outer.group.GetMyGroupListResponse.crew_in_group)
  return crew_in_group_;
}

// string msg_id = 3;
inline void GetMyGroupListResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMyGroupListResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetMyGroupListResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListResponse.msg_id)
}
#if LANG_CXX11
inline void GetMyGroupListResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetMyGroupListResponse.msg_id)
}
#endif
inline void GetMyGroupListResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetMyGroupListResponse.msg_id)
}
inline void GetMyGroupListResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetMyGroupListResponse.msg_id)
}
inline ::std::string* GetMyGroupListResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetMyGroupListResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMyGroupListResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetMyGroupListResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMyGroupListResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetMyGroupListResponse.msg_id)
}

// bool finish_sync = 4;
inline void GetMyGroupListResponse::clear_finish_sync() {
  finish_sync_ = false;
}
inline bool GetMyGroupListResponse::finish_sync() const {
  // @@protoc_insertion_point(field_get:outer.group.GetMyGroupListResponse.finish_sync)
  return finish_sync_;
}
inline void GetMyGroupListResponse::set_finish_sync(bool value) {
  
  finish_sync_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetMyGroupListResponse.finish_sync)
}

// -------------------------------------------------------------------

// GetGroupInfoRequest

// string uri = 1;
inline void GetGroupInfoRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupInfoRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoRequest.uri)
  return uri_.GetNoArena();
}
inline void GetGroupInfoRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupInfoRequest.uri)
}
#if LANG_CXX11
inline void GetGroupInfoRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupInfoRequest.uri)
}
#endif
inline void GetGroupInfoRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupInfoRequest.uri)
}
inline void GetGroupInfoRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupInfoRequest.uri)
}
inline ::std::string* GetGroupInfoRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupInfoRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupInfoRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupInfoRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupInfoRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupInfoRequest.uri)
}

// string appkey = 2;
inline void GetGroupInfoRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupInfoRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetGroupInfoRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupInfoRequest.appkey)
}
#if LANG_CXX11
inline void GetGroupInfoRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupInfoRequest.appkey)
}
#endif
inline void GetGroupInfoRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupInfoRequest.appkey)
}
inline void GetGroupInfoRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupInfoRequest.appkey)
}
inline ::std::string* GetGroupInfoRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupInfoRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupInfoRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupInfoRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupInfoRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupInfoRequest.appkey)
}

// string msg_id = 3;
inline void GetGroupInfoRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupInfoRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetGroupInfoRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupInfoRequest.msg_id)
}
#if LANG_CXX11
inline void GetGroupInfoRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupInfoRequest.msg_id)
}
#endif
inline void GetGroupInfoRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupInfoRequest.msg_id)
}
inline void GetGroupInfoRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupInfoRequest.msg_id)
}
inline ::std::string* GetGroupInfoRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupInfoRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupInfoRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupInfoRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupInfoRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupInfoRequest.msg_id)
}

// -------------------------------------------------------------------

// GetGroupInfoResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetGroupInfoResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetGroupInfoResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetGroupInfoResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetGroupInfoResponse.ret)
}

// .outer.group.GroupInfo group_info = 2;
inline bool GetGroupInfoResponse::has_group_info() const {
  return this != internal_default_instance() && group_info_ != NULL;
}
inline void GetGroupInfoResponse::clear_group_info() {
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) {
    delete group_info_;
  }
  group_info_ = NULL;
}
inline const ::outer::group::GroupInfo& GetGroupInfoResponse::group_info() const {
  const ::outer::group::GroupInfo* p = group_info_;
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoResponse.group_info)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupInfo*>(
      &::outer::group::_GroupInfo_default_instance_);
}
inline ::outer::group::GroupInfo* GetGroupInfoResponse::release_group_info() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupInfoResponse.group_info)
  
  ::outer::group::GroupInfo* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
inline ::outer::group::GroupInfo* GetGroupInfoResponse::mutable_group_info() {
  
  if (group_info_ == NULL) {
    group_info_ = new ::outer::group::GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupInfoResponse.group_info)
  return group_info_;
}
inline void GetGroupInfoResponse::set_allocated_group_info(::outer::group::GroupInfo* group_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_info_;
  }
  if (group_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_info, submessage_arena);
    }
    
  } else {
    
  }
  group_info_ = group_info;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupInfoResponse.group_info)
}

// string msg_id = 3;
inline void GetGroupInfoResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupInfoResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupInfoResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetGroupInfoResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupInfoResponse.msg_id)
}
#if LANG_CXX11
inline void GetGroupInfoResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupInfoResponse.msg_id)
}
#endif
inline void GetGroupInfoResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupInfoResponse.msg_id)
}
inline void GetGroupInfoResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupInfoResponse.msg_id)
}
inline ::std::string* GetGroupInfoResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupInfoResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupInfoResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupInfoResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupInfoResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupInfoResponse.msg_id)
}

// -------------------------------------------------------------------

// GetCrewListRequest

// string uri = 1;
inline void GetCrewListRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCrewListRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListRequest.uri)
  return uri_.GetNoArena();
}
inline void GetCrewListRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListRequest.uri)
}
#if LANG_CXX11
inline void GetCrewListRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetCrewListRequest.uri)
}
#endif
inline void GetCrewListRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetCrewListRequest.uri)
}
inline void GetCrewListRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetCrewListRequest.uri)
}
inline ::std::string* GetCrewListRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCrewListRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.GetCrewListRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCrewListRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetCrewListRequest.uri)
}

// string appkey = 2;
inline void GetCrewListRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCrewListRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetCrewListRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListRequest.appkey)
}
#if LANG_CXX11
inline void GetCrewListRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetCrewListRequest.appkey)
}
#endif
inline void GetCrewListRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetCrewListRequest.appkey)
}
inline void GetCrewListRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetCrewListRequest.appkey)
}
inline ::std::string* GetCrewListRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCrewListRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GetCrewListRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCrewListRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetCrewListRequest.appkey)
}

// string username = 3;
inline void GetCrewListRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCrewListRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListRequest.username)
  return username_.GetNoArena();
}
inline void GetCrewListRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListRequest.username)
}
#if LANG_CXX11
inline void GetCrewListRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetCrewListRequest.username)
}
#endif
inline void GetCrewListRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetCrewListRequest.username)
}
inline void GetCrewListRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetCrewListRequest.username)
}
inline ::std::string* GetCrewListRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCrewListRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.GetCrewListRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCrewListRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetCrewListRequest.username)
}

// uint64 modified = 4;
inline void GetCrewListRequest::clear_modified() {
  modified_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetCrewListRequest::modified() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListRequest.modified)
  return modified_;
}
inline void GetCrewListRequest::set_modified(::google::protobuf::uint64 value) {
  
  modified_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListRequest.modified)
}

// string msg_id = 5;
inline void GetCrewListRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCrewListRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetCrewListRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListRequest.msg_id)
}
#if LANG_CXX11
inline void GetCrewListRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetCrewListRequest.msg_id)
}
#endif
inline void GetCrewListRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetCrewListRequest.msg_id)
}
inline void GetCrewListRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetCrewListRequest.msg_id)
}
inline ::std::string* GetCrewListRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCrewListRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetCrewListRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCrewListRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetCrewListRequest.msg_id)
}

// -------------------------------------------------------------------

// GetCrewListResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetCrewListResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetCrewListResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetCrewListResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListResponse.ret)
}

// repeated .outer.group.CrewDetail crew_detail = 2;
inline int GetCrewListResponse::crew_detail_size() const {
  return crew_detail_.size();
}
inline void GetCrewListResponse::clear_crew_detail() {
  crew_detail_.Clear();
}
inline const ::outer::group::CrewDetail& GetCrewListResponse::crew_detail(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListResponse.crew_detail)
  return crew_detail_.Get(index);
}
inline ::outer::group::CrewDetail* GetCrewListResponse::mutable_crew_detail(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListResponse.crew_detail)
  return crew_detail_.Mutable(index);
}
inline ::outer::group::CrewDetail* GetCrewListResponse::add_crew_detail() {
  // @@protoc_insertion_point(field_add:outer.group.GetCrewListResponse.crew_detail)
  return crew_detail_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::CrewDetail >*
GetCrewListResponse::mutable_crew_detail() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.GetCrewListResponse.crew_detail)
  return &crew_detail_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::CrewDetail >&
GetCrewListResponse::crew_detail() const {
  // @@protoc_insertion_point(field_list:outer.group.GetCrewListResponse.crew_detail)
  return crew_detail_;
}

// string msg_id = 3;
inline void GetCrewListResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetCrewListResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetCrewListResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetCrewListResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetCrewListResponse.msg_id)
}
#if LANG_CXX11
inline void GetCrewListResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetCrewListResponse.msg_id)
}
#endif
inline void GetCrewListResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetCrewListResponse.msg_id)
}
inline void GetCrewListResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetCrewListResponse.msg_id)
}
inline ::std::string* GetCrewListResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetCrewListResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCrewListResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetCrewListResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCrewListResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetCrewListResponse.msg_id)
}

// -------------------------------------------------------------------

// SetAdminRequest

// string uri = 1;
inline void SetAdminRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminRequest.uri)
  return uri_.GetNoArena();
}
inline void SetAdminRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.uri)
}
#if LANG_CXX11
inline void SetAdminRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetAdminRequest.uri)
}
#endif
inline void SetAdminRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminRequest.uri)
}
inline void SetAdminRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminRequest.uri)
}
inline ::std::string* SetAdminRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetAdminRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetAdminRequest.uri)
}

// repeated string admin_username = 2;
inline int SetAdminRequest::admin_username_size() const {
  return admin_username_.size();
}
inline void SetAdminRequest::clear_admin_username() {
  admin_username_.Clear();
}
inline const ::std::string& SetAdminRequest::admin_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminRequest.admin_username)
  return admin_username_.Get(index);
}
inline ::std::string* SetAdminRequest::mutable_admin_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminRequest.admin_username)
  return admin_username_.Mutable(index);
}
inline void SetAdminRequest::set_admin_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.admin_username)
  admin_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SetAdminRequest::set_admin_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.admin_username)
  admin_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SetAdminRequest::set_admin_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  admin_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminRequest.admin_username)
}
inline void SetAdminRequest::set_admin_username(int index, const char* value, size_t size) {
  admin_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminRequest.admin_username)
}
inline ::std::string* SetAdminRequest::add_admin_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.SetAdminRequest.admin_username)
  return admin_username_.Add();
}
inline void SetAdminRequest::add_admin_username(const ::std::string& value) {
  admin_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.SetAdminRequest.admin_username)
}
#if LANG_CXX11
inline void SetAdminRequest::add_admin_username(::std::string&& value) {
  admin_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.SetAdminRequest.admin_username)
}
#endif
inline void SetAdminRequest::add_admin_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  admin_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.SetAdminRequest.admin_username)
}
inline void SetAdminRequest::add_admin_username(const char* value, size_t size) {
  admin_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.SetAdminRequest.admin_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SetAdminRequest::admin_username() const {
  // @@protoc_insertion_point(field_list:outer.group.SetAdminRequest.admin_username)
  return admin_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SetAdminRequest::mutable_admin_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.SetAdminRequest.admin_username)
  return &admin_username_;
}

// string actor_username = 3;
inline void SetAdminRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void SetAdminRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.actor_username)
}
#if LANG_CXX11
inline void SetAdminRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetAdminRequest.actor_username)
}
#endif
inline void SetAdminRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminRequest.actor_username)
}
inline void SetAdminRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminRequest.actor_username)
}
inline ::std::string* SetAdminRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetAdminRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetAdminRequest.actor_username)
}

// string appkey = 4;
inline void SetAdminRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetAdminRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.appkey)
}
#if LANG_CXX11
inline void SetAdminRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetAdminRequest.appkey)
}
#endif
inline void SetAdminRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminRequest.appkey)
}
inline void SetAdminRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminRequest.appkey)
}
inline ::std::string* SetAdminRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetAdminRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetAdminRequest.appkey)
}

// string msg_id = 5;
inline void SetAdminRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetAdminRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetAdminRequest.msg_id)
}
#if LANG_CXX11
inline void SetAdminRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetAdminRequest.msg_id)
}
#endif
inline void SetAdminRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminRequest.msg_id)
}
inline void SetAdminRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminRequest.msg_id)
}
inline ::std::string* SetAdminRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetAdminRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetAdminRequest.msg_id)
}

// -------------------------------------------------------------------

// SetAdminResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetAdminResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetAdminResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetAdminResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetAdminResponse.ret)
}

// string msg_id = 2;
inline void SetAdminResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetAdminResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetAdminResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetAdminResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetAdminResponse.msg_id)
}
#if LANG_CXX11
inline void SetAdminResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetAdminResponse.msg_id)
}
#endif
inline void SetAdminResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetAdminResponse.msg_id)
}
inline void SetAdminResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetAdminResponse.msg_id)
}
inline ::std::string* SetAdminResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetAdminResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAdminResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetAdminResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAdminResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetAdminResponse.msg_id)
}

// -------------------------------------------------------------------

// BeAdminSignal_NewAdmin

// .outer.group.Crew admin = 1;
inline bool BeAdminSignal_NewAdmin::has_admin() const {
  return this != internal_default_instance() && admin_ != NULL;
}
inline void BeAdminSignal_NewAdmin::clear_admin() {
  if (GetArenaNoVirtual() == NULL && admin_ != NULL) {
    delete admin_;
  }
  admin_ = NULL;
}
inline const ::outer::group::Crew& BeAdminSignal_NewAdmin::admin() const {
  const ::outer::group::Crew* p = admin_;
  // @@protoc_insertion_point(field_get:outer.group.BeAdminSignal.NewAdmin.admin)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeAdminSignal_NewAdmin::release_admin() {
  // @@protoc_insertion_point(field_release:outer.group.BeAdminSignal.NewAdmin.admin)
  
  ::outer::group::Crew* temp = admin_;
  admin_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeAdminSignal_NewAdmin::mutable_admin() {
  
  if (admin_ == NULL) {
    admin_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeAdminSignal.NewAdmin.admin)
  return admin_;
}
inline void BeAdminSignal_NewAdmin::set_allocated_admin(::outer::group::Crew* admin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete admin_;
  }
  if (admin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin, submessage_arena);
    }
    
  } else {
    
  }
  admin_ = admin;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeAdminSignal.NewAdmin.admin)
}

// .outer.group.ERole old_role = 2;
inline void BeAdminSignal_NewAdmin::clear_old_role() {
  old_role_ = 0;
}
inline ::outer::group::ERole BeAdminSignal_NewAdmin::old_role() const {
  // @@protoc_insertion_point(field_get:outer.group.BeAdminSignal.NewAdmin.old_role)
  return static_cast< ::outer::group::ERole >(old_role_);
}
inline void BeAdminSignal_NewAdmin::set_old_role(::outer::group::ERole value) {
  
  old_role_ = value;
  // @@protoc_insertion_point(field_set:outer.group.BeAdminSignal.NewAdmin.old_role)
}

// -------------------------------------------------------------------

// BeAdminSignal

// .outer.group.Crew actor = 1;
inline bool BeAdminSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void BeAdminSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& BeAdminSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.BeAdminSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeAdminSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.BeAdminSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeAdminSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeAdminSignal.actor)
  return actor_;
}
inline void BeAdminSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeAdminSignal.actor)
}

// repeated .outer.group.BeAdminSignal.NewAdmin admins = 2;
inline int BeAdminSignal::admins_size() const {
  return admins_.size();
}
inline void BeAdminSignal::clear_admins() {
  admins_.Clear();
}
inline const ::outer::group::BeAdminSignal_NewAdmin& BeAdminSignal::admins(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.BeAdminSignal.admins)
  return admins_.Get(index);
}
inline ::outer::group::BeAdminSignal_NewAdmin* BeAdminSignal::mutable_admins(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.BeAdminSignal.admins)
  return admins_.Mutable(index);
}
inline ::outer::group::BeAdminSignal_NewAdmin* BeAdminSignal::add_admins() {
  // @@protoc_insertion_point(field_add:outer.group.BeAdminSignal.admins)
  return admins_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::BeAdminSignal_NewAdmin >*
BeAdminSignal::mutable_admins() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.BeAdminSignal.admins)
  return &admins_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::BeAdminSignal_NewAdmin >&
BeAdminSignal::admins() const {
  // @@protoc_insertion_point(field_list:outer.group.BeAdminSignal.admins)
  return admins_;
}

// -------------------------------------------------------------------

// AbolishAdminRequest

// string uri = 1;
inline void AbolishAdminRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbolishAdminRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminRequest.uri)
  return uri_.GetNoArena();
}
inline void AbolishAdminRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.uri)
}
#if LANG_CXX11
inline void AbolishAdminRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AbolishAdminRequest.uri)
}
#endif
inline void AbolishAdminRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminRequest.uri)
}
inline void AbolishAdminRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminRequest.uri)
}
inline ::std::string* AbolishAdminRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbolishAdminRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishAdminRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbolishAdminRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishAdminRequest.uri)
}

// repeated string admin_username = 2;
inline int AbolishAdminRequest::admin_username_size() const {
  return admin_username_.size();
}
inline void AbolishAdminRequest::clear_admin_username() {
  admin_username_.Clear();
}
inline const ::std::string& AbolishAdminRequest::admin_username(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminRequest.admin_username)
  return admin_username_.Get(index);
}
inline ::std::string* AbolishAdminRequest::mutable_admin_username(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminRequest.admin_username)
  return admin_username_.Mutable(index);
}
inline void AbolishAdminRequest::set_admin_username(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.admin_username)
  admin_username_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AbolishAdminRequest::set_admin_username(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.admin_username)
  admin_username_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AbolishAdminRequest::set_admin_username(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  admin_username_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminRequest.admin_username)
}
inline void AbolishAdminRequest::set_admin_username(int index, const char* value, size_t size) {
  admin_username_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminRequest.admin_username)
}
inline ::std::string* AbolishAdminRequest::add_admin_username() {
  // @@protoc_insertion_point(field_add_mutable:outer.group.AbolishAdminRequest.admin_username)
  return admin_username_.Add();
}
inline void AbolishAdminRequest::add_admin_username(const ::std::string& value) {
  admin_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:outer.group.AbolishAdminRequest.admin_username)
}
#if LANG_CXX11
inline void AbolishAdminRequest::add_admin_username(::std::string&& value) {
  admin_username_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:outer.group.AbolishAdminRequest.admin_username)
}
#endif
inline void AbolishAdminRequest::add_admin_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  admin_username_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:outer.group.AbolishAdminRequest.admin_username)
}
inline void AbolishAdminRequest::add_admin_username(const char* value, size_t size) {
  admin_username_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:outer.group.AbolishAdminRequest.admin_username)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AbolishAdminRequest::admin_username() const {
  // @@protoc_insertion_point(field_list:outer.group.AbolishAdminRequest.admin_username)
  return admin_username_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AbolishAdminRequest::mutable_admin_username() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.AbolishAdminRequest.admin_username)
  return &admin_username_;
}

// string actor_username = 3;
inline void AbolishAdminRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbolishAdminRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void AbolishAdminRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.actor_username)
}
#if LANG_CXX11
inline void AbolishAdminRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AbolishAdminRequest.actor_username)
}
#endif
inline void AbolishAdminRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminRequest.actor_username)
}
inline void AbolishAdminRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminRequest.actor_username)
}
inline ::std::string* AbolishAdminRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbolishAdminRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishAdminRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbolishAdminRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishAdminRequest.actor_username)
}

// string appkey = 4;
inline void AbolishAdminRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbolishAdminRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminRequest.appkey)
  return appkey_.GetNoArena();
}
inline void AbolishAdminRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.appkey)
}
#if LANG_CXX11
inline void AbolishAdminRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AbolishAdminRequest.appkey)
}
#endif
inline void AbolishAdminRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminRequest.appkey)
}
inline void AbolishAdminRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminRequest.appkey)
}
inline ::std::string* AbolishAdminRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbolishAdminRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishAdminRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbolishAdminRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishAdminRequest.appkey)
}

// string msg_id = 5;
inline void AbolishAdminRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbolishAdminRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void AbolishAdminRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminRequest.msg_id)
}
#if LANG_CXX11
inline void AbolishAdminRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AbolishAdminRequest.msg_id)
}
#endif
inline void AbolishAdminRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminRequest.msg_id)
}
inline void AbolishAdminRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminRequest.msg_id)
}
inline ::std::string* AbolishAdminRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbolishAdminRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishAdminRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbolishAdminRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishAdminRequest.msg_id)
}

// -------------------------------------------------------------------

// AbolishAdminResponse

// .common.errcode.EErrorCode ret = 1;
inline void AbolishAdminResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode AbolishAdminResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void AbolishAdminResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminResponse.ret)
}

// string msg_id = 2;
inline void AbolishAdminResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AbolishAdminResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishAdminResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void AbolishAdminResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.AbolishAdminResponse.msg_id)
}
#if LANG_CXX11
inline void AbolishAdminResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.AbolishAdminResponse.msg_id)
}
#endif
inline void AbolishAdminResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.AbolishAdminResponse.msg_id)
}
inline void AbolishAdminResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.AbolishAdminResponse.msg_id)
}
inline ::std::string* AbolishAdminResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishAdminResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbolishAdminResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishAdminResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AbolishAdminResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishAdminResponse.msg_id)
}

// -------------------------------------------------------------------

// AbolishedAdminSignal_AbolishedAdmin

// .outer.group.Crew admin = 1;
inline bool AbolishedAdminSignal_AbolishedAdmin::has_admin() const {
  return this != internal_default_instance() && admin_ != NULL;
}
inline void AbolishedAdminSignal_AbolishedAdmin::clear_admin() {
  if (GetArenaNoVirtual() == NULL && admin_ != NULL) {
    delete admin_;
  }
  admin_ = NULL;
}
inline const ::outer::group::Crew& AbolishedAdminSignal_AbolishedAdmin::admin() const {
  const ::outer::group::Crew* p = admin_;
  // @@protoc_insertion_point(field_get:outer.group.AbolishedAdminSignal.AbolishedAdmin.admin)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* AbolishedAdminSignal_AbolishedAdmin::release_admin() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishedAdminSignal.AbolishedAdmin.admin)
  
  ::outer::group::Crew* temp = admin_;
  admin_ = NULL;
  return temp;
}
inline ::outer::group::Crew* AbolishedAdminSignal_AbolishedAdmin::mutable_admin() {
  
  if (admin_ == NULL) {
    admin_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishedAdminSignal.AbolishedAdmin.admin)
  return admin_;
}
inline void AbolishedAdminSignal_AbolishedAdmin::set_allocated_admin(::outer::group::Crew* admin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete admin_;
  }
  if (admin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin, submessage_arena);
    }
    
  } else {
    
  }
  admin_ = admin;
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishedAdminSignal.AbolishedAdmin.admin)
}

// .outer.group.ERole new_role = 2;
inline void AbolishedAdminSignal_AbolishedAdmin::clear_new_role() {
  new_role_ = 0;
}
inline ::outer::group::ERole AbolishedAdminSignal_AbolishedAdmin::new_role() const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishedAdminSignal.AbolishedAdmin.new_role)
  return static_cast< ::outer::group::ERole >(new_role_);
}
inline void AbolishedAdminSignal_AbolishedAdmin::set_new_role(::outer::group::ERole value) {
  
  new_role_ = value;
  // @@protoc_insertion_point(field_set:outer.group.AbolishedAdminSignal.AbolishedAdmin.new_role)
}

// -------------------------------------------------------------------

// AbolishedAdminSignal

// .outer.group.Crew actor = 1;
inline bool AbolishedAdminSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void AbolishedAdminSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& AbolishedAdminSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.AbolishedAdminSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* AbolishedAdminSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.AbolishedAdminSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* AbolishedAdminSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishedAdminSignal.actor)
  return actor_;
}
inline void AbolishedAdminSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.AbolishedAdminSignal.actor)
}

// repeated .outer.group.AbolishedAdminSignal.AbolishedAdmin abolished_admins = 2;
inline int AbolishedAdminSignal::abolished_admins_size() const {
  return abolished_admins_.size();
}
inline void AbolishedAdminSignal::clear_abolished_admins() {
  abolished_admins_.Clear();
}
inline const ::outer::group::AbolishedAdminSignal_AbolishedAdmin& AbolishedAdminSignal::abolished_admins(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.AbolishedAdminSignal.abolished_admins)
  return abolished_admins_.Get(index);
}
inline ::outer::group::AbolishedAdminSignal_AbolishedAdmin* AbolishedAdminSignal::mutable_abolished_admins(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.AbolishedAdminSignal.abolished_admins)
  return abolished_admins_.Mutable(index);
}
inline ::outer::group::AbolishedAdminSignal_AbolishedAdmin* AbolishedAdminSignal::add_abolished_admins() {
  // @@protoc_insertion_point(field_add:outer.group.AbolishedAdminSignal.abolished_admins)
  return abolished_admins_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::AbolishedAdminSignal_AbolishedAdmin >*
AbolishedAdminSignal::mutable_abolished_admins() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.AbolishedAdminSignal.abolished_admins)
  return &abolished_admins_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::AbolishedAdminSignal_AbolishedAdmin >&
AbolishedAdminSignal::abolished_admins() const {
  // @@protoc_insertion_point(field_list:outer.group.AbolishedAdminSignal.abolished_admins)
  return abolished_admins_;
}

// -------------------------------------------------------------------

// JoinGroupRequest

// string uri = 1;
inline void JoinGroupRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.uri)
  return uri_.GetNoArena();
}
inline void JoinGroupRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.uri)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupRequest.uri)
}
#endif
inline void JoinGroupRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupRequest.uri)
}
inline void JoinGroupRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupRequest.uri)
}
inline ::std::string* JoinGroupRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupRequest.uri)
}

// string appkey = 2;
inline void JoinGroupRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.appkey)
  return appkey_.GetNoArena();
}
inline void JoinGroupRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.appkey)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupRequest.appkey)
}
#endif
inline void JoinGroupRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupRequest.appkey)
}
inline void JoinGroupRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupRequest.appkey)
}
inline ::std::string* JoinGroupRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupRequest.appkey)
}

// string username = 3;
inline void JoinGroupRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.username)
  return username_.GetNoArena();
}
inline void JoinGroupRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.username)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupRequest.username)
}
#endif
inline void JoinGroupRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupRequest.username)
}
inline void JoinGroupRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupRequest.username)
}
inline ::std::string* JoinGroupRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupRequest.username)
}

// string reason = 4;
inline void JoinGroupRequest::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::reason() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.reason)
  return reason_.GetNoArena();
}
inline void JoinGroupRequest::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.reason)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupRequest.reason)
}
#endif
inline void JoinGroupRequest::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupRequest.reason)
}
inline void JoinGroupRequest::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupRequest.reason)
}
inline ::std::string* JoinGroupRequest::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupRequest.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_reason() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupRequest.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupRequest.reason)
}

// string msg_id = 5;
inline void JoinGroupRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void JoinGroupRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.msg_id)
}
#if LANG_CXX11
inline void JoinGroupRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupRequest.msg_id)
}
#endif
inline void JoinGroupRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupRequest.msg_id)
}
inline void JoinGroupRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupRequest.msg_id)
}
inline ::std::string* JoinGroupRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupRequest.msg_id)
}

// bool require_approve = 6;
inline void JoinGroupRequest::clear_require_approve() {
  require_approve_ = false;
}
inline bool JoinGroupRequest::require_approve() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupRequest.require_approve)
  return require_approve_;
}
inline void JoinGroupRequest::set_require_approve(bool value) {
  
  require_approve_ = value;
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupRequest.require_approve)
}

// -------------------------------------------------------------------

// JoinGroupResponse

// .common.errcode.EErrorCode ret = 1;
inline void JoinGroupResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode JoinGroupResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void JoinGroupResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupResponse.ret)
}

// string msg_id = 2;
inline void JoinGroupResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JoinGroupResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.JoinGroupResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void JoinGroupResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.JoinGroupResponse.msg_id)
}
#if LANG_CXX11
inline void JoinGroupResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.JoinGroupResponse.msg_id)
}
#endif
inline void JoinGroupResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.JoinGroupResponse.msg_id)
}
inline void JoinGroupResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.JoinGroupResponse.msg_id)
}
inline ::std::string* JoinGroupResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.JoinGroupResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinGroupResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.JoinGroupResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinGroupResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.JoinGroupResponse.msg_id)
}

// -------------------------------------------------------------------

// ApplyJoinSignal

// .outer.group.Crew asker = 1;
inline bool ApplyJoinSignal::has_asker() const {
  return this != internal_default_instance() && asker_ != NULL;
}
inline void ApplyJoinSignal::clear_asker() {
  if (GetArenaNoVirtual() == NULL && asker_ != NULL) {
    delete asker_;
  }
  asker_ = NULL;
}
inline const ::outer::group::Crew& ApplyJoinSignal::asker() const {
  const ::outer::group::Crew* p = asker_;
  // @@protoc_insertion_point(field_get:outer.group.ApplyJoinSignal.asker)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* ApplyJoinSignal::release_asker() {
  // @@protoc_insertion_point(field_release:outer.group.ApplyJoinSignal.asker)
  
  ::outer::group::Crew* temp = asker_;
  asker_ = NULL;
  return temp;
}
inline ::outer::group::Crew* ApplyJoinSignal::mutable_asker() {
  
  if (asker_ == NULL) {
    asker_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.ApplyJoinSignal.asker)
  return asker_;
}
inline void ApplyJoinSignal::set_allocated_asker(::outer::group::Crew* asker) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete asker_;
  }
  if (asker) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asker = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asker, submessage_arena);
    }
    
  } else {
    
  }
  asker_ = asker;
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApplyJoinSignal.asker)
}

// string reason = 2;
inline void ApplyJoinSignal::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApplyJoinSignal::reason() const {
  // @@protoc_insertion_point(field_get:outer.group.ApplyJoinSignal.reason)
  return reason_.GetNoArena();
}
inline void ApplyJoinSignal::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApplyJoinSignal.reason)
}
#if LANG_CXX11
inline void ApplyJoinSignal::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApplyJoinSignal.reason)
}
#endif
inline void ApplyJoinSignal::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApplyJoinSignal.reason)
}
inline void ApplyJoinSignal::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApplyJoinSignal.reason)
}
inline ::std::string* ApplyJoinSignal::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApplyJoinSignal.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyJoinSignal::release_reason() {
  // @@protoc_insertion_point(field_release:outer.group.ApplyJoinSignal.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyJoinSignal::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApplyJoinSignal.reason)
}

// -------------------------------------------------------------------

// ApproveJoinRequest

// string uri = 1;
inline void ApproveJoinRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinRequest.uri)
  return uri_.GetNoArena();
}
inline void ApproveJoinRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinRequest.uri)
}
#if LANG_CXX11
inline void ApproveJoinRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinRequest.uri)
}
#endif
inline void ApproveJoinRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinRequest.uri)
}
inline void ApproveJoinRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinRequest.uri)
}
inline ::std::string* ApproveJoinRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinRequest.uri)
}

// string appkey = 2;
inline void ApproveJoinRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinRequest.appkey)
  return appkey_.GetNoArena();
}
inline void ApproveJoinRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinRequest.appkey)
}
#if LANG_CXX11
inline void ApproveJoinRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinRequest.appkey)
}
#endif
inline void ApproveJoinRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinRequest.appkey)
}
inline void ApproveJoinRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinRequest.appkey)
}
inline ::std::string* ApproveJoinRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinRequest.appkey)
}

// string asker_username = 3;
inline void ApproveJoinRequest::clear_asker_username() {
  asker_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinRequest::asker_username() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinRequest.asker_username)
  return asker_username_.GetNoArena();
}
inline void ApproveJoinRequest::set_asker_username(const ::std::string& value) {
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinRequest.asker_username)
}
#if LANG_CXX11
inline void ApproveJoinRequest::set_asker_username(::std::string&& value) {
  
  asker_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinRequest.asker_username)
}
#endif
inline void ApproveJoinRequest::set_asker_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinRequest.asker_username)
}
inline void ApproveJoinRequest::set_asker_username(const char* value, size_t size) {
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinRequest.asker_username)
}
inline ::std::string* ApproveJoinRequest::mutable_asker_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinRequest.asker_username)
  return asker_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinRequest::release_asker_username() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinRequest.asker_username)
  
  return asker_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinRequest::set_allocated_asker_username(::std::string* asker_username) {
  if (asker_username != NULL) {
    
  } else {
    
  }
  asker_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asker_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinRequest.asker_username)
}

// string actor_username = 4;
inline void ApproveJoinRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void ApproveJoinRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinRequest.actor_username)
}
#if LANG_CXX11
inline void ApproveJoinRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinRequest.actor_username)
}
#endif
inline void ApproveJoinRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinRequest.actor_username)
}
inline void ApproveJoinRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinRequest.actor_username)
}
inline ::std::string* ApproveJoinRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinRequest.actor_username)
}

// string msg_id = 5;
inline void ApproveJoinRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void ApproveJoinRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinRequest.msg_id)
}
#if LANG_CXX11
inline void ApproveJoinRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinRequest.msg_id)
}
#endif
inline void ApproveJoinRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinRequest.msg_id)
}
inline void ApproveJoinRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinRequest.msg_id)
}
inline ::std::string* ApproveJoinRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinRequest.msg_id)
}

// -------------------------------------------------------------------

// DirectlyJoinSignal

// .outer.group.Crew join = 1;
inline bool DirectlyJoinSignal::has_join() const {
  return this != internal_default_instance() && join_ != NULL;
}
inline void DirectlyJoinSignal::clear_join() {
  if (GetArenaNoVirtual() == NULL && join_ != NULL) {
    delete join_;
  }
  join_ = NULL;
}
inline const ::outer::group::Crew& DirectlyJoinSignal::join() const {
  const ::outer::group::Crew* p = join_;
  // @@protoc_insertion_point(field_get:outer.group.DirectlyJoinSignal.join)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* DirectlyJoinSignal::release_join() {
  // @@protoc_insertion_point(field_release:outer.group.DirectlyJoinSignal.join)
  
  ::outer::group::Crew* temp = join_;
  join_ = NULL;
  return temp;
}
inline ::outer::group::Crew* DirectlyJoinSignal::mutable_join() {
  
  if (join_ == NULL) {
    join_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.DirectlyJoinSignal.join)
  return join_;
}
inline void DirectlyJoinSignal::set_allocated_join(::outer::group::Crew* join) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete join_;
  }
  if (join) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      join = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, join, submessage_arena);
    }
    
  } else {
    
  }
  join_ = join;
  // @@protoc_insertion_point(field_set_allocated:outer.group.DirectlyJoinSignal.join)
}

// -------------------------------------------------------------------

// ApproveJoinResponse

// .common.errcode.EErrorCode ret = 1;
inline void ApproveJoinResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode ApproveJoinResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void ApproveJoinResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinResponse.ret)
}

// string msg_id = 2;
inline void ApproveJoinResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApproveJoinResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.ApproveJoinResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void ApproveJoinResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.ApproveJoinResponse.msg_id)
}
#if LANG_CXX11
inline void ApproveJoinResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.ApproveJoinResponse.msg_id)
}
#endif
inline void ApproveJoinResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.ApproveJoinResponse.msg_id)
}
inline void ApproveJoinResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.ApproveJoinResponse.msg_id)
}
inline ::std::string* ApproveJoinResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.ApproveJoinResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApproveJoinResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.ApproveJoinResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApproveJoinResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.ApproveJoinResponse.msg_id)
}

// -------------------------------------------------------------------

// BeApprovedJoinSignal

// .outer.group.Crew asker = 1;
inline bool BeApprovedJoinSignal::has_asker() const {
  return this != internal_default_instance() && asker_ != NULL;
}
inline void BeApprovedJoinSignal::clear_asker() {
  if (GetArenaNoVirtual() == NULL && asker_ != NULL) {
    delete asker_;
  }
  asker_ = NULL;
}
inline const ::outer::group::Crew& BeApprovedJoinSignal::asker() const {
  const ::outer::group::Crew* p = asker_;
  // @@protoc_insertion_point(field_get:outer.group.BeApprovedJoinSignal.asker)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeApprovedJoinSignal::release_asker() {
  // @@protoc_insertion_point(field_release:outer.group.BeApprovedJoinSignal.asker)
  
  ::outer::group::Crew* temp = asker_;
  asker_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeApprovedJoinSignal::mutable_asker() {
  
  if (asker_ == NULL) {
    asker_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeApprovedJoinSignal.asker)
  return asker_;
}
inline void BeApprovedJoinSignal::set_allocated_asker(::outer::group::Crew* asker) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete asker_;
  }
  if (asker) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      asker = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asker, submessage_arena);
    }
    
  } else {
    
  }
  asker_ = asker;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeApprovedJoinSignal.asker)
}

// .outer.group.Crew approve_actor = 2;
inline bool BeApprovedJoinSignal::has_approve_actor() const {
  return this != internal_default_instance() && approve_actor_ != NULL;
}
inline void BeApprovedJoinSignal::clear_approve_actor() {
  if (GetArenaNoVirtual() == NULL && approve_actor_ != NULL) {
    delete approve_actor_;
  }
  approve_actor_ = NULL;
}
inline const ::outer::group::Crew& BeApprovedJoinSignal::approve_actor() const {
  const ::outer::group::Crew* p = approve_actor_;
  // @@protoc_insertion_point(field_get:outer.group.BeApprovedJoinSignal.approve_actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeApprovedJoinSignal::release_approve_actor() {
  // @@protoc_insertion_point(field_release:outer.group.BeApprovedJoinSignal.approve_actor)
  
  ::outer::group::Crew* temp = approve_actor_;
  approve_actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeApprovedJoinSignal::mutable_approve_actor() {
  
  if (approve_actor_ == NULL) {
    approve_actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeApprovedJoinSignal.approve_actor)
  return approve_actor_;
}
inline void BeApprovedJoinSignal::set_allocated_approve_actor(::outer::group::Crew* approve_actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete approve_actor_;
  }
  if (approve_actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      approve_actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, approve_actor, submessage_arena);
    }
    
  } else {
    
  }
  approve_actor_ = approve_actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeApprovedJoinSignal.approve_actor)
}

// -------------------------------------------------------------------

// RefuseJoinRequest

// string uri = 1;
inline void RefuseJoinRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.uri)
  return uri_.GetNoArena();
}
inline void RefuseJoinRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.uri)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.uri)
}
#endif
inline void RefuseJoinRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.uri)
}
inline void RefuseJoinRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.uri)
}
inline ::std::string* RefuseJoinRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.uri)
}

// string appkey = 2;
inline void RefuseJoinRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.appkey)
  return appkey_.GetNoArena();
}
inline void RefuseJoinRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.appkey)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.appkey)
}
#endif
inline void RefuseJoinRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.appkey)
}
inline void RefuseJoinRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.appkey)
}
inline ::std::string* RefuseJoinRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.appkey)
}

// string asker_username = 3;
inline void RefuseJoinRequest::clear_asker_username() {
  asker_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::asker_username() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.asker_username)
  return asker_username_.GetNoArena();
}
inline void RefuseJoinRequest::set_asker_username(const ::std::string& value) {
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.asker_username)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_asker_username(::std::string&& value) {
  
  asker_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.asker_username)
}
#endif
inline void RefuseJoinRequest::set_asker_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.asker_username)
}
inline void RefuseJoinRequest::set_asker_username(const char* value, size_t size) {
  
  asker_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.asker_username)
}
inline ::std::string* RefuseJoinRequest::mutable_asker_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.asker_username)
  return asker_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_asker_username() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.asker_username)
  
  return asker_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_asker_username(::std::string* asker_username) {
  if (asker_username != NULL) {
    
  } else {
    
  }
  asker_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asker_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.asker_username)
}

// string actor_username = 4;
inline void RefuseJoinRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void RefuseJoinRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.actor_username)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.actor_username)
}
#endif
inline void RefuseJoinRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.actor_username)
}
inline void RefuseJoinRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.actor_username)
}
inline ::std::string* RefuseJoinRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.actor_username)
}

// string refuse_reason = 5;
inline void RefuseJoinRequest::clear_refuse_reason() {
  refuse_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::refuse_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.refuse_reason)
  return refuse_reason_.GetNoArena();
}
inline void RefuseJoinRequest::set_refuse_reason(const ::std::string& value) {
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.refuse_reason)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_refuse_reason(::std::string&& value) {
  
  refuse_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.refuse_reason)
}
#endif
inline void RefuseJoinRequest::set_refuse_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.refuse_reason)
}
inline void RefuseJoinRequest::set_refuse_reason(const char* value, size_t size) {
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.refuse_reason)
}
inline ::std::string* RefuseJoinRequest::mutable_refuse_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.refuse_reason)
  return refuse_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_refuse_reason() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.refuse_reason)
  
  return refuse_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_refuse_reason(::std::string* refuse_reason) {
  if (refuse_reason != NULL) {
    
  } else {
    
  }
  refuse_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), refuse_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.refuse_reason)
}

// string msg_id = 6;
inline void RefuseJoinRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void RefuseJoinRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinRequest.msg_id)
}
#if LANG_CXX11
inline void RefuseJoinRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinRequest.msg_id)
}
#endif
inline void RefuseJoinRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinRequest.msg_id)
}
inline void RefuseJoinRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinRequest.msg_id)
}
inline ::std::string* RefuseJoinRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinRequest.msg_id)
}

// -------------------------------------------------------------------

// RefuseJoinResponse

// .common.errcode.EErrorCode ret = 1;
inline void RefuseJoinResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode RefuseJoinResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void RefuseJoinResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinResponse.ret)
}

// string msg_id = 2;
inline void RefuseJoinResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RefuseJoinResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.RefuseJoinResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void RefuseJoinResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.RefuseJoinResponse.msg_id)
}
#if LANG_CXX11
inline void RefuseJoinResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.RefuseJoinResponse.msg_id)
}
#endif
inline void RefuseJoinResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.RefuseJoinResponse.msg_id)
}
inline void RefuseJoinResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.RefuseJoinResponse.msg_id)
}
inline ::std::string* RefuseJoinResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.RefuseJoinResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RefuseJoinResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.RefuseJoinResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RefuseJoinResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.RefuseJoinResponse.msg_id)
}

// -------------------------------------------------------------------

// BeRefuseJoinSignal

// .outer.group.Crew refuse_actor = 1;
inline bool BeRefuseJoinSignal::has_refuse_actor() const {
  return this != internal_default_instance() && refuse_actor_ != NULL;
}
inline void BeRefuseJoinSignal::clear_refuse_actor() {
  if (GetArenaNoVirtual() == NULL && refuse_actor_ != NULL) {
    delete refuse_actor_;
  }
  refuse_actor_ = NULL;
}
inline const ::outer::group::Crew& BeRefuseJoinSignal::refuse_actor() const {
  const ::outer::group::Crew* p = refuse_actor_;
  // @@protoc_insertion_point(field_get:outer.group.BeRefuseJoinSignal.refuse_actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* BeRefuseJoinSignal::release_refuse_actor() {
  // @@protoc_insertion_point(field_release:outer.group.BeRefuseJoinSignal.refuse_actor)
  
  ::outer::group::Crew* temp = refuse_actor_;
  refuse_actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* BeRefuseJoinSignal::mutable_refuse_actor() {
  
  if (refuse_actor_ == NULL) {
    refuse_actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.BeRefuseJoinSignal.refuse_actor)
  return refuse_actor_;
}
inline void BeRefuseJoinSignal::set_allocated_refuse_actor(::outer::group::Crew* refuse_actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete refuse_actor_;
  }
  if (refuse_actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      refuse_actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, refuse_actor, submessage_arena);
    }
    
  } else {
    
  }
  refuse_actor_ = refuse_actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeRefuseJoinSignal.refuse_actor)
}

// string refuse_reason = 2;
inline void BeRefuseJoinSignal::clear_refuse_reason() {
  refuse_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BeRefuseJoinSignal::refuse_reason() const {
  // @@protoc_insertion_point(field_get:outer.group.BeRefuseJoinSignal.refuse_reason)
  return refuse_reason_.GetNoArena();
}
inline void BeRefuseJoinSignal::set_refuse_reason(const ::std::string& value) {
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.BeRefuseJoinSignal.refuse_reason)
}
#if LANG_CXX11
inline void BeRefuseJoinSignal::set_refuse_reason(::std::string&& value) {
  
  refuse_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.BeRefuseJoinSignal.refuse_reason)
}
#endif
inline void BeRefuseJoinSignal::set_refuse_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.BeRefuseJoinSignal.refuse_reason)
}
inline void BeRefuseJoinSignal::set_refuse_reason(const char* value, size_t size) {
  
  refuse_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.BeRefuseJoinSignal.refuse_reason)
}
inline ::std::string* BeRefuseJoinSignal::mutable_refuse_reason() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.BeRefuseJoinSignal.refuse_reason)
  return refuse_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BeRefuseJoinSignal::release_refuse_reason() {
  // @@protoc_insertion_point(field_release:outer.group.BeRefuseJoinSignal.refuse_reason)
  
  return refuse_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BeRefuseJoinSignal::set_allocated_refuse_reason(::std::string* refuse_reason) {
  if (refuse_reason != NULL) {
    
  } else {
    
  }
  refuse_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), refuse_reason);
  // @@protoc_insertion_point(field_set_allocated:outer.group.BeRefuseJoinSignal.refuse_reason)
}

// -------------------------------------------------------------------

// SetSilentRequest

// string uri = 1;
inline void SetSilentRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSilentRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.uri)
  return uri_.GetNoArena();
}
inline void SetSilentRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.uri)
}
#if LANG_CXX11
inline void SetSilentRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetSilentRequest.uri)
}
#endif
inline void SetSilentRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetSilentRequest.uri)
}
inline void SetSilentRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetSilentRequest.uri)
}
inline ::std::string* SetSilentRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetSilentRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSilentRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetSilentRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSilentRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetSilentRequest.uri)
}

// string appkey = 2;
inline void SetSilentRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSilentRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetSilentRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.appkey)
}
#if LANG_CXX11
inline void SetSilentRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetSilentRequest.appkey)
}
#endif
inline void SetSilentRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetSilentRequest.appkey)
}
inline void SetSilentRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetSilentRequest.appkey)
}
inline ::std::string* SetSilentRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetSilentRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSilentRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetSilentRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSilentRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetSilentRequest.appkey)
}

// string username = 3;
inline void SetSilentRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSilentRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.username)
  return username_.GetNoArena();
}
inline void SetSilentRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.username)
}
#if LANG_CXX11
inline void SetSilentRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetSilentRequest.username)
}
#endif
inline void SetSilentRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetSilentRequest.username)
}
inline void SetSilentRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetSilentRequest.username)
}
inline ::std::string* SetSilentRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetSilentRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSilentRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetSilentRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSilentRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetSilentRequest.username)
}

// bool is_silent = 4;
inline void SetSilentRequest::clear_is_silent() {
  is_silent_ = false;
}
inline bool SetSilentRequest::is_silent() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.is_silent)
  return is_silent_;
}
inline void SetSilentRequest::set_is_silent(bool value) {
  
  is_silent_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.is_silent)
}

// string msg_id = 5;
inline void SetSilentRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSilentRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetSilentRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.msg_id)
}
#if LANG_CXX11
inline void SetSilentRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetSilentRequest.msg_id)
}
#endif
inline void SetSilentRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetSilentRequest.msg_id)
}
inline void SetSilentRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetSilentRequest.msg_id)
}
inline ::std::string* SetSilentRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetSilentRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSilentRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetSilentRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSilentRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetSilentRequest.msg_id)
}

// .common.enumeration.EClientType from_client_type = 6;
inline void SetSilentRequest::clear_from_client_type() {
  from_client_type_ = 0;
}
inline ::common::enumeration::EClientType SetSilentRequest::from_client_type() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentRequest.from_client_type)
  return static_cast< ::common::enumeration::EClientType >(from_client_type_);
}
inline void SetSilentRequest::set_from_client_type(::common::enumeration::EClientType value) {
  
  from_client_type_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetSilentRequest.from_client_type)
}

// -------------------------------------------------------------------

// SetSilentResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetSilentResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetSilentResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetSilentResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetSilentResponse.ret)
}

// string msg_id = 2;
inline void SetSilentResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSilentResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetSilentResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetSilentResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetSilentResponse.msg_id)
}
#if LANG_CXX11
inline void SetSilentResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetSilentResponse.msg_id)
}
#endif
inline void SetSilentResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetSilentResponse.msg_id)
}
inline void SetSilentResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetSilentResponse.msg_id)
}
inline ::std::string* SetSilentResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetSilentResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSilentResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetSilentResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSilentResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetSilentResponse.msg_id)
}

// -------------------------------------------------------------------

// GetGroupTagListRequest

// string appkey = 1;
inline void GetGroupTagListRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupTagListRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupTagListRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetGroupTagListRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupTagListRequest.appkey)
}
#if LANG_CXX11
inline void GetGroupTagListRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupTagListRequest.appkey)
}
#endif
inline void GetGroupTagListRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupTagListRequest.appkey)
}
inline void GetGroupTagListRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupTagListRequest.appkey)
}
inline ::std::string* GetGroupTagListRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupTagListRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupTagListRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupTagListRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupTagListRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupTagListRequest.appkey)
}

// -------------------------------------------------------------------

// GetGroupTagListResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetGroupTagListResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetGroupTagListResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupTagListResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetGroupTagListResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetGroupTagListResponse.ret)
}

// repeated .outer.group.GroupTag group_tag = 2;
inline int GetGroupTagListResponse::group_tag_size() const {
  return group_tag_.size();
}
inline void GetGroupTagListResponse::clear_group_tag() {
  group_tag_.Clear();
}
inline const ::outer::group::GroupTag& GetGroupTagListResponse::group_tag(int index) const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupTagListResponse.group_tag)
  return group_tag_.Get(index);
}
inline ::outer::group::GroupTag* GetGroupTagListResponse::mutable_group_tag(int index) {
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupTagListResponse.group_tag)
  return group_tag_.Mutable(index);
}
inline ::outer::group::GroupTag* GetGroupTagListResponse::add_group_tag() {
  // @@protoc_insertion_point(field_add:outer.group.GetGroupTagListResponse.group_tag)
  return group_tag_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::outer::group::GroupTag >*
GetGroupTagListResponse::mutable_group_tag() {
  // @@protoc_insertion_point(field_mutable_list:outer.group.GetGroupTagListResponse.group_tag)
  return &group_tag_;
}
inline const ::google::protobuf::RepeatedPtrField< ::outer::group::GroupTag >&
GetGroupTagListResponse::group_tag() const {
  // @@protoc_insertion_point(field_list:outer.group.GetGroupTagListResponse.group_tag)
  return group_tag_;
}

// -------------------------------------------------------------------

// SetGroupTagRequest

// string uri = 1;
inline void SetGroupTagRequest::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupTagRequest::uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagRequest.uri)
  return uri_.GetNoArena();
}
inline void SetGroupTagRequest::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagRequest.uri)
}
#if LANG_CXX11
inline void SetGroupTagRequest::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupTagRequest.uri)
}
#endif
inline void SetGroupTagRequest::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupTagRequest.uri)
}
inline void SetGroupTagRequest::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupTagRequest.uri)
}
inline ::std::string* SetGroupTagRequest::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupTagRequest.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupTagRequest::release_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupTagRequest.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupTagRequest::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupTagRequest.uri)
}

// string actor_username = 2;
inline void SetGroupTagRequest::clear_actor_username() {
  actor_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupTagRequest::actor_username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagRequest.actor_username)
  return actor_username_.GetNoArena();
}
inline void SetGroupTagRequest::set_actor_username(const ::std::string& value) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagRequest.actor_username)
}
#if LANG_CXX11
inline void SetGroupTagRequest::set_actor_username(::std::string&& value) {
  
  actor_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupTagRequest.actor_username)
}
#endif
inline void SetGroupTagRequest::set_actor_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupTagRequest.actor_username)
}
inline void SetGroupTagRequest::set_actor_username(const char* value, size_t size) {
  
  actor_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupTagRequest.actor_username)
}
inline ::std::string* SetGroupTagRequest::mutable_actor_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupTagRequest.actor_username)
  return actor_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupTagRequest::release_actor_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupTagRequest.actor_username)
  
  return actor_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupTagRequest::set_allocated_actor_username(::std::string* actor_username) {
  if (actor_username != NULL) {
    
  } else {
    
  }
  actor_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupTagRequest.actor_username)
}

// string appkey = 3;
inline void SetGroupTagRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupTagRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetGroupTagRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagRequest.appkey)
}
#if LANG_CXX11
inline void SetGroupTagRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupTagRequest.appkey)
}
#endif
inline void SetGroupTagRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupTagRequest.appkey)
}
inline void SetGroupTagRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupTagRequest.appkey)
}
inline ::std::string* SetGroupTagRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupTagRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupTagRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupTagRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupTagRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupTagRequest.appkey)
}

// uint64 group_tag_id = 4;
inline void SetGroupTagRequest::clear_group_tag_id() {
  group_tag_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetGroupTagRequest::group_tag_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagRequest.group_tag_id)
  return group_tag_id_;
}
inline void SetGroupTagRequest::set_group_tag_id(::google::protobuf::uint64 value) {
  
  group_tag_id_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagRequest.group_tag_id)
}

// string msg_id = 5;
inline void SetGroupTagRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupTagRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupTagRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagRequest.msg_id)
}
#if LANG_CXX11
inline void SetGroupTagRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupTagRequest.msg_id)
}
#endif
inline void SetGroupTagRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupTagRequest.msg_id)
}
inline void SetGroupTagRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupTagRequest.msg_id)
}
inline ::std::string* SetGroupTagRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupTagRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupTagRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupTagRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupTagRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupTagRequest.msg_id)
}

// -------------------------------------------------------------------

// SetGroupTagResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetGroupTagResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetGroupTagResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetGroupTagResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagResponse.ret)
}

// string msg_id = 2;
inline void SetGroupTagResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupTagResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupTagResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupTagResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupTagResponse.msg_id)
}
#if LANG_CXX11
inline void SetGroupTagResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupTagResponse.msg_id)
}
#endif
inline void SetGroupTagResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupTagResponse.msg_id)
}
inline void SetGroupTagResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupTagResponse.msg_id)
}
inline ::std::string* SetGroupTagResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupTagResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupTagResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupTagResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupTagResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupTagResponse.msg_id)
}

// -------------------------------------------------------------------

// GroupTagChangedSignal

// .outer.group.GroupTag group_tag = 1;
inline bool GroupTagChangedSignal::has_group_tag() const {
  return this != internal_default_instance() && group_tag_ != NULL;
}
inline void GroupTagChangedSignal::clear_group_tag() {
  if (GetArenaNoVirtual() == NULL && group_tag_ != NULL) {
    delete group_tag_;
  }
  group_tag_ = NULL;
}
inline const ::outer::group::GroupTag& GroupTagChangedSignal::group_tag() const {
  const ::outer::group::GroupTag* p = group_tag_;
  // @@protoc_insertion_point(field_get:outer.group.GroupTagChangedSignal.group_tag)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::GroupTag*>(
      &::outer::group::_GroupTag_default_instance_);
}
inline ::outer::group::GroupTag* GroupTagChangedSignal::release_group_tag() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTagChangedSignal.group_tag)
  
  ::outer::group::GroupTag* temp = group_tag_;
  group_tag_ = NULL;
  return temp;
}
inline ::outer::group::GroupTag* GroupTagChangedSignal::mutable_group_tag() {
  
  if (group_tag_ == NULL) {
    group_tag_ = new ::outer::group::GroupTag;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTagChangedSignal.group_tag)
  return group_tag_;
}
inline void GroupTagChangedSignal::set_allocated_group_tag(::outer::group::GroupTag* group_tag) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete group_tag_;
  }
  if (group_tag) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_tag = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_tag, submessage_arena);
    }
    
  } else {
    
  }
  group_tag_ = group_tag;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTagChangedSignal.group_tag)
}

// .outer.group.Crew actor = 2;
inline bool GroupTagChangedSignal::has_actor() const {
  return this != internal_default_instance() && actor_ != NULL;
}
inline void GroupTagChangedSignal::clear_actor() {
  if (GetArenaNoVirtual() == NULL && actor_ != NULL) {
    delete actor_;
  }
  actor_ = NULL;
}
inline const ::outer::group::Crew& GroupTagChangedSignal::actor() const {
  const ::outer::group::Crew* p = actor_;
  // @@protoc_insertion_point(field_get:outer.group.GroupTagChangedSignal.actor)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::Crew*>(
      &::outer::group::_Crew_default_instance_);
}
inline ::outer::group::Crew* GroupTagChangedSignal::release_actor() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTagChangedSignal.actor)
  
  ::outer::group::Crew* temp = actor_;
  actor_ = NULL;
  return temp;
}
inline ::outer::group::Crew* GroupTagChangedSignal::mutable_actor() {
  
  if (actor_ == NULL) {
    actor_ = new ::outer::group::Crew;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTagChangedSignal.actor)
  return actor_;
}
inline void GroupTagChangedSignal::set_allocated_actor(::outer::group::Crew* actor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actor_;
  }
  if (actor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actor, submessage_arena);
    }
    
  } else {
    
  }
  actor_ = actor;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTagChangedSignal.actor)
}

// string appkey = 3;
inline void GroupTagChangedSignal::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupTagChangedSignal::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GroupTagChangedSignal.appkey)
  return appkey_.GetNoArena();
}
inline void GroupTagChangedSignal::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GroupTagChangedSignal.appkey)
}
#if LANG_CXX11
inline void GroupTagChangedSignal::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GroupTagChangedSignal.appkey)
}
#endif
inline void GroupTagChangedSignal::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GroupTagChangedSignal.appkey)
}
inline void GroupTagChangedSignal::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GroupTagChangedSignal.appkey)
}
inline ::std::string* GroupTagChangedSignal::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GroupTagChangedSignal.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupTagChangedSignal::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GroupTagChangedSignal.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupTagChangedSignal::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GroupTagChangedSignal.appkey)
}

// -------------------------------------------------------------------

// SetGroupAssemblyPointRequest

// string setter_username = 1;
inline void SetGroupAssemblyPointRequest::clear_setter_username() {
  setter_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupAssemblyPointRequest::setter_username() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointRequest.setter_username)
  return setter_username_.GetNoArena();
}
inline void SetGroupAssemblyPointRequest::set_setter_username(const ::std::string& value) {
  
  setter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointRequest.setter_username)
}
#if LANG_CXX11
inline void SetGroupAssemblyPointRequest::set_setter_username(::std::string&& value) {
  
  setter_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupAssemblyPointRequest.setter_username)
}
#endif
inline void SetGroupAssemblyPointRequest::set_setter_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  setter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupAssemblyPointRequest.setter_username)
}
inline void SetGroupAssemblyPointRequest::set_setter_username(const char* value, size_t size) {
  
  setter_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupAssemblyPointRequest.setter_username)
}
inline ::std::string* SetGroupAssemblyPointRequest::mutable_setter_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointRequest.setter_username)
  return setter_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupAssemblyPointRequest::release_setter_username() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointRequest.setter_username)
  
  return setter_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupAssemblyPointRequest::set_allocated_setter_username(::std::string* setter_username) {
  if (setter_username != NULL) {
    
  } else {
    
  }
  setter_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), setter_username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointRequest.setter_username)
}

// string appkey = 2;
inline void SetGroupAssemblyPointRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupAssemblyPointRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointRequest.appkey)
  return appkey_.GetNoArena();
}
inline void SetGroupAssemblyPointRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointRequest.appkey)
}
#if LANG_CXX11
inline void SetGroupAssemblyPointRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupAssemblyPointRequest.appkey)
}
#endif
inline void SetGroupAssemblyPointRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupAssemblyPointRequest.appkey)
}
inline void SetGroupAssemblyPointRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupAssemblyPointRequest.appkey)
}
inline ::std::string* SetGroupAssemblyPointRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupAssemblyPointRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupAssemblyPointRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointRequest.appkey)
}

// string group_uri = 3;
inline void SetGroupAssemblyPointRequest::clear_group_uri() {
  group_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupAssemblyPointRequest::group_uri() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointRequest.group_uri)
  return group_uri_.GetNoArena();
}
inline void SetGroupAssemblyPointRequest::set_group_uri(const ::std::string& value) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointRequest.group_uri)
}
#if LANG_CXX11
inline void SetGroupAssemblyPointRequest::set_group_uri(::std::string&& value) {
  
  group_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupAssemblyPointRequest.group_uri)
}
#endif
inline void SetGroupAssemblyPointRequest::set_group_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupAssemblyPointRequest.group_uri)
}
inline void SetGroupAssemblyPointRequest::set_group_uri(const char* value, size_t size) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupAssemblyPointRequest.group_uri)
}
inline ::std::string* SetGroupAssemblyPointRequest::mutable_group_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointRequest.group_uri)
  return group_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupAssemblyPointRequest::release_group_uri() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointRequest.group_uri)
  
  return group_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupAssemblyPointRequest::set_allocated_group_uri(::std::string* group_uri) {
  if (group_uri != NULL) {
    
  } else {
    
  }
  group_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointRequest.group_uri)
}

// .common.msg.LocationMessage assembly_point = 4;
inline bool SetGroupAssemblyPointRequest::has_assembly_point() const {
  return this != internal_default_instance() && assembly_point_ != NULL;
}
inline const ::common::msg::LocationMessage& SetGroupAssemblyPointRequest::assembly_point() const {
  const ::common::msg::LocationMessage* p = assembly_point_;
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointRequest.assembly_point)
  return p != NULL ? *p : *reinterpret_cast<const ::common::msg::LocationMessage*>(
      &::common::msg::_LocationMessage_default_instance_);
}
inline ::common::msg::LocationMessage* SetGroupAssemblyPointRequest::release_assembly_point() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointRequest.assembly_point)
  
  ::common::msg::LocationMessage* temp = assembly_point_;
  assembly_point_ = NULL;
  return temp;
}
inline ::common::msg::LocationMessage* SetGroupAssemblyPointRequest::mutable_assembly_point() {
  
  if (assembly_point_ == NULL) {
    assembly_point_ = new ::common::msg::LocationMessage;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointRequest.assembly_point)
  return assembly_point_;
}
inline void SetGroupAssemblyPointRequest::set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(assembly_point_);
  }
  if (assembly_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assembly_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assembly_point, submessage_arena);
    }
    
  } else {
    
  }
  assembly_point_ = assembly_point;
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointRequest.assembly_point)
}

// string msg_id = 5;
inline void SetGroupAssemblyPointRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupAssemblyPointRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupAssemblyPointRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointRequest.msg_id)
}
#if LANG_CXX11
inline void SetGroupAssemblyPointRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupAssemblyPointRequest.msg_id)
}
#endif
inline void SetGroupAssemblyPointRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupAssemblyPointRequest.msg_id)
}
inline void SetGroupAssemblyPointRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupAssemblyPointRequest.msg_id)
}
inline ::std::string* SetGroupAssemblyPointRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupAssemblyPointRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupAssemblyPointRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointRequest.msg_id)
}

// -------------------------------------------------------------------

// SetGroupAssemblyPointResponse

// .common.errcode.EErrorCode ret = 1;
inline void SetGroupAssemblyPointResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode SetGroupAssemblyPointResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void SetGroupAssemblyPointResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointResponse.ret)
}

// string msg_id = 3;
inline void SetGroupAssemblyPointResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetGroupAssemblyPointResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.SetGroupAssemblyPointResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void SetGroupAssemblyPointResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.SetGroupAssemblyPointResponse.msg_id)
}
#if LANG_CXX11
inline void SetGroupAssemblyPointResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.SetGroupAssemblyPointResponse.msg_id)
}
#endif
inline void SetGroupAssemblyPointResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.SetGroupAssemblyPointResponse.msg_id)
}
inline void SetGroupAssemblyPointResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.SetGroupAssemblyPointResponse.msg_id)
}
inline ::std::string* SetGroupAssemblyPointResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.SetGroupAssemblyPointResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetGroupAssemblyPointResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.SetGroupAssemblyPointResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetGroupAssemblyPointResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.SetGroupAssemblyPointResponse.msg_id)
}

// -------------------------------------------------------------------

// AssemblyPointChangedSignal

// .common.msg.LocationMessage assembly_point = 1;
inline bool AssemblyPointChangedSignal::has_assembly_point() const {
  return this != internal_default_instance() && assembly_point_ != NULL;
}
inline const ::common::msg::LocationMessage& AssemblyPointChangedSignal::assembly_point() const {
  const ::common::msg::LocationMessage* p = assembly_point_;
  // @@protoc_insertion_point(field_get:outer.group.AssemblyPointChangedSignal.assembly_point)
  return p != NULL ? *p : *reinterpret_cast<const ::common::msg::LocationMessage*>(
      &::common::msg::_LocationMessage_default_instance_);
}
inline ::common::msg::LocationMessage* AssemblyPointChangedSignal::release_assembly_point() {
  // @@protoc_insertion_point(field_release:outer.group.AssemblyPointChangedSignal.assembly_point)
  
  ::common::msg::LocationMessage* temp = assembly_point_;
  assembly_point_ = NULL;
  return temp;
}
inline ::common::msg::LocationMessage* AssemblyPointChangedSignal::mutable_assembly_point() {
  
  if (assembly_point_ == NULL) {
    assembly_point_ = new ::common::msg::LocationMessage;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.AssemblyPointChangedSignal.assembly_point)
  return assembly_point_;
}
inline void AssemblyPointChangedSignal::set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(assembly_point_);
  }
  if (assembly_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assembly_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assembly_point, submessage_arena);
    }
    
  } else {
    
  }
  assembly_point_ = assembly_point;
  // @@protoc_insertion_point(field_set_allocated:outer.group.AssemblyPointChangedSignal.assembly_point)
}

// .outer.group.CrewDetail setter = 2;
inline bool AssemblyPointChangedSignal::has_setter() const {
  return this != internal_default_instance() && setter_ != NULL;
}
inline void AssemblyPointChangedSignal::clear_setter() {
  if (GetArenaNoVirtual() == NULL && setter_ != NULL) {
    delete setter_;
  }
  setter_ = NULL;
}
inline const ::outer::group::CrewDetail& AssemblyPointChangedSignal::setter() const {
  const ::outer::group::CrewDetail* p = setter_;
  // @@protoc_insertion_point(field_get:outer.group.AssemblyPointChangedSignal.setter)
  return p != NULL ? *p : *reinterpret_cast<const ::outer::group::CrewDetail*>(
      &::outer::group::_CrewDetail_default_instance_);
}
inline ::outer::group::CrewDetail* AssemblyPointChangedSignal::release_setter() {
  // @@protoc_insertion_point(field_release:outer.group.AssemblyPointChangedSignal.setter)
  
  ::outer::group::CrewDetail* temp = setter_;
  setter_ = NULL;
  return temp;
}
inline ::outer::group::CrewDetail* AssemblyPointChangedSignal::mutable_setter() {
  
  if (setter_ == NULL) {
    setter_ = new ::outer::group::CrewDetail;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.AssemblyPointChangedSignal.setter)
  return setter_;
}
inline void AssemblyPointChangedSignal::set_allocated_setter(::outer::group::CrewDetail* setter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete setter_;
  }
  if (setter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      setter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, setter, submessage_arena);
    }
    
  } else {
    
  }
  setter_ = setter;
  // @@protoc_insertion_point(field_set_allocated:outer.group.AssemblyPointChangedSignal.setter)
}

// -------------------------------------------------------------------

// GetGroupAssemblyPointRequest

// string username = 1;
inline void GetGroupAssemblyPointRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupAssemblyPointRequest::username() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointRequest.username)
  return username_.GetNoArena();
}
inline void GetGroupAssemblyPointRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointRequest.username)
}
#if LANG_CXX11
inline void GetGroupAssemblyPointRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupAssemblyPointRequest.username)
}
#endif
inline void GetGroupAssemblyPointRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupAssemblyPointRequest.username)
}
inline void GetGroupAssemblyPointRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupAssemblyPointRequest.username)
}
inline ::std::string* GetGroupAssemblyPointRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupAssemblyPointRequest::release_username() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupAssemblyPointRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointRequest.username)
}

// string appkey = 2;
inline void GetGroupAssemblyPointRequest::clear_appkey() {
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupAssemblyPointRequest::appkey() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointRequest.appkey)
  return appkey_.GetNoArena();
}
inline void GetGroupAssemblyPointRequest::set_appkey(const ::std::string& value) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointRequest.appkey)
}
#if LANG_CXX11
inline void GetGroupAssemblyPointRequest::set_appkey(::std::string&& value) {
  
  appkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupAssemblyPointRequest.appkey)
}
#endif
inline void GetGroupAssemblyPointRequest::set_appkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupAssemblyPointRequest.appkey)
}
inline void GetGroupAssemblyPointRequest::set_appkey(const char* value, size_t size) {
  
  appkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupAssemblyPointRequest.appkey)
}
inline ::std::string* GetGroupAssemblyPointRequest::mutable_appkey() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointRequest.appkey)
  return appkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupAssemblyPointRequest::release_appkey() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointRequest.appkey)
  
  return appkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupAssemblyPointRequest::set_allocated_appkey(::std::string* appkey) {
  if (appkey != NULL) {
    
  } else {
    
  }
  appkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appkey);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointRequest.appkey)
}

// string group_uri = 3;
inline void GetGroupAssemblyPointRequest::clear_group_uri() {
  group_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupAssemblyPointRequest::group_uri() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointRequest.group_uri)
  return group_uri_.GetNoArena();
}
inline void GetGroupAssemblyPointRequest::set_group_uri(const ::std::string& value) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointRequest.group_uri)
}
#if LANG_CXX11
inline void GetGroupAssemblyPointRequest::set_group_uri(::std::string&& value) {
  
  group_uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupAssemblyPointRequest.group_uri)
}
#endif
inline void GetGroupAssemblyPointRequest::set_group_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupAssemblyPointRequest.group_uri)
}
inline void GetGroupAssemblyPointRequest::set_group_uri(const char* value, size_t size) {
  
  group_uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupAssemblyPointRequest.group_uri)
}
inline ::std::string* GetGroupAssemblyPointRequest::mutable_group_uri() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointRequest.group_uri)
  return group_uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupAssemblyPointRequest::release_group_uri() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointRequest.group_uri)
  
  return group_uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupAssemblyPointRequest::set_allocated_group_uri(::std::string* group_uri) {
  if (group_uri != NULL) {
    
  } else {
    
  }
  group_uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_uri);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointRequest.group_uri)
}

// string msg_id = 4;
inline void GetGroupAssemblyPointRequest::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupAssemblyPointRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointRequest.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetGroupAssemblyPointRequest::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointRequest.msg_id)
}
#if LANG_CXX11
inline void GetGroupAssemblyPointRequest::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupAssemblyPointRequest.msg_id)
}
#endif
inline void GetGroupAssemblyPointRequest::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupAssemblyPointRequest.msg_id)
}
inline void GetGroupAssemblyPointRequest::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupAssemblyPointRequest.msg_id)
}
inline ::std::string* GetGroupAssemblyPointRequest::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointRequest.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupAssemblyPointRequest::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointRequest.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupAssemblyPointRequest::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointRequest.msg_id)
}

// -------------------------------------------------------------------

// GetGroupAssemblyPointResponse

// .common.errcode.EErrorCode ret = 1;
inline void GetGroupAssemblyPointResponse::clear_ret() {
  ret_ = 0;
}
inline ::common::errcode::EErrorCode GetGroupAssemblyPointResponse::ret() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointResponse.ret)
  return static_cast< ::common::errcode::EErrorCode >(ret_);
}
inline void GetGroupAssemblyPointResponse::set_ret(::common::errcode::EErrorCode value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointResponse.ret)
}

// .common.msg.LocationMessage assembly_point = 2;
inline bool GetGroupAssemblyPointResponse::has_assembly_point() const {
  return this != internal_default_instance() && assembly_point_ != NULL;
}
inline const ::common::msg::LocationMessage& GetGroupAssemblyPointResponse::assembly_point() const {
  const ::common::msg::LocationMessage* p = assembly_point_;
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointResponse.assembly_point)
  return p != NULL ? *p : *reinterpret_cast<const ::common::msg::LocationMessage*>(
      &::common::msg::_LocationMessage_default_instance_);
}
inline ::common::msg::LocationMessage* GetGroupAssemblyPointResponse::release_assembly_point() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointResponse.assembly_point)
  
  ::common::msg::LocationMessage* temp = assembly_point_;
  assembly_point_ = NULL;
  return temp;
}
inline ::common::msg::LocationMessage* GetGroupAssemblyPointResponse::mutable_assembly_point() {
  
  if (assembly_point_ == NULL) {
    assembly_point_ = new ::common::msg::LocationMessage;
  }
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointResponse.assembly_point)
  return assembly_point_;
}
inline void GetGroupAssemblyPointResponse::set_allocated_assembly_point(::common::msg::LocationMessage* assembly_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(assembly_point_);
  }
  if (assembly_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assembly_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assembly_point, submessage_arena);
    }
    
  } else {
    
  }
  assembly_point_ = assembly_point;
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointResponse.assembly_point)
}

// string msg_id = 3;
inline void GetGroupAssemblyPointResponse::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetGroupAssemblyPointResponse::msg_id() const {
  // @@protoc_insertion_point(field_get:outer.group.GetGroupAssemblyPointResponse.msg_id)
  return msg_id_.GetNoArena();
}
inline void GetGroupAssemblyPointResponse::set_msg_id(const ::std::string& value) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:outer.group.GetGroupAssemblyPointResponse.msg_id)
}
#if LANG_CXX11
inline void GetGroupAssemblyPointResponse::set_msg_id(::std::string&& value) {
  
  msg_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:outer.group.GetGroupAssemblyPointResponse.msg_id)
}
#endif
inline void GetGroupAssemblyPointResponse::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:outer.group.GetGroupAssemblyPointResponse.msg_id)
}
inline void GetGroupAssemblyPointResponse::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:outer.group.GetGroupAssemblyPointResponse.msg_id)
}
inline ::std::string* GetGroupAssemblyPointResponse::mutable_msg_id() {
  
  // @@protoc_insertion_point(field_mutable:outer.group.GetGroupAssemblyPointResponse.msg_id)
  return msg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGroupAssemblyPointResponse::release_msg_id() {
  // @@protoc_insertion_point(field_release:outer.group.GetGroupAssemblyPointResponse.msg_id)
  
  return msg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGroupAssemblyPointResponse::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id != NULL) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:outer.group.GetGroupAssemblyPointResponse.msg_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace group
}  // namespace outer

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::outer::group::ERole> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::outer::group::ERole>() {
  return ::outer::group::ERole_descriptor();
}
template <> struct is_proto_enum< ::outer::group::ESignalType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::outer::group::ESignalType>() {
  return ::outer::group::ESignalType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_outer_2fgroup_2eproto__INCLUDED
