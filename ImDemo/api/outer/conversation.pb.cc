// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/conversation.proto

#include "outer/conversation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace conversations {
class SyncConvrsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncConvrsRequest>
      _instance;
} _SyncConvrsRequest_default_instance_;
class SyncConvrsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncConvrsResponse>
      _instance;
} _SyncConvrsResponse_default_instance_;
class UploadConvrsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadConvrsRequest>
      _instance;
} _UploadConvrsRequest_default_instance_;
class UploadConvrsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadConvrsResponse>
      _instance;
} _UploadConvrsResponse_default_instance_;
class ConvrsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConvrsInfo>
      _instance;
} _ConvrsInfo_default_instance_;
}  // namespace conversations
}  // namespace outer
namespace protobuf_outer_2fconversation_2eproto {
void InitDefaultsSyncConvrsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::conversations::_SyncConvrsRequest_default_instance_;
    new (ptr) ::outer::conversations::SyncConvrsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::conversations::SyncConvrsRequest::InitAsDefaultInstance();
}

void InitDefaultsSyncConvrsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncConvrsRequestImpl);
}

void InitDefaultsSyncConvrsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fconversation_2eproto::InitDefaultsConvrsInfo();
  {
    void* ptr = &::outer::conversations::_SyncConvrsResponse_default_instance_;
    new (ptr) ::outer::conversations::SyncConvrsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::conversations::SyncConvrsResponse::InitAsDefaultInstance();
}

void InitDefaultsSyncConvrsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSyncConvrsResponseImpl);
}

void InitDefaultsUploadConvrsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_outer_2fconversation_2eproto::InitDefaultsConvrsInfo();
  {
    void* ptr = &::outer::conversations::_UploadConvrsRequest_default_instance_;
    new (ptr) ::outer::conversations::UploadConvrsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::conversations::UploadConvrsRequest::InitAsDefaultInstance();
}

void InitDefaultsUploadConvrsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadConvrsRequestImpl);
}

void InitDefaultsUploadConvrsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::conversations::_UploadConvrsResponse_default_instance_;
    new (ptr) ::outer::conversations::UploadConvrsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::conversations::UploadConvrsResponse::InitAsDefaultInstance();
}

void InitDefaultsUploadConvrsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadConvrsResponseImpl);
}

void InitDefaultsConvrsInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::conversations::_ConvrsInfo_default_instance_;
    new (ptr) ::outer::conversations::ConvrsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::conversations::ConvrsInfo::InitAsDefaultInstance();
}

void InitDefaultsConvrsInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConvrsInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsRequest, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsResponse, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::SyncConvrsResponse, convrsinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsRequest, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsRequest, convrsinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::UploadConvrsResponse, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::ConvrsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::ConvrsInfo, sessioner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::ConvrsInfo, modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::conversations::ConvrsInfo, sessioner_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::conversations::SyncConvrsRequest)},
  { 8, -1, sizeof(::outer::conversations::SyncConvrsResponse)},
  { 16, -1, sizeof(::outer::conversations::UploadConvrsRequest)},
  { 25, -1, sizeof(::outer::conversations::UploadConvrsResponse)},
  { 32, -1, sizeof(::outer::conversations::ConvrsInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::conversations::_SyncConvrsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::conversations::_SyncConvrsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::conversations::_UploadConvrsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::conversations::_UploadConvrsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::conversations::_ConvrsInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/conversation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030outer/conversation.proto\022\023outer.conver"
      "sations\032\024common/errcode.proto\"E\n\021SyncCon"
      "vrsRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006appkey\030\002"
      " \001(\t\022\016\n\006msg_id\030\003 \001(\t\"\202\001\n\022SyncConvrsRespo"
      "nse\022\'\n\003ret\030\001 \001(\0162\032.common.errcode.EError"
      "Code\022\016\n\006msg_id\030\002 \001(\t\0223\n\nconvrsInfo\030\003 \003(\013"
      "2\037.outer.conversations.ConvrsInfo\"|\n\023Upl"
      "oadConvrsRequest\022\020\n\010username\030\001 \001(\t\022\016\n\006ap"
      "pkey\030\002 \001(\t\022\016\n\006msg_id\030\003 \001(\t\0223\n\nconvrsInfo"
      "\030\004 \003(\0132\037.outer.conversations.ConvrsInfo\""
      "O\n\024UploadConvrsResponse\022\'\n\003ret\030\001 \001(\0162\032.c"
      "ommon.errcode.EErrorCode\022\016\n\006msg_id\030\002 \001(\t"
      "\"I\n\nConvrsInfo\022\021\n\tsessioner\030\001 \001(\t\022\020\n\010mod"
      "ified\030\002 \001(\004\022\026\n\016sessioner_info\030\003 \001(\t2\331\001\n\023"
      "ConversationService\022]\n\nSyncConvrs\022&.oute"
      "r.conversations.SyncConvrsRequest\032\'.oute"
      "r.conversations.SyncConvrsResponse\022c\n\014Up"
      "loadConvrs\022(.outer.conversations.UploadC"
      "onvrsRequest\032).outer.conversations.Uploa"
      "dConvrsResponseB.\n\034com.cmcc.littlec.prot"
      "o.outerB\014ConversationP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 831);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/conversation.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fconversation_2eproto
namespace outer {
namespace conversations {

// ===================================================================

void SyncConvrsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncConvrsRequest::kUsernameFieldNumber;
const int SyncConvrsRequest::kAppkeyFieldNumber;
const int SyncConvrsRequest::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncConvrsRequest::SyncConvrsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fconversation_2eproto::InitDefaultsSyncConvrsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.conversations.SyncConvrsRequest)
}
SyncConvrsRequest::SyncConvrsRequest(const SyncConvrsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.conversations.SyncConvrsRequest)
}

void SyncConvrsRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SyncConvrsRequest::~SyncConvrsRequest() {
  // @@protoc_insertion_point(destructor:outer.conversations.SyncConvrsRequest)
  SharedDtor();
}

void SyncConvrsRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncConvrsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncConvrsRequest::descriptor() {
  ::protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncConvrsRequest& SyncConvrsRequest::default_instance() {
  ::protobuf_outer_2fconversation_2eproto::InitDefaultsSyncConvrsRequest();
  return *internal_default_instance();
}

SyncConvrsRequest* SyncConvrsRequest::New(::google::protobuf::Arena* arena) const {
  SyncConvrsRequest* n = new SyncConvrsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncConvrsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.conversations.SyncConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncConvrsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.conversations.SyncConvrsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.SyncConvrsRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.SyncConvrsRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.SyncConvrsRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.conversations.SyncConvrsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.conversations.SyncConvrsRequest)
  return false;
#undef DO_
}

void SyncConvrsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.conversations.SyncConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.conversations.SyncConvrsRequest)
}

::google::protobuf::uint8* SyncConvrsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.conversations.SyncConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.conversations.SyncConvrsRequest)
  return target;
}

size_t SyncConvrsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.conversations.SyncConvrsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncConvrsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.conversations.SyncConvrsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncConvrsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncConvrsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.conversations.SyncConvrsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.conversations.SyncConvrsRequest)
    MergeFrom(*source);
  }
}

void SyncConvrsRequest::MergeFrom(const SyncConvrsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.conversations.SyncConvrsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void SyncConvrsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.conversations.SyncConvrsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncConvrsRequest::CopyFrom(const SyncConvrsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.conversations.SyncConvrsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncConvrsRequest::IsInitialized() const {
  return true;
}

void SyncConvrsRequest::Swap(SyncConvrsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncConvrsRequest::InternalSwap(SyncConvrsRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncConvrsRequest::GetMetadata() const {
  protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncConvrsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncConvrsResponse::kRetFieldNumber;
const int SyncConvrsResponse::kMsgIdFieldNumber;
const int SyncConvrsResponse::kConvrsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncConvrsResponse::SyncConvrsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fconversation_2eproto::InitDefaultsSyncConvrsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.conversations.SyncConvrsResponse)
}
SyncConvrsResponse::SyncConvrsResponse(const SyncConvrsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      convrsinfo_(from.convrsinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.conversations.SyncConvrsResponse)
}

void SyncConvrsResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

SyncConvrsResponse::~SyncConvrsResponse() {
  // @@protoc_insertion_point(destructor:outer.conversations.SyncConvrsResponse)
  SharedDtor();
}

void SyncConvrsResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncConvrsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncConvrsResponse::descriptor() {
  ::protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncConvrsResponse& SyncConvrsResponse::default_instance() {
  ::protobuf_outer_2fconversation_2eproto::InitDefaultsSyncConvrsResponse();
  return *internal_default_instance();
}

SyncConvrsResponse* SyncConvrsResponse::New(::google::protobuf::Arena* arena) const {
  SyncConvrsResponse* n = new SyncConvrsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncConvrsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.conversations.SyncConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  convrsinfo_.Clear();
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool SyncConvrsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.conversations.SyncConvrsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.SyncConvrsResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.conversations.ConvrsInfo convrsInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_convrsinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.conversations.SyncConvrsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.conversations.SyncConvrsResponse)
  return false;
#undef DO_
}

void SyncConvrsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.conversations.SyncConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  // repeated .outer.conversations.ConvrsInfo convrsInfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convrsinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->convrsinfo(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.conversations.SyncConvrsResponse)
}

::google::protobuf::uint8* SyncConvrsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.conversations.SyncConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.SyncConvrsResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  // repeated .outer.conversations.ConvrsInfo convrsInfo = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convrsinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->convrsinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.conversations.SyncConvrsResponse)
  return target;
}

size_t SyncConvrsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.conversations.SyncConvrsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.conversations.ConvrsInfo convrsInfo = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->convrsinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->convrsinfo(static_cast<int>(i)));
    }
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncConvrsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.conversations.SyncConvrsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncConvrsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncConvrsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.conversations.SyncConvrsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.conversations.SyncConvrsResponse)
    MergeFrom(*source);
  }
}

void SyncConvrsResponse::MergeFrom(const SyncConvrsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.conversations.SyncConvrsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  convrsinfo_.MergeFrom(from.convrsinfo_);
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void SyncConvrsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.conversations.SyncConvrsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncConvrsResponse::CopyFrom(const SyncConvrsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.conversations.SyncConvrsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncConvrsResponse::IsInitialized() const {
  return true;
}

void SyncConvrsResponse::Swap(SyncConvrsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncConvrsResponse::InternalSwap(SyncConvrsResponse* other) {
  using std::swap;
  convrsinfo_.InternalSwap(&other->convrsinfo_);
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncConvrsResponse::GetMetadata() const {
  protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadConvrsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadConvrsRequest::kUsernameFieldNumber;
const int UploadConvrsRequest::kAppkeyFieldNumber;
const int UploadConvrsRequest::kMsgIdFieldNumber;
const int UploadConvrsRequest::kConvrsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadConvrsRequest::UploadConvrsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fconversation_2eproto::InitDefaultsUploadConvrsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.conversations.UploadConvrsRequest)
}
UploadConvrsRequest::UploadConvrsRequest(const UploadConvrsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      convrsinfo_(from.convrsinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  // @@protoc_insertion_point(copy_constructor:outer.conversations.UploadConvrsRequest)
}

void UploadConvrsRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UploadConvrsRequest::~UploadConvrsRequest() {
  // @@protoc_insertion_point(destructor:outer.conversations.UploadConvrsRequest)
  SharedDtor();
}

void UploadConvrsRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadConvrsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadConvrsRequest::descriptor() {
  ::protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadConvrsRequest& UploadConvrsRequest::default_instance() {
  ::protobuf_outer_2fconversation_2eproto::InitDefaultsUploadConvrsRequest();
  return *internal_default_instance();
}

UploadConvrsRequest* UploadConvrsRequest::New(::google::protobuf::Arena* arena) const {
  UploadConvrsRequest* n = new UploadConvrsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadConvrsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.conversations.UploadConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  convrsinfo_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UploadConvrsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.conversations.UploadConvrsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.UploadConvrsRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.UploadConvrsRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.UploadConvrsRequest.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .outer.conversations.ConvrsInfo convrsInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_convrsinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.conversations.UploadConvrsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.conversations.UploadConvrsRequest)
  return false;
#undef DO_
}

void UploadConvrsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.conversations.UploadConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_id(), output);
  }

  // repeated .outer.conversations.ConvrsInfo convrsInfo = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convrsinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->convrsinfo(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.conversations.UploadConvrsRequest)
}

::google::protobuf::uint8* UploadConvrsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.conversations.UploadConvrsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsRequest.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_id(), target);
  }

  // repeated .outer.conversations.ConvrsInfo convrsInfo = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convrsinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->convrsinfo(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.conversations.UploadConvrsRequest)
  return target;
}

size_t UploadConvrsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.conversations.UploadConvrsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .outer.conversations.ConvrsInfo convrsInfo = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->convrsinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->convrsinfo(static_cast<int>(i)));
    }
  }

  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string msg_id = 3;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadConvrsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.conversations.UploadConvrsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadConvrsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadConvrsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.conversations.UploadConvrsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.conversations.UploadConvrsRequest)
    MergeFrom(*source);
  }
}

void UploadConvrsRequest::MergeFrom(const UploadConvrsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.conversations.UploadConvrsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  convrsinfo_.MergeFrom(from.convrsinfo_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
}

void UploadConvrsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.conversations.UploadConvrsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadConvrsRequest::CopyFrom(const UploadConvrsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.conversations.UploadConvrsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadConvrsRequest::IsInitialized() const {
  return true;
}

void UploadConvrsRequest::Swap(UploadConvrsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadConvrsRequest::InternalSwap(UploadConvrsRequest* other) {
  using std::swap;
  convrsinfo_.InternalSwap(&other->convrsinfo_);
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  msg_id_.Swap(&other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadConvrsRequest::GetMetadata() const {
  protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadConvrsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadConvrsResponse::kRetFieldNumber;
const int UploadConvrsResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadConvrsResponse::UploadConvrsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fconversation_2eproto::InitDefaultsUploadConvrsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.conversations.UploadConvrsResponse)
}
UploadConvrsResponse::UploadConvrsResponse(const UploadConvrsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.conversations.UploadConvrsResponse)
}

void UploadConvrsResponse::SharedCtor() {
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

UploadConvrsResponse::~UploadConvrsResponse() {
  // @@protoc_insertion_point(destructor:outer.conversations.UploadConvrsResponse)
  SharedDtor();
}

void UploadConvrsResponse::SharedDtor() {
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadConvrsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadConvrsResponse::descriptor() {
  ::protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadConvrsResponse& UploadConvrsResponse::default_instance() {
  ::protobuf_outer_2fconversation_2eproto::InitDefaultsUploadConvrsResponse();
  return *internal_default_instance();
}

UploadConvrsResponse* UploadConvrsResponse::New(::google::protobuf::Arena* arena) const {
  UploadConvrsResponse* n = new UploadConvrsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadConvrsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.conversations.UploadConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool UploadConvrsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.conversations.UploadConvrsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.UploadConvrsResponse.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.conversations.UploadConvrsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.conversations.UploadConvrsResponse)
  return false;
#undef DO_
}

void UploadConvrsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.conversations.UploadConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsResponse.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.conversations.UploadConvrsResponse)
}

::google::protobuf::uint8* UploadConvrsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.conversations.UploadConvrsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.UploadConvrsResponse.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.conversations.UploadConvrsResponse)
  return target;
}

size_t UploadConvrsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.conversations.UploadConvrsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg_id = 2;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadConvrsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.conversations.UploadConvrsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadConvrsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadConvrsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.conversations.UploadConvrsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.conversations.UploadConvrsResponse)
    MergeFrom(*source);
  }
}

void UploadConvrsResponse::MergeFrom(const UploadConvrsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.conversations.UploadConvrsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void UploadConvrsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.conversations.UploadConvrsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadConvrsResponse::CopyFrom(const UploadConvrsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.conversations.UploadConvrsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadConvrsResponse::IsInitialized() const {
  return true;
}

void UploadConvrsResponse::Swap(UploadConvrsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadConvrsResponse::InternalSwap(UploadConvrsResponse* other) {
  using std::swap;
  msg_id_.Swap(&other->msg_id_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadConvrsResponse::GetMetadata() const {
  protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConvrsInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConvrsInfo::kSessionerFieldNumber;
const int ConvrsInfo::kModifiedFieldNumber;
const int ConvrsInfo::kSessionerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConvrsInfo::ConvrsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fconversation_2eproto::InitDefaultsConvrsInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.conversations.ConvrsInfo)
}
ConvrsInfo::ConvrsInfo(const ConvrsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessioner().size() > 0) {
    sessioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessioner_);
  }
  sessioner_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessioner_info().size() > 0) {
    sessioner_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessioner_info_);
  }
  modified_ = from.modified_;
  // @@protoc_insertion_point(copy_constructor:outer.conversations.ConvrsInfo)
}

void ConvrsInfo::SharedCtor() {
  sessioner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessioner_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ConvrsInfo::~ConvrsInfo() {
  // @@protoc_insertion_point(destructor:outer.conversations.ConvrsInfo)
  SharedDtor();
}

void ConvrsInfo::SharedDtor() {
  sessioner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessioner_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConvrsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConvrsInfo::descriptor() {
  ::protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConvrsInfo& ConvrsInfo::default_instance() {
  ::protobuf_outer_2fconversation_2eproto::InitDefaultsConvrsInfo();
  return *internal_default_instance();
}

ConvrsInfo* ConvrsInfo::New(::google::protobuf::Arena* arena) const {
  ConvrsInfo* n = new ConvrsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConvrsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.conversations.ConvrsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessioner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessioner_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modified_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ConvrsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.conversations.ConvrsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sessioner = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessioner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessioner().data(), static_cast<int>(this->sessioner().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.ConvrsInfo.sessioner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 modified = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sessioner_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessioner_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessioner_info().data(), static_cast<int>(this->sessioner_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.conversations.ConvrsInfo.sessioner_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.conversations.ConvrsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.conversations.ConvrsInfo)
  return false;
#undef DO_
}

void ConvrsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.conversations.ConvrsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessioner = 1;
  if (this->sessioner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessioner().data(), static_cast<int>(this->sessioner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.ConvrsInfo.sessioner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessioner(), output);
  }

  // uint64 modified = 2;
  if (this->modified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->modified(), output);
  }

  // string sessioner_info = 3;
  if (this->sessioner_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessioner_info().data(), static_cast<int>(this->sessioner_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.ConvrsInfo.sessioner_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sessioner_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.conversations.ConvrsInfo)
}

::google::protobuf::uint8* ConvrsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.conversations.ConvrsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sessioner = 1;
  if (this->sessioner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessioner().data(), static_cast<int>(this->sessioner().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.ConvrsInfo.sessioner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessioner(), target);
  }

  // uint64 modified = 2;
  if (this->modified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->modified(), target);
  }

  // string sessioner_info = 3;
  if (this->sessioner_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessioner_info().data(), static_cast<int>(this->sessioner_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.conversations.ConvrsInfo.sessioner_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sessioner_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.conversations.ConvrsInfo)
  return target;
}

size_t ConvrsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.conversations.ConvrsInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sessioner = 1;
  if (this->sessioner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessioner());
  }

  // string sessioner_info = 3;
  if (this->sessioner_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessioner_info());
  }

  // uint64 modified = 2;
  if (this->modified() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modified());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConvrsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.conversations.ConvrsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvrsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConvrsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.conversations.ConvrsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.conversations.ConvrsInfo)
    MergeFrom(*source);
  }
}

void ConvrsInfo::MergeFrom(const ConvrsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.conversations.ConvrsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessioner().size() > 0) {

    sessioner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessioner_);
  }
  if (from.sessioner_info().size() > 0) {

    sessioner_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessioner_info_);
  }
  if (from.modified() != 0) {
    set_modified(from.modified());
  }
}

void ConvrsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.conversations.ConvrsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvrsInfo::CopyFrom(const ConvrsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.conversations.ConvrsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvrsInfo::IsInitialized() const {
  return true;
}

void ConvrsInfo::Swap(ConvrsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConvrsInfo::InternalSwap(ConvrsInfo* other) {
  using std::swap;
  sessioner_.Swap(&other->sessioner_);
  sessioner_info_.Swap(&other->sessioner_info_);
  swap(modified_, other->modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConvrsInfo::GetMetadata() const {
  protobuf_outer_2fconversation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fconversation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace conversations
}  // namespace outer

// @@protoc_insertion_point(global_scope)
