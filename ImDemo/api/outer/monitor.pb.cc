// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outer/monitor.proto

#include "outer/monitor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace outer {
namespace monitor {
class OptimizeLogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizeLogRequest>
      _instance;
} _OptimizeLogRequest_default_instance_;
class OptimizeLogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizeLogResponse>
      _instance;
} _OptimizeLogResponse_default_instance_;
}  // namespace monitor
}  // namespace outer
namespace protobuf_outer_2fmonitor_2eproto {
void InitDefaultsOptimizeLogRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fbase_2eproto::InitDefaultsMobileBase();
  {
    void* ptr = &::outer::monitor::_OptimizeLogRequest_default_instance_;
    new (ptr) ::outer::monitor::OptimizeLogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::monitor::OptimizeLogRequest::InitAsDefaultInstance();
}

void InitDefaultsOptimizeLogRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptimizeLogRequestImpl);
}

void InitDefaultsOptimizeLogResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::outer::monitor::_OptimizeLogResponse_default_instance_;
    new (ptr) ::outer::monitor::OptimizeLogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::outer::monitor::OptimizeLogResponse::InitAsDefaultInstance();
}

void InitDefaultsOptimizeLogResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptimizeLogResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, base_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogRequest, invoke_method_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::outer::monitor::OptimizeLogResponse, ret_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::outer::monitor::OptimizeLogRequest)},
  { 11, -1, sizeof(::outer::monitor::OptimizeLogResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::monitor::_OptimizeLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::outer::monitor::_OptimizeLogResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "outer/monitor.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023outer/monitor.proto\022\router.monitor\032\024co"
      "mmon/errcode.proto\032\021common/base.proto\"\235\001"
      "\n\022OptimizeLogRequest\022*\n\tbase_info\030\001 \001(\0132"
      "\027.common.base.MobileBase\022\014\n\004time\030\002 \001(\004\022\020"
      "\n\010username\030\003 \001(\t\022\016\n\006appkey\030\004 \001(\t\022\024\n\014serv"
      "ice_name\030\005 \001(\t\022\025\n\rinvoke_method\030\006 \001(\t\">\n"
      "\023OptimizeLogResponse\022\'\n\003ret\030\001 \001(\0162\032.comm"
      "on.errcode.EErrorCode2j\n\016MonitorService\022"
      "X\n\017SendOptimizeLog\022!.outer.monitor.Optim"
      "izeLogRequest\032\".outer.monitor.OptimizeLo"
      "gResponseB)\n\034com.cmcc.littlec.proto.oute"
      "rB\007MonitorP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 460);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "outer/monitor.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2ferrcode_2eproto::AddDescriptors();
  ::protobuf_common_2fbase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_outer_2fmonitor_2eproto
namespace outer {
namespace monitor {

// ===================================================================

void OptimizeLogRequest::InitAsDefaultInstance() {
  ::outer::monitor::_OptimizeLogRequest_default_instance_._instance.get_mutable()->base_info_ = const_cast< ::common::base::MobileBase*>(
      ::common::base::MobileBase::internal_default_instance());
}
void OptimizeLogRequest::clear_base_info() {
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeLogRequest::kBaseInfoFieldNumber;
const int OptimizeLogRequest::kTimeFieldNumber;
const int OptimizeLogRequest::kUsernameFieldNumber;
const int OptimizeLogRequest::kAppkeyFieldNumber;
const int OptimizeLogRequest::kServiceNameFieldNumber;
const int OptimizeLogRequest::kInvokeMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeLogRequest::OptimizeLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fmonitor_2eproto::InitDefaultsOptimizeLogRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.monitor.OptimizeLogRequest)
}
OptimizeLogRequest::OptimizeLogRequest(const OptimizeLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  invoke_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invoke_method().size() > 0) {
    invoke_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invoke_method_);
  }
  if (from.has_base_info()) {
    base_info_ = new ::common::base::MobileBase(*from.base_info_);
  } else {
    base_info_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:outer.monitor.OptimizeLogRequest)
}

void OptimizeLogRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invoke_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&base_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&base_info_)) + sizeof(time_));
  _cached_size_ = 0;
}

OptimizeLogRequest::~OptimizeLogRequest() {
  // @@protoc_insertion_point(destructor:outer.monitor.OptimizeLogRequest)
  SharedDtor();
}

void OptimizeLogRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invoke_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete base_info_;
}

void OptimizeLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeLogRequest::descriptor() {
  ::protobuf_outer_2fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fmonitor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptimizeLogRequest& OptimizeLogRequest::default_instance() {
  ::protobuf_outer_2fmonitor_2eproto::InitDefaultsOptimizeLogRequest();
  return *internal_default_instance();
}

OptimizeLogRequest* OptimizeLogRequest::New(::google::protobuf::Arena* arena) const {
  OptimizeLogRequest* n = new OptimizeLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.monitor.OptimizeLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invoke_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) {
    delete base_info_;
  }
  base_info_ = NULL;
  time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OptimizeLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.monitor.OptimizeLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.base.MobileBase base_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.monitor.OptimizeLogRequest.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.monitor.OptimizeLogRequest.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.monitor.OptimizeLogRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string invoke_method = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invoke_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invoke_method().data(), static_cast<int>(this->invoke_method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "outer.monitor.OptimizeLogRequest.invoke_method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.monitor.OptimizeLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.monitor.OptimizeLogRequest)
  return false;
#undef DO_
}

void OptimizeLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.monitor.OptimizeLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.base.MobileBase base_info = 1;
  if (this->has_base_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->base_info_, output);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appkey(), output);
  }

  // string service_name = 5;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->service_name(), output);
  }

  // string invoke_method = 6;
  if (this->invoke_method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invoke_method().data(), static_cast<int>(this->invoke_method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.invoke_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->invoke_method(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.monitor.OptimizeLogRequest)
}

::google::protobuf::uint8* OptimizeLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.monitor.OptimizeLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.base.MobileBase base_info = 1;
  if (this->has_base_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->base_info_, deterministic, target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appkey(), target);
  }

  // string service_name = 5;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->service_name(), target);
  }

  // string invoke_method = 6;
  if (this->invoke_method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invoke_method().data(), static_cast<int>(this->invoke_method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "outer.monitor.OptimizeLogRequest.invoke_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->invoke_method(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.monitor.OptimizeLogRequest)
  return target;
}

size_t OptimizeLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.monitor.OptimizeLogRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string appkey = 4;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string service_name = 5;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string invoke_method = 6;
  if (this->invoke_method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invoke_method());
  }

  // .common.base.MobileBase base_info = 1;
  if (this->has_base_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->base_info_);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.monitor.OptimizeLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizeLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.monitor.OptimizeLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.monitor.OptimizeLogRequest)
    MergeFrom(*source);
  }
}

void OptimizeLogRequest::MergeFrom(const OptimizeLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.monitor.OptimizeLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.invoke_method().size() > 0) {

    invoke_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invoke_method_);
  }
  if (from.has_base_info()) {
    mutable_base_info()->::common::base::MobileBase::MergeFrom(from.base_info());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void OptimizeLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.monitor.OptimizeLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeLogRequest::CopyFrom(const OptimizeLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.monitor.OptimizeLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeLogRequest::IsInitialized() const {
  return true;
}

void OptimizeLogRequest::Swap(OptimizeLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeLogRequest::InternalSwap(OptimizeLogRequest* other) {
  using std::swap;
  username_.Swap(&other->username_);
  appkey_.Swap(&other->appkey_);
  service_name_.Swap(&other->service_name_);
  invoke_method_.Swap(&other->invoke_method_);
  swap(base_info_, other->base_info_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeLogRequest::GetMetadata() const {
  protobuf_outer_2fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fmonitor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptimizeLogResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizeLogResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizeLogResponse::OptimizeLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_outer_2fmonitor_2eproto::InitDefaultsOptimizeLogResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:outer.monitor.OptimizeLogResponse)
}
OptimizeLogResponse::OptimizeLogResponse(const OptimizeLogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:outer.monitor.OptimizeLogResponse)
}

void OptimizeLogResponse::SharedCtor() {
  ret_ = 0;
  _cached_size_ = 0;
}

OptimizeLogResponse::~OptimizeLogResponse() {
  // @@protoc_insertion_point(destructor:outer.monitor.OptimizeLogResponse)
  SharedDtor();
}

void OptimizeLogResponse::SharedDtor() {
}

void OptimizeLogResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptimizeLogResponse::descriptor() {
  ::protobuf_outer_2fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fmonitor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptimizeLogResponse& OptimizeLogResponse::default_instance() {
  ::protobuf_outer_2fmonitor_2eproto::InitDefaultsOptimizeLogResponse();
  return *internal_default_instance();
}

OptimizeLogResponse* OptimizeLogResponse::New(::google::protobuf::Arena* arena) const {
  OptimizeLogResponse* n = new OptimizeLogResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptimizeLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:outer.monitor.OptimizeLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ret_ = 0;
  _internal_metadata_.Clear();
}

bool OptimizeLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:outer.monitor.OptimizeLogResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.errcode.EErrorCode ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ret(static_cast< ::common::errcode::EErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:outer.monitor.OptimizeLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:outer.monitor.OptimizeLogResponse)
  return false;
#undef DO_
}

void OptimizeLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:outer.monitor.OptimizeLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:outer.monitor.OptimizeLogResponse)
}

::google::protobuf::uint8* OptimizeLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:outer.monitor.OptimizeLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer.monitor.OptimizeLogResponse)
  return target;
}

size_t OptimizeLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:outer.monitor.OptimizeLogResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.errcode.EErrorCode ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptimizeLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:outer.monitor.OptimizeLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizeLogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizeLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:outer.monitor.OptimizeLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:outer.monitor.OptimizeLogResponse)
    MergeFrom(*source);
  }
}

void OptimizeLogResponse::MergeFrom(const OptimizeLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:outer.monitor.OptimizeLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void OptimizeLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:outer.monitor.OptimizeLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizeLogResponse::CopyFrom(const OptimizeLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer.monitor.OptimizeLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizeLogResponse::IsInitialized() const {
  return true;
}

void OptimizeLogResponse::Swap(OptimizeLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizeLogResponse::InternalSwap(OptimizeLogResponse* other) {
  using std::swap;
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptimizeLogResponse::GetMetadata() const {
  protobuf_outer_2fmonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_outer_2fmonitor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace monitor
}  // namespace outer

// @@protoc_insertion_point(global_scope)
