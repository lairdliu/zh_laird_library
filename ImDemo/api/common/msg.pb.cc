// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/msg.proto

#include "common/msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace common {
namespace msg {
class MessageUnitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageUnit>
      _instance;
} _MessageUnit_default_instance_;
class ChatMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatMessage>
      _instance;
} _ChatMessage_default_instance_;
class GroupMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupMessage>
      _instance;
} _GroupMessage_default_instance_;
class TransparentMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransparentMessage>
      _instance;
} _TransparentMessage_default_instance_;
class FriendMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendMessage>
      _instance;
} _FriendMessage_default_instance_;
class TextMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextMessage>
      _instance;
} _TextMessage_default_instance_;
class ImageMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageMessage>
      _instance;
} _ImageMessage_default_instance_;
class VideoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VideoMessage>
      _instance;
} _VideoMessage_default_instance_;
class AudioMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioMessage>
      _instance;
} _AudioMessage_default_instance_;
class LocationMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocationMessage>
      _instance;
} _LocationMessage_default_instance_;
class AtMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AtMessage>
      _instance;
} _AtMessage_default_instance_;
class ReadReceiptMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadReceiptMessage>
      _instance;
} _ReadReceiptMessage_default_instance_;
class FileMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileMessage>
      _instance;
} _FileMessage_default_instance_;
class RetractMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RetractMessage>
      _instance;
} _RetractMessage_default_instance_;
class CustomEntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomEntity>
      _instance;
} _CustomEntity_default_instance_;
class CustomMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomMessage>
      _instance;
} _CustomMessage_default_instance_;
class CustomNoApnsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomNoApnsMessage>
      _instance;
} _CustomNoApnsMessage_default_instance_;
class MsggwMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsggwMessage>
      _instance;
} _MsggwMessage_default_instance_;
class VcardMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VcardMessage>
      _instance;
} _VcardMessage_default_instance_;
class MergeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeMessage>
      _instance;
} _MergeMessage_default_instance_;
}  // namespace msg
}  // namespace common
namespace protobuf_common_2fmsg_2eproto {
void InitDefaultsMessageUnitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_MessageUnit_default_instance_;
    new (ptr) ::common::msg::MessageUnit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::MessageUnit::InitAsDefaultInstance();
}

void InitDefaultsMessageUnit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageUnitImpl);
}

void InitDefaultsChatMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_ChatMessage_default_instance_;
    new (ptr) ::common::msg::ChatMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::ChatMessage::InitAsDefaultInstance();
}

void InitDefaultsChatMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChatMessageImpl);
}

void InitDefaultsGroupMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_GroupMessage_default_instance_;
    new (ptr) ::common::msg::GroupMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::GroupMessage::InitAsDefaultInstance();
}

void InitDefaultsGroupMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupMessageImpl);
}

void InitDefaultsTransparentMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_TransparentMessage_default_instance_;
    new (ptr) ::common::msg::TransparentMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::TransparentMessage::InitAsDefaultInstance();
}

void InitDefaultsTransparentMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransparentMessageImpl);
}

void InitDefaultsFriendMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_FriendMessage_default_instance_;
    new (ptr) ::common::msg::FriendMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::FriendMessage::InitAsDefaultInstance();
}

void InitDefaultsFriendMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendMessageImpl);
}

void InitDefaultsTextMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_TextMessage_default_instance_;
    new (ptr) ::common::msg::TextMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::TextMessage::InitAsDefaultInstance();
}

void InitDefaultsTextMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTextMessageImpl);
}

void InitDefaultsImageMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_ImageMessage_default_instance_;
    new (ptr) ::common::msg::ImageMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::ImageMessage::InitAsDefaultInstance();
}

void InitDefaultsImageMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageMessageImpl);
}

void InitDefaultsVideoMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_VideoMessage_default_instance_;
    new (ptr) ::common::msg::VideoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::VideoMessage::InitAsDefaultInstance();
}

void InitDefaultsVideoMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVideoMessageImpl);
}

void InitDefaultsAudioMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_AudioMessage_default_instance_;
    new (ptr) ::common::msg::AudioMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::AudioMessage::InitAsDefaultInstance();
}

void InitDefaultsAudioMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAudioMessageImpl);
}

void InitDefaultsLocationMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_LocationMessage_default_instance_;
    new (ptr) ::common::msg::LocationMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::LocationMessage::InitAsDefaultInstance();
}

void InitDefaultsLocationMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocationMessageImpl);
}

void InitDefaultsAtMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_AtMessage_default_instance_;
    new (ptr) ::common::msg::AtMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::AtMessage::InitAsDefaultInstance();
}

void InitDefaultsAtMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAtMessageImpl);
}

void InitDefaultsReadReceiptMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_ReadReceiptMessage_default_instance_;
    new (ptr) ::common::msg::ReadReceiptMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::ReadReceiptMessage::InitAsDefaultInstance();
}

void InitDefaultsReadReceiptMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadReceiptMessageImpl);
}

void InitDefaultsFileMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_FileMessage_default_instance_;
    new (ptr) ::common::msg::FileMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::FileMessage::InitAsDefaultInstance();
}

void InitDefaultsFileMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileMessageImpl);
}

void InitDefaultsRetractMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_RetractMessage_default_instance_;
    new (ptr) ::common::msg::RetractMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::RetractMessage::InitAsDefaultInstance();
}

void InitDefaultsRetractMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRetractMessageImpl);
}

void InitDefaultsCustomEntityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_CustomEntity_default_instance_;
    new (ptr) ::common::msg::CustomEntity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::CustomEntity::InitAsDefaultInstance();
}

void InitDefaultsCustomEntity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCustomEntityImpl);
}

void InitDefaultsCustomMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsCustomEntity();
  {
    void* ptr = &::common::msg::_CustomMessage_default_instance_;
    new (ptr) ::common::msg::CustomMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::CustomMessage::InitAsDefaultInstance();
}

void InitDefaultsCustomMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCustomMessageImpl);
}

void InitDefaultsCustomNoApnsMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsCustomEntity();
  {
    void* ptr = &::common::msg::_CustomNoApnsMessage_default_instance_;
    new (ptr) ::common::msg::CustomNoApnsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::CustomNoApnsMessage::InitAsDefaultInstance();
}

void InitDefaultsCustomNoApnsMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCustomNoApnsMessageImpl);
}

void InitDefaultsMsggwMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_MsggwMessage_default_instance_;
    new (ptr) ::common::msg::MsggwMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::MsggwMessage::InitAsDefaultInstance();
}

void InitDefaultsMsggwMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsggwMessageImpl);
}

void InitDefaultsVcardMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_VcardMessage_default_instance_;
    new (ptr) ::common::msg::VcardMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::VcardMessage::InitAsDefaultInstance();
}

void InitDefaultsVcardMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVcardMessageImpl);
}

void InitDefaultsMergeMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::msg::_MergeMessage_default_instance_;
    new (ptr) ::common::msg::MergeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::msg::MergeMessage::InitAsDefaultInstance();
}

void InitDefaultsMergeMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMergeMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MessageUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MessageUnit, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MessageUnit, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MessageUnit, is_retracted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, from_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, msg_content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, burn_after_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, to_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, is_jimao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, is_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, from_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, to_user_is_unregistered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, to_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, user_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ChatMessage, from_thumbnail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, from_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, msg_content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, is_jimao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::GroupMessage, is_read_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, to_useranem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TransparentMessage, from_nick_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FriendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FriendMessage, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TextMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TextMessage, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::TextMessage, burn_after_read_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, origin_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, big_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, middle_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, small_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, file_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, isorigin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, small_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, small_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, middle_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ImageMessage, middle_height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, video_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, video_screen_short_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, file_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VideoMessage, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, audio_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, file_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AudioMessage, audio_to_word_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, origin_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, file_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, location_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, location_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::LocationMessage, poi_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AtMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AtMessage, at_member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AtMessage, at_all_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::AtMessage, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ReadReceiptMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::ReadReceiptMessage, receipt_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FileMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FileMessage, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FileMessage, file_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::FileMessage, file_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::RetractMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::RetractMessage, retract_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomEntity, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomEntity, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomMessage, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomMessage, notification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomMessage, custom_entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomNoApnsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomNoApnsMessage, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomNoApnsMessage, notification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::CustomNoApnsMessage, custom_entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, notification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MsggwMessage, from_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, phone_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, vcard_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, original_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::VcardMessage, thumbnail_link_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MergeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MergeMessage, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MergeMessage, msgcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::msg::MergeMessage, guidlist_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::msg::MessageUnit)},
  { 8, -1, sizeof(::common::msg::ChatMessage)},
  { 29, -1, sizeof(::common::msg::GroupMessage)},
  { 45, -1, sizeof(::common::msg::TransparentMessage)},
  { 57, -1, sizeof(::common::msg::FriendMessage)},
  { 63, -1, sizeof(::common::msg::TextMessage)},
  { 70, -1, sizeof(::common::msg::ImageMessage)},
  { 86, -1, sizeof(::common::msg::VideoMessage)},
  { 98, -1, sizeof(::common::msg::AudioMessage)},
  { 108, -1, sizeof(::common::msg::LocationMessage)},
  { 123, -1, sizeof(::common::msg::AtMessage)},
  { 131, -1, sizeof(::common::msg::ReadReceiptMessage)},
  { 137, -1, sizeof(::common::msg::FileMessage)},
  { 145, -1, sizeof(::common::msg::RetractMessage)},
  { 151, -1, sizeof(::common::msg::CustomEntity)},
  { 158, -1, sizeof(::common::msg::CustomMessage)},
  { 166, -1, sizeof(::common::msg::CustomNoApnsMessage)},
  { 174, -1, sizeof(::common::msg::MsggwMessage)},
  { 184, -1, sizeof(::common::msg::VcardMessage)},
  { 195, -1, sizeof(::common::msg::MergeMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_MessageUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_ChatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_GroupMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_TransparentMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_FriendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_TextMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_ImageMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_VideoMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_AudioMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_LocationMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_AtMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_ReadReceiptMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_FileMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_RetractMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_CustomEntity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_CustomMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_CustomNoApnsMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_MsggwMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_VcardMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::msg::_MergeMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common/msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020common/msg.proto\022\ncommon.msg\032\030common/e"
      "numeration.proto\"Y\n\013MessageUnit\022&\n\010msg_t"
      "ype\030\001 \001(\0162\024.common.msg.EMsgType\022\014\n\004data\030"
      "\002 \001(\014\022\024\n\014is_retracted\030\003 \001(\010\"\357\002\n\013ChatMess"
      "age\022\025\n\rfrom_username\030\001 \001(\t\022\016\n\006appkey\030\002 \001"
      "(\t\022\021\n\tfrom_nick\030\003 \001(\t\0225\n\020msg_content_typ"
      "e\030\004 \001(\0162\033.common.msg.EMsgContentType\022\014\n\004"
      "data\030\005 \001(\014\022\014\n\004guid\030\006 \001(\004\022\016\n\006msg_id\030\007 \001(\t"
      "\022\027\n\017burn_after_read\030\010 \001(\010\022\023\n\013to_username"
      "\030\t \001(\t\022\020\n\010is_jimao\030\n \001(\010\022\017\n\007is_read\030\013 \001("
      "\010\022\022\n\nfrom_phone\030\014 \001(\t\022\037\n\027to_user_is_unre"
      "gistered\030\r \001(\010\022\020\n\010to_phone\030\016 \001(\t\022\023\n\013user"
      "_enable\030\017 \001(\r\022\026\n\016from_thumbnail\030\020 \001(\t\"\357\001"
      "\n\014GroupMessage\022\025\n\rfrom_username\030\001 \001(\t\022\021\n"
      "\tfrom_nick\030\002 \001(\t\022\016\n\006appkey\030\003 \001(\t\022\013\n\003uri\030"
      "\004 \001(\t\0225\n\020msg_content_type\030\005 \001(\0162\033.common"
      ".msg.EMsgContentType\022\014\n\004data\030\006 \001(\014\022\014\n\004gu"
      "id\030\007 \001(\004\022\016\n\006msg_id\030\010 \001(\t\022\022\n\ngroup_name\030\t"
      " \001(\t\022\020\n\010is_jimao\030\n \001(\010\022\017\n\007is_read\030\013 \001(\010\""
      "\217\001\n\022TransparentMessage\022\016\n\006appkey\030\001 \001(\t\022\025"
      "\n\rfrom_username\030\002 \001(\t\022\023\n\013to_useranem\030\003 \001"
      "(\t\022\014\n\004data\030\004 \001(\014\022\014\n\004guid\030\005 \001(\004\022\016\n\006msg_id"
      "\030\006 \001(\t\022\021\n\tfrom_nick\030\007 \001(\t\"\035\n\rFriendMessa"
      "ge\022\014\n\004text\030\001 \001(\t\"4\n\013TextMessage\022\014\n\004text\030"
      "\001 \001(\t\022\027\n\017burn_after_read\030\002 \001(\010\"\360\001\n\014Image"
      "Message\022\021\n\tfile_name\030\001 \001(\t\022\023\n\013origin_lin"
      "k\030\002 \001(\t\022\020\n\010big_link\030\003 \001(\t\022\023\n\013middle_link"
      "\030\004 \001(\t\022\022\n\nsmall_link\030\005 \001(\t\022\023\n\013file_lengt"
      "h\030\006 \001(\004\022\020\n\010isOrigin\030\007 \001(\010\022\023\n\013small_width"
      "\030\010 \001(\r\022\024\n\014small_height\030\t \001(\r\022\024\n\014middle_w"
      "idth\030\n \001(\r\022\025\n\rmiddle_height\030\013 \001(\r\"\234\001\n\014Vi"
      "deoMessage\022\021\n\tfile_name\030\001 \001(\t\022\022\n\nvideo_l"
      "ink\030\002 \001(\t\022\037\n\027video_screen_short_link\030\003 \001"
      "(\t\022\023\n\013file_length\030\004 \001(\004\022\020\n\010duration\030\006 \001("
      "\r\022\r\n\005width\030\t \001(\r\022\016\n\006height\030\n \001(\r\"s\n\014Audi"
      "oMessage\022\021\n\tfile_name\030\001 \001(\t\022\022\n\naudio_lin"
      "k\030\002 \001(\t\022\023\n\013file_length\030\004 \001(\004\022\020\n\010duration"
      "\030\005 \001(\r\022\025\n\raudio_to_word\030\006 \001(\t\"\323\001\n\017Locati"
      "onMessage\022\021\n\tfile_name\030\001 \001(\t\022\023\n\013origin_l"
      "ink\030\002 \001(\t\022\023\n\013file_length\030\004 \001(\004\022\r\n\005width\030"
      "\005 \001(\r\022\016\n\006height\030\006 \001(\r\022\021\n\tlongitude\030\007 \001(\001"
      "\022\020\n\010latitude\030\010 \001(\001\022\025\n\rlocation_desc\030\t \001("
      "\t\022\030\n\020location_address\030\n \001(\t\022\016\n\006poi_id\030\013 "
      "\001(\t\"<\n\tAtMessage\022\021\n\tat_member\030\001 \003(\t\022\016\n\006a"
      "t_all\030\002 \001(\010\022\014\n\004text\030\003 \001(\t\"*\n\022ReadReceipt"
      "Message\022\024\n\014receipt_guid\030\001 \001(\004\"H\n\013FileMes"
      "sage\022\021\n\tfile_name\030\001 \001(\t\022\021\n\tfile_link\030\002 \001"
      "(\t\022\023\n\013file_length\030\003 \001(\004\"&\n\016RetractMessag"
      "e\022\024\n\014retract_guid\030\001 \001(\004\"*\n\014CustomEntity\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"g\n\rCustomMes"
      "sage\022\017\n\007subType\030\001 \001(\t\022\024\n\014notification\030\002 "
      "\001(\t\022/\n\rcustom_entity\030\003 \003(\0132\030.common.msg."
      "CustomEntity\"m\n\023CustomNoApnsMessage\022\017\n\007s"
      "ubType\030\001 \001(\t\022\024\n\014notification\030\002 \001(\t\022/\n\rcu"
      "stom_entity\030\003 \003(\0132\030.common.msg.CustomEnt"
      "ity\"a\n\014MsggwMessage\022\016\n\006appkey\030\001 \001(\t\022\017\n\007c"
      "ontent\030\002 \001(\t\022\014\n\004guid\030\003 \001(\004\022\024\n\014notificati"
      "on\030\004 \001(\t\022\014\n\004from\030\005 \001(\t\"\253\001\n\014VcardMessage\022"
      "\017\n\007user_id\030\001 \001(\t\022\014\n\004nick\030\002 \001(\t\022\021\n\tphone_"
      "num\030\003 \001(\t\022:\n\nvcard_type\030\004 \001(\0162&.common.e"
      "numeration.EVcardMsgModelType\022\025\n\rorigina"
      "l_link\030\005 \001(\t\022\026\n\016thumbnail_link\030\006 \001(\t\"C\n\014"
      "MergeMessage\022\r\n\005title\030\001 \001(\t\022\022\n\nmsgConten"
      "t\030\002 \003(\t\022\020\n\010guidList\030\003 \003(\004*\337\001\n\010EMsgType\022\014"
      "\n\010CHAT_MSG\020\000\022\r\n\tGROUP_MSG\020\001\022\020\n\014GROUP_SIG"
      "NAL\020\002\022\r\n\tMSGGW_MSG\020\003\022\016\n\nSYSTEM_MSG\020\004\022\r\n\t"
      "MULTI_MSG\020\005\022\020\n\014CHATROOM_MSG\020\006\022\017\n\013PRIVATE"
      "_MSG\020\007\022\020\n\014FLEET_SIGNAL\020\010\022\023\n\017TRANSPARENT_"
      "MSG\020\t\022\022\n\016INVITATION_MSG\020\n\022\030\n\024INVITATION_"
      "BATCH_MSG\020\013*\247\002\n\017EMsgContentType\022\010\n\004TEXT\020"
      "\000\022\t\n\005IMAGE\020\001\022\t\n\005VIDEO\020\002\022\t\n\005AUDIO\020\003\022\014\n\010LO"
      "CATION\020\004\022\006\n\002AT\020\005\022\020\n\014READ_RECEIPT\020\006\022\010\n\004FI"
      "LE\020\007\022\013\n\007RETRACT\020\010\022\n\n\006CUSTOM\020\t\022\020\n\014JIMAO_R"
      "EADED\020\n\022\020\n\014JIMAO_SENDED\020\013\022\t\n\005VCARD\020\014\022\027\n\023"
      "SINGLE_READ_RECEIPT\020\r\022\r\n\tMERGE_MSG\020\016\022\020\n\014"
      "APPLY_FRIEND\020\024\022\022\n\016CUSTOM_NO_APNS\020\037\022\021\n\rCU"
      "STOM_FAMILY\020 \022\016\n\nFRIEND_MSG\020!B&\n\035com.cmc"
      "c.littlec.proto.commonB\003MsgP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/msg.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2fmsg_2eproto
namespace common {
namespace msg {
const ::google::protobuf::EnumDescriptor* EMsgType_descriptor() {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fmsg_2eproto::file_level_enum_descriptors[0];
}
bool EMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EMsgContentType_descriptor() {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fmsg_2eproto::file_level_enum_descriptors[1];
}
bool EMsgContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 20:
    case 31:
    case 32:
    case 33:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MessageUnit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageUnit::kMsgTypeFieldNumber;
const int MessageUnit::kDataFieldNumber;
const int MessageUnit::kIsRetractedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageUnit::MessageUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.MessageUnit)
}
MessageUnit::MessageUnit(const MessageUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&msg_type_, &from.msg_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_retracted_) -
    reinterpret_cast<char*>(&msg_type_)) + sizeof(is_retracted_));
  // @@protoc_insertion_point(copy_constructor:common.msg.MessageUnit)
}

void MessageUnit::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_retracted_) -
      reinterpret_cast<char*>(&msg_type_)) + sizeof(is_retracted_));
  _cached_size_ = 0;
}

MessageUnit::~MessageUnit() {
  // @@protoc_insertion_point(destructor:common.msg.MessageUnit)
  SharedDtor();
}

void MessageUnit::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageUnit::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageUnit& MessageUnit::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  return *internal_default_instance();
}

MessageUnit* MessageUnit::New(::google::protobuf::Arena* arena) const {
  MessageUnit* n = new MessageUnit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.MessageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_retracted_) -
      reinterpret_cast<char*>(&msg_type_)) + sizeof(is_retracted_));
  _internal_metadata_.Clear();
}

bool MessageUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.MessageUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.msg.EMsgType msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::common::msg::EMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_retracted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_retracted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.MessageUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.MessageUnit)
  return false;
#undef DO_
}

void MessageUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.MessageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.EMsgType msg_type = 1;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // bool is_retracted = 3;
  if (this->is_retracted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_retracted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.MessageUnit)
}

::google::protobuf::uint8* MessageUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.MessageUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.EMsgType msg_type = 1;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // bool is_retracted = 3;
  if (this->is_retracted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_retracted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.MessageUnit)
  return target;
}

size_t MessageUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.MessageUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .common.msg.EMsgType msg_type = 1;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  // bool is_retracted = 3;
  if (this->is_retracted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.MessageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.MessageUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.MessageUnit)
    MergeFrom(*source);
  }
}

void MessageUnit::MergeFrom(const MessageUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.MessageUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.is_retracted() != 0) {
    set_is_retracted(from.is_retracted());
  }
}

void MessageUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.MessageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageUnit::CopyFrom(const MessageUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.MessageUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageUnit::IsInitialized() const {
  return true;
}

void MessageUnit::Swap(MessageUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageUnit::InternalSwap(MessageUnit* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(msg_type_, other->msg_type_);
  swap(is_retracted_, other->is_retracted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageUnit::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessage::kFromUsernameFieldNumber;
const int ChatMessage::kAppkeyFieldNumber;
const int ChatMessage::kFromNickFieldNumber;
const int ChatMessage::kMsgContentTypeFieldNumber;
const int ChatMessage::kDataFieldNumber;
const int ChatMessage::kGuidFieldNumber;
const int ChatMessage::kMsgIdFieldNumber;
const int ChatMessage::kBurnAfterReadFieldNumber;
const int ChatMessage::kToUsernameFieldNumber;
const int ChatMessage::kIsJimaoFieldNumber;
const int ChatMessage::kIsReadFieldNumber;
const int ChatMessage::kFromPhoneFieldNumber;
const int ChatMessage::kToUserIsUnregisteredFieldNumber;
const int ChatMessage::kToPhoneFieldNumber;
const int ChatMessage::kUserEnableFieldNumber;
const int ChatMessage::kFromThumbnailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessage::ChatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsChatMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.ChatMessage)
}
ChatMessage::ChatMessage(const ChatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_username().size() > 0) {
    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  from_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_phone().size() > 0) {
    from_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_phone_);
  }
  to_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_phone().size() > 0) {
    to_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_phone_);
  }
  from_thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_thumbnail().size() > 0) {
    from_thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_thumbnail_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_enable_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(user_enable_));
  // @@protoc_insertion_point(copy_constructor:common.msg.ChatMessage)
}

void ChatMessage::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_enable_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(user_enable_));
  _cached_size_ = 0;
}

ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:common.msg.ChatMessage)
  SharedDtor();
}

void ChatMessage::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_thumbnail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMessage& ChatMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsChatMessage();
  return *internal_default_instance();
}

ChatMessage* ChatMessage::New(::google::protobuf::Arena* arena) const {
  ChatMessage* n = new ChatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_thumbnail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_enable_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(user_enable_));
  _internal_metadata_.Clear();
}

bool ChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.ChatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.EMsgContentType msg_content_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_content_type(static_cast< ::common::msg::EMsgContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool burn_after_read = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &burn_after_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_username = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_username().data(), static_cast<int>(this->to_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.to_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_jimao = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_jimao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_read = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_phone = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_phone().data(), static_cast<int>(this->from_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.from_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool to_user_is_unregistered = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &to_user_is_unregistered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_phone = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_phone().data(), static_cast<int>(this->to_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.to_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_enable = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_thumbnail = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_thumbnail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_thumbnail().data(), static_cast<int>(this->from_thumbnail().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ChatMessage.from_thumbnail"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.ChatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.ChatMessage)
  return false;
#undef DO_
}

void ChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_nick(), output);
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->msg_content_type(), output);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  // uint64 guid = 6;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->guid(), output);
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg_id(), output);
  }

  // bool burn_after_read = 8;
  if (this->burn_after_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->burn_after_read(), output);
  }

  // string to_username = 9;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.to_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->to_username(), output);
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_jimao(), output);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_read(), output);
  }

  // string from_phone = 12;
  if (this->from_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_phone().data(), static_cast<int>(this->from_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->from_phone(), output);
  }

  // bool to_user_is_unregistered = 13;
  if (this->to_user_is_unregistered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->to_user_is_unregistered(), output);
  }

  // string to_phone = 14;
  if (this->to_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_phone().data(), static_cast<int>(this->to_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.to_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->to_phone(), output);
  }

  // uint32 user_enable = 15;
  if (this->user_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->user_enable(), output);
  }

  // string from_thumbnail = 16;
  if (this->from_thumbnail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_thumbnail().data(), static_cast<int>(this->from_thumbnail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_thumbnail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->from_thumbnail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.ChatMessage)
}

::google::protobuf::uint8* ChatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_nick(), target);
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->msg_content_type(), target);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  // uint64 guid = 6;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->guid(), target);
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msg_id(), target);
  }

  // bool burn_after_read = 8;
  if (this->burn_after_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->burn_after_read(), target);
  }

  // string to_username = 9;
  if (this->to_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_username().data(), static_cast<int>(this->to_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.to_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->to_username(), target);
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_jimao(), target);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_read(), target);
  }

  // string from_phone = 12;
  if (this->from_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_phone().data(), static_cast<int>(this->from_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->from_phone(), target);
  }

  // bool to_user_is_unregistered = 13;
  if (this->to_user_is_unregistered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->to_user_is_unregistered(), target);
  }

  // string to_phone = 14;
  if (this->to_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_phone().data(), static_cast<int>(this->to_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.to_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->to_phone(), target);
  }

  // uint32 user_enable = 15;
  if (this->user_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->user_enable(), target);
  }

  // string from_thumbnail = 16;
  if (this->from_thumbnail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_thumbnail().data(), static_cast<int>(this->from_thumbnail().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ChatMessage.from_thumbnail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->from_thumbnail(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.ChatMessage)
  return target;
}

size_t ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.ChatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_nick = 3;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string msg_id = 7;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string to_username = 9;
  if (this->to_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_username());
  }

  // string from_phone = 12;
  if (this->from_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_phone());
  }

  // string to_phone = 14;
  if (this->to_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_phone());
  }

  // string from_thumbnail = 16;
  if (this->from_thumbnail().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_thumbnail());
  }

  // uint64 guid = 6;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .common.msg.EMsgContentType msg_content_type = 4;
  if (this->msg_content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_content_type());
  }

  // bool burn_after_read = 8;
  if (this->burn_after_read() != 0) {
    total_size += 1 + 1;
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    total_size += 1 + 1;
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    total_size += 1 + 1;
  }

  // bool to_user_is_unregistered = 13;
  if (this->to_user_is_unregistered() != 0) {
    total_size += 1 + 1;
  }

  // uint32 user_enable = 15;
  if (this->user_enable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_enable());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.ChatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.ChatMessage)
    MergeFrom(*source);
  }
}

void ChatMessage::MergeFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.to_username().size() > 0) {

    to_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_username_);
  }
  if (from.from_phone().size() > 0) {

    from_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_phone_);
  }
  if (from.to_phone().size() > 0) {

    to_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_phone_);
  }
  if (from.from_thumbnail().size() > 0) {

    from_thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_thumbnail_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.msg_content_type() != 0) {
    set_msg_content_type(from.msg_content_type());
  }
  if (from.burn_after_read() != 0) {
    set_burn_after_read(from.burn_after_read());
  }
  if (from.is_jimao() != 0) {
    set_is_jimao(from.is_jimao());
  }
  if (from.is_read() != 0) {
    set_is_read(from.is_read());
  }
  if (from.to_user_is_unregistered() != 0) {
    set_to_user_is_unregistered(from.to_user_is_unregistered());
  }
  if (from.user_enable() != 0) {
    set_user_enable(from.user_enable());
  }
}

void ChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessage::IsInitialized() const {
  return true;
}

void ChatMessage::Swap(ChatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessage::InternalSwap(ChatMessage* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  appkey_.Swap(&other->appkey_);
  from_nick_.Swap(&other->from_nick_);
  data_.Swap(&other->data_);
  msg_id_.Swap(&other->msg_id_);
  to_username_.Swap(&other->to_username_);
  from_phone_.Swap(&other->from_phone_);
  to_phone_.Swap(&other->to_phone_);
  from_thumbnail_.Swap(&other->from_thumbnail_);
  swap(guid_, other->guid_);
  swap(msg_content_type_, other->msg_content_type_);
  swap(burn_after_read_, other->burn_after_read_);
  swap(is_jimao_, other->is_jimao_);
  swap(is_read_, other->is_read_);
  swap(to_user_is_unregistered_, other->to_user_is_unregistered_);
  swap(user_enable_, other->user_enable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMessage::kFromUsernameFieldNumber;
const int GroupMessage::kFromNickFieldNumber;
const int GroupMessage::kAppkeyFieldNumber;
const int GroupMessage::kUriFieldNumber;
const int GroupMessage::kMsgContentTypeFieldNumber;
const int GroupMessage::kDataFieldNumber;
const int GroupMessage::kGuidFieldNumber;
const int GroupMessage::kMsgIdFieldNumber;
const int GroupMessage::kGroupNameFieldNumber;
const int GroupMessage::kIsJimaoFieldNumber;
const int GroupMessage::kIsReadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMessage::GroupMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsGroupMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.GroupMessage)
}
GroupMessage::GroupMessage(const GroupMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_read_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  // @@protoc_insertion_point(copy_constructor:common.msg.GroupMessage)
}

void GroupMessage::SharedCtor() {
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_read_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  _cached_size_ = 0;
}

GroupMessage::~GroupMessage() {
  // @@protoc_insertion_point(destructor:common.msg.GroupMessage)
  SharedDtor();
}

void GroupMessage::SharedDtor() {
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupMessage& GroupMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsGroupMessage();
  return *internal_default_instance();
}

GroupMessage* GroupMessage::New(::google::protobuf::Arena* arena) const {
  GroupMessage* n = new GroupMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.GroupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_read_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(is_read_));
  _internal_metadata_.Clear();
}

bool GroupMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.GroupMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.EMsgContentType msg_content_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_content_type(static_cast< ::common::msg::EMsgContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.GroupMessage.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_jimao = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_jimao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_read = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.GroupMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.GroupMessage)
  return false;
#undef DO_
}

void GroupMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.GroupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_username(), output);
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_nick(), output);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appkey(), output);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uri(), output);
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->msg_content_type(), output);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->guid(), output);
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->msg_id(), output);
  }

  // string group_name = 9;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->group_name(), output);
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_jimao(), output);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_read(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.GroupMessage)
}

::google::protobuf::uint8* GroupMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.GroupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_username = 1;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_username(), target);
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_nick(), target);
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appkey(), target);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uri(), target);
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->msg_content_type(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->guid(), target);
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->msg_id(), target);
  }

  // string group_name = 9;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.GroupMessage.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->group_name(), target);
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_jimao(), target);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_read(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.GroupMessage)
  return target;
}

size_t GroupMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.GroupMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_username = 1;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string from_nick = 2;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // string appkey = 3;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string msg_id = 8;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string group_name = 9;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // uint64 guid = 7;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .common.msg.EMsgContentType msg_content_type = 5;
  if (this->msg_content_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_content_type());
  }

  // bool is_jimao = 10;
  if (this->is_jimao() != 0) {
    total_size += 1 + 1;
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.GroupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.GroupMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.GroupMessage)
    MergeFrom(*source);
  }
}

void GroupMessage::MergeFrom(const GroupMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.GroupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.msg_content_type() != 0) {
    set_msg_content_type(from.msg_content_type());
  }
  if (from.is_jimao() != 0) {
    set_is_jimao(from.is_jimao());
  }
  if (from.is_read() != 0) {
    set_is_read(from.is_read());
  }
}

void GroupMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.GroupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupMessage::CopyFrom(const GroupMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.GroupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMessage::IsInitialized() const {
  return true;
}

void GroupMessage::Swap(GroupMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMessage::InternalSwap(GroupMessage* other) {
  using std::swap;
  from_username_.Swap(&other->from_username_);
  from_nick_.Swap(&other->from_nick_);
  appkey_.Swap(&other->appkey_);
  uri_.Swap(&other->uri_);
  data_.Swap(&other->data_);
  msg_id_.Swap(&other->msg_id_);
  group_name_.Swap(&other->group_name_);
  swap(guid_, other->guid_);
  swap(msg_content_type_, other->msg_content_type_);
  swap(is_jimao_, other->is_jimao_);
  swap(is_read_, other->is_read_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransparentMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransparentMessage::kAppkeyFieldNumber;
const int TransparentMessage::kFromUsernameFieldNumber;
const int TransparentMessage::kToUseranemFieldNumber;
const int TransparentMessage::kDataFieldNumber;
const int TransparentMessage::kGuidFieldNumber;
const int TransparentMessage::kMsgIdFieldNumber;
const int TransparentMessage::kFromNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransparentMessage::TransparentMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsTransparentMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.TransparentMessage)
}
TransparentMessage::TransparentMessage(const TransparentMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  to_useranem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_useranem().size() > 0) {
    to_useranem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_useranem_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_id().size() > 0) {
    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_nick().size() > 0) {
    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:common.msg.TransparentMessage)
}

void TransparentMessage::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_useranem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TransparentMessage::~TransparentMessage() {
  // @@protoc_insertion_point(destructor:common.msg.TransparentMessage)
  SharedDtor();
}

void TransparentMessage::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_useranem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransparentMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransparentMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransparentMessage& TransparentMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsTransparentMessage();
  return *internal_default_instance();
}

TransparentMessage* TransparentMessage::New(::google::protobuf::Arena* arena) const {
  TransparentMessage* n = new TransparentMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransparentMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.TransparentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_useranem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TransparentMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.TransparentMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TransparentMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TransparentMessage.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_useranem = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_useranem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_useranem().data(), static_cast<int>(this->to_useranem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TransparentMessage.to_useranem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_id().data(), static_cast<int>(this->msg_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TransparentMessage.msg_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_nick = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_nick().data(), static_cast<int>(this->from_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TransparentMessage.from_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.TransparentMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.TransparentMessage)
  return false;
#undef DO_
}

void TransparentMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.TransparentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_username(), output);
  }

  // string to_useranem = 3;
  if (this->to_useranem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_useranem().data(), static_cast<int>(this->to_useranem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.to_useranem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->to_useranem(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->guid(), output);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.msg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg_id(), output);
  }

  // string from_nick = 7;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.from_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->from_nick(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.TransparentMessage)
}

::google::protobuf::uint8* TransparentMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.TransparentMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_username(), target);
  }

  // string to_useranem = 3;
  if (this->to_useranem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_useranem().data(), static_cast<int>(this->to_useranem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.to_useranem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->to_useranem(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->guid(), target);
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_id().data(), static_cast<int>(this->msg_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.msg_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg_id(), target);
  }

  // string from_nick = 7;
  if (this->from_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_nick().data(), static_cast<int>(this->from_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TransparentMessage.from_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->from_nick(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.TransparentMessage)
  return target;
}

size_t TransparentMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.TransparentMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 2;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string to_useranem = 3;
  if (this->to_useranem().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_useranem());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string msg_id = 6;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_id());
  }

  // string from_nick = 7;
  if (this->from_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_nick());
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransparentMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.TransparentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TransparentMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransparentMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.TransparentMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.TransparentMessage)
    MergeFrom(*source);
  }
}

void TransparentMessage::MergeFrom(const TransparentMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.TransparentMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.to_useranem().size() > 0) {

    to_useranem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_useranem_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.msg_id().size() > 0) {

    msg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_id_);
  }
  if (from.from_nick().size() > 0) {

    from_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_nick_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void TransparentMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.TransparentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransparentMessage::CopyFrom(const TransparentMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.TransparentMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransparentMessage::IsInitialized() const {
  return true;
}

void TransparentMessage::Swap(TransparentMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransparentMessage::InternalSwap(TransparentMessage* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  to_useranem_.Swap(&other->to_useranem_);
  data_.Swap(&other->data_);
  msg_id_.Swap(&other->msg_id_);
  from_nick_.Swap(&other->from_nick_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransparentMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendMessage::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendMessage::FriendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsFriendMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.FriendMessage)
}
FriendMessage::FriendMessage(const FriendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:common.msg.FriendMessage)
}

void FriendMessage::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FriendMessage::~FriendMessage() {
  // @@protoc_insertion_point(destructor:common.msg.FriendMessage)
  SharedDtor();
}

void FriendMessage::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendMessage& FriendMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsFriendMessage();
  return *internal_default_instance();
}

FriendMessage* FriendMessage::New(::google::protobuf::Arena* arena) const {
  FriendMessage* n = new FriendMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FriendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.FriendMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.FriendMessage.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.FriendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.FriendMessage)
  return false;
#undef DO_
}

void FriendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FriendMessage.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.FriendMessage)
}

::google::protobuf::uint8* FriendMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FriendMessage.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.FriendMessage)
  return target;
}

size_t FriendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.FriendMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.FriendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.FriendMessage)
    MergeFrom(*source);
  }
}

void FriendMessage::MergeFrom(const FriendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void FriendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendMessage::CopyFrom(const FriendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendMessage::IsInitialized() const {
  return true;
}

void FriendMessage::Swap(FriendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendMessage::InternalSwap(FriendMessage* other) {
  using std::swap;
  text_.Swap(&other->text_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextMessage::kTextFieldNumber;
const int TextMessage::kBurnAfterReadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextMessage::TextMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsTextMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.TextMessage)
}
TextMessage::TextMessage(const TextMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  burn_after_read_ = from.burn_after_read_;
  // @@protoc_insertion_point(copy_constructor:common.msg.TextMessage)
}

void TextMessage::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  burn_after_read_ = false;
  _cached_size_ = 0;
}

TextMessage::~TextMessage() {
  // @@protoc_insertion_point(destructor:common.msg.TextMessage)
  SharedDtor();
}

void TextMessage::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextMessage& TextMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsTextMessage();
  return *internal_default_instance();
}

TextMessage* TextMessage::New(::google::protobuf::Arena* arena) const {
  TextMessage* n = new TextMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  burn_after_read_ = false;
  _internal_metadata_.Clear();
}

bool TextMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.TextMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.TextMessage.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool burn_after_read = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &burn_after_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.TextMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.TextMessage)
  return false;
#undef DO_
}

void TextMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TextMessage.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // bool burn_after_read = 2;
  if (this->burn_after_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->burn_after_read(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.TextMessage)
}

::google::protobuf::uint8* TextMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.TextMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.TextMessage.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // bool burn_after_read = 2;
  if (this->burn_after_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->burn_after_read(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.TextMessage)
  return target;
}

size_t TextMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.TextMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // bool burn_after_read = 2;
  if (this->burn_after_read() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.TextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TextMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.TextMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.TextMessage)
    MergeFrom(*source);
  }
}

void TextMessage::MergeFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.TextMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.burn_after_read() != 0) {
    set_burn_after_read(from.burn_after_read());
  }
}

void TextMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextMessage::CopyFrom(const TextMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.TextMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextMessage::IsInitialized() const {
  return true;
}

void TextMessage::Swap(TextMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextMessage::InternalSwap(TextMessage* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(burn_after_read_, other->burn_after_read_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageMessage::kFileNameFieldNumber;
const int ImageMessage::kOriginLinkFieldNumber;
const int ImageMessage::kBigLinkFieldNumber;
const int ImageMessage::kMiddleLinkFieldNumber;
const int ImageMessage::kSmallLinkFieldNumber;
const int ImageMessage::kFileLengthFieldNumber;
const int ImageMessage::kIsOriginFieldNumber;
const int ImageMessage::kSmallWidthFieldNumber;
const int ImageMessage::kSmallHeightFieldNumber;
const int ImageMessage::kMiddleWidthFieldNumber;
const int ImageMessage::kMiddleHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageMessage::ImageMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsImageMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.ImageMessage)
}
ImageMessage::ImageMessage(const ImageMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  origin_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin_link().size() > 0) {
    origin_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_link_);
  }
  big_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big_link().size() > 0) {
    big_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_link_);
  }
  middle_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.middle_link().size() > 0) {
    middle_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.middle_link_);
  }
  small_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.small_link().size() > 0) {
    small_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.small_link_);
  }
  ::memcpy(&file_length_, &from.file_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&middle_height_) -
    reinterpret_cast<char*>(&file_length_)) + sizeof(middle_height_));
  // @@protoc_insertion_point(copy_constructor:common.msg.ImageMessage)
}

void ImageMessage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  middle_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  small_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&middle_height_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(middle_height_));
  _cached_size_ = 0;
}

ImageMessage::~ImageMessage() {
  // @@protoc_insertion_point(destructor:common.msg.ImageMessage)
  SharedDtor();
}

void ImageMessage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  middle_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  small_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageMessage& ImageMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsImageMessage();
  return *internal_default_instance();
}

ImageMessage* ImageMessage::New(::google::protobuf::Arena* arena) const {
  ImageMessage* n = new ImageMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.ImageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  big_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  middle_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  small_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&middle_height_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(middle_height_));
  _internal_metadata_.Clear();
}

bool ImageMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.ImageMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ImageMessage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin_link().data(), static_cast<int>(this->origin_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ImageMessage.origin_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string big_link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big_link().data(), static_cast<int>(this->big_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ImageMessage.big_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string middle_link = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_middle_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->middle_link().data(), static_cast<int>(this->middle_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ImageMessage.middle_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string small_link = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_small_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->small_link().data(), static_cast<int>(this->small_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.ImageMessage.small_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isOrigin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isorigin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 small_width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &small_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 small_height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &small_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 middle_width = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &middle_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 middle_height = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &middle_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.ImageMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.ImageMessage)
  return false;
#undef DO_
}

void ImageMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.ImageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_link().data(), static_cast<int>(this->origin_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.origin_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin_link(), output);
  }

  // string big_link = 3;
  if (this->big_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_link().data(), static_cast<int>(this->big_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.big_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->big_link(), output);
  }

  // string middle_link = 4;
  if (this->middle_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->middle_link().data(), static_cast<int>(this->middle_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.middle_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->middle_link(), output);
  }

  // string small_link = 5;
  if (this->small_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->small_link().data(), static_cast<int>(this->small_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.small_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->small_link(), output);
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->file_length(), output);
  }

  // bool isOrigin = 7;
  if (this->isorigin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isorigin(), output);
  }

  // uint32 small_width = 8;
  if (this->small_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->small_width(), output);
  }

  // uint32 small_height = 9;
  if (this->small_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->small_height(), output);
  }

  // uint32 middle_width = 10;
  if (this->middle_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->middle_width(), output);
  }

  // uint32 middle_height = 11;
  if (this->middle_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->middle_height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.ImageMessage)
}

::google::protobuf::uint8* ImageMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.ImageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_link().data(), static_cast<int>(this->origin_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.origin_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin_link(), target);
  }

  // string big_link = 3;
  if (this->big_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_link().data(), static_cast<int>(this->big_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.big_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->big_link(), target);
  }

  // string middle_link = 4;
  if (this->middle_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->middle_link().data(), static_cast<int>(this->middle_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.middle_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->middle_link(), target);
  }

  // string small_link = 5;
  if (this->small_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->small_link().data(), static_cast<int>(this->small_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.ImageMessage.small_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->small_link(), target);
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->file_length(), target);
  }

  // bool isOrigin = 7;
  if (this->isorigin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isorigin(), target);
  }

  // uint32 small_width = 8;
  if (this->small_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->small_width(), target);
  }

  // uint32 small_height = 9;
  if (this->small_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->small_height(), target);
  }

  // uint32 middle_width = 10;
  if (this->middle_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->middle_width(), target);
  }

  // uint32 middle_height = 11;
  if (this->middle_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->middle_height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.ImageMessage)
  return target;
}

size_t ImageMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.ImageMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin_link());
  }

  // string big_link = 3;
  if (this->big_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big_link());
  }

  // string middle_link = 4;
  if (this->middle_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->middle_link());
  }

  // string small_link = 5;
  if (this->small_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->small_link());
  }

  // uint64 file_length = 6;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  // bool isOrigin = 7;
  if (this->isorigin() != 0) {
    total_size += 1 + 1;
  }

  // uint32 small_width = 8;
  if (this->small_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->small_width());
  }

  // uint32 small_height = 9;
  if (this->small_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->small_height());
  }

  // uint32 middle_width = 10;
  if (this->middle_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->middle_width());
  }

  // uint32 middle_height = 11;
  if (this->middle_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->middle_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.ImageMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.ImageMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.ImageMessage)
    MergeFrom(*source);
  }
}

void ImageMessage::MergeFrom(const ImageMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.ImageMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.origin_link().size() > 0) {

    origin_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_link_);
  }
  if (from.big_link().size() > 0) {

    big_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_link_);
  }
  if (from.middle_link().size() > 0) {

    middle_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.middle_link_);
  }
  if (from.small_link().size() > 0) {

    small_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.small_link_);
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
  if (from.isorigin() != 0) {
    set_isorigin(from.isorigin());
  }
  if (from.small_width() != 0) {
    set_small_width(from.small_width());
  }
  if (from.small_height() != 0) {
    set_small_height(from.small_height());
  }
  if (from.middle_width() != 0) {
    set_middle_width(from.middle_width());
  }
  if (from.middle_height() != 0) {
    set_middle_height(from.middle_height());
  }
}

void ImageMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.ImageMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageMessage::CopyFrom(const ImageMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.ImageMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageMessage::IsInitialized() const {
  return true;
}

void ImageMessage::Swap(ImageMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageMessage::InternalSwap(ImageMessage* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  origin_link_.Swap(&other->origin_link_);
  big_link_.Swap(&other->big_link_);
  middle_link_.Swap(&other->middle_link_);
  small_link_.Swap(&other->small_link_);
  swap(file_length_, other->file_length_);
  swap(isorigin_, other->isorigin_);
  swap(small_width_, other->small_width_);
  swap(small_height_, other->small_height_);
  swap(middle_width_, other->middle_width_);
  swap(middle_height_, other->middle_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VideoMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VideoMessage::kFileNameFieldNumber;
const int VideoMessage::kVideoLinkFieldNumber;
const int VideoMessage::kVideoScreenShortLinkFieldNumber;
const int VideoMessage::kFileLengthFieldNumber;
const int VideoMessage::kDurationFieldNumber;
const int VideoMessage::kWidthFieldNumber;
const int VideoMessage::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VideoMessage::VideoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsVideoMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.VideoMessage)
}
VideoMessage::VideoMessage(const VideoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  video_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.video_link().size() > 0) {
    video_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_link_);
  }
  video_screen_short_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.video_screen_short_link().size() > 0) {
    video_screen_short_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_screen_short_link_);
  }
  ::memcpy(&file_length_, &from.file_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&file_length_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:common.msg.VideoMessage)
}

void VideoMessage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_screen_short_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(height_));
  _cached_size_ = 0;
}

VideoMessage::~VideoMessage() {
  // @@protoc_insertion_point(destructor:common.msg.VideoMessage)
  SharedDtor();
}

void VideoMessage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_screen_short_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VideoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VideoMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VideoMessage& VideoMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsVideoMessage();
  return *internal_default_instance();
}

VideoMessage* VideoMessage::New(::google::protobuf::Arena* arena) const {
  VideoMessage* n = new VideoMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VideoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.VideoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_screen_short_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool VideoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.VideoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VideoMessage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string video_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->video_link().data(), static_cast<int>(this->video_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VideoMessage.video_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string video_screen_short_link = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_screen_short_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->video_screen_short_link().data(), static_cast<int>(this->video_screen_short_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VideoMessage.video_screen_short_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.VideoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.VideoMessage)
  return false;
#undef DO_
}

void VideoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.VideoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string video_link = 2;
  if (this->video_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->video_link().data(), static_cast<int>(this->video_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.video_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->video_link(), output);
  }

  // string video_screen_short_link = 3;
  if (this->video_screen_short_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->video_screen_short_link().data(), static_cast<int>(this->video_screen_short_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.video_screen_short_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->video_screen_short_link(), output);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->file_length(), output);
  }

  // uint32 duration = 6;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->duration(), output);
  }

  // uint32 width = 9;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->width(), output);
  }

  // uint32 height = 10;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.VideoMessage)
}

::google::protobuf::uint8* VideoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.VideoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string video_link = 2;
  if (this->video_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->video_link().data(), static_cast<int>(this->video_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.video_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->video_link(), target);
  }

  // string video_screen_short_link = 3;
  if (this->video_screen_short_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->video_screen_short_link().data(), static_cast<int>(this->video_screen_short_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VideoMessage.video_screen_short_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->video_screen_short_link(), target);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->file_length(), target);
  }

  // uint32 duration = 6;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->duration(), target);
  }

  // uint32 width = 9;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->width(), target);
  }

  // uint32 height = 10;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.VideoMessage)
  return target;
}

size_t VideoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.VideoMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string video_link = 2;
  if (this->video_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->video_link());
  }

  // string video_screen_short_link = 3;
  if (this->video_screen_short_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->video_screen_short_link());
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  // uint32 duration = 6;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  // uint32 width = 9;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 10;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VideoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.VideoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VideoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.VideoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.VideoMessage)
    MergeFrom(*source);
  }
}

void VideoMessage::MergeFrom(const VideoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.VideoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.video_link().size() > 0) {

    video_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_link_);
  }
  if (from.video_screen_short_link().size() > 0) {

    video_screen_short_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_screen_short_link_);
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void VideoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.VideoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoMessage::CopyFrom(const VideoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.VideoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoMessage::IsInitialized() const {
  return true;
}

void VideoMessage::Swap(VideoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VideoMessage::InternalSwap(VideoMessage* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  video_link_.Swap(&other->video_link_);
  video_screen_short_link_.Swap(&other->video_screen_short_link_);
  swap(file_length_, other->file_length_);
  swap(duration_, other->duration_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VideoMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioMessage::kFileNameFieldNumber;
const int AudioMessage::kAudioLinkFieldNumber;
const int AudioMessage::kFileLengthFieldNumber;
const int AudioMessage::kDurationFieldNumber;
const int AudioMessage::kAudioToWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioMessage::AudioMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsAudioMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.AudioMessage)
}
AudioMessage::AudioMessage(const AudioMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  audio_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_link().size() > 0) {
    audio_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_link_);
  }
  audio_to_word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_to_word().size() > 0) {
    audio_to_word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_to_word_);
  }
  ::memcpy(&file_length_, &from.file_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&file_length_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:common.msg.AudioMessage)
}

void AudioMessage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_to_word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(duration_));
  _cached_size_ = 0;
}

AudioMessage::~AudioMessage() {
  // @@protoc_insertion_point(destructor:common.msg.AudioMessage)
  SharedDtor();
}

void AudioMessage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_to_word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AudioMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioMessage& AudioMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsAudioMessage();
  return *internal_default_instance();
}

AudioMessage* AudioMessage::New(::google::protobuf::Arena* arena) const {
  AudioMessage* n = new AudioMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.AudioMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_to_word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(duration_));
  _internal_metadata_.Clear();
}

bool AudioMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.AudioMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.AudioMessage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audio_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_link().data(), static_cast<int>(this->audio_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.AudioMessage.audio_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audio_to_word = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_to_word()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_to_word().data(), static_cast<int>(this->audio_to_word().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.AudioMessage.audio_to_word"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.AudioMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.AudioMessage)
  return false;
#undef DO_
}

void AudioMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.AudioMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string audio_link = 2;
  if (this->audio_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_link().data(), static_cast<int>(this->audio_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.audio_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->audio_link(), output);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->file_length(), output);
  }

  // uint32 duration = 5;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->duration(), output);
  }

  // string audio_to_word = 6;
  if (this->audio_to_word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_to_word().data(), static_cast<int>(this->audio_to_word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.audio_to_word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->audio_to_word(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.AudioMessage)
}

::google::protobuf::uint8* AudioMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.AudioMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string audio_link = 2;
  if (this->audio_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_link().data(), static_cast<int>(this->audio_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.audio_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->audio_link(), target);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->file_length(), target);
  }

  // uint32 duration = 5;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->duration(), target);
  }

  // string audio_to_word = 6;
  if (this->audio_to_word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_to_word().data(), static_cast<int>(this->audio_to_word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AudioMessage.audio_to_word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->audio_to_word(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.AudioMessage)
  return target;
}

size_t AudioMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.AudioMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string audio_link = 2;
  if (this->audio_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_link());
  }

  // string audio_to_word = 6;
  if (this->audio_to_word().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_to_word());
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  // uint32 duration = 5;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.AudioMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.AudioMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.AudioMessage)
    MergeFrom(*source);
  }
}

void AudioMessage::MergeFrom(const AudioMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.AudioMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.audio_link().size() > 0) {

    audio_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_link_);
  }
  if (from.audio_to_word().size() > 0) {

    audio_to_word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_to_word_);
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void AudioMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.AudioMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioMessage::CopyFrom(const AudioMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.AudioMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioMessage::IsInitialized() const {
  return true;
}

void AudioMessage::Swap(AudioMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioMessage::InternalSwap(AudioMessage* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  audio_link_.Swap(&other->audio_link_);
  audio_to_word_.Swap(&other->audio_to_word_);
  swap(file_length_, other->file_length_);
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocationMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocationMessage::kFileNameFieldNumber;
const int LocationMessage::kOriginLinkFieldNumber;
const int LocationMessage::kFileLengthFieldNumber;
const int LocationMessage::kWidthFieldNumber;
const int LocationMessage::kHeightFieldNumber;
const int LocationMessage::kLongitudeFieldNumber;
const int LocationMessage::kLatitudeFieldNumber;
const int LocationMessage::kLocationDescFieldNumber;
const int LocationMessage::kLocationAddressFieldNumber;
const int LocationMessage::kPoiIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocationMessage::LocationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.LocationMessage)
}
LocationMessage::LocationMessage(const LocationMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  origin_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin_link().size() > 0) {
    origin_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_link_);
  }
  location_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_desc().size() > 0) {
    location_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_desc_);
  }
  location_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location_address().size() > 0) {
    location_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_address_);
  }
  poi_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.poi_id().size() > 0) {
    poi_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poi_id_);
  }
  ::memcpy(&file_length_, &from.file_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&file_length_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:common.msg.LocationMessage)
}

void LocationMessage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poi_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(latitude_));
  _cached_size_ = 0;
}

LocationMessage::~LocationMessage() {
  // @@protoc_insertion_point(destructor:common.msg.LocationMessage)
  SharedDtor();
}

void LocationMessage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poi_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LocationMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocationMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocationMessage& LocationMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsLocationMessage();
  return *internal_default_instance();
}

LocationMessage* LocationMessage::New(::google::protobuf::Arena* arena) const {
  LocationMessage* n = new LocationMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.LocationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poi_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&file_length_)) + sizeof(latitude_));
  _internal_metadata_.Clear();
}

bool LocationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.LocationMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.LocationMessage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin_link().data(), static_cast<int>(this->origin_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.LocationMessage.origin_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_desc = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_desc().data(), static_cast<int>(this->location_desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.LocationMessage.location_desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string location_address = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_address().data(), static_cast<int>(this->location_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.LocationMessage.location_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string poi_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poi_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->poi_id().data(), static_cast<int>(this->poi_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.LocationMessage.poi_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.LocationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.LocationMessage)
  return false;
#undef DO_
}

void LocationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.LocationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_link().data(), static_cast<int>(this->origin_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.origin_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin_link(), output);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->file_length(), output);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // uint32 height = 6;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->height(), output);
  }

  // double longitude = 7;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->longitude(), output);
  }

  // double latitude = 8;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->latitude(), output);
  }

  // string location_desc = 9;
  if (this->location_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_desc().data(), static_cast<int>(this->location_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.location_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->location_desc(), output);
  }

  // string location_address = 10;
  if (this->location_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_address().data(), static_cast<int>(this->location_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.location_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->location_address(), output);
  }

  // string poi_id = 11;
  if (this->poi_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poi_id().data(), static_cast<int>(this->poi_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.poi_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->poi_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.LocationMessage)
}

::google::protobuf::uint8* LocationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.LocationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin_link().data(), static_cast<int>(this->origin_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.origin_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin_link(), target);
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->file_length(), target);
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // uint32 height = 6;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->height(), target);
  }

  // double longitude = 7;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->longitude(), target);
  }

  // double latitude = 8;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->latitude(), target);
  }

  // string location_desc = 9;
  if (this->location_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_desc().data(), static_cast<int>(this->location_desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.location_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->location_desc(), target);
  }

  // string location_address = 10;
  if (this->location_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_address().data(), static_cast<int>(this->location_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.location_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->location_address(), target);
  }

  // string poi_id = 11;
  if (this->poi_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->poi_id().data(), static_cast<int>(this->poi_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.LocationMessage.poi_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->poi_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.LocationMessage)
  return target;
}

size_t LocationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.LocationMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string origin_link = 2;
  if (this->origin_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin_link());
  }

  // string location_desc = 9;
  if (this->location_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_desc());
  }

  // string location_address = 10;
  if (this->location_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_address());
  }

  // string poi_id = 11;
  if (this->poi_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->poi_id());
  }

  // uint64 file_length = 4;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  // uint32 width = 5;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 6;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // double longitude = 7;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 8;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.LocationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.LocationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.LocationMessage)
    MergeFrom(*source);
  }
}

void LocationMessage::MergeFrom(const LocationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.LocationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.origin_link().size() > 0) {

    origin_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_link_);
  }
  if (from.location_desc().size() > 0) {

    location_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_desc_);
  }
  if (from.location_address().size() > 0) {

    location_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_address_);
  }
  if (from.poi_id().size() > 0) {

    poi_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poi_id_);
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void LocationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.LocationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationMessage::CopyFrom(const LocationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.LocationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationMessage::IsInitialized() const {
  return true;
}

void LocationMessage::Swap(LocationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocationMessage::InternalSwap(LocationMessage* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  origin_link_.Swap(&other->origin_link_);
  location_desc_.Swap(&other->location_desc_);
  location_address_.Swap(&other->location_address_);
  poi_id_.Swap(&other->poi_id_);
  swap(file_length_, other->file_length_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocationMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AtMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AtMessage::kAtMemberFieldNumber;
const int AtMessage::kAtAllFieldNumber;
const int AtMessage::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AtMessage::AtMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsAtMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.AtMessage)
}
AtMessage::AtMessage(const AtMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      at_member_(from.at_member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  at_all_ = from.at_all_;
  // @@protoc_insertion_point(copy_constructor:common.msg.AtMessage)
}

void AtMessage::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  at_all_ = false;
  _cached_size_ = 0;
}

AtMessage::~AtMessage() {
  // @@protoc_insertion_point(destructor:common.msg.AtMessage)
  SharedDtor();
}

void AtMessage::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AtMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AtMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AtMessage& AtMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsAtMessage();
  return *internal_default_instance();
}

AtMessage* AtMessage::New(::google::protobuf::Arena* arena) const {
  AtMessage* n = new AtMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AtMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.AtMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  at_member_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  at_all_ = false;
  _internal_metadata_.Clear();
}

bool AtMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.AtMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string at_member = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_at_member()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->at_member(this->at_member_size() - 1).data(),
            static_cast<int>(this->at_member(this->at_member_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.AtMessage.at_member"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool at_all = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &at_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.AtMessage.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.AtMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.AtMessage)
  return false;
#undef DO_
}

void AtMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.AtMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string at_member = 1;
  for (int i = 0, n = this->at_member_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->at_member(i).data(), static_cast<int>(this->at_member(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AtMessage.at_member");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->at_member(i), output);
  }

  // bool at_all = 2;
  if (this->at_all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->at_all(), output);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AtMessage.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.AtMessage)
}

::google::protobuf::uint8* AtMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.AtMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string at_member = 1;
  for (int i = 0, n = this->at_member_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->at_member(i).data(), static_cast<int>(this->at_member(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AtMessage.at_member");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->at_member(i), target);
  }

  // bool at_all = 2;
  if (this->at_all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->at_all(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.AtMessage.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.AtMessage)
  return target;
}

size_t AtMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.AtMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string at_member = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->at_member_size());
  for (int i = 0, n = this->at_member_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->at_member(i));
  }

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // bool at_all = 2;
  if (this->at_all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AtMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.AtMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AtMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AtMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.AtMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.AtMessage)
    MergeFrom(*source);
  }
}

void AtMessage::MergeFrom(const AtMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.AtMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  at_member_.MergeFrom(from.at_member_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.at_all() != 0) {
    set_at_all(from.at_all());
  }
}

void AtMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.AtMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AtMessage::CopyFrom(const AtMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.AtMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AtMessage::IsInitialized() const {
  return true;
}

void AtMessage::Swap(AtMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AtMessage::InternalSwap(AtMessage* other) {
  using std::swap;
  at_member_.InternalSwap(&other->at_member_);
  text_.Swap(&other->text_);
  swap(at_all_, other->at_all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AtMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadReceiptMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadReceiptMessage::kReceiptGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadReceiptMessage::ReadReceiptMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsReadReceiptMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.ReadReceiptMessage)
}
ReadReceiptMessage::ReadReceiptMessage(const ReadReceiptMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  receipt_guid_ = from.receipt_guid_;
  // @@protoc_insertion_point(copy_constructor:common.msg.ReadReceiptMessage)
}

void ReadReceiptMessage::SharedCtor() {
  receipt_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ReadReceiptMessage::~ReadReceiptMessage() {
  // @@protoc_insertion_point(destructor:common.msg.ReadReceiptMessage)
  SharedDtor();
}

void ReadReceiptMessage::SharedDtor() {
}

void ReadReceiptMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadReceiptMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadReceiptMessage& ReadReceiptMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsReadReceiptMessage();
  return *internal_default_instance();
}

ReadReceiptMessage* ReadReceiptMessage::New(::google::protobuf::Arena* arena) const {
  ReadReceiptMessage* n = new ReadReceiptMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadReceiptMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.ReadReceiptMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receipt_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReadReceiptMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.ReadReceiptMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 receipt_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receipt_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.ReadReceiptMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.ReadReceiptMessage)
  return false;
#undef DO_
}

void ReadReceiptMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.ReadReceiptMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 receipt_guid = 1;
  if (this->receipt_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->receipt_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.ReadReceiptMessage)
}

::google::protobuf::uint8* ReadReceiptMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.ReadReceiptMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 receipt_guid = 1;
  if (this->receipt_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->receipt_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.ReadReceiptMessage)
  return target;
}

size_t ReadReceiptMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.ReadReceiptMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 receipt_guid = 1;
  if (this->receipt_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->receipt_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadReceiptMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.ReadReceiptMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadReceiptMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadReceiptMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.ReadReceiptMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.ReadReceiptMessage)
    MergeFrom(*source);
  }
}

void ReadReceiptMessage::MergeFrom(const ReadReceiptMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.ReadReceiptMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.receipt_guid() != 0) {
    set_receipt_guid(from.receipt_guid());
  }
}

void ReadReceiptMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.ReadReceiptMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadReceiptMessage::CopyFrom(const ReadReceiptMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.ReadReceiptMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadReceiptMessage::IsInitialized() const {
  return true;
}

void ReadReceiptMessage::Swap(ReadReceiptMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadReceiptMessage::InternalSwap(ReadReceiptMessage* other) {
  using std::swap;
  swap(receipt_guid_, other->receipt_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadReceiptMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileMessage::kFileNameFieldNumber;
const int FileMessage::kFileLinkFieldNumber;
const int FileMessage::kFileLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileMessage::FileMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsFileMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.FileMessage)
}
FileMessage::FileMessage(const FileMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  file_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_link().size() > 0) {
    file_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_link_);
  }
  file_length_ = from.file_length_;
  // @@protoc_insertion_point(copy_constructor:common.msg.FileMessage)
}

void FileMessage::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_length_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

FileMessage::~FileMessage() {
  // @@protoc_insertion_point(destructor:common.msg.FileMessage)
  SharedDtor();
}

void FileMessage::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileMessage& FileMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsFileMessage();
  return *internal_default_instance();
}

FileMessage* FileMessage::New(::google::protobuf::Arena* arena) const {
  FileMessage* n = new FileMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.FileMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_length_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FileMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.FileMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.FileMessage.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_link = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_link().data(), static_cast<int>(this->file_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.FileMessage.file_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 file_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.FileMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.FileMessage)
  return false;
#undef DO_
}

void FileMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.FileMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FileMessage.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string file_link = 2;
  if (this->file_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_link().data(), static_cast<int>(this->file_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FileMessage.file_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_link(), output);
  }

  // uint64 file_length = 3;
  if (this->file_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->file_length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.FileMessage)
}

::google::protobuf::uint8* FileMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.FileMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FileMessage.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string file_link = 2;
  if (this->file_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_link().data(), static_cast<int>(this->file_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.FileMessage.file_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_link(), target);
  }

  // uint64 file_length = 3;
  if (this->file_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->file_length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.FileMessage)
  return target;
}

size_t FileMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.FileMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string file_link = 2;
  if (this->file_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_link());
  }

  // uint64 file_length = 3;
  if (this->file_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.FileMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FileMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.FileMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.FileMessage)
    MergeFrom(*source);
  }
}

void FileMessage::MergeFrom(const FileMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.FileMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.file_link().size() > 0) {

    file_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_link_);
  }
  if (from.file_length() != 0) {
    set_file_length(from.file_length());
  }
}

void FileMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.FileMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileMessage::CopyFrom(const FileMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.FileMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMessage::IsInitialized() const {
  return true;
}

void FileMessage::Swap(FileMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileMessage::InternalSwap(FileMessage* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  file_link_.Swap(&other->file_link_);
  swap(file_length_, other->file_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RetractMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetractMessage::kRetractGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetractMessage::RetractMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsRetractMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.RetractMessage)
}
RetractMessage::RetractMessage(const RetractMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retract_guid_ = from.retract_guid_;
  // @@protoc_insertion_point(copy_constructor:common.msg.RetractMessage)
}

void RetractMessage::SharedCtor() {
  retract_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RetractMessage::~RetractMessage() {
  // @@protoc_insertion_point(destructor:common.msg.RetractMessage)
  SharedDtor();
}

void RetractMessage::SharedDtor() {
}

void RetractMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetractMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RetractMessage& RetractMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsRetractMessage();
  return *internal_default_instance();
}

RetractMessage* RetractMessage::New(::google::protobuf::Arena* arena) const {
  RetractMessage* n = new RetractMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetractMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.RetractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retract_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RetractMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.RetractMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 retract_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &retract_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.RetractMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.RetractMessage)
  return false;
#undef DO_
}

void RetractMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.RetractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 retract_guid = 1;
  if (this->retract_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->retract_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.RetractMessage)
}

::google::protobuf::uint8* RetractMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.RetractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 retract_guid = 1;
  if (this->retract_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->retract_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.RetractMessage)
  return target;
}

size_t RetractMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.RetractMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 retract_guid = 1;
  if (this->retract_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->retract_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetractMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.RetractMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RetractMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetractMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.RetractMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.RetractMessage)
    MergeFrom(*source);
  }
}

void RetractMessage::MergeFrom(const RetractMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.RetractMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retract_guid() != 0) {
    set_retract_guid(from.retract_guid());
  }
}

void RetractMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.RetractMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetractMessage::CopyFrom(const RetractMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.RetractMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetractMessage::IsInitialized() const {
  return true;
}

void RetractMessage::Swap(RetractMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetractMessage::InternalSwap(RetractMessage* other) {
  using std::swap;
  swap(retract_guid_, other->retract_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetractMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CustomEntity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomEntity::kKeyFieldNumber;
const int CustomEntity::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomEntity::CustomEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomEntity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.CustomEntity)
}
CustomEntity::CustomEntity(const CustomEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:common.msg.CustomEntity)
}

void CustomEntity::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CustomEntity::~CustomEntity() {
  // @@protoc_insertion_point(destructor:common.msg.CustomEntity)
  SharedDtor();
}

void CustomEntity::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomEntity::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomEntity& CustomEntity::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomEntity();
  return *internal_default_instance();
}

CustomEntity* CustomEntity::New(::google::protobuf::Arena* arena) const {
  CustomEntity* n = new CustomEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.CustomEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CustomEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.CustomEntity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomEntity.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomEntity.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.CustomEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.CustomEntity)
  return false;
#undef DO_
}

void CustomEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.CustomEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomEntity.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomEntity.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.CustomEntity)
}

::google::protobuf::uint8* CustomEntity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.CustomEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomEntity.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomEntity.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.CustomEntity)
  return target;
}

size_t CustomEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.CustomEntity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.CustomEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomEntity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomEntity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.CustomEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.CustomEntity)
    MergeFrom(*source);
  }
}

void CustomEntity::MergeFrom(const CustomEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.CustomEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void CustomEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.CustomEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomEntity::CopyFrom(const CustomEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.CustomEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomEntity::IsInitialized() const {
  return true;
}

void CustomEntity::Swap(CustomEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomEntity::InternalSwap(CustomEntity* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomEntity::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CustomMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomMessage::kSubTypeFieldNumber;
const int CustomMessage::kNotificationFieldNumber;
const int CustomMessage::kCustomEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomMessage::CustomMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.CustomMessage)
}
CustomMessage::CustomMessage(const CustomMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      custom_entity_(from.custom_entity_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtype().size() > 0) {
    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.notification().size() > 0) {
    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
  // @@protoc_insertion_point(copy_constructor:common.msg.CustomMessage)
}

void CustomMessage::SharedCtor() {
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CustomMessage::~CustomMessage() {
  // @@protoc_insertion_point(destructor:common.msg.CustomMessage)
  SharedDtor();
}

void CustomMessage::SharedDtor() {
  subtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomMessage& CustomMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomMessage();
  return *internal_default_instance();
}

CustomMessage* CustomMessage::New(::google::protobuf::Arena* arena) const {
  CustomMessage* n = new CustomMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.CustomMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_entity_.Clear();
  subtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CustomMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.CustomMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtype().data(), static_cast<int>(this->subtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomMessage.subType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string notification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notification().data(), static_cast<int>(this->notification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomMessage.notification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.msg.CustomEntity custom_entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_custom_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.CustomMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.CustomMessage)
  return false;
#undef DO_
}

void CustomMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.CustomMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subType = 1;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomMessage.subType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subtype(), output);
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomMessage.notification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->notification(), output);
  }

  // repeated .common.msg.CustomEntity custom_entity = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_entity_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->custom_entity(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.CustomMessage)
}

::google::protobuf::uint8* CustomMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.CustomMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subType = 1;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomMessage.subType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subtype(), target);
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomMessage.notification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->notification(), target);
  }

  // repeated .common.msg.CustomEntity custom_entity = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_entity_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->custom_entity(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.CustomMessage)
  return target;
}

size_t CustomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.CustomMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.msg.CustomEntity custom_entity = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_entity_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_entity(static_cast<int>(i)));
    }
  }

  // string subType = 1;
  if (this->subtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtype());
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notification());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.CustomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.CustomMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.CustomMessage)
    MergeFrom(*source);
  }
}

void CustomMessage::MergeFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.CustomMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custom_entity_.MergeFrom(from.custom_entity_);
  if (from.subtype().size() > 0) {

    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  if (from.notification().size() > 0) {

    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
}

void CustomMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomMessage::CopyFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMessage::IsInitialized() const {
  return true;
}

void CustomMessage::Swap(CustomMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomMessage::InternalSwap(CustomMessage* other) {
  using std::swap;
  custom_entity_.InternalSwap(&other->custom_entity_);
  subtype_.Swap(&other->subtype_);
  notification_.Swap(&other->notification_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CustomNoApnsMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomNoApnsMessage::kSubTypeFieldNumber;
const int CustomNoApnsMessage::kNotificationFieldNumber;
const int CustomNoApnsMessage::kCustomEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomNoApnsMessage::CustomNoApnsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomNoApnsMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.CustomNoApnsMessage)
}
CustomNoApnsMessage::CustomNoApnsMessage(const CustomNoApnsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      custom_entity_(from.custom_entity_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subtype().size() > 0) {
    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.notification().size() > 0) {
    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
  // @@protoc_insertion_point(copy_constructor:common.msg.CustomNoApnsMessage)
}

void CustomNoApnsMessage::SharedCtor() {
  subtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CustomNoApnsMessage::~CustomNoApnsMessage() {
  // @@protoc_insertion_point(destructor:common.msg.CustomNoApnsMessage)
  SharedDtor();
}

void CustomNoApnsMessage::SharedDtor() {
  subtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomNoApnsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomNoApnsMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomNoApnsMessage& CustomNoApnsMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsCustomNoApnsMessage();
  return *internal_default_instance();
}

CustomNoApnsMessage* CustomNoApnsMessage::New(::google::protobuf::Arena* arena) const {
  CustomNoApnsMessage* n = new CustomNoApnsMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomNoApnsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.CustomNoApnsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  custom_entity_.Clear();
  subtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CustomNoApnsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.CustomNoApnsMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string subType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subtype().data(), static_cast<int>(this->subtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomNoApnsMessage.subType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string notification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notification().data(), static_cast<int>(this->notification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.CustomNoApnsMessage.notification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .common.msg.CustomEntity custom_entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_custom_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.CustomNoApnsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.CustomNoApnsMessage)
  return false;
#undef DO_
}

void CustomNoApnsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.CustomNoApnsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subType = 1;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomNoApnsMessage.subType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subtype(), output);
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomNoApnsMessage.notification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->notification(), output);
  }

  // repeated .common.msg.CustomEntity custom_entity = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_entity_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->custom_entity(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.CustomNoApnsMessage)
}

::google::protobuf::uint8* CustomNoApnsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.CustomNoApnsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subType = 1;
  if (this->subtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subtype().data(), static_cast<int>(this->subtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomNoApnsMessage.subType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subtype(), target);
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.CustomNoApnsMessage.notification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->notification(), target);
  }

  // repeated .common.msg.CustomEntity custom_entity = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_entity_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->custom_entity(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.CustomNoApnsMessage)
  return target;
}

size_t CustomNoApnsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.CustomNoApnsMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.msg.CustomEntity custom_entity = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_entity_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_entity(static_cast<int>(i)));
    }
  }

  // string subType = 1;
  if (this->subtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subtype());
  }

  // string notification = 2;
  if (this->notification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notification());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomNoApnsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.CustomNoApnsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomNoApnsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomNoApnsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.CustomNoApnsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.CustomNoApnsMessage)
    MergeFrom(*source);
  }
}

void CustomNoApnsMessage::MergeFrom(const CustomNoApnsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.CustomNoApnsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  custom_entity_.MergeFrom(from.custom_entity_);
  if (from.subtype().size() > 0) {

    subtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subtype_);
  }
  if (from.notification().size() > 0) {

    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
}

void CustomNoApnsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.CustomNoApnsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomNoApnsMessage::CopyFrom(const CustomNoApnsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.CustomNoApnsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomNoApnsMessage::IsInitialized() const {
  return true;
}

void CustomNoApnsMessage::Swap(CustomNoApnsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomNoApnsMessage::InternalSwap(CustomNoApnsMessage* other) {
  using std::swap;
  custom_entity_.InternalSwap(&other->custom_entity_);
  subtype_.Swap(&other->subtype_);
  notification_.Swap(&other->notification_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomNoApnsMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsggwMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsggwMessage::kAppkeyFieldNumber;
const int MsggwMessage::kContentFieldNumber;
const int MsggwMessage::kGuidFieldNumber;
const int MsggwMessage::kNotificationFieldNumber;
const int MsggwMessage::kFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsggwMessage::MsggwMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsMsggwMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.MsggwMessage)
}
MsggwMessage::MsggwMessage(const MsggwMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.notification().size() > 0) {
    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:common.msg.MsggwMessage)
}

void MsggwMessage::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MsggwMessage::~MsggwMessage() {
  // @@protoc_insertion_point(destructor:common.msg.MsggwMessage)
  SharedDtor();
}

void MsggwMessage::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsggwMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsggwMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsggwMessage& MsggwMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsMsggwMessage();
  return *internal_default_instance();
}

MsggwMessage* MsggwMessage::New(::google::protobuf::Arena* arena) const {
  MsggwMessage* n = new MsggwMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsggwMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.MsggwMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsggwMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.MsggwMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MsggwMessage.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MsggwMessage.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string notification = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notification()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notification().data(), static_cast<int>(this->notification().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MsggwMessage.notification"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MsggwMessage.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.MsggwMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.MsggwMessage)
  return false;
#undef DO_
}

void MsggwMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.MsggwMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  // string notification = 4;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.notification");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->notification(), output);
  }

  // string from = 5;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->from(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.MsggwMessage)
}

::google::protobuf::uint8* MsggwMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.MsggwMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  // string notification = 4;
  if (this->notification().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notification().data(), static_cast<int>(this->notification().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.notification");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->notification(), target);
  }

  // string from = 5;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MsggwMessage.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->from(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.MsggwMessage)
  return target;
}

size_t MsggwMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.MsggwMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string notification = 4;
  if (this->notification().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notification());
  }

  // string from = 5;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsggwMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.MsggwMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MsggwMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsggwMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.MsggwMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.MsggwMessage)
    MergeFrom(*source);
  }
}

void MsggwMessage::MergeFrom(const MsggwMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.MsggwMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.notification().size() > 0) {

    notification_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void MsggwMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.MsggwMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsggwMessage::CopyFrom(const MsggwMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.MsggwMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsggwMessage::IsInitialized() const {
  return true;
}

void MsggwMessage::Swap(MsggwMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsggwMessage::InternalSwap(MsggwMessage* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  content_.Swap(&other->content_);
  notification_.Swap(&other->notification_);
  from_.Swap(&other->from_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsggwMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VcardMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VcardMessage::kUserIdFieldNumber;
const int VcardMessage::kNickFieldNumber;
const int VcardMessage::kPhoneNumFieldNumber;
const int VcardMessage::kVcardTypeFieldNumber;
const int VcardMessage::kOriginalLinkFieldNumber;
const int VcardMessage::kThumbnailLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VcardMessage::VcardMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsVcardMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.VcardMessage)
}
VcardMessage::VcardMessage(const VcardMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nick().size() > 0) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  phone_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_num().size() > 0) {
    phone_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_num_);
  }
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.original_link().size() > 0) {
    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail_link().size() > 0) {
    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  vcard_type_ = from.vcard_type_;
  // @@protoc_insertion_point(copy_constructor:common.msg.VcardMessage)
}

void VcardMessage::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcard_type_ = 0;
  _cached_size_ = 0;
}

VcardMessage::~VcardMessage() {
  // @@protoc_insertion_point(destructor:common.msg.VcardMessage)
  SharedDtor();
}

void VcardMessage::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VcardMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VcardMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VcardMessage& VcardMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsVcardMessage();
  return *internal_default_instance();
}

VcardMessage* VcardMessage::New(::google::protobuf::Arena* arena) const {
  VcardMessage* n = new VcardMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VcardMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.VcardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vcard_type_ = 0;
  _internal_metadata_.Clear();
}

bool VcardMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.VcardMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VcardMessage.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), static_cast<int>(this->nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VcardMessage.nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_num().data(), static_cast<int>(this->phone_num().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VcardMessage.phone_num"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EVcardMsgModelType vcard_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_vcard_type(static_cast< ::common::enumeration::EVcardMsgModelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string original_link = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_link().data(), static_cast<int>(this->original_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VcardMessage.original_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumbnail_link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbnail_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.VcardMessage.thumbnail_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.VcardMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.VcardMessage)
  return false;
#undef DO_
}

void VcardMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.VcardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string nick = 2;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick(), output);
  }

  // string phone_num = 3;
  if (this->phone_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_num().data(), static_cast<int>(this->phone_num().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.phone_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone_num(), output);
  }

  // .common.enumeration.EVcardMsgModelType vcard_type = 4;
  if (this->vcard_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vcard_type(), output);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.original_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->original_link(), output);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.thumbnail_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->thumbnail_link(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.VcardMessage)
}

::google::protobuf::uint8* VcardMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.VcardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string nick = 2;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), static_cast<int>(this->nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick(), target);
  }

  // string phone_num = 3;
  if (this->phone_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_num().data(), static_cast<int>(this->phone_num().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.phone_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone_num(), target);
  }

  // .common.enumeration.EVcardMsgModelType vcard_type = 4;
  if (this->vcard_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vcard_type(), target);
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_link().data(), static_cast<int>(this->original_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.original_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->original_link(), target);
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumbnail_link().data(), static_cast<int>(this->thumbnail_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.VcardMessage.thumbnail_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->thumbnail_link(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.VcardMessage)
  return target;
}

size_t VcardMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.VcardMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string nick = 2;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // string phone_num = 3;
  if (this->phone_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_num());
  }

  // string original_link = 5;
  if (this->original_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_link());
  }

  // string thumbnail_link = 6;
  if (this->thumbnail_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumbnail_link());
  }

  // .common.enumeration.EVcardMsgModelType vcard_type = 4;
  if (this->vcard_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcard_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VcardMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.VcardMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const VcardMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VcardMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.VcardMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.VcardMessage)
    MergeFrom(*source);
  }
}

void VcardMessage::MergeFrom(const VcardMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.VcardMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.phone_num().size() > 0) {

    phone_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_num_);
  }
  if (from.original_link().size() > 0) {

    original_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_link_);
  }
  if (from.thumbnail_link().size() > 0) {

    thumbnail_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_link_);
  }
  if (from.vcard_type() != 0) {
    set_vcard_type(from.vcard_type());
  }
}

void VcardMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.VcardMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VcardMessage::CopyFrom(const VcardMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.VcardMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VcardMessage::IsInitialized() const {
  return true;
}

void VcardMessage::Swap(VcardMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VcardMessage::InternalSwap(VcardMessage* other) {
  using std::swap;
  user_id_.Swap(&other->user_id_);
  nick_.Swap(&other->nick_);
  phone_num_.Swap(&other->phone_num_);
  original_link_.Swap(&other->original_link_);
  thumbnail_link_.Swap(&other->thumbnail_link_);
  swap(vcard_type_, other->vcard_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VcardMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MergeMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeMessage::kTitleFieldNumber;
const int MergeMessage::kMsgContentFieldNumber;
const int MergeMessage::kGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeMessage::MergeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fmsg_2eproto::InitDefaultsMergeMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.msg.MergeMessage)
}
MergeMessage::MergeMessage(const MergeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msgcontent_(from.msgcontent_),
      guidlist_(from.guidlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:common.msg.MergeMessage)
}

void MergeMessage::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MergeMessage::~MergeMessage() {
  // @@protoc_insertion_point(destructor:common.msg.MergeMessage)
  SharedDtor();
}

void MergeMessage::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MergeMessage::descriptor() {
  ::protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MergeMessage& MergeMessage::default_instance() {
  ::protobuf_common_2fmsg_2eproto::InitDefaultsMergeMessage();
  return *internal_default_instance();
}

MergeMessage* MergeMessage::New(::google::protobuf::Arena* arena) const {
  MergeMessage* n = new MergeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MergeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:common.msg.MergeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgcontent_.Clear();
  guidlist_.Clear();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MergeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.msg.MergeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MergeMessage.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string msgContent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_msgcontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgcontent(this->msgcontent_size() - 1).data(),
            static_cast<int>(this->msgcontent(this->msgcontent_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.msg.MergeMessage.msgContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guidList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guidlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_guidlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.msg.MergeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.msg.MergeMessage)
  return false;
#undef DO_
}

void MergeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.msg.MergeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MergeMessage.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // repeated string msgContent = 2;
  for (int i = 0, n = this->msgcontent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgcontent(i).data(), static_cast<int>(this->msgcontent(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MergeMessage.msgContent");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->msgcontent(i), output);
  }

  // repeated uint64 guidList = 3;
  if (this->guidlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guidlist_cached_byte_size_));
  }
  for (int i = 0, n = this->guidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guidlist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.msg.MergeMessage)
}

::google::protobuf::uint8* MergeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.msg.MergeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MergeMessage.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // repeated string msgContent = 2;
  for (int i = 0, n = this->msgcontent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgcontent(i).data(), static_cast<int>(this->msgcontent(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.msg.MergeMessage.msgContent");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->msgcontent(i), target);
  }

  // repeated uint64 guidList = 3;
  if (this->guidlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guidlist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guidlist_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.msg.MergeMessage)
  return target;
}

size_t MergeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.msg.MergeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string msgContent = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->msgcontent_size());
  for (int i = 0, n = this->msgcontent_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->msgcontent(i));
  }

  // repeated uint64 guidList = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guidlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guidlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MergeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.msg.MergeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MergeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.msg.MergeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.msg.MergeMessage)
    MergeFrom(*source);
  }
}

void MergeMessage::MergeFrom(const MergeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.msg.MergeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgcontent_.MergeFrom(from.msgcontent_);
  guidlist_.MergeFrom(from.guidlist_);
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void MergeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.msg.MergeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeMessage::CopyFrom(const MergeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.msg.MergeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeMessage::IsInitialized() const {
  return true;
}

void MergeMessage::Swap(MergeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeMessage::InternalSwap(MergeMessage* other) {
  using std::swap;
  msgcontent_.InternalSwap(&other->msgcontent_);
  guidlist_.InternalSwap(&other->guidlist_);
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MergeMessage::GetMetadata() const {
  protobuf_common_2fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msg
}  // namespace common

// @@protoc_insertion_point(global_scope)
