// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/ntf.proto

#include "common/ntf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace common {
namespace ntf {
class TransparentMsgNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransparentMsgNotification>
      _instance;
} _TransparentMsgNotification_default_instance_;
class TransparentMsgCarbonNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransparentMsgCarbonNotification>
      _instance;
} _TransparentMsgCarbonNotification_default_instance_;
class NewMsgNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewMsgNotification>
      _instance;
} _NewMsgNotification_default_instance_;
class CarbonMsgNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CarbonMsgNotification>
      _instance;
} _CarbonMsgNotification_default_instance_;
class CallMsgNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallMsgNotification>
      _instance;
} _CallMsgNotification_default_instance_;
class KickNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KickNotification>
      _instance;
} _KickNotification_default_instance_;
class FriendUpdateNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendUpdateNotification>
      _instance;
} _FriendUpdateNotification_default_instance_;
class RetractNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RetractNotification>
      _instance;
} _RetractNotification_default_instance_;
}  // namespace ntf
}  // namespace common
namespace protobuf_common_2fntf_2eproto {
void InitDefaultsTransparentMsgNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::common::ntf::_TransparentMsgNotification_default_instance_;
    new (ptr) ::common::ntf::TransparentMsgNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::TransparentMsgNotification::InitAsDefaultInstance();
}

void InitDefaultsTransparentMsgNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransparentMsgNotificationImpl);
}

void InitDefaultsTransparentMsgCarbonNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fmsg_2eproto::InitDefaultsMessageUnit();
  {
    void* ptr = &::common::ntf::_TransparentMsgCarbonNotification_default_instance_;
    new (ptr) ::common::ntf::TransparentMsgCarbonNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::TransparentMsgCarbonNotification::InitAsDefaultInstance();
}

void InitDefaultsTransparentMsgCarbonNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransparentMsgCarbonNotificationImpl);
}

void InitDefaultsNewMsgNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_NewMsgNotification_default_instance_;
    new (ptr) ::common::ntf::NewMsgNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::NewMsgNotification::InitAsDefaultInstance();
}

void InitDefaultsNewMsgNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNewMsgNotificationImpl);
}

void InitDefaultsCarbonMsgNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_CarbonMsgNotification_default_instance_;
    new (ptr) ::common::ntf::CarbonMsgNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::CarbonMsgNotification::InitAsDefaultInstance();
}

void InitDefaultsCarbonMsgNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCarbonMsgNotificationImpl);
}

void InitDefaultsCallMsgNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_CallMsgNotification_default_instance_;
    new (ptr) ::common::ntf::CallMsgNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::CallMsgNotification::InitAsDefaultInstance();
}

void InitDefaultsCallMsgNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallMsgNotificationImpl);
}

void InitDefaultsKickNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_KickNotification_default_instance_;
    new (ptr) ::common::ntf::KickNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::KickNotification::InitAsDefaultInstance();
}

void InitDefaultsKickNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKickNotificationImpl);
}

void InitDefaultsFriendUpdateNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_FriendUpdateNotification_default_instance_;
    new (ptr) ::common::ntf::FriendUpdateNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::FriendUpdateNotification::InitAsDefaultInstance();
}

void InitDefaultsFriendUpdateNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendUpdateNotificationImpl);
}

void InitDefaultsRetractNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common::ntf::_RetractNotification_default_instance_;
    new (ptr) ::common::ntf::RetractNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::ntf::RetractNotification::InitAsDefaultInstance();
}

void InitDefaultsRetractNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRetractNotificationImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::TransparentMsgNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::TransparentMsgNotification, unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::TransparentMsgCarbonNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::TransparentMsgCarbonNotification, unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::NewMsgNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::NewMsgNotification, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::NewMsgNotification, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, sender_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, sender_client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CarbonMsgNotification, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CallMsgNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CallMsgNotification, call_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::CallMsgNotification, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::KickNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::KickNotification, login_client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::KickNotification, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::KickNotification, imei_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::FriendUpdateNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::FriendUpdateNotification, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, appkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, from_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::ntf::RetractNotification, retract_guid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::ntf::TransparentMsgNotification)},
  { 6, -1, sizeof(::common::ntf::TransparentMsgCarbonNotification)},
  { 12, -1, sizeof(::common::ntf::NewMsgNotification)},
  { 19, -1, sizeof(::common::ntf::CarbonMsgNotification)},
  { 29, -1, sizeof(::common::ntf::CallMsgNotification)},
  { 36, -1, sizeof(::common::ntf::KickNotification)},
  { 44, -1, sizeof(::common::ntf::FriendUpdateNotification)},
  { 50, -1, sizeof(::common::ntf::RetractNotification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_TransparentMsgNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_TransparentMsgCarbonNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_NewMsgNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_CarbonMsgNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_CallMsgNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_KickNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_FriendUpdateNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::ntf::_RetractNotification_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common/ntf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020common/ntf.proto\022\ncommon.ntf\032\030common/e"
      "numeration.proto\032\020common/msg.proto\"C\n\032Tr"
      "ansparentMsgNotification\022%\n\004unit\030\001 \001(\0132\027"
      ".common.msg.MessageUnit\"I\n TransparentMs"
      "gCarbonNotification\022%\n\004unit\030\001 \001(\0132\027.comm"
      "on.msg.MessageUnit\"3\n\022NewMsgNotification"
      "\022\017\n\007content\030\001 \001(\t\022\014\n\004guid\030\002 \001(\004\"\234\001\n\025Carb"
      "onMsgNotification\022\017\n\007content\030\001 \001(\t\022\016\n\006ap"
      "pkey\030\002 \001(\t\022\027\n\017sender_username\030\003 \001(\t\022;\n\022s"
      "ender_client_type\030\004 \001(\0162\037.common.enumera"
      "tion.EClientType\022\014\n\004guid\030\005 \001(\004\"_\n\023CallMs"
      "gNotification\0227\n\rcall_msg_type\030\001 \001(\0162 .c"
      "ommon.enumeration.ECallMsgType\022\017\n\007conten"
      "t\030\002 \001(\t\"l\n\020KickNotification\022:\n\021login_cli"
      "ent_type\030\001 \001(\0162\037.common.enumeration.ECli"
      "entType\022\016\n\006reason\030\002 \001(\t\022\014\n\004imei\030\003 \001(\t\"+\n"
      "\030FriendUpdateNotification\022\017\n\007content\030\001 \001"
      "(\t\"\207\001\n\023RetractNotification\022\016\n\006appkey\030\001 \001"
      "(\t\022&\n\010msg_type\030\002 \001(\0162\024.common.msg.EMsgTy"
      "pe\022\025\n\rfrom_username\030\003 \001(\t\022\013\n\003uri\030\004 \001(\t\022\024"
      "\n\014retract_guid\030\005 \001(\004*\271\003\n\010ENtfType\022\023\n\017UNK"
      "NOWNENTFTYPE\020\000\022\022\n\016LOGIN_RESPONSE\020\005\022\023\n\017LO"
      "GOUT_RESPONSE\020\001\022\025\n\021KICK_NOTIFICATION\020\002\022\030"
      "\n\024STREAM_INIT_RESPONSE\020\003\022\021\n\rPING_RESPONS"
      "E\020\004\022\013\n\007NEW_MSG\020\n\022\036\n\032FRIEND_UPDATE_NOTIFI"
      "CATION\020\013\022\030\n\024RETRACT_NOTIFICATION\020\014\022\016\n\nCA"
      "RBON_MSG\020\r\022\014\n\010CALL_MSG\020\016\022\"\n\036GROUP_LIST_U"
      "PDATE_NOTIFICATION\020\017\022 \n\034TRANSPARENT_MSG_"
      "NOTIFICATION\020\021\022\'\n#TRANSPARENT_MSG_CARBON"
      "_NOTIFICATION\020\022\022)\n%CARMACHINE_STATUS_CHA"
      "NGE_NOTIFICATION\020\023\022,\n(PERSONAL_INFORMATI"
      "ON_CHANGE_NOTIFICATION\020\024B&\n\035com.cmcc.lit"
      "tlec.proto.commonB\003NtfP\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1312);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/ntf.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2fenumeration_2eproto::AddDescriptors();
  ::protobuf_common_2fmsg_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2fntf_2eproto
namespace common {
namespace ntf {
const ::google::protobuf::EnumDescriptor* ENtfType_descriptor() {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fntf_2eproto::file_level_enum_descriptors[0];
}
bool ENtfType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TransparentMsgNotification::InitAsDefaultInstance() {
  ::common::ntf::_TransparentMsgNotification_default_instance_._instance.get_mutable()->unit_ = const_cast< ::common::msg::MessageUnit*>(
      ::common::msg::MessageUnit::internal_default_instance());
}
void TransparentMsgNotification::clear_unit() {
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransparentMsgNotification::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransparentMsgNotification::TransparentMsgNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsTransparentMsgNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.TransparentMsgNotification)
}
TransparentMsgNotification::TransparentMsgNotification(const TransparentMsgNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_unit()) {
    unit_ = new ::common::msg::MessageUnit(*from.unit_);
  } else {
    unit_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.ntf.TransparentMsgNotification)
}

void TransparentMsgNotification::SharedCtor() {
  unit_ = NULL;
  _cached_size_ = 0;
}

TransparentMsgNotification::~TransparentMsgNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.TransparentMsgNotification)
  SharedDtor();
}

void TransparentMsgNotification::SharedDtor() {
  if (this != internal_default_instance()) delete unit_;
}

void TransparentMsgNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransparentMsgNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransparentMsgNotification& TransparentMsgNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsTransparentMsgNotification();
  return *internal_default_instance();
}

TransparentMsgNotification* TransparentMsgNotification::New(::google::protobuf::Arena* arena) const {
  TransparentMsgNotification* n = new TransparentMsgNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransparentMsgNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.TransparentMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  _internal_metadata_.Clear();
}

bool TransparentMsgNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.TransparentMsgNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.msg.MessageUnit unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.TransparentMsgNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.TransparentMsgNotification)
  return false;
#undef DO_
}

void TransparentMsgNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.TransparentMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->unit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.TransparentMsgNotification)
}

::google::protobuf::uint8* TransparentMsgNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.TransparentMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->unit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.TransparentMsgNotification)
  return target;
}

size_t TransparentMsgNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.TransparentMsgNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->unit_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransparentMsgNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.TransparentMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const TransparentMsgNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransparentMsgNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.TransparentMsgNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.TransparentMsgNotification)
    MergeFrom(*source);
  }
}

void TransparentMsgNotification::MergeFrom(const TransparentMsgNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.TransparentMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unit()) {
    mutable_unit()->::common::msg::MessageUnit::MergeFrom(from.unit());
  }
}

void TransparentMsgNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.TransparentMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransparentMsgNotification::CopyFrom(const TransparentMsgNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.TransparentMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransparentMsgNotification::IsInitialized() const {
  return true;
}

void TransparentMsgNotification::Swap(TransparentMsgNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransparentMsgNotification::InternalSwap(TransparentMsgNotification* other) {
  using std::swap;
  swap(unit_, other->unit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransparentMsgNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransparentMsgCarbonNotification::InitAsDefaultInstance() {
  ::common::ntf::_TransparentMsgCarbonNotification_default_instance_._instance.get_mutable()->unit_ = const_cast< ::common::msg::MessageUnit*>(
      ::common::msg::MessageUnit::internal_default_instance());
}
void TransparentMsgCarbonNotification::clear_unit() {
  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransparentMsgCarbonNotification::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransparentMsgCarbonNotification::TransparentMsgCarbonNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsTransparentMsgCarbonNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.TransparentMsgCarbonNotification)
}
TransparentMsgCarbonNotification::TransparentMsgCarbonNotification(const TransparentMsgCarbonNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_unit()) {
    unit_ = new ::common::msg::MessageUnit(*from.unit_);
  } else {
    unit_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.ntf.TransparentMsgCarbonNotification)
}

void TransparentMsgCarbonNotification::SharedCtor() {
  unit_ = NULL;
  _cached_size_ = 0;
}

TransparentMsgCarbonNotification::~TransparentMsgCarbonNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.TransparentMsgCarbonNotification)
  SharedDtor();
}

void TransparentMsgCarbonNotification::SharedDtor() {
  if (this != internal_default_instance()) delete unit_;
}

void TransparentMsgCarbonNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransparentMsgCarbonNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransparentMsgCarbonNotification& TransparentMsgCarbonNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsTransparentMsgCarbonNotification();
  return *internal_default_instance();
}

TransparentMsgCarbonNotification* TransparentMsgCarbonNotification::New(::google::protobuf::Arena* arena) const {
  TransparentMsgCarbonNotification* n = new TransparentMsgCarbonNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransparentMsgCarbonNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.TransparentMsgCarbonNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && unit_ != NULL) {
    delete unit_;
  }
  unit_ = NULL;
  _internal_metadata_.Clear();
}

bool TransparentMsgCarbonNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.TransparentMsgCarbonNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.msg.MessageUnit unit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.TransparentMsgCarbonNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.TransparentMsgCarbonNotification)
  return false;
#undef DO_
}

void TransparentMsgCarbonNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.TransparentMsgCarbonNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->unit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.TransparentMsgCarbonNotification)
}

::google::protobuf::uint8* TransparentMsgCarbonNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.TransparentMsgCarbonNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->unit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.TransparentMsgCarbonNotification)
  return target;
}

size_t TransparentMsgCarbonNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.TransparentMsgCarbonNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.msg.MessageUnit unit = 1;
  if (this->has_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->unit_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransparentMsgCarbonNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.TransparentMsgCarbonNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const TransparentMsgCarbonNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransparentMsgCarbonNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.TransparentMsgCarbonNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.TransparentMsgCarbonNotification)
    MergeFrom(*source);
  }
}

void TransparentMsgCarbonNotification::MergeFrom(const TransparentMsgCarbonNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.TransparentMsgCarbonNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unit()) {
    mutable_unit()->::common::msg::MessageUnit::MergeFrom(from.unit());
  }
}

void TransparentMsgCarbonNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.TransparentMsgCarbonNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransparentMsgCarbonNotification::CopyFrom(const TransparentMsgCarbonNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.TransparentMsgCarbonNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransparentMsgCarbonNotification::IsInitialized() const {
  return true;
}

void TransparentMsgCarbonNotification::Swap(TransparentMsgCarbonNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransparentMsgCarbonNotification::InternalSwap(TransparentMsgCarbonNotification* other) {
  using std::swap;
  swap(unit_, other->unit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransparentMsgCarbonNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewMsgNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewMsgNotification::kContentFieldNumber;
const int NewMsgNotification::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewMsgNotification::NewMsgNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsNewMsgNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.NewMsgNotification)
}
NewMsgNotification::NewMsgNotification(const NewMsgNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:common.ntf.NewMsgNotification)
}

void NewMsgNotification::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

NewMsgNotification::~NewMsgNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.NewMsgNotification)
  SharedDtor();
}

void NewMsgNotification::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewMsgNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewMsgNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewMsgNotification& NewMsgNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsNewMsgNotification();
  return *internal_default_instance();
}

NewMsgNotification* NewMsgNotification::New(::google::protobuf::Arena* arena) const {
  NewMsgNotification* n = new NewMsgNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewMsgNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.NewMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool NewMsgNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.NewMsgNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.NewMsgNotification.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.NewMsgNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.NewMsgNotification)
  return false;
#undef DO_
}

void NewMsgNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.NewMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.NewMsgNotification.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.NewMsgNotification)
}

::google::protobuf::uint8* NewMsgNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.NewMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.NewMsgNotification.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.NewMsgNotification)
  return target;
}

size_t NewMsgNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.NewMsgNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewMsgNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.NewMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const NewMsgNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewMsgNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.NewMsgNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.NewMsgNotification)
    MergeFrom(*source);
  }
}

void NewMsgNotification::MergeFrom(const NewMsgNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.NewMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void NewMsgNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.NewMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewMsgNotification::CopyFrom(const NewMsgNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.NewMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewMsgNotification::IsInitialized() const {
  return true;
}

void NewMsgNotification::Swap(NewMsgNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewMsgNotification::InternalSwap(NewMsgNotification* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewMsgNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CarbonMsgNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CarbonMsgNotification::kContentFieldNumber;
const int CarbonMsgNotification::kAppkeyFieldNumber;
const int CarbonMsgNotification::kSenderUsernameFieldNumber;
const int CarbonMsgNotification::kSenderClientTypeFieldNumber;
const int CarbonMsgNotification::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CarbonMsgNotification::CarbonMsgNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsCarbonMsgNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.CarbonMsgNotification)
}
CarbonMsgNotification::CarbonMsgNotification(const CarbonMsgNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  sender_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender_username().size() > 0) {
    sender_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_username_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sender_client_type_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(sender_client_type_));
  // @@protoc_insertion_point(copy_constructor:common.ntf.CarbonMsgNotification)
}

void CarbonMsgNotification::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_client_type_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(sender_client_type_));
  _cached_size_ = 0;
}

CarbonMsgNotification::~CarbonMsgNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.CarbonMsgNotification)
  SharedDtor();
}

void CarbonMsgNotification::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CarbonMsgNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CarbonMsgNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CarbonMsgNotification& CarbonMsgNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsCarbonMsgNotification();
  return *internal_default_instance();
}

CarbonMsgNotification* CarbonMsgNotification::New(::google::protobuf::Arena* arena) const {
  CarbonMsgNotification* n = new CarbonMsgNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CarbonMsgNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.CarbonMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_client_type_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(sender_client_type_));
  _internal_metadata_.Clear();
}

bool CarbonMsgNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.CarbonMsgNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.CarbonMsgNotification.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string appkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.CarbonMsgNotification.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender_username().data(), static_cast<int>(this->sender_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.CarbonMsgNotification.sender_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.enumeration.EClientType sender_client_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sender_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.CarbonMsgNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.CarbonMsgNotification)
  return false;
#undef DO_
}

void CarbonMsgNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.CarbonMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appkey(), output);
  }

  // string sender_username = 3;
  if (this->sender_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender_username().data(), static_cast<int>(this->sender_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.sender_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender_username(), output);
  }

  // .common.enumeration.EClientType sender_client_type = 4;
  if (this->sender_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->sender_client_type(), output);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.CarbonMsgNotification)
}

::google::protobuf::uint8* CarbonMsgNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.CarbonMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appkey(), target);
  }

  // string sender_username = 3;
  if (this->sender_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender_username().data(), static_cast<int>(this->sender_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CarbonMsgNotification.sender_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_username(), target);
  }

  // .common.enumeration.EClientType sender_client_type = 4;
  if (this->sender_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->sender_client_type(), target);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.CarbonMsgNotification)
  return target;
}

size_t CarbonMsgNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.CarbonMsgNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string appkey = 2;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string sender_username = 3;
  if (this->sender_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender_username());
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // .common.enumeration.EClientType sender_client_type = 4;
  if (this->sender_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CarbonMsgNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.CarbonMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CarbonMsgNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CarbonMsgNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.CarbonMsgNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.CarbonMsgNotification)
    MergeFrom(*source);
  }
}

void CarbonMsgNotification::MergeFrom(const CarbonMsgNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.CarbonMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.sender_username().size() > 0) {

    sender_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_username_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.sender_client_type() != 0) {
    set_sender_client_type(from.sender_client_type());
  }
}

void CarbonMsgNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.CarbonMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarbonMsgNotification::CopyFrom(const CarbonMsgNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.CarbonMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarbonMsgNotification::IsInitialized() const {
  return true;
}

void CarbonMsgNotification::Swap(CarbonMsgNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CarbonMsgNotification::InternalSwap(CarbonMsgNotification* other) {
  using std::swap;
  content_.Swap(&other->content_);
  appkey_.Swap(&other->appkey_);
  sender_username_.Swap(&other->sender_username_);
  swap(guid_, other->guid_);
  swap(sender_client_type_, other->sender_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CarbonMsgNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallMsgNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallMsgNotification::kCallMsgTypeFieldNumber;
const int CallMsgNotification::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallMsgNotification::CallMsgNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsCallMsgNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.CallMsgNotification)
}
CallMsgNotification::CallMsgNotification(const CallMsgNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  call_msg_type_ = from.call_msg_type_;
  // @@protoc_insertion_point(copy_constructor:common.ntf.CallMsgNotification)
}

void CallMsgNotification::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_type_ = 0;
  _cached_size_ = 0;
}

CallMsgNotification::~CallMsgNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.CallMsgNotification)
  SharedDtor();
}

void CallMsgNotification::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallMsgNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallMsgNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallMsgNotification& CallMsgNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsCallMsgNotification();
  return *internal_default_instance();
}

CallMsgNotification* CallMsgNotification::New(::google::protobuf::Arena* arena) const {
  CallMsgNotification* n = new CallMsgNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallMsgNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.CallMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_msg_type_ = 0;
  _internal_metadata_.Clear();
}

bool CallMsgNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.CallMsgNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.enumeration.ECallMsgType call_msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_call_msg_type(static_cast< ::common::enumeration::ECallMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.CallMsgNotification.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.CallMsgNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.CallMsgNotification)
  return false;
#undef DO_
}

void CallMsgNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.CallMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->call_msg_type(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CallMsgNotification.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.CallMsgNotification)
}

::google::protobuf::uint8* CallMsgNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.CallMsgNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->call_msg_type(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.CallMsgNotification.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.CallMsgNotification)
  return target;
}

size_t CallMsgNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.CallMsgNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // .common.enumeration.ECallMsgType call_msg_type = 1;
  if (this->call_msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->call_msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallMsgNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.CallMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CallMsgNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallMsgNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.CallMsgNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.CallMsgNotification)
    MergeFrom(*source);
  }
}

void CallMsgNotification::MergeFrom(const CallMsgNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.CallMsgNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.call_msg_type() != 0) {
    set_call_msg_type(from.call_msg_type());
  }
}

void CallMsgNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.CallMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallMsgNotification::CopyFrom(const CallMsgNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.CallMsgNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallMsgNotification::IsInitialized() const {
  return true;
}

void CallMsgNotification::Swap(CallMsgNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallMsgNotification::InternalSwap(CallMsgNotification* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(call_msg_type_, other->call_msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallMsgNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KickNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickNotification::kLoginClientTypeFieldNumber;
const int KickNotification::kReasonFieldNumber;
const int KickNotification::kImeiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickNotification::KickNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsKickNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.KickNotification)
}
KickNotification::KickNotification(const KickNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  login_client_type_ = from.login_client_type_;
  // @@protoc_insertion_point(copy_constructor:common.ntf.KickNotification)
}

void KickNotification::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_client_type_ = 0;
  _cached_size_ = 0;
}

KickNotification::~KickNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.KickNotification)
  SharedDtor();
}

void KickNotification::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KickNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickNotification& KickNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsKickNotification();
  return *internal_default_instance();
}

KickNotification* KickNotification::New(::google::protobuf::Arena* arena) const {
  KickNotification* n = new KickNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.KickNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_client_type_ = 0;
  _internal_metadata_.Clear();
}

bool KickNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.KickNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.enumeration.EClientType login_client_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_login_client_type(static_cast< ::common::enumeration::EClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.KickNotification.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imei = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.KickNotification.imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.KickNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.KickNotification)
  return false;
#undef DO_
}

void KickNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.KickNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.EClientType login_client_type = 1;
  if (this->login_client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->login_client_type(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.KickNotification.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // string imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.KickNotification.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->imei(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.KickNotification)
}

::google::protobuf::uint8* KickNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.KickNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.enumeration.EClientType login_client_type = 1;
  if (this->login_client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->login_client_type(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.KickNotification.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // string imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.KickNotification.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->imei(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.KickNotification)
  return target;
}

size_t KickNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.KickNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // string imei = 3;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // .common.enumeration.EClientType login_client_type = 1;
  if (this->login_client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->login_client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.KickNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const KickNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.KickNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.KickNotification)
    MergeFrom(*source);
  }
}

void KickNotification::MergeFrom(const KickNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.KickNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.login_client_type() != 0) {
    set_login_client_type(from.login_client_type());
  }
}

void KickNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.KickNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickNotification::CopyFrom(const KickNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.KickNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickNotification::IsInitialized() const {
  return true;
}

void KickNotification::Swap(KickNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickNotification::InternalSwap(KickNotification* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  imei_.Swap(&other->imei_);
  swap(login_client_type_, other->login_client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendUpdateNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendUpdateNotification::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendUpdateNotification::FriendUpdateNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsFriendUpdateNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.FriendUpdateNotification)
}
FriendUpdateNotification::FriendUpdateNotification(const FriendUpdateNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:common.ntf.FriendUpdateNotification)
}

void FriendUpdateNotification::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FriendUpdateNotification::~FriendUpdateNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.FriendUpdateNotification)
  SharedDtor();
}

void FriendUpdateNotification::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendUpdateNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendUpdateNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendUpdateNotification& FriendUpdateNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsFriendUpdateNotification();
  return *internal_default_instance();
}

FriendUpdateNotification* FriendUpdateNotification::New(::google::protobuf::Arena* arena) const {
  FriendUpdateNotification* n = new FriendUpdateNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendUpdateNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.FriendUpdateNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FriendUpdateNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.FriendUpdateNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.FriendUpdateNotification.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.FriendUpdateNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.FriendUpdateNotification)
  return false;
#undef DO_
}

void FriendUpdateNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.FriendUpdateNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.FriendUpdateNotification.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.FriendUpdateNotification)
}

::google::protobuf::uint8* FriendUpdateNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.FriendUpdateNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.FriendUpdateNotification.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.FriendUpdateNotification)
  return target;
}

size_t FriendUpdateNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.FriendUpdateNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendUpdateNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.FriendUpdateNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendUpdateNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendUpdateNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.FriendUpdateNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.FriendUpdateNotification)
    MergeFrom(*source);
  }
}

void FriendUpdateNotification::MergeFrom(const FriendUpdateNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.FriendUpdateNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void FriendUpdateNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.FriendUpdateNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendUpdateNotification::CopyFrom(const FriendUpdateNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.FriendUpdateNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendUpdateNotification::IsInitialized() const {
  return true;
}

void FriendUpdateNotification::Swap(FriendUpdateNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendUpdateNotification::InternalSwap(FriendUpdateNotification* other) {
  using std::swap;
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendUpdateNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RetractNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetractNotification::kAppkeyFieldNumber;
const int RetractNotification::kMsgTypeFieldNumber;
const int RetractNotification::kFromUsernameFieldNumber;
const int RetractNotification::kUriFieldNumber;
const int RetractNotification::kRetractGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetractNotification::RetractNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_2fntf_2eproto::InitDefaultsRetractNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.ntf.RetractNotification)
}
RetractNotification::RetractNotification(const RetractNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appkey().size() > 0) {
    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_username().size() > 0) {
    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  ::memcpy(&retract_guid_, &from.retract_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&retract_guid_)) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:common.ntf.RetractNotification)
}

void RetractNotification::SharedCtor() {
  appkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retract_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&retract_guid_)) + sizeof(msg_type_));
  _cached_size_ = 0;
}

RetractNotification::~RetractNotification() {
  // @@protoc_insertion_point(destructor:common.ntf.RetractNotification)
  SharedDtor();
}

void RetractNotification::SharedDtor() {
  appkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RetractNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetractNotification::descriptor() {
  ::protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RetractNotification& RetractNotification::default_instance() {
  ::protobuf_common_2fntf_2eproto::InitDefaultsRetractNotification();
  return *internal_default_instance();
}

RetractNotification* RetractNotification::New(::google::protobuf::Arena* arena) const {
  RetractNotification* n = new RetractNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetractNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:common.ntf.RetractNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retract_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&retract_guid_)) + sizeof(msg_type_));
  _internal_metadata_.Clear();
}

bool RetractNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.ntf.RetractNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string appkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appkey().data(), static_cast<int>(this->appkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.RetractNotification.appkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.msg.EMsgType msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::common::msg::EMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_username().data(), static_cast<int>(this->from_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.RetractNotification.from_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.ntf.RetractNotification.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 retract_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &retract_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.ntf.RetractNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.ntf.RetractNotification)
  return false;
#undef DO_
}

void RetractNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.ntf.RetractNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.appkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appkey(), output);
  }

  // .common.msg.EMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_type(), output);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.from_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_username(), output);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uri(), output);
  }

  // uint64 retract_guid = 5;
  if (this->retract_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->retract_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.ntf.RetractNotification)
}

::google::protobuf::uint8* RetractNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.ntf.RetractNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string appkey = 1;
  if (this->appkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appkey().data(), static_cast<int>(this->appkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.appkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appkey(), target);
  }

  // .common.msg.EMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msg_type(), target);
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_username().data(), static_cast<int>(this->from_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.from_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_username(), target);
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.ntf.RetractNotification.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uri(), target);
  }

  // uint64 retract_guid = 5;
  if (this->retract_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->retract_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.ntf.RetractNotification)
  return target;
}

size_t RetractNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.ntf.RetractNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string appkey = 1;
  if (this->appkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appkey());
  }

  // string from_username = 3;
  if (this->from_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_username());
  }

  // string uri = 4;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // uint64 retract_guid = 5;
  if (this->retract_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->retract_guid());
  }

  // .common.msg.EMsgType msg_type = 2;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetractNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.ntf.RetractNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const RetractNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetractNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.ntf.RetractNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.ntf.RetractNotification)
    MergeFrom(*source);
  }
}

void RetractNotification::MergeFrom(const RetractNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.ntf.RetractNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appkey().size() > 0) {

    appkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appkey_);
  }
  if (from.from_username().size() > 0) {

    from_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_username_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.retract_guid() != 0) {
    set_retract_guid(from.retract_guid());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void RetractNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.ntf.RetractNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetractNotification::CopyFrom(const RetractNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.ntf.RetractNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetractNotification::IsInitialized() const {
  return true;
}

void RetractNotification::Swap(RetractNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetractNotification::InternalSwap(RetractNotification* other) {
  using std::swap;
  appkey_.Swap(&other->appkey_);
  from_username_.Swap(&other->from_username_);
  uri_.Swap(&other->uri_);
  swap(retract_guid_, other->retract_guid_);
  swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetractNotification::GetMetadata() const {
  protobuf_common_2fntf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fntf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ntf
}  // namespace common

// @@protoc_insertion_point(global_scope)
