// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/errcode.proto

#include "common/errcode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace common {
namespace errcode {
}  // namespace errcode
}  // namespace common
namespace protobuf_common_2ferrcode_2eproto {
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common/errcode.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024common/errcode.proto\022\016common.errcode*\302"
      "=\n\nEErrorCode\022\026\n\022UNKNOWN_EERRORCODE\020\000\022\007\n"
      "\002OK\020\310\001\022\022\n\016DATABASE_ERROR\020\001\022\025\n\021SESSION_TI"
      "MEOUTED\020\002\022!\n\035USER_NOT_EXISTED_OR_PWD_ERR"
      "OR\020\003\022\020\n\014ERROR_SYSTEM\020\004\022\032\n\026FAILED_ACCESS_"
      "RESOURCE\020\005\022\025\n\021PERMISSION_DENIED\020\006\022\021\n\rINV"
      "ALID_PARAM\020\007\022\025\n\021PROTO_PARSE_ERROR\020\010\022\034\n\030U"
      "SER_LOGINED_OTHERDEVICE\020\024\022\025\n\021USER_TEMPPR"
      "OHIBIT\020\025\022\035\n\031APPKEY_OR_APPKEYPWD_ERROR\020\027\022"
      "\027\n\022SERVER_INNER_ERROR\020\364\003\022\025\n\020USER_NOT_EXI"
      "STED\020\365\003\022\030\n\023USER_HAS_REGISTERED\020\366\003\022\027\n\022USE"
      "R_PHONE_INVALID\020\367\003\022\030\n\023USER_CURRENT_SILEN"
      "T\020\370\003\022\034\n\027USER_CURRENT_NOT_SILENT\020\371\003\022\031\n\024PH"
      "ONE_HAS_REGISTERED\020\372\003\022\037\n\032PARAM_ERROR_PAS"
      "SWORD_EMPTY\020\373\003\022\026\n\021USER_CREATE_ERROR\020\377\003\022\026"
      "\n\021USER_DELETE_ERROR\020\200\004\022\026\n\021USER_UPDATE_ER"
      "ROR\020\201\004\022\025\n\020USER_QUERY_ERROR\020\202\004\022%\n USER_DE"
      "VICEID_NOT_MATCH_THE_LAST\020\203\004\022\035\n\030USER_LOG"
      "IN_TOKEN_INVALID\020\204\004\022\023\n\016USER_NOT_LOGIN\020\331\004"
      "\022\030\n\023USER_CONFLICT_LOGIN\020\332\004\022\031\n\024SESSION_ST"
      "ATUS_ERROR\020\333\004\022!\n\034CONNECTOR_USER_ALREADY_"
      "LOGIN\020\334\004\022#\n\036CONNECTOR_LOGIN_MODE_MUST_FI"
      "LL\020\335\004\022\035\n\030CHAT_SENDER_IS_FORBIDDEN\020\351\007\022\034\n\027"
      "CHAT_RECEIVER_NOT_EXIST\020\352\007\022\031\n\024CHAT_INVAL"
      "ID_MESSAGE\020\353\007\022\035\n\030CHAT_MESSAGE_SAVE_FAILE"
      "D\020\354\007\022\027\n\022CHAT_FROM_IS_EMPTY\020\355\007\022%\n CHAT_EX"
      "CEED_MULTI_RECEIVER_LIMIT\020\356\007\022!\n\034CHAT_SOM"
      "E_RECEIVER_NOT_EXIST\020\357\007\022\025\n\020CHAT_SKIP_FIL"
      "TER\020\360\007\022\033\n\026CHAT_FILTER_NO_MESSAGE\020\361\007\022\034\n\027C"
      "HAT_SENDER_IS_SHIELDED\020\362\007\022\030\n\023PUSH_UID_NU"
      "LL_ERROR\020\261\t\022\"\n\035PUSH_CREATE_CRTIFICATE_FA"
      "ILED\020\262\t\022\"\n\035PUSH_DELETE_CRTIFICATE_FAILED"
      "\020\263\t\022\034\n\027PUSH_CLEAR_TOKEN_FAILED\020\264\t\022\032\n\025PUS"
      "H_SET_TOKEN_FAILED\020\265\t\022\037\n\032PUSH_QUERY_CRT_"
      "TYPE_FAILED\020\266\t\022\032\n\025PUSH_SET_BADGE_FAILED\020"
      "\267\t\022\030\n\023PUSH_BUNDLEID_EMPYT\020\270\t\022\031\n\024PUSH_USE"
      "R_NOT_ONLINE\020\271\t\022\031\n\024PUSH_CUSTOM_MSG_FAIL\020"
      "\272\t\022 \n\033PUSH_CUSTOM_MSG_CARBON_FAIL\020\273\t\022\036\n\031"
      "PUSH_CUSTOM_MSG_SAVE_FIAL\020\274\t\022\"\n\035GROUP_EX"
      "CEED_CREW_COUNT_LIMIT\020\371\n\022\"\n\035GROUP_OWNER_"
      "MUST_NOT_BE_EMPTY\020\372\n\022\034\n\027GROUP_NAME_EXCEE"
      "D_LIMIT\020\373\n\022\024\n\017GROUP_NOT_EXIST\020\374\n\022\035\n\030GROU"
      "P_INVITEE_ALREADY_IN\020\375\n\022 \n\033GROUP_INVITAT"
      "IN_UNAVAILABLE\020\376\n\022!\n\034GROUP_REQUESTER_NOT"
      "_IN_GROUP\020\377\n\022#\n\036GROUP_EMPTY_MEMBER_AND_I"
      "NVITEE\020\200\013\022!\n\034GROUP_REQUESTER_IS_NOT_OWNE"
      "R\020\201\013\022\037\n\032GROUP_REQUESTER_ALREADY_IN\020\202\013\022!\n"
      "\034GROUP_CREW_NICK_EXCEED_LIMIT\020\203\013\022\036\n\031GROU"
      "P_REASON_LENGTH_LIMIT\020\204\013\022(\n#GROUP_JOIN_G"
      "ROUP_HAS_BEEN_PROCESSED\020\205\013\022\033\n\026GROUP_NEVE"
      "R_JOIN_GROUP\020\206\013\022*\n%GROUP_REQUESTER_IS_NO"
      "T_OWNER_OR_ADMIN\020\207\013\022!\n\034GROUP_NEW_OWNER_N"
      "OT_IN_GROUP\020\210\013\022\031\n\024GROUP_ADMINS_INVALID\020\211"
      "\013\022\026\n\021GROUP_PARAM_ERROR\020\212\013\022\036\n\031GROUP_EMPTY"
      "_BEKICKED_LIST\020\213\013\022#\n\036GROUP_MEMBER_DO_KIC"
      "K_FORBIDDEN\020\214\013\022\036\n\031GROUP_SELF_KICK_FORBID"
      "DEN\020\215\013\022)\n$GROUP_ADMIN_KICK_NONMEMBER_FOR"
      "BIDDEN\020\216\013\022!\n\034GROUP_CHANGE_NICK_LIST_EMPT"
      "Y\020\217\013\022\037\n\032GROUP_CHANGE_NICK_HASERROR\020\220\013\022\'\n"
      "\"GROUP_NO_VALID_MEMBER_TO_BE_KICKED\020\221\013\022\036"
      "\n\031GROUP_SETMANAGER_HASERROR\020\222\013\022 \n\033GROUP_"
      "UNSETMANAGER_HASERROR\020\223\013\022\035\n\030GROUP_ADDMAM"
      "BER_HASERROR\020\224\013\022\035\n\030GROUP_DELMAMBER_HASER"
      "ROR\020\225\013\022\035\n\030GROUP_INVITATION_OVERDUE\020\226\013\022\034\n"
      "\027GROUP_DESC_EXCEED_LIMIT\020\227\013\022\"\n\035GROUP_SOM"
      "E_USER_NOT_REGISTERD\020\230\013\022\035\n\030GROUP_OWNER_C"
      "AN_NOT_EXIT\020\231\013\022\037\n\032GROUP_BEKICKED_NO_IN_G"
      "ROUP\020\232\013\022!\n\034GROUP_CREATE_MEMBER_REPEATED\020"
      "\233\013\022#\n\036GROUP_SETADMIN_MEMBER_REPEATED\020\234\013\022"
      "%\n GROUP_UNSETADMIN_MEMBER_REPEATED\020\235\013\022\""
      "\n\035GROUP_NEW_OWNER_ALREADY_OWNER\020\236\013\022\030\n\023GR"
      "OUP_MEMBER_NOT_IN\020\237\013\022\030\n\023GROUP_TAG_NOT_EX"
      "IST\020\240\013\022 \n\033GROUP_TAG_NAME_EXCEED_LIMIT\020\241\013"
      "\022 \n\033GROUP_TAG_DESC_EXCEED_LIMIT\020\242\013\022\"\n\035GR"
      "OUP_NOT_EXIST_OR_CREW_EMPTY\020\243\013\022\"\n\035GROUP_"
      "MUST_SET_ASSEMBLY_POINT\020\244\013\022\034\n\027GROUP_FILT"
      "ER_NO_MESSAGE\020\245\013\022 \n\033JIMAO_SOME_USERS_NOT"
      "_EXISTS\020\301\014\022\036\n\031JIMAO_WRONG_MSGTYPE_ERROR\020"
      "\307\014\022\036\n\031JIMAO_PARSE_MSGDATA_ERROR\020\310\014\022\033\n\026JI"
      "MAO_ADD_THREAD_ERROR\020\311\014\022#\n\036JIMAO_STORE_R"
      "EADEDSIGNAL_ERROR\020\312\014\022\032\n\025JIMAO_AUDIO_NOT_"
      "EXIST\020\313\014\022\034\n\027JIMAO_AUDIO_INNER_ERROR\020\326\014\022\031"
      "\n\024JIMAO_MSG_HAD_SENDED\020\341\014\022\026\n\021JIMAO_REDIS"
      "_ERROR\020\342\014\022\034\n\027HMS_MESSAGE_STORE_ERROR\020\321\017\022"
      "!\n\034HMS_ERROR_PARSING_PROTOCLASS\020\322\017\022\031\n\024HM"
      "S_NO_MESSAGE_FOUND\020\323\017\022\033\n\026HMS_PARAM_FORMA"
      "T_ERROR\020\324\017\022\033\n\026HMS_UNKOWN_QUERY_ERROR\020\325\017\022"
      "\033\n\026HMS_GUID_INVALID_ERROR\020\326\017\022\024\n\017HMS_INNE"
      "R_ERROR\020\327\017\022\037\n\032HMS_ERROR_UPDATE_USER_GUID"
      "\020\330\017\022\037\n\032HMS_ERROR_QUERY_GROUP_LIST\020\331\017\022\036\n\031"
      "HMS_USER_GROUP_LIST_EMPTY\020\332\017\022\032\n\025HMS_SESS"
      "ION_NOT_EXIST\020\333\017\022\036\n\031HMS_ERROR_RETRACT_ME"
      "SSAGE\020\334\017\022\037\n\032HMS_MESSAGE_NO_ALL_REMOVED\020\335"
      "\017\022!\n\034HMS_USER_HAS_NO_SEND_MESSAGE\020\336\017\022\027\n\022"
      "HMS_DATABASE_ERROR\020\337\017\022\"\n\035HMS_TEMPORARY_M"
      "ESSAGE_RETRACT\020\340\017\022 \n\033MSGGW_MESSAGE_UPLOA"
      "D_FAILED\020\231\021\022\035\n\030MSGGW_MESSAGE_SEND_FAILD\020"
      "\232\021\022\036\n\031MSGGW_SOME_USER_NOT_EXSIT\020\233\021\022\035\n\030SE"
      "RIAL_ZK_NODE_NOT_FOUND\020\341\022\022\031\n\024SERIAL_SEQ_"
      "NOT_EXIST\020\342\022\022\035\n\030SERIAL_WOKERID_NOT_EXIST"
      "\020\343\022\022\034\n\027SERIAL_ID_DELETE_FAILED\020\344\022\022\036\n\031SER"
      "IAL_ID_GENERATE_FAILED\020\345\022\022\036\n\031SERIAL_SERV"
      "ER_INNER_ERROR\020\346\022\022\024\n\017SMS_SEND_FAILED\020\251\024\022"
      "\035\n\030SMS_RECEIVER_PHONE_EMPTY\020\252\024\022\026\n\021EMAIL_"
      "SEND_FAILED\020\361\025\022!\n\034EMAIL_RECEIVER_ADDRESS"
      "_EMPTY\020\362\025\022\033\n\026FRONT_APPKEY_NOT_FOUND\020\271\027\022 "
      "\n\033FRONT_APPKEY_ALREADY_EXISTS\020\272\027\022\026\n\021APPK"
      "EY_NOT_EXISTS\020\273\027\022\033\n\026SECURITY_KEY_NOT_MAT"
      "CH\020\274\027\022\025\n\020INVALID_USERNAME\020\275\027\022\025\n\020INVALID_"
      "PASSWORD\020\276\027\022\022\n\rINVALID_PHONE\020\277\027\022\021\n\014INVAL"
      "ID_NICK\020\300\027\022\026\n\021INVALID_GROUPNAME\020\301\027\022\023\n\016IN"
      "VALID_APPKEY\020\302\027\022\031\n\024INVALID_CONTENT_TYPE\020"
      "\303\027\022\035\n\030KEYWORD_SHOULD_NOT_EMPTY\020\304\027\022\031\n\024TOO"
      "_MANY_GROUP_OWNER\020\305\027\022\030\n\023INVALID_GWMESSAG"
      "EID\020\306\027\022\036\n\031REQUEST_LIST_EXCEED_LIMIT\020\307\027\022\036"
      "\n\031FRONT_NO_SUCH_ENVIRONMENT\020\310\027\022\035\n\030FRONT_"
      "SERVER_INNER_ERROR\020\311\027\022\021\n\014INVALID_JSON\020\312\027"
      "\022\031\n\024MONITOR_ALREADY_OPNE\020\201\031\022\033\n\026MONITOR_A"
      "LREADY_CLOSED\020\202\031\022\036\n\031MONITOR_FILE_UPLOAD_"
      "ERROR\020\203\031\022\030\n\023MONITOR_CLOSE_FAILE\020\204\031\022\027\n\022MO"
      "NITOR_OPEN_FAILE\020\205\031\022\037\n\032MONITOR_SERVER_IN"
      "EER_ERROR\020\206\031\022\"\n\035FRIEND_QUERY_FROM_NICK_F"
      "AILED\020\311\032\022!\n\034FRIEND_PARAMETER_EMPTY_ERROR"
      "\020\312\032\022\035\n\030FRIEND_REQUEST_NOT_EXIST\020\313\032\022&\n!FR"
      "IEND_REQUEST_HAS_BEEN_PROCESSED\020\314\032\022&\n!FR"
      "IEND_REQUEST_RECEIVER_NOT_MATCH\020\315\032\022\034\n\027FR"
      "IEND_APPKEY_NOT_MATCH\020\316\032\022\034\n\027FRIEND_APPLY"
      "_SELF_ERROR\020\317\032\022\035\n\030FRIEND_UPDATE_SELF_ERR"
      "OR\020\320\032\022\035\n\030FRIEND_IS_FRIEND_ALREADY\020\321\032\022\031\n\024"
      "FRIEND_IS_NOT_FRIEND\020\322\032\022#\n\036FRIEND_REQUES"
      "T_HAS_BEEN_ACCEPT\020\323\032\022#\n\036FRIEND_REQUEST_H"
      "AS_BEEN_REJECT\020\324\032\0220\n+FRIEND_REQUEST_HAS_"
      "BEEN_ACCEPT_ERROR_REJECT\020\325\032\0220\n+FRIEND_RE"
      "QUEST_HAS_BEEN_REJECT_ERROR_ACCEPT\020\326\032\022\037\n"
      "\032FRIEND_REQUEST_HAS_EXPIRED\020\327\032\022\034\n\027FRIEND"
      "_HAS_DELETE_APPLY\020\330\032\022!\n\034FRIEND_TWO_WAY_A"
      "PLLY_REQUEST\020\331\032\022\"\n\035FRIEND_OWNER_COUNT_OV"
      "ER_LIMIT\020\332\032\022\037\n\032FRIEND_TO_COUNT_OVER_LIMI"
      "T\020\333\032\022\036\n\031AGENT_USERCREATE_HASERROR\020\221\034\022\036\n\031"
      "AGENT_USERDELETE_HASERROR\020\222\034\022\036\n\031AGENT_US"
      "ERMODIFY_HASERROR\020\223\034\022\035\n\030AGENT_USERQUERY_"
      "HASERROR\020\224\034\022\036\n\031AGENT_USERSEARCH_HASERROR"
      "\020\225\034\022\034\n\027AGENT_CREATEGROUP_ERROR\020\226\034\022\032\n\025AGE"
      "NT_GROUP_NOT_EXIST\020\227\034\022\035\n\030AGENT_PARAM_FOR"
      "MAT_ERROR\020\230\034\022\026\n\021AGENT_INNER_ERROR\020\231\034\022%\n "
      "AGENT_GROUP_JOIN_IN_REASON_LIMIT\020\232\034\022\033\n\026A"
      "GENT_GROUP_ALREADY_IN\020\233\034\022\034\n\027AGENT_GROUP_"
      "USER_NOT_IN\020\234\034\022$\n\037AGENT_GROUP_DEL_MEMBER"
      "_HASERROR\020\235\034\022$\n\037AGENT_GROUP_CHANGENICK_H"
      "ASERROR\020\236\034\022#\n\036AGENT_GROUP_ADDMEMBER_HASE"
      "RROR\020\237\034\022$\n\037AGENT_GROUP_SETMANAGER_HASERR"
      "OR\020\240\034\022&\n!AGENT_GROUP_UNSETMANAGER_HASERR"
      "OR\020\241\034\022\"\n\035AGENT_GROUP_NAME_LENGTH_LIMIT\020\242"
      "\034\022\035\n\030CHATROOM_PARAMETER_EMPTY\020\331\035\022\032\n\025CHAT"
      "ROOM_ALREADY_FULL\020\332\035\022 \n\033CHATROOM_USER_NO"
      "_PRIVILEGES\020\333\035\022\033\n\026CHATROOM_ALREADY_CLOSE"
      "\020\334\035\022\027\n\022CHATROOM_NOT_EXIST\020\335\035\022\033\n\026CHATROOM"
      "_ALREADY_EXIST\020\336\035\022\026\n\021CHATROOM_ID_EMPTY\020\337"
      "\035\022\035\n\030CHATROOM_USER_NAME_EMPTY\020\340\035\022\035\n\030CHAT"
      "ROOM_ROOM_NAME_EMPTY\020\341\035\022\032\n\025CHATROOM_APPK"
      "EY_EMPTY\020\342\035\022\036\n\031CHATROOM_USER_NOT_IN_ROOM"
      "\020\343\035\022 \n\033CHATROOM_OWNER_CAN_NOT_EXIT\020\344\035\022!\n"
      "\034CHATROOM_INVITER_NOT_IN_ROOM\020\345\035\022 \n\033CHAT"
      "ROOM_SENDER_NOT_IN_ROOM\020\346\035\022\032\n\025CHATROOM_A"
      "LREADY_OPEN\020\347\035\022\030\n\023ROBOT_CONTENT_EMPTY\020\241\037"
      "\022\027\n\022ROBOT_CORE_REFUSED\020\242\037\022\037\n\032ROBOT_CONTE"
      "NT_FORMAT_ERROR\020\243\037\022\031\n\024ADAPTER_INVALID_JS"
      "ON\020\351 \022\035\n\030ADAPTER_APPKEY_NOT_FOUND\020\352 \022!\n\034"
      "ADAPTER_APPKEY_ALREADY_EXIST\020\353 \022 \n\033ADAPT"
      "ER_APPKEYENV_NOT_FOUND\020\354 \022\037\n\032ADAPTER_FRO"
      "NTENV_NOT_FOUND\020\355 \022\"\n\035FLEET_EXCEED_CREW_"
      "COUNT_LIMIT\020\261\"\022\"\n\035FLEET_OWNER_MUST_NOT_B"
      "E_EMPTY\020\262\"\022\034\n\027FLEET_NAME_EXCEED_LIMIT\020\263\""
      "\022\024\n\017FLEET_NOT_EXIST\020\264\"\022\035\n\030FLEET_INVITEE_"
      "ALREADY_IN\020\265\"\022 \n\033FLEET_INVITATIN_UNAVAIL"
      "ABLE\020\266\"\022!\n\034FLEET_REQUESTER_NOT_IN_FLEET\020"
      "\267\"\022#\n\036FLEET_EMPTY_MEMBER_AND_INVITEE\020\270\"\022"
      "!\n\034FLEET_REQUESTER_IS_NOT_OWNER\020\271\"\022\037\n\032FL"
      "EET_REQUESTER_ALREADY_IN\020\272\"\022!\n\034FLEET_CRE"
      "W_NICK_EXCEED_LIMIT\020\273\"\022\036\n\031FLEET_REASON_L"
      "ENGTH_LIMIT\020\274\"\022(\n#FLEET_JOIN_FLEET_HAS_B"
      "EEN_PROCESSED\020\275\"\022\033\n\026FLEET_NEVER_JOIN_FLE"
      "ET\020\276\"\022\"\n\035FLEET_NOT_EXIST_OR_CREW_EMPTY\020\277"
      "\"\022!\n\034FLEET_NEW_OWNER_NOT_IN_FLEET\020\300\"\022\030\n\023"
      "FLEET_MEMBER_NOT_IN\020\301\"\022\026\n\021FLEET_PARAM_ER"
      "ROR\020\302\"\022\036\n\031FLEET_EMPTY_BEKICKED_LIST\020\303\"\022#"
      "\n\036FLEET_MEMBER_DO_KICK_FORBIDDEN\020\304\"\022\036\n\031F"
      "LEET_SELF_KICK_FORBIDDEN\020\305\"\022\"\n\035FLEET_NEW"
      "_OWNER_ALREADY_OWNER\020\306\"\022!\n\034FLEET_CHANGE_"
      "NICK_LIST_EMPTY\020\307\"\022\037\n\032FLEET_CHANGE_NICK_"
      "HASERROR\020\310\"\022\'\n\"FLEET_NO_VALID_MEMBER_TO_"
      "BE_KICKED\020\311\"\022!\n\034FLEET_CREATE_MEMBER_REPE"
      "ATED\020\312\"\022\037\n\032FLEET_BEKICKED_NO_IN_FLEET\020\313\""
      "\022\035\n\030FLEET_ADDMAMBER_HASERROR\020\314\"\022\035\n\030FLEET"
      "_DELMAMBER_HASERROR\020\315\"\022\035\n\030FLEET_INVITATI"
      "ON_OVERDUE\020\316\"\022\034\n\027FLEET_DESC_EXCEED_LIMIT"
      "\020\317\"\022\"\n\035FLEET_SOME_USER_NOT_REGISTERD\020\320\"\022"
      "\"\n\035FLEET_MUST_SET_ASSEMBLY_POINT\020\321\"B,\n\035c"
      "om.cmcc.littlec.proto.commonB\tErrorCodeP"
      "\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7969);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/errcode.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2ferrcode_2eproto
namespace common {
namespace errcode {
const ::google::protobuf::EnumDescriptor* EErrorCode_descriptor() {
  protobuf_common_2ferrcode_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2ferrcode_2eproto::file_level_enum_descriptors[0];
}
bool EErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 20:
    case 21:
    case 23:
    case 200:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 601:
    case 602:
    case 603:
    case 604:
    case 605:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1207:
    case 1208:
    case 1209:
    case 1210:
    case 1211:
    case 1212:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1405:
    case 1406:
    case 1407:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1412:
    case 1413:
    case 1414:
    case 1415:
    case 1416:
    case 1417:
    case 1418:
    case 1419:
    case 1420:
    case 1421:
    case 1422:
    case 1423:
    case 1424:
    case 1425:
    case 1426:
    case 1427:
    case 1428:
    case 1429:
    case 1430:
    case 1431:
    case 1432:
    case 1433:
    case 1434:
    case 1435:
    case 1436:
    case 1437:
    case 1438:
    case 1439:
    case 1440:
    case 1441:
    case 1442:
    case 1443:
    case 1444:
    case 1445:
    case 1601:
    case 1607:
    case 1608:
    case 1609:
    case 1610:
    case 1611:
    case 1622:
    case 1633:
    case 1634:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
    case 2007:
    case 2008:
    case 2009:
    case 2010:
    case 2011:
    case 2012:
    case 2013:
    case 2014:
    case 2015:
    case 2016:
    case 2201:
    case 2202:
    case 2203:
    case 2401:
    case 2402:
    case 2403:
    case 2404:
    case 2405:
    case 2406:
    case 2601:
    case 2602:
    case 2801:
    case 2802:
    case 3001:
    case 3002:
    case 3003:
    case 3004:
    case 3005:
    case 3006:
    case 3007:
    case 3008:
    case 3009:
    case 3010:
    case 3011:
    case 3012:
    case 3013:
    case 3014:
    case 3015:
    case 3016:
    case 3017:
    case 3018:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3405:
    case 3406:
    case 3407:
    case 3408:
    case 3409:
    case 3410:
    case 3411:
    case 3412:
    case 3413:
    case 3414:
    case 3415:
    case 3416:
    case 3417:
    case 3418:
    case 3419:
    case 3601:
    case 3602:
    case 3603:
    case 3604:
    case 3605:
    case 3606:
    case 3607:
    case 3608:
    case 3609:
    case 3610:
    case 3611:
    case 3612:
    case 3613:
    case 3614:
    case 3615:
    case 3616:
    case 3617:
    case 3618:
    case 3801:
    case 3802:
    case 3803:
    case 3804:
    case 3805:
    case 3806:
    case 3807:
    case 3808:
    case 3809:
    case 3810:
    case 3811:
    case 3812:
    case 3813:
    case 3814:
    case 3815:
    case 4001:
    case 4002:
    case 4003:
    case 4201:
    case 4202:
    case 4203:
    case 4204:
    case 4205:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 4425:
    case 4426:
    case 4427:
    case 4428:
    case 4429:
    case 4430:
    case 4431:
    case 4432:
    case 4433:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace errcode
}  // namespace common

// @@protoc_insertion_point(global_scope)
