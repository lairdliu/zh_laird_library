syntax = "proto3";

package outer.group;

import "common/msg.proto";
import "common/errcode.proto";
import "common/enumeration.proto";

option java_multiple_files = false;
option java_package = "com.cmcc.littlec.proto.outer";
option java_outer_classname = "Group";

// 群信息结构
message GroupInfo
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string group_name = 3;	// 群名称
	uint32 crew_count = 4;	// 群人数
	uint64 created = 5;	// 群创建时间
	common.enumeration.EEnable enable = 6;	// 1:有效，0:无效
	string desc = 7;	// 群描述
	bool is_family_group = 8;	//是否亲情网群组
	common.enumeration.EGroupType group_type = 9;    // 群类型
	GroupTag group_tag = 10; // 群标签信息
	common.msg.LocationMessage assembly_point = 11; // 集结点
}

// 群标签
message GroupTag
{
	uint64 tag_id = 1;
	string tag_name = 2;
	string tag_img = 3;
	string tag_desc = 4;
}

// 群员结构，用于基础信令
message Crew
{
	string username = 1;
	string appkey = 2;
	string nick = 3;	// 成员昵称
}

// 群员详细结构，用于获取群成员列表
message CrewDetail
{
	string username = 1;
	string appkey = 2;
	string nick = 3;	// 成员昵称
	ERole role = 4;	// 角色
	common.enumeration.ESilent silent = 5;	// 静默状态
	uint64 created = 6;	// 成员创建时间
	uint64 modified = 7;	// 成员更新时间
	common.enumeration.EEnable enable = 8;	// 1:有效，0:无效
	string group_uri = 9;	// 群唯一标识
}

// 成员和群组之间关系结构
message CrewInGroup
{
	GroupInfo group_info = 1;	// 群信息
	Crew crew = 2;	// 群员
	ERole role = 3;	// 角色
	common.enumeration.ESilent silent = 4;	// 是否静默
	common.enumeration.EEnable enable = 5;	// 1:在群中，0:不在群中
	uint64 modified = 6;	// 成员变更时间
}

// 角色
enum ERole
{
	UNKNOWNEROLE = 0;
	OWNER = 3;	// 群主
	ADMIN = 1;	// 管理员
	MEMBER = 2;	// 普通成员
}


// 群信令类型
enum ESignalType
{
	UNKNOWNESIGNALTYPE = 0;
	GROUP_CREATED_SIGNAL = 22;	// 建群信令
	INVITING_SIGNAL = 1;	// 邀请入群信令
	INVITATION_ACCEPTED_SIGNAL = 2;	// 同意入群邀请信令
	INVITEE_JOIN_GROUP_SIGNAL = 3;	// 受邀者入群信令
	INVITATION_DECLINED_SIGNAL = 4;	// 拒绝入群邀请信令
	JOIN_GROUP_SIGNAL = 5;	// 加入群聊信令, 和INVITEE_JOIN_GROUP_SIGNAL的区别：直接拉入群触发的信令
	BE_KICKED_SIGNAL = 6;	// 成员被踢出信令
	EXITED_SIGNAL = 7;	// 成员退群信令
	GROUP_DESTROYED_SIGNAL = 8;	// 群被解散信令
	OWNER_CHANGED_SIGNAL = 9;	// 群主变更信令
	GROUP_NAME_CHANGED_SIGNAL = 10;	// 群名称变更信令
	NICK_CHANGED_SIGNAL = 11;	// 成员昵称变更信令
	BE_ADMIN_SIGNAL = 12;	// 新管理员信令
	APPLY_JOIN_SIGNAL = 13;	// 申请入群信令（发送给群主和管理员）
	BE_APPROVED_JOIN_SIGNAL = 14;	// 被同意入群信令，发送给所有群成员
	BE_REFUSE_JOIN_SIGNAL = 15;		// 被拒绝入群信令，发送给申请入群者
	ABOLISHED_ADMIN_SIGNAL = 16; // 废除管理员信令
	DESC_CHANGED_SIGNAL = 17;	// 群描述变更信令
	DIRECTLY_JOIN_SIGNAL = 18;  // 直接入群信令，发送给所有群成员
	JIMAO_READED_SIGNAL = 19;     //  鸡毛信已读信令
	JIMAO_SENDED_SIGNAL = 20;      // 鸡毛信已送达信令
	GROUP_TAG_CHANGED_SIGNAL = 21; // 群标签变更信令
	AGGREGATION_POINT_CHANGE = 23;	// 集结点变化的信令
}

// 群信令 （common.msg.MessageUnit中 msg_type=GROUP_MSG 时，common.msg.MessageUnit中的 data就为此结构体）
message GroupSignal
{
	ESignalType signal_type = 1;	//群信令类型
	bytes data = 2;	// 业务层根据signal_type解析信令内容
	GroupInfo group_info = 3;	// 群信息
	uint64 guid = 4; // 全局唯一标识码
	repeated string receiver = 5;
}



// 群消息请求
message GroupMessageRequest
{
	string from_username = 1; // 发送方username
	string appkey = 2;	// appkey
	string uri = 3; // 群uri
	common.msg.EMsgContentType msg_content_type = 4; // 消息内容类型，文本、图片、语音、视频等
	bytes data = 5; // 业务层根据type解析具体消息内容
	string msg_id = 6;	// 终端生成，便于发送方重发&接收方去重
	bool is_jimao = 7;    // 是否鸡毛信
	common.enumeration.EClientType from_client_type = 8; // 发送者终端类型
}
// 群消息响应
message GroupMessageResponse
{
	common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
	uint64 guid = 2; // 消息guid
	string msg_id = 3;	// 终端生成，便于发送方重发&接收方去重
	string jimao_left_num = 4;   // 鸡毛信剩余的数量
}

// 建群请求
message CreateGroupRequest
{
	string group_name = 1;	// 群名称
	string appkey = 2;
	string owner_username = 3;	// 群主username
	repeated string member_username = 4;	// 群成员username
	repeated string invitee_username = 5;	// 受邀者username
	string invite_reason = 6;	//邀请理由
	string desc = 7;	// 群描述
	string msg_id = 8;	// 终端生成
	bool is_family_group = 9;	//是否亲情网群组
	common.enumeration.EGroupType group_type = 10;    // 群类型
	uint64 tag_id = 11; // 群标签
}
// 建群响应
message CreateGroupResponse
{
	common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
	GroupInfo group_info = 2;
	string msg_id = 3;	// 终端生成
}
// 群创建成功信令
message GroupCreatedSignal
{
	Crew owner = 1;	// 群主
	repeated Crew member = 2;	// 群成员
}

// 邀请入群信令
message InvitingSignal
{
	Crew from_crew = 1;	//邀请者
	string reason = 2;	//邀请理由
}

// 同意入群请求
message AcceptInvitationRequest
{
	string uri = 1;	// 群uri
	string username = 2; // 接受邀请者
	string accept_to_username = 3;	// 邀请者
	string appkey = 4;	// appkey
	string msg_id = 5;	// 终端生成
}

// 同意入群响应
message AcceptInvitationResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

// 同意入群邀请信令
message InvitationAcceptedSignal
{
	Crew accept_from = 1;	// 受邀者
}
// 受邀者入群信令
message InviteeJoinGroupSignal
{
	Crew invitee = 2;	// 受邀者
	Crew inviter = 3;	// 邀请者
}

// 拒绝入群请求
message DeclineInvitationRequest
{
	string uri = 1;	// 群uri
	string username = 2; // 拒绝邀请者
	string decline_to_username = 3;	// 邀请者
	string appkey = 4;	// appkey
	string decline_reason = 5;	// 拒绝理由
	string msg_id = 6;	// 终端生成
}
// 拒绝入群响应
message DeclineInvitationResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 拒绝入群邀请信令
message InvitationDeclinedSignal
{
	Crew decline_from = 2;	// 受邀者
	string decline_reason = 3;	// 拒绝理由
}

// 拉人入群请求
message AddMemberRequest
{
	string uri = 1;	// 群uri
	string from_username = 2;	//拉人者
	string appkey = 3;	// appkey
	repeated string member_username = 4;	// 被拉者username
	repeated string invitee_username = 5;	// 受邀者username
	string invite_reason = 6;	//邀请理由
	string msg_id = 7;	// 终端生成
}
// 拉人入群响应
message AddMemberResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 加入群聊信令
message JoinGroupSignal
{
	repeated Crew new_member = 1;	// 入群者
	Crew actor = 2;		// 拉人者
}

// 踢人请求
message KickRequest
{
	string uri = 1;	// 群uri
	string kicker_username = 2;	// 踢人者
	string appkey = 3;
	repeated string bekicked_username = 4;	// 被踢者
	string msg_id = 5;	// 终端生成
}
// 踢人响应
message KickResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 成员被踢出信令
message BeKickedSignal
{
	repeated Crew be_kicked = 1;   // 被踢者
	Crew kicker = 2;   // 踢人者
}

// 退群请求
message ExitRequest
{
	string uri = 1;	// 群uri
	string exiter_username = 2;	// 退群者
	string appkey = 3;
	string msg_id = 4;	// 终端生成
}
// 退群响应
message ExitResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 成员退群信令
message ExitedSignal
{
	Crew exiter = 1;	// 退群者
}

// 解散群请求
message DestroyRequest
{
	string uri = 1;	// 群uri
	string destroy_username = 2;	// 解散者
	string appkey = 3;
	string msg_id = 4;	// 终端生成
}
// 解散群响应
message DestroyResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 群解散信令
message GroupDestroyedSignal
{
	Crew destroyer = 1;	// 解散者
}

// 转移群主请求
message HandoverOwnerRequest
{
	string uri = 1;	// 群uri
	string actor_username = 2;	// 请求发起者
	string new_owner_username = 3;	// 新群主
	string appkey = 4;
	string msg_id = 5;	// 终端生成
}
// 转移群主响应
message HandoverOwnerResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 群主变更信令
message OwnerChangedSignal
{
	Crew new_owner = 1;	// 新群主
}

// 修改群名称请求
message SetGroupNameRequest
{
	string uri = 1;	// 群uri
	string actor_username = 2;	// 请求发起者
	string appkey = 3;
	string group_name = 4;	// 群名称
	string msg_id = 5;	// 终端生成
}
// 修改群名称响应
message SetGroupNameResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 群名称变更信令
message GroupNameChangedSignal
{
	string group_name = 1;	// 群名称
	Crew actor = 2;	// 群名称修改者
	string appkey = 3;
}

// 修改群描述请求
message SetDescRequest
{
	string uri = 1;	// 群uri
	string actor_username = 2;	// 请求发起者
	string appkey = 3;
	string desc = 4;	// 群描述
	string msg_id = 5;	// 终端生成
}
// 修改群描述响应
message SetDescResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 群描述变更信令
message DescChangedSignal
{
	string desc = 1;	// 群描述
	Crew actor = 2;	// 群描述修改者
	string appkey = 3;
}

// 修改成员昵称请求
message ChangeNickRequest
{
	string uri = 1;	// 群uri
	string actor_username = 2;	// 请求发起者
	string appkey = 3;
	string nick = 4;	// 成员昵称
	string msg_id = 5;	// 终端生成
}
// 修改成员昵称响应
message ChangeNickResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 成员昵称变更信令
message NickChangedSignal
{
	Crew nick_changed_crew = 1;	// 昵称变更者
}

// 获取群列表请求
message GetMyGroupListRequest
{
	string username = 1;	// 获取该用户的群列表
	string appkey = 2;
	uint64 modified = 3;	// 群列表最新更新时间，新终端获取全量群列表设置为0
	string msg_id = 4;	// 终端生成
}
// 获取群列表响应
message GetMyGroupListResponse
{
	common.errcode.EErrorCode ret = 1;
	repeated CrewInGroup crew_in_group = 2;	// 成员与群组关系
	string msg_id = 3;	// 终端生成
	bool finish_sync = 4; // 是否同步完毕
}

// 获取群信息请求
message GetGroupInfoRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string msg_id = 3;	// 终端生成
}
// 获取群信息响应
message GetGroupInfoResponse
{
	common.errcode.EErrorCode ret = 1;
	GroupInfo group_info = 2;	// 群信息
	string msg_id = 3;	// 终端生成
}

// 获取群成员列表请求
message GetCrewListRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string username = 3;	// 请求者
	uint64 modified = 4;	// 群成员列表最新更新时间，新终端获取全量群成员列表设置为0
	string msg_id = 5;	// 终端生成
}
// 获取群成员列表响应
message GetCrewListResponse
{
	common.errcode.EErrorCode ret = 1;
	repeated CrewDetail crew_detail = 2;
	string msg_id = 3;	// 终端生成
}

// 指定管理员请求
message SetAdminRequest
{
	string uri = 1;	// 群唯一标识
	repeated string admin_username = 2;	// 被指定者
	string actor_username = 3;	// 指定者
	string appkey = 4;
	string msg_id = 5;	// 终端生成
}

// 指定管理员响应
message SetAdminResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

// 新管理员信令
message BeAdminSignal
{
	message NewAdmin {
		Crew admin = 1;	// 新管理员
		ERole old_role = 2;	// 被指定前角色
	}
	Crew actor = 1;	// 指定者
	repeated NewAdmin admins = 2; // 新管理员信息
}

// 废除管理员请求
message AbolishAdminRequest
{
	string uri = 1; // 群唯一标识
	repeated string admin_username = 2;	// 被废除的管理员
	string actor_username = 3;	// 废除者
	string appkey = 4;
	string msg_id = 5;	// 终端生成
}

// 废除管理员响应
message AbolishAdminResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

message AbolishedAdminSignal
{
	message AbolishedAdmin {
		Crew admin = 1; // 废除的管理员
		ERole new_role = 2; // 管理员角色
	}
	Crew actor = 1; // 指定者
	repeated AbolishedAdmin abolished_admins = 2; // 废除的管理员
}

// 主动入群请求
message JoinGroupRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string username = 3;	// 申请入群者
	string reason = 4;	// 入群理由
	string msg_id = 5;	// 终端生成
	bool require_approve = 6; // 是否需要批准
}

// 主动入群响应
message JoinGroupResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

// 申请入群信令，发送给群主和管理员
message ApplyJoinSignal
{
	Crew asker = 1;	// 申请入群者
	string reason = 2;	// 入群理由
}

// 同意入群请求
message ApproveJoinRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string asker_username = 3;	// 申请入群者
	string actor_username = 4;	// 同意者
	string msg_id = 5;	// 终端生成
}

// 申请入群，直接加入信令，发送给所有群成员
message DirectlyJoinSignal
{
	Crew join = 1;  // 申请入群者
}

// 同意入群响应
message ApproveJoinResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

// 被同意入群信令，发送给所有群成员
message BeApprovedJoinSignal
{
	Crew asker = 1;	// 申请入群者
	Crew approve_actor = 2;	// 同意者
}

// 拒绝入群请求
message RefuseJoinRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string asker_username = 3;	// 申请入群者
	string actor_username = 4;	// 拒绝者
	string refuse_reason = 5;   // 拒绝理由
	string msg_id = 6;	// 终端生成
}

// 拒绝入群响应
message RefuseJoinResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}
// 被拒绝入群信令，发送给申请入群者
message BeRefuseJoinSignal
{
	Crew refuse_actor = 1;	// 拒绝者
	string refuse_reason = 2; // 拒绝理由
}

// 设置静默状态请求
message SetSilentRequest
{
	string uri = 1;	// 群唯一标识
	string appkey = 2;
	string username = 3;
	bool is_silent = 4;   // 是否静默
	string msg_id = 5;	// 终端生成
	common.enumeration.EClientType from_client_type = 6; // 发送者终端类型

}

// 设置静默状态响应
message SetSilentResponse
{
	common.errcode.EErrorCode ret = 1;
	string msg_id = 2;	// 终端生成
}

// 获取群标签列表请求
message GetGroupTagListRequest {
    string appkey = 1;
}

// 获取群标签列表响应
message GetGroupTagListResponse {
    common.errcode.EErrorCode ret = 1; // 状态码
    repeated GroupTag group_tag = 2; // 标签列表
}

// 修改群标签请求
message SetGroupTagRequest
{
    string uri = 1; // 群uri
    string actor_username = 2;  // 请求发起者
    string appkey = 3;
    uint64 group_tag_id = 4;  // 群标签
    string msg_id = 5;  // 终端生成
}

// 修改群标签响应
message SetGroupTagResponse
{
    common.errcode.EErrorCode ret = 1;
    string msg_id = 2;  // 终端生成
}

// 群标签变更信令
message GroupTagChangedSignal
{
	GroupTag group_tag = 1;  // 群标签
	Crew actor = 2; // 群标签修改者
	string appkey = 3;
}
// 设置群集结点请求
message SetGroupAssemblyPointRequest
{
	string setter_username = 1; // 设置者；用户的唯一标识，登录流程图中的uid
	string appkey = 2;	// // 与应用绑定，由能力平台分配
	string group_uri = 3; // 群唯一标识
	common.msg.LocationMessage assembly_point = 4; // 集结点
	string msg_id = 5;	// 终端生成，便于发送方重发&接收方去重
}
// 设置群集结点响应
message SetGroupAssemblyPointResponse
{
	common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
	string msg_id = 3;	// 终端生成，便于发送方重发&接收方去重
}
// 设置群集结点信令
message AssemblyPointChangedSignal
{
	common.msg.LocationMessage assembly_point = 1; // 集结点
	CrewDetail setter = 2;	// 设置者
}

// 获取群集结点请求
message GetGroupAssemblyPointRequest
{
	string username = 1; // 请求者；用户的唯一标识，登录流程图中的uid
	string appkey = 2;	// 与应用绑定，由能力平台分配
	string group_uri = 3; // 群uri
	string msg_id = 4;	// 终端生成，便于发送方重发&接收方去重
}
// 获取群集集结点响应
message GetGroupAssemblyPointResponse
{
	common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
	common.msg.LocationMessage assembly_point = 2; // 集结点
	string msg_id = 3;	// 终端生成，便于发送方重发&接收方去重
}

// 群聊服务
service GroupService {
	// 发送群聊消息
	rpc SendGroupMessage (GroupMessageRequest) returns (GroupMessageResponse);
	// 创建群
	rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse);
	// 受邀者同意入群
	rpc AcceptInvitation (AcceptInvitationRequest) returns (AcceptInvitationResponse);
	// 受邀者拒绝入群
	rpc DeclineInvitation (DeclineInvitationRequest) returns (DeclineInvitationResponse);
	// 拉人入群
	rpc AddMember (AddMemberRequest) returns (AddMemberResponse);
	// 踢人
	rpc Kick (KickRequest) returns (KickResponse);
	// 退群
	rpc Exit (ExitRequest) returns (ExitResponse);
	// 解散群
	rpc Destroy (DestroyRequest) returns (DestroyResponse);
	// 转移群主
	rpc HandoverOwner (HandoverOwnerRequest) returns (HandoverOwnerResponse);
	// 修改群名称
	rpc SetGroupName (SetGroupNameRequest) returns (SetGroupNameResponse);
	// 修改群描述
	rpc SetDesc (SetDescRequest) returns (SetDescResponse);
	// 修改成员昵称
	rpc ChangeNick (ChangeNickRequest) returns (ChangeNickResponse);
	// 获取群列表
	rpc GetMyGroupList (GetMyGroupListRequest) returns (GetMyGroupListResponse);
	// 获取群信息
	rpc GetGroupInfo (GetGroupInfoRequest) returns (GetGroupInfoResponse);
	// 获取群成员列表
	rpc GetCrewList (GetCrewListRequest) returns (GetCrewListResponse);
	// 指定管理员
	rpc SetAdmin (SetAdminRequest) returns (SetAdminResponse);
	// 废除管理员
	rpc AbolishAdmin (AbolishAdminRequest) returns (AbolishAdminResponse);
	// 主动入群-申请入群
	rpc JoinGroup (JoinGroupRequest) returns (JoinGroupResponse);
	// 主动入群-同意入群
	rpc ApproveJoin (ApproveJoinRequest) returns (ApproveJoinResponse);
	// 主动入群-拒绝入群
	rpc RefuseJoin (RefuseJoinRequest) returns (RefuseJoinResponse);
	// 设置静默状态
	rpc SetSilent (SetSilentRequest) returns (SetSilentResponse);
	// 获取群标签列表
	rpc GetGroupTagList (GetGroupTagListRequest) returns (GetGroupTagListResponse);
	// 修改群标签
	rpc SetGroupTag (SetGroupTagRequest) returns (SetGroupTagResponse);
	// 设置群集结点
	rpc SetGroupAssemblyPoint (SetGroupAssemblyPointRequest) returns (SetGroupAssemblyPointResponse);
	// 获取群集结点
	rpc GetGroupAssemblyPoint (GetGroupAssemblyPointRequest) returns (GetGroupAssemblyPointResponse);
}
