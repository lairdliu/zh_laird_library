syntax = "proto3";

package outer.friends;

import "common/errcode.proto";
import "common/enumeration.proto";

option java_multiple_files = false;
option java_package = "com.cmcc.littlec.proto.outer";
option java_outer_classname = "Friend";

// 好友
message FriendInfo {
    string appkey = 1; //应用标识
    string friend_username = 2; //好友用户名
    string friend_nick = 3; //好友昵称
    string friend_display = 4; // 好友备注名
    string original_link = 5; //好友头像原图
    string thumbnail_link = 6; //好友头像缩略图
    common.enumeration.EEnable enable = 7;
    uint64 modified = 8; // 更新时间
    common.enumeration.ESilent silent = 9; // 是否静默
    string phone = 10; //手机号码
    bool join_fleet = 11; //是否加入车队
    string friend_nick_pinyin = 12; //好友昵称拼音
    string friend_display_pinyin = 13; //好友备注名拼音
    string friend_display_pinyin_blank = 14; //好友备注名拼音
    string friend_nick_pinyin_blank = 15; //好友昵称拼音
    string serial_name = 16; // 车辆属性  （新加）
    uint32 member_type = 17; // 车主标识  （新加）
    uint32 user_enable = 18; // 好友是否注销
}

// 好友请求类型
enum EFriendRequestType {
    APPLY_FRIEND_REQUEST = 0; // 请求好友
}

// 好友请求，由服务端构造返回给接收者
message FriendRequest {
    string req_id = 1; // 请求ID
    string appkey = 2; //应用标识
    string from_username = 3; // 请求方uid
    string from_nick = 4; // 请求方nick
    EFriendRequestType req_type = 5; // 请求类型
    string remark = 6; // 备注：如申请理由等
    uint64 modified = 7; // 更新时间
    string original_link = 8;
    string thumbnail_link = 9;
    uint64 created = 10; //创建时间
    uint32 state = 11; //0未读未处理 1同意 2拒绝 3已读未处理
}

// 好友信令类型
enum EFriendSignalType {
    AGREE = 0; // 同意
    REFUSE = 1; // 拒绝
    REMOVE = 2; // 删除
}

// 好友信令
message FriendSignal {
    string appkey = 1; //应用标识
    string from_username = 2; //发送者用户名
    string from_nick = 3; //发送者昵称
    EFriendSignalType friend_signal_type = 4; //好友信令类型
    string remark = 5; // 备注，如拒绝理由等
    uint64 created = 6; //创建时间
    uint64 modified = 7; // 更新时间
}

// 申请好友请求
message ApplyFriendRequest {
    string from_username = 1; // 发送方username
    string appkey = 2; // appkey, 各应用在官网申请
    string to_username = 3; // 接收方username
    string remark = 4; // 备注，如申请理由
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 申请好友响应
message ApplyFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 同意好友请求
message AgreeFriendRequest {
    string req_id = 1; // 请求ID
    string from_username = 2; // 同意者username
    string appkey = 3; //应用标识
    string msg_id = 4; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 同意好友响应
message AgreeFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 拒绝好友请求
message RefuseFriendRequest {
    string req_id = 1; // 请求ID
    string from_username = 2; // 拒绝者username
    string appkey = 3; //应用标识
    string msg_id = 4; // 终端生成，便于发送方重发&接收方去重
    string remark = 5; //备注， 拒绝理由
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 拒绝好友响应
message RefuseFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 删除好友请求
message RemoveFriendRequest {
    string from_username = 1; // 发送方username
    string appkey = 2; //应用标识
    string to_username = 3; // 接收方username
    string msg_id = 4; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 删除好友响应
message RemoveFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 同步好友请求
message SyncFriendRequest {
    string username = 1; // 需要同步好友的用户
    string appkey = 2; //应用标识
    uint64 friend_modified = 3; // 客户端好友列表最后更新时间，新终端设置为0
    uint64 friend_req_modified = 4; // 客户端上接收到好友请求的最后更新时间，新终端设置为0
    uint64 friend_signal_modified = 6; // 客户端上接收到好友信令的最后更新时间，新终端设置为当前系统时间
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    bool first_sync = 7; //是否为第一次同步好友。ture：第一次同步，好友请求只同步0未读未处理和3已读未处理 false:根据时间戳增量同步
}
// 同步好友响应
message SyncFriendResponse {
    common.errcode.EErrorCode ret = 1;
    repeated FriendInfo friend_info = 2; // 增量好友列表
    repeated FriendRequest friend_request = 3; // 增量、未处理好友请求列表
    repeated FriendSignal friend_signal = 4; // 未下发过的好友信令
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
}

// 修改好友信息请求
message UpdateFriendInfoRequest {
    string appkey = 1; //应用标识
    string from_username = 2; //发送方username
    string friend_username = 3; //好友用户名
    string friend_display = 4; // 好友备注名
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 修改好友信息响应
message UpdateFriendInfoResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 修改静默请求
message UpdateSilentRequest {
    string appkey = 1; //应用标识
    string from_username = 2; // 发起方用户名
    string friend_username = 3; // 好友用户名
    common.enumeration.ESilent friend_silent = 4; // 好友静默状态YES静默  NO非静默
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}

// 修改静默响应
message UpdateSilentRespone {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

//获取好友列表请求
message GetFriendListRequest {
    string appkey = 1; //应用标识
    string username = 2; //用户名
    int32 page_index = 3; //页编号
    int32 page_size = 4; //页大小
}

//获取好友列表响应
message GetFriendListResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    repeated FriendInfo friend_info = 2; // 好友列表
    int64 total = 3; //好友总数
}

// 好友请求已读
message HasReadFriendRequest {
    repeated string req_id = 1; // 请求ID
    string appkey = 2; //应用标识
    string username = 3; //收到好友请求一方
    string msg_id = 4; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 5; // 发送者终端类型

}
// 好友请求已读响应
message HasReadFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 好友请求忽略
message HasIgnoreFriendRequest {
    repeated string req_id = 1; // 请求ID
    string appkey = 2; //应用标识
    string username = 3; //收到好友请求一方
    string msg_id = 4; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 5; // 发送者终端类型
}

// 好友请求已忽略响应
message HasIgnoreFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
}

// 批量申请好友请求(一个发送者，多个接收者)
message BatchApplyFriendRequest {
    string from_username = 1; // 发送方username
    string appkey = 2; // appkey, 各应用在官网申请
    repeated string to_username = 3; // 接收方username列表
    string remark = 4; // 备注，如申请理由
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 批量申请好友响应(一个发送者，多个接收者)
message BatchApplyFriendResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
    map<string, common.errcode.EErrorCode> result = 3; //每个用户申请是否成功的响应结果map
}

// 批量申请好友请求(多个发送者，一个接收者)
message BatchApplyFriendByFromUsersRequest {
    repeated string from_username = 1; // 发送方username列表
    string appkey = 2; // appkey, 各应用在官网申请
    string to_username = 3; // 接收方username
    map<string, string> remark = 4; // 备注，如申请理由
    string msg_id = 5; // 终端生成，便于发送方重发&接收方去重
    common.enumeration.EClientType from_client_type = 6; // 发送者终端类型
}
// 批量申请好友响应(多个发送者，一个接收者)
message BatchApplyFriendByFromUsersResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string msg_id = 2; // 终端生成，便于发送方重发&接收方去重
    map<string, common.errcode.EErrorCode> result = 3; //每个from申请是否成功的响应结果map
}
// 获取好友备注名请求
message GetFriendDisplayRequest {
    string appkey = 1; //应用标识
    string owner_username = 2; //用户名
    string friend_username = 3; //好友用户名
}
// 获取好友备注名响应
message GetFriendDisplayResponse {
    common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
    string friend_display = 2; // 备注名
}

// 好友服务
service FriendService {
    // 申请好友
    rpc ApplyFriend (ApplyFriendRequest) returns (ApplyFriendResponse);
    // 批量申请好友接口(一个发送者，多个接收者)
    rpc BatchApplyFriend (BatchApplyFriendRequest) returns (BatchApplyFriendResponse);
    // 批量申请好友接口(多个发送者，一个接收者)
    rpc BatchApplyFriendByFromUsers (BatchApplyFriendByFromUsersRequest) returns (BatchApplyFriendByFromUsersResponse);
    // 同意好友
    rpc AgreeFriend (AgreeFriendRequest) returns (AgreeFriendResponse);
    // 拒绝好友
    rpc RefuseFriend (RefuseFriendRequest) returns (RefuseFriendResponse);
    // 删除好友
    rpc RemoveFriend (RemoveFriendRequest) returns (RemoveFriendResponse);
    // 同步好友
    rpc SyncFriend (SyncFriendRequest) returns (SyncFriendResponse);
    // 修改好友信息
    rpc UpdateFriendInfo (UpdateFriendInfoRequest) returns (UpdateFriendInfoResponse);
    // 设置好友静默
    rpc UpdateFriendSilent (UpdateSilentRequest) returns (UpdateSilentRespone);
    // 获取好友列表
    rpc GetFriendList (GetFriendListRequest) returns (GetFriendListResponse);
    // 好友请求置为已读
    rpc HasReadFriendApply (HasReadFriendRequest) returns (HasReadFriendResponse);
    // 好友请求置为已忽略
    rpc HasIgnoreFriendApply (HasIgnoreFriendRequest) returns (HasIgnoreFriendResponse);
    // 获取好友备注名
    rpc GetFriendDisplay (GetFriendDisplayRequest) returns (GetFriendDisplayResponse);
}
