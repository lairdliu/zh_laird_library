syntax = "proto3";
package outer.push;
import "common/errcode.proto";
import "common/base.proto";

option java_multiple_files = false;
option java_package = "com.cmcc.littlec.proto.outer";
option java_outer_classname = "Push";


// 推送请求回复
message CommonResponse
{
	common.errcode.EErrorCode ret = 1; // 返回码 参见EErrorCode
}

// 推送环境类型
enum EPushType
{
   UNKNOWN = 0;
   IOS_DEVELOP = 4;  // ios 开发环境
   IOS_PRODUCT = 1;  // ios 生产环境
   XIAO_MI = 2; // 小米推送
   HUA_WEI = 3; //华为推送
}


// 设置ios token
message SetTokenRequest
{
   EPushType crt_type = 1;
   string ios_token = 2;
   string uid = 3;  //username#appkey  
   string android_token = 4; // regID 由小米接口返回
   string android_appsecret = 5; //注册后拿到的appsecret
   string android_package_name = 6; //包名字
   common.base.MobileBase base_info = 7;
}

// 清除token
message ClearTokenRequest
{
   string uid = 1;
}


message CreateCertRequest
{
   string ios_develop_crt_name = 1;
   string appkey = 2 ;
   bytes ios_develop_crt = 3;
   string ios_develop_crt_pwd =4;
   string ios_product_crt_name =5;
   bytes ios_product_crt = 6;
   string ios_product_crt_pwd = 7;
}


message OperateCertRequest
{
  string appkey =1;
}

message QueryCertResponse
{
   string ios_develop_crt_name = 1;
   string appkey = 2 ;
   bytes ios_develop_crt = 3;
   string ios_develop_crt_pwd =4;
   string ios_product_crt_name =5;
   bytes ios_product_crt = 6;
   string ios_product_crt_pwd = 7;
   string certid = 8;
   string pro_bundle_id = 9;
   string dev_bundle_id = 10;
   uint64 created = 11;
   uint64 modified = 12;
}

message SetBadgeRequest
{
    string uid = 1;
    uint32 badge = 2;
}

// 推送服务
service PushService {
	// 设置 token服务
    rpc SetToken (SetTokenRequest) returns (CommonResponse);

	// 清除token服务
    rpc ClearToken(ClearTokenRequest) returns (CommonResponse);

	// 创建证书服务
    rpc CreateCertificate(CreateCertRequest) returns (CommonResponse);

	// 删除证书服务
	rpc DeleteCertificate(OperateCertRequest) returns (CommonResponse);

	// 查询证书服务
    rpc QueryCertificate(OperateCertRequest) returns (QueryCertResponse);

	// 设置badge服务
    rpc SetBadge(SetBadgeRequest) returns (CommonResponse); 
}
